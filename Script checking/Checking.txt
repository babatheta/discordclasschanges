// File name: ff998f6594d7ad6b1272.js

(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["31649"], {
        359734: function(e, t, s) {
            "use strict";
            e.exports = s.p + "70d7ed344c6fd79cf4fe.svg"
        },
        195794: function(e, t, s) {
            "use strict";
            e.exports = s.p + "997f57d80f4a7d3ebe28.png"
        },
        770227: function(e, t, s) {
            "use strict";
            e.exports = s.p + "78ed704be98fed8858fa.svg"
        },
        398684: function(e, t, s) {
            "use strict";
            e.exports = s.p + "fbc53b66be3edf2a82e3.svg"
        },
        701972: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0ba2e1e67508c741a58c.svg"
        },
        818658: function(e, t, s) {
            "use strict";
            e.exports = s.p + "babb54b20e03a469a706.svg"
        },
        703152: function(e, t, s) {
            "use strict";
            e.exports = s.p + "cc58542eb2f3200ece94.svg"
        },
        548617: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0f1e2dca21dca9287bae.svg"
        },
        879601: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1442625e12226018c9e8.svg"
        },
        889e3: function(e, t, s) {
            "use strict";
            e.exports = s.p + "cc520a45dabd0ceda4cb.svg"
        },
        572279: function(e, t, s) {
            "use strict";
            e.exports = s.p + "072350f2fff74a0d9d0e.svg"
        },
        871803: function(e, t, s) {
            "use strict";
            e.exports = s.p + "844159a080675ad04659.svg"
        },
        834300: function(e, t, s) {
            "use strict";
            e.exports = s.p + "9ef3e50d748c4944d48d.svg"
        },
        804674: function(e, t, s) {
            "use strict";
            e.exports = s.p + "52c374acacc98d52142b.svg"
        },
        943916: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0d158393d18de9ec1599.svg"
        },
        616613: function(e, t, s) {
            "use strict";
            e.exports = s.p + "65bdb2e1e951d734a3d3.svg"
        },
        663210: function(e, t, s) {
            "use strict";
            e.exports = s.p + "1956ace58a7b5564242e.svg"
        },
        546826: function(e, t, s) {
            "use strict";
            e.exports = s.p + "f54b207f54b931eed305.svg"
        },
        125237: function(e, t, s) {
            "use strict";
            e.exports = s.p + "442bda57ed3ca14d7dd0.svg"
        },
        511391: function(e, t, s) {
            "use strict";
            e.exports = s.p + "fbfaf2b5ff4cf0632f65.svg"
        },
        418558: function(e, t, s) {
            "use strict";
            e.exports = s.p + "cb7130e86ea0c81454fb.svg"
        },
        449125: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8aa2d45f3961c885439a.svg"
        },
        887695: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c2099ce53541563d6aa4.svg"
        },
        561259: function(e, t, s) {
            "use strict";
            e.exports = s.p + "d5b2e940bf0af13ae35f.svg"
        },
        246300: function(e, t, s) {
            "use strict";
            e.exports = s.p + "b5c579276b46cb5c76a6.svg"
        },
        797148: function(e, t, s) {
            "use strict";
            e.exports = s.p + "b2a69ffda712eaab96a4.svg"
        },
        374347: function(e, t, s) {
            "use strict";
            e.exports = s.p + "01f0637fafe2df65c099.svg"
        },
        555702: function(e, t, s) {
            "use strict";
            e.exports = s.p + "9698913adde7a7553e17.svg"
        },
        610802: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8cfb26501d1badfd7697.svg"
        },
        859860: function(e, t, s) {
            "use strict";
            e.exports = s.p + "796da1736dd7986198e8.svg"
        },
        560264: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6fe697202f5682529682.svg"
        },
        691435: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c284ee112fc7d56b6fb4.svg"
        },
        773072: function(e, t, s) {
            "use strict";
            e.exports = s.p + "61ec1e5a9346f6d7828d.png"
        },
        637163: function(e, t, s) {
            "use strict";
            e.exports = s.p + "484c52d292f8d0ecf141.png"
        },
        810180: function(e, t, s) {
            "use strict";
            e.exports = s.p + "b9cee8fb040a895bfb55.svg"
        },
        926027: function(e, t, s) {
            "use strict";
            e.exports = s.p + "80f629b57826d7cf9bd8.svg"
        },
        443953: function(e, t, s) {
            "use strict";
            e.exports = s.p + "104baa903945b811b448.svg"
        },
        378253: function(e, t, s) {
            "use strict";
            e.exports = s.p + "766bd137fbdddbbb35af.svg"
        },
        881188: function(e, t, s) {
            "use strict";
            e.exports = s.p + "dee6b1e8d79405cdf93a.svg"
        },
        520314: function(e, t, s) {
            "use strict";
            e.exports = s.p + "f6bd11c50a890625c27b.svg"
        },
        434691: function(e, t, s) {
            "use strict";
            e.exports = s.p + "40bb1d427ed3bcc895f4.svg"
        },
        258720: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0f86128d79afde2e4631.svg"
        },
        297166: function(e, t, s) {
            "use strict";
            e.exports = s.p + "2bbd921ac85f796cf0a4.png"
        },
        651714: function(e, t, s) {
            "use strict";
            e.exports = s.p + "c4a77f05e44ef42d7a66.png"
        },
        89398: function(e, t, s) {
            "use strict";
            e.exports = s.p + "5c8edc05db03b2c58f7b.svg"
        },
        471821: function(e, t, s) {
            "use strict";
            e.exports = s.p + "76c16f1020f8ec583bbf.svg"
        },
        334428: function(e, t, s) {
            "use strict";
            e.exports = s.p + "852cfa19d535e14127b9.png"
        },
        844593: function(e, t, s) {
            "use strict";
            e.exports = s.p + "a79e377a6eebff352ef2.png"
        },
        353437: function(e, t, s) {
            "use strict";
            e.exports = s.p + "453e81d8e6ecb75436cd.png"
        },
        786792: function(e, t, s) {
            "use strict";
            e.exports = s.p + "0f79c14632c362a9fcb6.png"
        },
        161594: function(e, t, s) {
            "use strict";
            e.exports = s.p + "b4a4d3477b3e966d54a6.png"
        },
        286359: function(e, t, s) {
            "use strict";
            e.exports = s.p + "8dbd4b3cb94c55de4b58.svg"
        },
        699623: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6874a0a4c2d40e7d365e.png"
        },
        820350: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6e1a58bbd01d34290a17.png"
        },
        322221: function(e, t, s) {
            "use strict";
            e.exports = s.p + "78f631f9e96b92dbbadc.svg"
        },
        542156: function(e, t, s) {
            "use strict";
            e.exports = s.p + "6256cb0466f7f0cf591d.svg"
        },
        845904: function(e, t, s) {
            "use strict";
            e.exports = s.p + "47d694afc0cfff2bcdd2.svg"
        },
        466045: function(e, t, s) {
            "use strict";
            e.exports = s.p + "98432d516ac771fc5227.png"
        },
        457026: function(e, t, s) {
            "use strict";
            e.exports = s.p + "a9e9fa3fb673fcfe1edf.svg"
        },
        971149: function(e, t, s) {
            "use strict";
            e.exports = s.p + "d90cb1b2a8501282d666.svg"
        },
        765028: function(e, t, s) {
            "use strict";
            e.exports = s.p + "91866fcba620bd1b0f6f.svg"
        },
        908635: function(e, t, s) {
            "use strict";
            e.exports = s.p + "cfec981d48634949df31.png"
        },
        83957: function(e, t, s) {
            "use strict";
            e.exports = s.p + "4cea9f67c248db6271a7.gif"
        },
        122640: function(e, t, s) {
            "use strict";
            e.exports = s.p + "da59fc99fb83c1f39871.svg"
        },
        384275: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("544891"),
                n = s("570140"),
                i = s("981631");
            t.default = {
                fetch() {
                    a.HTTP.get({
                        url: i.Endpoints.OAUTH2_TOKENS,
                        oldFormErrors: !0
                    }).then(e => n.default.dispatch({
                        type: "USER_AUTHORIZED_APPS_UPDATE",
                        apps: e.body
                    }), () => n.default.dispatch({
                        type: "USER_AUTHORIZED_APPS_UPDATE",
                        apps: []
                    }))
                },
                delete(e) {
                    a.HTTP.del({
                        url: i.Endpoints.OAUTH2_TOKEN(e),
                        oldFormErrors: !0
                    }).then(() => {
                        this.fetch()
                    })
                }
            }
        },
        401190: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("544891"),
                n = s("570140"),
                i = s("881052"),
                l = s("981631");
            let r = {
                [l.HypeSquadHouses.HOUSE_1]: 1,
                [l.HypeSquadHouses.HOUSE_2]: 2,
                [l.HypeSquadHouses.HOUSE_3]: 3
            };
            t.default = {
                joinHypeSquadOnline: e => a.HTTP.post({
                    url: l.Endpoints.HYPESQUAD_ONLINE,
                    body: {
                        house_id: r[e.houseID]
                    },
                    oldFormErrors: !0
                }).then(() => n.default.dispatch({
                    type: "HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS",
                    houseID: e.houseID
                })).catch(e => {
                    throw new i.V6OrEarlierAPIError(e)
                }),
                leaveHypeSquadOnline: () => a.HTTP.del({
                    url: l.Endpoints.HYPESQUAD_ONLINE,
                    oldFormErrors: !0
                }).then(() => n.default.dispatch({
                    type: "HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS"
                })).catch(e => {
                    throw new i.V6OrEarlierAPIError(e)
                })
            }
        },
        660216: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("570140");
            t.default = {
                addKeybind(e) {
                    a.default.dispatch({
                        type: "KEYBINDS_ADD_KEYBIND",
                        keybind: e
                    })
                },
                setKeybind(e) {
                    a.default.dispatch({
                        type: "KEYBINDS_SET_KEYBIND",
                        keybind: e
                    })
                },
                deleteKeybind(e) {
                    a.default.dispatch({
                        type: "KEYBINDS_DELETE_KEYBIND",
                        id: e
                    })
                },
                enableAll(e) {
                    a.default.dispatch({
                        type: "KEYBINDS_ENABLE_ALL_KEYBINDS",
                        enable: e
                    })
                }
            }
        },
        211667: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a, n = s("735250"),
                i = s("470079"),
                l = s("153124"),
                r = s("622999"),
                o = s("655868"),
                d = s("754103"),
                u = s("689938"),
                c = s("282605");
            (a || (a = {})).EXPIRATION_DATE = "expirationDate";
            let S = [{
                fields: [{
                    expirationDate: {
                        name: "expirationDate",
                        id: (0, l.uid)(),
                        title: () => u.default.Messages.CREDIT_CARD_EXPIRATION_DATE,
                        autoComplete: "cc-exp",
                        placeholder: () => u.default.Messages.PAYMENT_SOURCE_EXPIRATION_DATE_PLACEHOLDER,
                        pattern: "\\d*",
                        getClassNameForLayout: () => c.width50,
                        renderInput: e => (0, n.jsx)(o.default, {
                            ...e
                        })
                    }
                }.expirationDate]
            }];
            t.default = function(e) {
                let {
                    onCardInfoChange: t,
                    className: s,
                    expirationDate: a,
                    error: l
                } = e, [o, c] = i.useState(!1), [E, T] = i.useState(null), [_, I] = i.useState(a);
                return i.useEffect(() => {
                    t({
                        expirationDate: _
                    }, null === E)
                }, [_, t, E]), (0, n.jsx)(d.default, {
                    className: s,
                    form: S,
                    values: {
                        expirationDate: _
                    },
                    errors: null != E ? {
                        expirationDate: E
                    } : {},
                    formError: l,
                    onFieldChange: e => {
                        !o && "" !== e && c(!0), o && "" === e || !(0, r.validateExpiry)(e) ? T(u.default.Messages.CREDIT_CARD_ERROR_EXPIRATION) : T(null), I(e)
                    }
                })
            }
        },
        156729: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a, n = s("735250"),
                i = s("470079"),
                l = s("120356"),
                r = s.n(l),
                o = s("873546"),
                d = s("442837"),
                u = s("481060"),
                c = s("570140"),
                S = s("355467"),
                E = s("117938"),
                T = s("46141"),
                _ = s("351402"),
                I = s("823379"),
                N = s("464179"),
                g = s("211667"),
                f = s("244526"),
                m = s("689938"),
                A = s("374728");

            function C(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let O = {
                IS_DEFAULT: "isDefault"
            };
            class h extends(a = i.PureComponent) {
                componentWillUnmount() {
                    c.default.wait(() => {
                        (0, S.clearUpdatePaymentSourceError)(), (0, S.clearRemovePaymentSourceError)()
                    })
                }
                renderError() {
                    let {
                        updateError: e,
                        removeError: t
                    } = this.props;
                    return null == e || e.hasCardError() || e.hasAddressError() ? null != t ? (0, n.jsx)(u.FormErrorBlock, {
                        className: A.formError,
                        children: t.message
                    }) : null : (0, n.jsx)(u.FormErrorBlock, {
                        className: A.formError,
                        children: e.message
                    })
                }
                renderBillingAddressSection() {
                    let {
                        billingAddress: e
                    } = this.state, {
                        updateError: t,
                        paymentSource: s
                    } = this.props, a = (0, E.getBillingAddressLayout)(s);
                    return (0, n.jsxs)("div", {
                        className: A.addressSection,
                        children: [(0, n.jsx)(u.Text, {
                            className: A.sectionHeader,
                            variant: "text-sm/normal",
                            children: m.default.Messages.BILLING_ADDRESS
                        }), (0, n.jsx)(N.default, {
                            ...e,
                            mode: N.default.Modes.EDIT,
                            layout: a,
                            onBillingAddressChange: this.handleAddressUpdate,
                            error: t
                        })]
                    })
                }
                renderCardExpirationSection() {
                    let {
                        expiresMonth: e,
                        expiresYear: t
                    } = this.state;
                    if (null == e || null == t) return null;
                    let s = "".concat(e.toString().padStart(2, "0"), "/").concat(t.toString().padStart(2, "0").slice(-2));
                    return (0, n.jsxs)("div", {
                        className: A.addressSection,
                        children: [(0, n.jsx)(u.Text, {
                            className: A.sectionHeader,
                            variant: "text-sm/normal",
                            children: m.default.Messages.BILLING_STEP_CREDIT_CARD_INFORMATION
                        }), (0, n.jsx)(g.default, {
                            expirationDate: s,
                            onCardInfoChange: this.handleExpirationDateUpdate,
                            error: this.props.updateError
                        })]
                    })
                }
                renderActions() {
                    let {
                        submitting: e,
                        removing: t,
                        isForSubscription: s
                    } = this.props, {
                        billingAddressValid: a,
                        expirationValid: i
                    } = this.state;
                    return (0, n.jsxs)("div", {
                        className: A.formActions,
                        children: [(0, n.jsx)("div", {
                            className: A.__invalid_leftAlignedButtons,
                            children: (0, n.jsxs)("div", {
                                className: A.disabledTooltipWrapper,
                                children: [s ? (0, n.jsx)(u.Tooltip, {
                                    text: m.default.Messages.PAYMENT_SOURCE_DELETE_DISABLED_TOOLTIP,
                                    children: e => (0, n.jsx)("div", {
                                        "aria-hidden": !0,
                                        className: A.disabledTooltipTarget,
                                        ...e
                                    })
                                }) : null, (0, n.jsx)(u.Button, {
                                    type: "button",
                                    disabled: s || e,
                                    submitting: t,
                                    onClick: this.handleDelete,
                                    look: u.Button.Looks.OUTLINED,
                                    color: u.Button.Colors.RED,
                                    size: o.isMobile ? u.ButtonSizes.SMALL : u.ButtonSizes.MEDIUM,
                                    children: o.isMobile ? m.default.Messages.DELETE : m.default.Messages.PAYMENT_SOURCE_DELETE
                                })]
                            })
                        }), (0, n.jsxs)("div", {
                            className: A.rightAlignedButtons,
                            children: [(0, n.jsx)(u.Button, {
                                type: "button",
                                disabled: e || t,
                                onClick: this.handleCancel,
                                look: u.Button.Looks.LINK,
                                color: u.Button.Colors.PRIMARY,
                                size: o.isMobile ? u.ButtonSizes.SMALL : u.ButtonSizes.MEDIUM,
                                children: m.default.Messages.CANCEL
                            }), (0, n.jsx)(u.Button, {
                                submitting: e,
                                disabled: !a || t || !i,
                                type: "submit",
                                color: u.Button.Colors.GREEN,
                                size: o.isMobile ? u.ButtonSizes.SMALL : u.ButtonSizes.MEDIUM,
                                children: m.default.Messages.SAVE
                            })]
                        })]
                    })
                }
                render() {
                    let {
                        paymentSource: e,
                        isDefault: t,
                        locale: s,
                        className: a,
                        isForSubscription: i
                    } = this.props, {
                        isDefault: l
                    } = this.state, o = e instanceof T.PaypalSourceRecord;
                    return (0, n.jsx)(u.Card, {
                        editable: !0,
                        className: r()(A.card, a),
                        children: (0, n.jsxs)("form", {
                            onSubmit: this.handleSubmit,
                            noValidate: !0,
                            children: [this.renderError(), (0, n.jsxs)("div", {
                                className: A.__invalid_paymentSection,
                                children: [(0, n.jsx)(f.default, {
                                    paymentSource: e,
                                    isDefault: t,
                                    isForSubscription: i,
                                    locale: s,
                                    showLabels: !0,
                                    showPaymentSourceIcon: !0
                                }), e.invalid ? (0, n.jsx)("div", {
                                    className: A.errorSubText,
                                    children: m.default.Messages.PAYMENT_SOURCE_INVALID_HELP
                                }) : null, (0, n.jsx)("div", {
                                    className: A.subText,
                                    children: o ? m.default.Messages.PAYMENT_SOURCE_EDIT_HELP_PAYPAL.format({
                                        paypalURL: "https://www.paypal.com"
                                    }) : m.default.Messages.PAYMENT_SOURCE_EDIT_HELP_CARD
                                })]
                            }), this.renderCardExpirationSection(), this.renderBillingAddressSection(), (0, n.jsx)(u.Checkbox, {
                                name: O.IS_DEFAULT,
                                value: l,
                                onChange: (e, t) => this.handleFieldChange(t, O.IS_DEFAULT),
                                type: u.Checkbox.Types.INVERTED,
                                className: A.defaultSection,
                                children: (0, n.jsx)(u.Text, {
                                    className: A.defaultCheckboxLabel,
                                    variant: "text-sm/normal",
                                    children: m.default.Messages.PAYMENT_SOURCE_MAKE_DEFAULT
                                })
                            }), (0, n.jsx)(u.FormDivider, {}), this.renderActions()]
                        })
                    })
                }
                constructor(e) {
                    var t, s, a, n, i, l, r;
                    super(e), C(this, "handleSubmit", e => {
                        if (e.preventDefault(), e.stopPropagation(), 0 === Object.values(this.state.dirtyFields).filter(I.isNotNullish).length) this.props.onCancel();
                        else {
                            let {
                                billingAddress: e,
                                isDefault: t,
                                expiresMonth: s,
                                expiresYear: a
                            } = this.state;
                            this.props.onSubmit(this.props.paymentSource.id, {
                                billingAddress: e,
                                expiresMonth: s,
                                expiresYear: a,
                                isDefault: t
                            })
                        }
                    }), C(this, "handleCancel", () => {
                        this.props.onCancel()
                    }), C(this, "handleDelete", () => {
                        let {
                            onDelete: e,
                            paymentSource: t
                        } = this.props;
                        e(t.id)
                    }), C(this, "handleAddressUpdate", (e, t, s) => {
                        this.setState({
                            billingAddress: e,
                            billingAddressValid: t,
                            dirtyFields: {
                                ...this.state.dirtyFields,
                                billingAddress: s
                            }
                        })
                    }), C(this, "handleExpirationDateUpdate", (e, t) => {
                        let {
                            expirationDate: s
                        } = e;
                        if (this.setState({
                                expirationValid: t
                            }), null == s || "" === s) return;
                        let [a, n] = s.split("/");
                        this.handleFieldChange(Number(a), "expiresMonth"), this.handleFieldChange(Number("".concat(new Date().getFullYear().toString().slice(0, 2)).concat(n)), "expiresYear")
                    }), C(this, "handleFieldChange", (e, t) => {
                        null != t && this.setState({
                            [t]: e,
                            dirtyFields: {
                                ...this.state.dirtyFields,
                                [t]: !0
                            }
                        })
                    });
                    let {
                        paymentSource: o,
                        isDefault: d
                    } = e, u = o.billingAddress;
                    this.state = {
                        billingAddress: {
                            name: null !== (t = u.name) && void 0 !== t ? t : "",
                            line1: null !== (s = u.line1) && void 0 !== s ? s : "",
                            line2: null !== (a = u.line2) && void 0 !== a ? a : "",
                            country: null !== (n = u.country) && void 0 !== n ? n : "",
                            state: null !== (i = u.state) && void 0 !== i ? i : "",
                            city: null !== (l = u.city) && void 0 !== l ? l : "",
                            postalCode: null !== (r = u.postalCode) && void 0 !== r ? r : ""
                        },
                        expiresMonth: o instanceof T.CreditCardSourceRecord ? o.expiresMonth : void 0,
                        expiresYear: o instanceof T.CreditCardSourceRecord ? o.expiresYear : void 0,
                        billingAddressValid: !1,
                        isDefault: d,
                        expirationValid: !0,
                        dirtyFields: {}
                    }
                }
            }
            C(h, "defaultProps", {
                onDelete: () => {},
                onSubmit: () => {},
                onCancel: () => {}
            }), t.default = d.default.connectStores([_.default], () => ({
                updateError: _.default.editSourceError,
                removeError: _.default.removeSourceError
            }))(h)
        },
        655868: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("757143");
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("218872");

            function r(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let o = /[^0-9]/g;
            class d extends n.PureComponent {
                componentDidUpdate(e) {
                    let t = this._inputRef;
                    e.value !== this.props.value && null != t && t.setSelectionRange(this.selectionStart, this.selectionStart)
                }
                render() {
                    return (0, a.jsx)(i.TextInput, {
                        ...this.props,
                        inputMode: "numeric",
                        onChange: this.handleChange,
                        inputRef: this.setRef
                    })
                }
                constructor(...e) {
                    super(...e), r(this, "_inputRef", void 0), r(this, "selectionStart", 0), r(this, "setRef", e => {
                        let {
                            inputRef: t
                        } = this.props;
                        this._inputRef = e, null != t && t(e)
                    }), r(this, "handleChange", (e, t) => {
                        let {
                            value: s,
                            onChange: a
                        } = this.props, n = this._inputRef;
                        if (e === s || null == n || null == s) return;
                        let i = (0, l.formatExpiration)(e),
                            r = n.selectionStart;
                        i === s && i.length <= 3 && s.includes("/") && !e.includes("/") ? i = i.replace(o, "") : i === s && e.includes("/") && !s.includes("/") && (i += "/"), i.length > e.length && (r += i.length - e.length), this.selectionStart = r, null != a && a(i, t)
                    })
                }
            }
            t.default = d
        },
        390954: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a, n = s("735250"),
                i = s("470079"),
                l = s("392711"),
                r = s.n(l),
                o = s("481060"),
                d = s("355467"),
                u = s("976255"),
                c = s("285952"),
                S = s("242411"),
                E = s("212895"),
                T = s("709054"),
                _ = s("156729"),
                I = s("244526"),
                N = s("981631"),
                g = s("689938"),
                f = s("788988");

            function m(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class A extends(a = i.PureComponent) {
                render() {
                    let {
                        paymentSource: e,
                        isDefault: t,
                        isEditing: s,
                        index: a,
                        hideDivider: i,
                        isForSubscription: l,
                        locale: r,
                        removing: d,
                        submitting: u,
                        onSubmit: S,
                        onCancel: E,
                        onDelete: T
                    } = this.props;
                    return s ? (0, n.jsx)(_.default, {
                        paymentSource: e,
                        isDefault: t,
                        removing: d,
                        submitting: u,
                        locale: r,
                        isForSubscription: l,
                        onSubmit: S,
                        onCancel: E,
                        onDelete: T
                    }) : (0, n.jsxs)("div", {
                        className: f.__invalid_paymentSourceItem,
                        children: [a > 0 && !i ? (0, n.jsx)(o.FormDivider, {
                            className: f.__invalid_sourceDivider
                        }) : null, (0, n.jsxs)(c.default, {
                            align: c.default.Align.CENTER,
                            justify: c.default.Justify.BETWEEN,
                            className: f.paymentSourceRow,
                            children: [(0, n.jsx)(I.default, {
                                paymentSource: e,
                                isDefault: t,
                                isForSubscription: l,
                                locale: r,
                                showSubtext: !0,
                                showLabels: !0,
                                showPaymentSourceIcon: !0
                            }), s ? null : (0, n.jsx)(o.Button, {
                                color: o.Button.Colors.PRIMARY,
                                onClick: this.handleEditClick,
                                size: o.Button.Sizes.SMALL,
                                children: g.default.Messages.EDIT
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), m(this, "handleEditClick", () => {
                        this.props.onEditClick(this.props.paymentSource.id)
                    })
                }
            }
            m(A, "defaultProps", {
                isEditing: !1,
                hideDivider: !1,
                onEditClick: () => {}
            });
            class C extends i.PureComponent {
                renderFooter() {
                    let {
                        paymentSources: e
                    } = this.props;
                    return (0, n.jsxs)(c.default, {
                        justify: c.default.Justify.END,
                        className: f.footer,
                        children: [0 === Object.keys(e).length ? (0, n.jsxs)(c.default.Child, {
                            children: [(0, n.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: g.default.Messages.BILLING_NO_PAYMENT_METHOD
                            }), (0, n.jsx)("div", {
                                className: f.subText,
                                children: g.default.Messages.BILLING_NO_PAYMENT_METHOD_DESCRIPTION
                            })]
                        }) : null, (0, n.jsx)(o.Button, {
                            onClick: this.handleAddPaymentMethod,
                            children: g.default.Messages.BILLING_ADD_PAYMENT_METHOD
                        })]
                    })
                }
                render() {
                    let {
                        defaultPaymentSourceId: e,
                        paymentSources: t,
                        locale: s,
                        removing: a,
                        submitting: i,
                        premiumSubscriptionPaymentSourceId: l
                    } = this.props, d = r().values(t).sort((t, s) => t.id === e ? -1 : s.id === e ? 1 : T.default.compare(t.id, s.id)), u = this.state.editingPayment, E = d.findIndex(e => e.id === u), _ = d.map((t, r) => (0, n.jsx)(A, {
                        locale: s,
                        paymentSource: t,
                        isDefault: e === t.id,
                        onCancel: this.handleCancel,
                        onDelete: this.handleDelete,
                        isForSubscription: t.id === l,
                        hideDivider: E === r - 1,
                        onSubmit: this.handleSubmit,
                        index: r,
                        submitting: i,
                        removing: a,
                        isEditing: u === t.id,
                        onEditClick: this.handleEditClick
                    }, t.id));
                    return (0, n.jsxs)("div", {
                        children: [(0, n.jsx)(o.FormTitle, {
                            tag: "h1",
                            children: (0, n.jsxs)(c.default, {
                                align: c.default.Align.CENTER,
                                children: [(0, n.jsx)(o.Tooltip, {
                                    position: "left",
                                    text: g.default.Messages.BILLING_SECURE_TOOLTIP,
                                    children: e => (0, n.jsx)(S.default, {
                                        className: f.lockIcon,
                                        ...e
                                    })
                                }), g.default.Messages.BILLING_PAYMENT_SOURCES]
                            })
                        }), _, E !== d.length - 1 ? (0, n.jsx)(o.FormDivider, {
                            className: f.__invalid_sourceDivider
                        }) : null, this.renderFooter()]
                    })
                }
                constructor(...e) {
                    super(...e), m(this, "state", {
                        editingPayment: null
                    }), m(this, "handleEditClick", e => {
                        this.setState({
                            editingPayment: e
                        })
                    }), m(this, "handleCancel", () => {
                        this.setState({
                            editingPayment: null
                        })
                    }), m(this, "handleDelete", async e => {
                        try {
                            await d.deletePaymentSource(e), this.setState({
                                editingPayment: null
                            })
                        } catch (e) {}
                    }), m(this, "handleSubmit", async (e, t) => {
                        if (null != e) try {
                            await d.updatePaymentSource(e, t), this.setState({
                                editingPayment: null
                            })
                        } catch (e) {}
                    }), m(this, "handlePaymentSourceAdded", async e => {
                        await (0, E.fetchSubscriptionPlansOnNewPaymentSource)(e.id)
                    }), m(this, "handleAddPaymentMethod", () => {
                        (0, o.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(s.bind(s, "623573"));
                            return t => (0, n.jsx)(e, {
                                ...t,
                                onAddPaymentSource: this.handlePaymentSourceAdded
                            })
                        }, {
                            onCloseCallback: () => {
                                (0, u.clearError)()
                            },
                            onCloseRequest: N.NOOP
                        })
                    })
                }
            }
            t.default = C
        },
        23551: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("780384"),
                r = s("481060"),
                o = s("410030"),
                d = s("726542"),
                u = s("122021"),
                c = s("231757"),
                S = s("626135"),
                E = s("981631"),
                T = s("203629");
            t.default = e => {
                let {
                    disabled: t = !1,
                    type: s,
                    className: n,
                    innerClassName: _,
                    onConnect: I
                } = e, N = (0, o.default)(), g = d.default.get((0, u.useLegacyPlatformType)(s));
                return (0, a.jsx)(r.Tooltip, {
                    text: g.name,
                    children: e => {
                        let {
                            onMouseEnter: o,
                            onMouseLeave: u
                        } = e;
                        return (0, a.jsx)("div", {
                            className: i()(T.wrapper, n),
                            children: (0, a.jsx)(r.FocusRing, {
                                children: (0, a.jsx)("button", {
                                    onMouseEnter: o,
                                    onMouseLeave: u,
                                    className: i()(T.inner, _),
                                    type: "button",
                                    disabled: t,
                                    style: {
                                        backgroundImage: "url('".concat((0, l.isThemeDark)(N) ? g.icon.darkSVG : g.icon.lightSVG, "')")
                                    },
                                    onClick: null != I ? I : () => (function(e) {
                                        let t = d.default.get(e);
                                        (0, c.default)({
                                            platformType: t.type,
                                            location: "Friends List"
                                        }), S.default.track(E.AnalyticEvents.ACCOUNT_LINK_STEP, {
                                            previous_step: "desktop connections",
                                            current_step: "desktop oauth",
                                            platform_type: t.type
                                        })
                                    })(s),
                                    "aria-label": g.name
                                })
                            })
                        })
                    }
                })
            }
        },
        707558: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("285952"),
                r = s("592356"),
                o = s("611273");

            function d(e) {
                let {
                    features: t
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: t.map((e, t) => (0, a.jsxs)(l.default, {
                        align: l.default.Align.CENTER,
                        className: i()(o.marginTop20, r.feature, {
                            [r.featureBorder]: 0 !== t
                        }),
                        children: [null != e.icon ? (0, a.jsx)("div", {
                            className: i()(r.icon, e.icon)
                        }) : null, (0, a.jsxs)("div", {
                            children: [null != e.title ? (0, a.jsx)("div", {
                                className: i()(o.marginBottom8, r.title),
                                children: e.title
                            }) : null, (0, a.jsx)("div", {
                                className: r.description,
                                children: e.description
                            })]
                        })]
                    }, t))
                })
            }
        },
        23645: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("47120");
            var a = s("470079"),
                n = s("817080"),
                i = s("579806"),
                l = s("358085");
            class r extends a.Component {
                getFileContents() {
                    let {
                        fileContents: e
                    } = this.props;
                    return "function" == typeof e && (e = e()), e
                }
                downloadNative(e, t) {
                    i.default.fileManager.saveWithDialog(e, t)
                }
                downloadHtml5(e, t) {
                    let s = new Blob([e], {
                        type: this.props.contentType
                    });
                    (0, n.saveAs)(s, t)
                }
                render() {
                    let {
                        children: e
                    } = this.props, t = a.Children.only(e);
                    return a.cloneElement(t, {
                        onClick: this.handleFileDownload
                    })
                }
                constructor(...e) {
                    var t, s, a;
                    super(...e), t = this, s = "handleFileDownload", a = e => {
                        e.preventDefault();
                        let t = this.getFileContents(),
                            {
                                fileName: s,
                                onDownload: a
                            } = this.props;
                        l.isPlatformEmbedded ? this.downloadNative(t, s) : this.downloadHtml5(t, s), null == a || a()
                    }, s in t ? Object.defineProperty(t, s, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[s] = a
                }
            }
        },
        825209: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("921738"),
                l = s.n(i),
                r = s("213005"),
                o = s("504884"),
                d = s("358085"),
                u = s("998502"),
                c = s("981631");

            function S(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let E = d.isPlatformEmbedded && null != u.default.getDiscordUtils().inputCaptureRegisterElement;
            class T extends n.PureComponent {
                componentDidMount() {
                    this._mounted = !0
                }
                componentWillUnmount() {
                    this._mounted = !1, this.cleanUp()
                }
                componentDidUpdate(e) {
                    this.props.defaultValue !== e.defaultValue && this.setState({
                        codes: this.props.defaultValue
                    })
                }
                cleanUp() {
                    d.isPlatformEmbedded && null != this.gs && (this.gs.destroy(), this.gs = null)
                }
                handleComboChange(e) {
                    let {
                        mode: t
                    } = this.state, {
                        onChange: s
                    } = this.props;
                    t === o.RecordModes.RECORDING && (null != s && s(e), this.setState({
                        codes: e
                    }))
                }
                render() {
                    let e, t;
                    let {
                        codes: s,
                        mode: n
                    } = this.state, {
                        disabled: i
                    } = this.props;
                    return E ? (t = u.default.getDiscordUtils().inputCaptureRegisterElement, e = this.handleNativeChange) : !d.isPlatformEmbedded && (e = this.handleComboKeys), (0, a.jsx)(o.default, {
                        disabled: i,
                        value: s,
                        mode: n,
                        onClick: this.toggleRecordMode,
                        onChange: e,
                        registerNativeRecorder: t,
                        disableOnClickWhileRecording: E
                    })
                }
                constructor(e) {
                    super(e), S(this, "_input", void 0), S(this, "gs", void 0), S(this, "_mounted", !1), S(this, "recordStart", () => {
                        d.isPlatformEmbedded && !E && (this.gs = new r.default, this.gs.on("change", this.handleGSChange)), this.setState({
                            mode: o.RecordModes.RECORDING
                        })
                    }), S(this, "recordEnd", () => {
                        this.cleanUp(), this.setState({
                            mode: o.RecordModes.DEFAULT
                        })
                    }), S(this, "toggleRecordMode", () => {
                        this.state.mode === o.RecordModes.DEFAULT ? this.recordStart() : this.recordEnd()
                    }), S(this, "handleComboKeys", (e, t, s) => {
                        if (s.preventDefault(), "keydown" === s.type) {
                            let e = t.map(e => [c.KeyboardDeviceTypes.KEYBOARD_KEY, l()(e), c.KeyboardEnvs.BROWSER]),
                                {
                                    keyCode: a
                                } = s;
                            null == e.find(e => {
                                let [, t] = e;
                                return a === t
                            }) && e.push([c.KeyboardDeviceTypes.KEYBOARD_KEY, a, c.KeyboardEnvs.BROWSER]), this.handleComboChange(e)
                        }
                    }), S(this, "handleGSChange", e => {
                        if (!1 === this._mounted) return;
                        let t = [...e.combo];
                        this.handleComboChange(t)
                    }), S(this, "handleNativeChange", e => {
                        e.length > 0 && this.handleComboChange(e), this.recordEnd()
                    });
                    let {
                        defaultValue: t
                    } = e;
                    this.state = {
                        codes: t,
                        mode: o.RecordModes.DEFAULT
                    }
                }
            }
            t.default = T
        },
        577720: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("981631"),
                o = s("443148");
            class d extends n.Component {
                render() {
                    let {
                        className: e,
                        videoID: t,
                        videoClassName: s
                    } = this.props;
                    return (0, a.jsx)("div", {
                        className: l()(e, o.videoWrapper),
                        children: (0, a.jsx)("iframe", {
                            className: l()(s, o.video),
                            src: "https://www.youtube.com/embed/".concat(t, "?rel=0&showinfo=0&controls=1&origin=https://").concat(r.PRIMARY_DOMAIN),
                            allowFullScreen: !0,
                            sandbox: "allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
                        })
                    })
                }
            }
        },
        241420: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                ConnectedPrivacySettings: function() {
                    return f
                },
                PrivacySettingSurfaces: function() {
                    return a
                },
                PrivacySettings: function() {
                    return N
                },
                default: function() {
                    return g
                }
            }), s("47120");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("481060"),
                o = s("610697"),
                d = s("695346"),
                u = s("626135"),
                c = s("63063"),
                S = s("88658"),
                E = s("981631"),
                T = s("703115"),
                _ = s("689938"),
                I = s("858686");

            function N(e) {
                let {
                    isGuildRestricted: t,
                    handleRestrictedGuildChange: s,
                    isGuildActivityRestricted: a,
                    handleActivityRestrictedGuildChange: n,
                    isGuildActivityJoiningRestricted: l,
                    handleActivityJoiningRestrictedGuildChange: d,
                    isGuildMessageRequestRestricted: u,
                    handleMessageRequestRestrictedGuildChange: S,
                    guild: T
                } = e, N = (0, o.default)(), g = T.hasFeature(E.GuildFeatures.HUB);
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsx)(r.FormItem, {
                        children: (0, i.jsx)(r.FormSwitch, {
                            value: !t,
                            note: g ? _.default.Messages.PRIVACY_SETTINGS_DIRECT_MESSAGES_DESC_HUB : _.default.Messages.PRIVACY_SETTINGS_DIRECT_MESSAGES_DESC,
                            onChange: s,
                            hideBorder: !0,
                            children: _.default.Messages.PRIVACY_SETTINGS_DIRECT_MESSAGES
                        })
                    }), (0, i.jsx)(r.FormDivider, {
                        className: I.divider
                    }), !N && (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsx)(r.FormItem, {
                            children: (0, i.jsx)(r.FormSwitch, {
                                value: !u,
                                note: g ? _.default.Messages.PRIVACY_SETTINGS_MESSAGE_REQUESTS_DESC_HUB.format({
                                    helpdeskArticle: c.default.getArticleURL(E.HelpdeskArticles.MESSAGE_REQUESTS)
                                }) : _.default.Messages.PRIVACY_SETTINGS_MESSAGE_REQUESTS_DESC.format({
                                    helpdeskArticle: c.default.getArticleURL(E.HelpdeskArticles.MESSAGE_REQUESTS)
                                }),
                                onChange: S,
                                disabled: t,
                                hideBorder: !0,
                                children: _.default.Messages.PRIVACY_SETTINGS_MESSAGE_REQUESTS
                            })
                        }), (0, i.jsx)(r.FormDivider, {
                            className: I.divider
                        })]
                    }), (0, i.jsx)(r.FormItem, {
                        children: (0, i.jsx)(r.FormSwitch, {
                            value: !a,
                            onChange: n,
                            hideBorder: !0,
                            note: _.default.Messages.PRIVACY_SETTINGS_ACTIVITY_STATUS_DESC.format({
                                helpdeskArticle: c.default.getArticleURL(E.HelpdeskArticles.ACTIVITY_STATUS_SETTINGS)
                            }),
                            children: _.default.Messages.PRIVACY_SETTINGS_ACTIVITY_STATUS
                        })
                    }), (0, i.jsx)(r.FormDivider, {
                        className: I.divider
                    }), (0, i.jsx)(r.FormItem, {
                        children: (0, i.jsx)(r.FormSwitch, {
                            value: !l,
                            onChange: d,
                            hideBorder: !0,
                            note: _.default.Messages.PRIVACY_SETTINGS_ACTIVITY_JOINING_DESC.format({
                                helpdeskArticle: c.default.getArticleURL(E.HelpdeskArticles.ACTIVITY_STATUS_SETTINGS)
                            }),
                            children: _.default.Messages.PRIVACY_SETTINGS_ACTIVITY_JOINING
                        })
                    }), (0, i.jsxs)(r.FormItem, {
                        className: I.disclaimer,
                        children: [(0, i.jsx)(r.FormDivider, {
                            className: I.divider
                        }), (0, i.jsx)(r.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: _.default.Messages.PRIVACY_SETTINGS_COMMUNITY_GUILDS_DISCLAIMER.format({
                                policyLink: "https://discord.com/safety/360043709612-our-policies"
                            })
                        })]
                    })]
                })
            }

            function g(e) {
                let {
                    guild: t,
                    transitionState: s,
                    onClose: a
                } = e, n = "".concat(_.default.Messages.PRIVACY_SETTINGS, "—").concat(null != t ? t.toString() : "??");
                return (0, i.jsxs)(r.ModalRoot, {
                    transitionState: s,
                    size: r.ModalSize.SMALL,
                    "aria-label": n,
                    children: [(0, i.jsx)(r.ModalHeader, {
                        children: (0, i.jsx)(r.Heading, {
                            variant: "heading-lg/semibold",
                            children: n
                        })
                    }), (0, i.jsx)(r.ModalContent, {
                        className: I.content,
                        children: (0, i.jsx)(f, {
                            guild: t,
                            ingress: "server_privacy_modal"
                        })
                    }), (0, i.jsx)(r.ModalFooter, {
                        children: (0, i.jsx)(r.Button, {
                            onClick: () => a(),
                            children: _.default.Messages.DONE
                        })
                    })]
                })
            }

            function f(e) {
                let {
                    guild: t,
                    ingress: s = "server_privacy_modal"
                } = e, a = t.id, n = d.RestrictedGuildIds.useSetting().includes(a), r = d.MessageRequestRestrictedGuildIds.useSetting().includes(a), o = d.ActivityRestrictedGuilds.useSetting().includes(a), c = d.ActivityJoiningRestrictedGuilds.useSetting().includes(a), _ = l.useCallback(e => {
                    let t = new Set((0, S.getSanitizedRestrictedGuilds)());
                    e ? t.delete(a) : t.add(a), d.RestrictedGuildIds.updateSetting(Array.from(t)), u.default.track(E.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: T.UserGuildPrivacySettingsAction.DIRECT_MESSAGES_TOGGLE,
                        ingress: s,
                        guild_id: a
                    })
                }, [a, s]), I = l.useCallback(e => {
                    let t = new Set((0, S.getSanitizedActivityRestrictedGuilds)());
                    e ? t.delete(a) : t.add(a), d.ActivityRestrictedGuilds.updateSetting([...t]), u.default.track(E.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: T.UserGuildPrivacySettingsAction.RESTRICT_GUILD_ACTIVITY_STATUS_TOGGLE,
                        ingress: s,
                        guild_id: a
                    })
                }, [a, s]), g = l.useCallback(e => {
                    let t = new Set((0, S.getSanitizedActivityJoiningRestrictedGuilds)());
                    e ? t.delete(a) : t.add(a), d.ActivityJoiningRestrictedGuilds.updateSetting([...t]), u.default.track(E.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: T.UserGuildPrivacySettingsAction.RESTRICT_GUILD_ACTIVITY_JOIN_TOGGLE,
                        ingress: s,
                        guild_id: a
                    })
                }, [a, s]), f = l.useCallback(e => {
                    let t = new Set((0, S.getSanitizedMessageRequestRestrictedGuilds)());
                    e ? t.delete(a) : t.add(a), d.MessageRequestRestrictedGuildIds.updateSetting(Array.from(t)), u.default.track(E.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: T.UserGuildPrivacySettingsAction.RESTRICT_GUILD_MESSAGE_REQUEST_TOGGLE,
                        ingress: s,
                        guild_id: a
                    })
                }, [a, s]);
                return (0, i.jsx)(N, {
                    isGuildRestricted: n,
                    handleRestrictedGuildChange: _,
                    isGuildActivityRestricted: o,
                    handleActivityRestrictedGuildChange: I,
                    isGuildActivityJoiningRestricted: c,
                    handleActivityJoiningRestrictedGuildChange: g,
                    isGuildMessageRequestRestricted: r,
                    handleMessageRequestRestrictedGuildChange: f,
                    guild: t
                })
            }(n = a || (a = {})).USER_SETTINGS_PRIVACY_SAFETY = "user_settings_privacy_safety", n.SERVER_PRIVACY_MODAL = "server_privacy_modal"
        },
        124702: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("101205");
            s.es(a, t)
        },
        581674: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("883065");
            s.es(a, t)
        },
        178346: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("490748");
            s.es(a, t)
        },
        689773: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("257182");
            s.es(a, t)
        },
        213005: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            }), s("47120"), s("653041");
            var a = s("836560"),
                n = s("358085"),
                i = s("998502"),
                l = s("13140"),
                r = s("981631");
            let o = [],
                d = (e, t, s) => {
                    let a = (0, n.isWindows)() ? 0 : 1;
                    (e !== r.KeyboardDeviceTypes.MOUSE_BUTTON || s !== a) && o.forEach(a => a._handleEvent(e, t, s))
                };
            class u extends a.EventEmitter {
                destroy() {
                    this.removeAllListeners(), 0 === (o = o.filter(e => e !== this)).length && i.default.setOnInputEventCallback(null)
                }
                toString() {
                    return (0, l.toString)(this.combo)
                }
                _handleEvent(e, t, s) {
                    0 === t ? this.combo = this.combo.filter(t => {
                        let [a, n] = t;
                        return !(a === e && n === s)
                    }) : (this.combo.push([e, s, (0, l.getEnv)()]), this.emit("change", this))
                }
                constructor() {
                    var e, t, s;
                    super(), e = this, s = [], (t = "combo") in e ? Object.defineProperty(e, t, {
                        value: s,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = s, o.push(this), 1 === o.length && i.default.setOnInputEventCallback(d)
                }
            }
        },
        43015: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                clearAuthSessions: function() {
                    return r
                },
                fetchAuthSessions: function() {
                    return l
                },
                logOutSessions: function() {
                    return o
                }
            });
            var a = s("544891"),
                n = s("570140"),
                i = s("981631");
            async function l() {
                var e;
                let t = await a.HTTP.get({
                    url: i.Endpoints.AUTH_SESSIONS
                });
                return (null == t ? void 0 : t.ok) && (null === (e = t.body) || void 0 === e ? void 0 : e.user_sessions) != null && n.default.dispatch({
                    type: "FETCH_AUTH_SESSIONS_SUCCESS",
                    sessions: t.body.user_sessions
                }), t
            }

            function r() {
                n.default.dispatch({
                    type: "FETCH_AUTH_SESSIONS_SUCCESS",
                    sessions: []
                })
            }
            async function o(e) {
                if (Array.isArray(e)) {
                    if (0 === e.length) return
                } else e = [e];
                let t = await a.HTTP.post({
                    url: i.Endpoints.AUTH_SESSIONS_LOGOUT,
                    body: {
                        session_id_hashes: e
                    }
                });
                return (null == t ? void 0 : t.ok) && n.default.dispatch({
                    type: "LOGOUT_AUTH_SESSIONS_SUCCESS",
                    sessionIdHashes: e
                }), t
            }
        },
        673096: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a, n, i, l, r = s("442837"),
                o = s("570140");
            let d = [];

            function u() {
                d = []
            }
            class c extends(a = r.default.Store) {
                getSessions() {
                    return d
                }
            }
            l = "AuthSessionsStore", (i = "displayName") in(n = c) ? Object.defineProperty(n, i, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : n[i] = l, t.default = new c(o.default, {
                LOGOUT: u,
                LOGIN_SUCCESS: u,
                FETCH_AUTH_SESSIONS_SUCCESS: function(e) {
                    let {
                        sessions: t
                    } = e;
                    d = t.map(e => ({
                        ...e,
                        approx_last_used_time: new Date(e.approx_last_used_time)
                    }))
                },
                LOGOUT_AUTH_SESSIONS_SUCCESS: function(e) {
                    let {
                        sessionIdHashes: t
                    } = e, s = [...d], a = !1;
                    for (let e of t) {
                        let t = s.findIndex(t => t.id_hash === e);
                        t >= 0 && (s.splice(t, 1), a = !0)
                    }
                    if (!a) return !1;
                    d = s
                }
            })
        },
        136097: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                formatDate: function() {
                    return c
                },
                useAuthSessions: function() {
                    return u
                }
            }), s("47120");
            var a = s("470079"),
                n = s("913527"),
                i = s.n(n),
                l = s("442837"),
                r = s("314897"),
                o = s("673096"),
                d = s("689938");

            function u() {
                let e = (0, l.useStateFromStoresObject)([o.default], () => o.default.getSessions());
                return a.useMemo(() => {
                    let t = [...e],
                        s = null,
                        a = r.default.getAuthSessionIdHash();
                    if (null != a) {
                        let e = t.findIndex(e => e.id_hash === a);
                        e >= 0 && (s = t.splice(e, 1)[0])
                    }
                    return t.sort((e, t) => t.approx_last_used_time.valueOf() - e.approx_last_used_time.valueOf()), {
                        currentSession: s,
                        otherSessions: t
                    }
                }, [e])
            }

            function c(e) {
                return (Date.now() - e.valueOf()) / 1e3 / 60 / 60 < 1 ? d.default.Messages.AUTH_SESSIONS_ACTIVE_RECENTLY : i()(e).fromNow()
            }
        },
        40908: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("47120");
            var a = s("470079"),
                n = s("304445"),
                i = s("997383");
            let l = [];

            function r(e) {
                let {
                    visible: t,
                    autocompleterResultTypes: s,
                    autocompleterOptions: r,
                    autocompleterBeforeCreateSearchContext: o
                } = e, [d, u] = a.useState(""), [c, S] = a.useState(l), E = a.useCallback((e, t) => {
                    "" === (t = t.trim()).trim() ? S(l) : S(e)
                }, []);
                a.useEffect(() => n.default.addRouteChangeListener(() => {
                    u("")
                }), []);
                let [T] = a.useState(() => new i.default(E, s, void 0, r));
                return a.useEffect(() => {
                    t ? (null == o || o(T), T.createSearchContext()) : (T.clean(), u(""))
                }, [t, T, o]), {
                    queryResults: c,
                    query: d,
                    updateQuery: a.useCallback(e => {
                        u(e), T.search(e)
                    }, [T])
                }
            }
        },
        117938: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getBillingAddressLayout: function() {
                    return l
                },
                getOverrideBillingAddressLayout: function() {
                    return r
                }
            });
            var a = s("873546"),
                n = s("464179"),
                i = s("981631");
            let l = e => [i.PaymentSourceTypes.CARD, i.PaymentSourceTypes.VENMO].includes(e.type) && "US" === e.country ? a.isMobile ? n.default.Layouts.SETTINGS_US_MOBILE : n.default.Layouts.SETTINGS_US : e.type === i.PaymentSourceTypes.CARD && "US" !== e.country ? a.isMobile ? n.default.Layouts.SETTINGS_INTL_MOBILE : n.default.Layouts.SETTINGS_INTL : a.isMobile ? n.default.Layouts.SETTINGS_INTL_NO_NAME_MOBILE : n.default.Layouts.SETTINGS_INTL_NO_NAME,
                r = a.isMobile ? n.default.Layouts.SETTINGS_US_MOBILE : n.default.Layouts.SETTINGS_US
        },
        952306: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("723359"),
                l = s("231338");
            t.default = {
                openNewUserAgeGateModal: e => {
                    (0, n.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([s.e("99387"), s.e("20727")]).then(s.bind(s, "298237"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    }, {
                        modalKey: i.NEW_USER_AGE_GATE_MODAL_KEY,
                        onCloseRequest: l.NOOP,
                        onCloseCallback: e
                    })
                },
                openClaimAccountModal: function() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                        t = arguments.length > 1 ? arguments[1] : void 0;
                    (0, n.openModalLazy)(async () => {
                        let {
                            default: t
                        } = await Promise.all([s.e("99387"), s.e("69495")]).then(s.bind(s, "324239"));
                        return s => (0, a.jsx)(t, {
                            claimRequired: e,
                            ...s
                        })
                    }, {
                        onCloseRequest: e ? l.NOOP : null,
                        onCloseCallback: t
                    })
                }
            }
        },
        891728: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useCurrentUserAvailableClanIds: function() {
                    return c
                },
                useCurrentUserAvailableClans: function() {
                    return u
                }
            }), s("47120");
            var a = s("470079"),
                n = s("392711"),
                i = s.n(n),
                l = s("442837"),
                r = s("271383"),
                o = s("430824"),
                d = s("353093");

            function u() {
                return (0, l.useStateFromStoresArray)([o.default, r.default], () => {
                    let e = o.default.getGuilds();
                    return i()(e).values().filter(e => {
                        var t;
                        return (0, d.isGuildAClan)(e) && (null === (t = r.default.getSelfMember(e.id)) || void 0 === t ? void 0 : t.joinedAt) != null
                    }).value()
                })
            }

            function c() {
                let e = u();
                return a.useMemo(() => new Set(e.map(e => {
                    let {
                        id: t
                    } = e;
                    return t
                })), [e])
            }
        },
        438365: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useUserSelectedClan: function() {
                    return d
                }
            });
            var a = s("470079"),
                n = s("442837"),
                i = s("430824"),
                l = s("594174"),
                r = s("645896"),
                o = s("353093");

            function d(e) {
                var t, s;
                let {
                    userId: d
                } = e, u = (0, n.useStateFromStores)([l.default], () => {
                    var e;
                    return null === (e = l.default.getUser(d)) || void 0 === e ? void 0 : e.clan
                }), {
                    tag: c,
                    badge: S,
                    guildId: E
                } = (0, o.getUserClanData)(u);
                a.useEffect(() => {
                    (0, r.fetchClanInfo)(E)
                }, [E]);
                let T = (0, r.useClanInfo)(null == u ? void 0 : u.identityGuildId),
                    _ = (0, n.useStateFromStores)([i.default], () => i.default.getGuild(null == u ? void 0 : u.identityGuildId));
                return {
                    userClanTag: c,
                    userClanBadge: S,
                    guildId: E,
                    guildName: null !== (t = null == _ ? void 0 : _.name) && void 0 !== t ? t : null == T ? void 0 : T.name,
                    guildIcon: null !== (s = null == _ ? void 0 : _.icon) && void 0 !== s ? s : null == T ? void 0 : T.icon,
                    clan: T
                }
            }
        },
        219039: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("689938"),
                l = s("253485");

            function r(e) {
                let {
                    count: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: l.countContainer,
                    children: [(0, a.jsx)("div", {
                        className: l.dot
                    }), (0, a.jsx)(n.Text, {
                        variant: "text-xs/medium",
                        color: "header-secondary",
                        children: i.default.Messages.CLAN_DISCOVERY_MEMBER_COUNT.format({
                            count: t
                        })
                    })]
                })
            }
        },
        328783: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("724458"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("993413"),
                o = s("594174"),
                d = s("153124"),
                u = s("931240"),
                c = s("353093"),
                S = s("369077"),
                E = s("981631"),
                T = s("689938"),
                _ = s("101331");
            let I = (0, d.uid)();
            t.default = n.memo(function(e) {
                let {
                    availableClans: t
                } = e, s = n.useMemo(() => new Map(t.map(e => [e.id, e])), [t]), d = (0, i.useStateFromStores)([o.default], () => {
                    var e;
                    return (0, c.getUserClanData)(null === (e = o.default.getCurrentUser()) || void 0 === e ? void 0 : e.clan).guildId
                }), N = n.useMemo(() => t.reduce((e, t) => {
                    var s;
                    return (null === (s = t.clan) || void 0 === s ? void 0 : s.tag) != null && e.push({
                        label: t.name,
                        value: t.id
                    }), e
                }, []), [t]), g = n.useCallback(e => {
                    var t, n;
                    if (null == e) return null;
                    let i = s.get(e.value);
                    if (null == i) return null;
                    let l = null === (t = i.clan) || void 0 === t ? void 0 : t.tag;
                    return null == l ? null : (0, a.jsx)(S.UserProfileClanRow, {
                        clanTag: l,
                        clanBadge: null === (n = i.clan) || void 0 === n ? void 0 : n.badge,
                        guildId: i.id,
                        guildName: e.label,
                        guildIcon: i.icon,
                        guildIconSize: 32
                    })
                }, [s]), f = n.useCallback(e => {
                    let t = e[0];
                    return null == t ? null : (0, a.jsx)(a.Fragment, {
                        children: g(t)
                    })
                }, [g]), m = n.useCallback(e => (0, u.adoptClanIdentity)(e, !0, E.AnalyticsLocations.USER_SETTINGS), []), A = n.useCallback(e => e === d, [d]), C = n.useCallback(e => e, []), O = n.useCallback(() => (0, u.adoptClanIdentity)(null, !1), []);
                return (0, a.jsxs)(r.default, {
                    title: T.default.Messages.CLANS,
                    titleId: I,
                    children: [(0, a.jsx)(l.Text, {
                        className: _.subtitle,
                        variant: "text-sm/normal",
                        children: T.default.Messages.CLAN_USER_PROFILE_PRIMARY_CLAN_SUBTITLE
                    }), (0, a.jsx)(l.Select, {
                        className: _.select,
                        optionClassName: _.selectPopout,
                        isSelected: A,
                        options: N,
                        select: m,
                        renderOptionValue: f,
                        renderOptionLabel: g,
                        serialize: C,
                        clear: O,
                        clearable: null != d
                    })]
                })
            })
        },
        369077: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                UserProfileClanContainer: function() {
                    return R
                },
                UserProfileClanRow: function() {
                    return O
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("100527");
            s("502762"), s("659101");
            var u = s("594174"),
                c = s("931240"),
                S = s("905362"),
                E = s("353093"),
                T = s("891728"),
                _ = s("438365"),
                I = s("114487"),
                N = s("219039"),
                g = s("979264"),
                f = s("308083"),
                m = s("981631"),
                A = s("689938"),
                C = s("407020");

            function O(e) {
                let {
                    className: t,
                    clanTag: s,
                    clanBadge: i,
                    onTagClick: r,
                    guildId: d,
                    guildName: u,
                    guildIcon: c,
                    guildIconSize: S,
                    memberCount: E
                } = e, T = n.useRef(null), [_, m] = n.useState(!1);
                return n.useEffect(() => {
                    let e = T.current;
                    null != e && null != e.offsetWidth && null != e.scrollWidth && m(e.offsetWidth < e.scrollWidth)
                }, []), (0, a.jsxs)("div", {
                    className: l()(C.container, t),
                    children: [(0, a.jsxs)("div", {
                        className: C.guildPrefixContainer,
                        children: [(0, a.jsx)(I.ClanGuildIconSimple, {
                            guildId: d,
                            guildName: u,
                            guildIcon: c,
                            iconSize: S,
                            className: C.guildPrefixIcon,
                            animate: !1
                        }), (0, a.jsxs)("div", {
                            className: C.details,
                            children: [(0, a.jsx)(o.Tooltip, {
                                text: u,
                                color: o.Tooltip.Colors.PRIMARY,
                                shouldShow: _,
                                children: e => (0, a.jsx)("span", {
                                    ref: T,
                                    ...e,
                                    className: C.guildName,
                                    children: u
                                })
                            }), null != E && (0, a.jsx)(N.default, {
                                count: E
                            })]
                        })]
                    }), (0, a.jsx)("div", {
                        className: C.tagContainer,
                        children: (0, a.jsx)(g.BaseClanTagChiplet, {
                            guildId: d,
                            className: C.tag,
                            clanTag: s,
                            clanBadge: i,
                            onClick: r,
                            badgeSize: f.ClanTagBadgeSize.SIZE_16,
                            textColor: "interactive-normal",
                            textVariant: "text-sm/medium",
                            badgeClassName: C.badge
                        })
                    })]
                })
            }

            function h(e) {
                let {
                    userClanTag: t,
                    userClanBadge: s,
                    guildId: i,
                    guildName: l,
                    guildIcon: _,
                    clan: I,
                    userId: N
                } = e, g = (0, T.useCurrentUserAvailableClanIds)(), f = (0, r.useStateFromStores)([u.default], () => {
                    var e;
                    return (0, E.getUserClanData)(null === (e = u.default.getCurrentUser()) || void 0 === e ? void 0 : e.clan).guildId
                }), h = n.useMemo(() => {
                    if (i !== f) {
                        if (g.has(i)) return () => {
                            (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                                ...e,
                                header: A.default.Messages.CLAN_USER_ADOPT_TAG_MODAL_CTA,
                                confirmText: A.default.Messages.CLAN_USER_ADOPT_TAG_GUILD_PROFILE_CTA,
                                confirmButtonColor: o.Button.Colors.BRAND,
                                cancelText: A.default.Messages.CLAN_USER_ADOPT_TAG_MODAL_CANCEL,
                                onConfirm: async () => {
                                    await (0, c.adoptClanIdentity)(i, !0, d.default.PROFILE_POPOUT)
                                },
                                children: (0, a.jsx)(o.Text, {
                                    variant: "text-sm/normal",
                                    children: A.default.Messages.CLAN_USER_PROFILE_USE_CLAN_TAG.format({
                                        guildName: l
                                    })
                                })
                            }))
                        };
                        if (null != I) return () => {
                            (0, S.openClanApplyFlow)(i, I, {
                                source: m.AnalyticsSections.USER_PROFILE,
                                location: d.default.CLAN_TAG,
                                tagUserId: N
                            })
                        }
                    }
                }, [g, I, f, i, l, N]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(o.Heading, {
                        className: C.header,
                        variant: "eyebrow",
                        children: A.default.Messages.CLAN_USER_PROFILE_PRIMARY_CLAN
                    }), (0, a.jsx)(O, {
                        className: C.profileContainer,
                        clanTag: t,
                        clanBadge: s,
                        onTagClick: h,
                        guildName: l,
                        guildId: i,
                        guildIcon: _,
                        guildIconSize: 40,
                        memberCount: null == I ? void 0 : I.memberCount
                    })]
                })
            }

            function R(e) {
                let {
                    userId: t,
                    wrapChildren: s
                } = e, {
                    userClanTag: n,
                    userClanBadge: i,
                    guildId: l,
                    guildName: r,
                    guildIcon: o,
                    clan: d
                } = (0, _.useUserSelectedClan)({
                    userId: t
                });
                if (null == n || null == l || null == r) return null;
                let u = (0, a.jsx)(h, {
                    userClanTag: n,
                    userClanBadge: i,
                    guildId: l,
                    guildName: r,
                    guildIcon: o,
                    clan: d,
                    userId: t
                });
                return null != s ? (0, a.jsx)(a.Fragment, {
                    children: s(u)
                }) : u
            }
        },
        703288: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("688465"),
                l = s("689938");
            t.default = () => (0, a.jsx)(n.TooltipContainer, {
                text: l.default.Messages.CLIPS_BETA_TAG_HOVER,
                children: (0, a.jsx)(i.default, {})
            })
        },
        491758: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return P
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("660216"),
                u = s("230711"),
                c = s("825209"),
                S = s("836157"),
                E = s("706454"),
                T = s("494620"),
                _ = s("131951"),
                I = s("556296"),
                N = s("924557"),
                g = s("435064"),
                f = s("894694"),
                m = s("779618"),
                A = s("39604"),
                C = s("442334"),
                O = s("356659"),
                h = s("981631"),
                R = s("37113"),
                p = s("526761"),
                M = s("689938"),
                D = s("487325"),
                x = s("151501"),
                L = s("611273");

            function P() {
                let e = (0, r.useStateFromStores)([_.default], () => _.default.getHardwareH264()),
                    {
                        clipsEnabled: t,
                        remindersEnabled: s,
                        decoupledClipsEnabled: i,
                        clipsLength: P,
                        clipsQuality: b
                    } = (0, r.useStateFromStoresObject)([g.default], () => g.default.getSettings()),
                    v = (0, r.useStateFromStores)([g.default], () => g.default.getHardwareClassification()),
                    U = (0, r.useStateFromStores)([I.default], () => I.default.getKeybindForAction(h.GlobalKeybindActions.SAVE_CLIP, !0)),
                    {
                        enableDecoupledGameClipping: j
                    } = S.default.useExperiment({
                        location: "clips_recording_settings"
                    }, {
                        autoTrackExposure: !1
                    }),
                    G = (0, m.default)(_.default),
                    {
                        showClipsHeaderEntrypoint: F
                    } = N.ClipsExperiment.useExperiment({
                        location: "clips_recording_settings"
                    }, {
                        autoTrackExposure: !1
                    });
                l()(null != U, "Save clip keybind unset");
                let B = (0, r.useStateFromStores)([E.default], () => E.default.locale),
                    y = n.useMemo(() => [{
                        value: O.ClipsLengthSettings.SECONDS_30,
                        label: M.default.Messages.CLIPS_LENGTH_SECONDS.format({
                            count: 30
                        })
                    }, {
                        value: O.ClipsLengthSettings.MINUTES_1,
                        label: M.default.Messages.CLIPS_LENGTH_MINUTES.format({
                            count: 1
                        })
                    }, {
                        value: O.ClipsLengthSettings.MINUTES_2,
                        label: M.default.Messages.CLIPS_LENGTH_MINUTES.format({
                            count: 2
                        })
                    }], [B]),
                    V = n.useMemo(() => [{
                        value: R.ApplicationStreamResolutions.RESOLUTION_480,
                        label: M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: R.ApplicationStreamResolutions.RESOLUTION_480
                        })
                    }, {
                        value: R.ApplicationStreamResolutions.RESOLUTION_720,
                        label: M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: R.ApplicationStreamResolutions.RESOLUTION_720
                        })
                    }, {
                        value: R.ApplicationStreamResolutions.RESOLUTION_1080,
                        label: M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: R.ApplicationStreamResolutions.RESOLUTION_1080
                        })
                    }, {
                        value: R.ApplicationStreamResolutions.RESOLUTION_1440,
                        label: M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                            resolution: R.ApplicationStreamResolutions.RESOLUTION_1440
                        })
                    }, {
                        value: R.ApplicationStreamResolutions.RESOLUTION_SOURCE,
                        label: M.default.Messages.SCREENSHARE_SOURCE
                    }], [B]),
                    H = n.useMemo(() => [{
                        value: R.ApplicationStreamFPS.FPS_15,
                        label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: R.ApplicationStreamFPS.FPS_15
                        })
                    }, {
                        value: R.ApplicationStreamFPS.FPS_30,
                        label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: R.ApplicationStreamFPS.FPS_30
                        })
                    }, {
                        value: R.ApplicationStreamFPS.FPS_60,
                        label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                            fps: R.ApplicationStreamFPS.FPS_60
                        })
                    }], [B]),
                    Y = n.useCallback(e => {
                        d.default.setKeybind({
                            ...U,
                            shortcut: e
                        })
                    }, [U]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(o.FormSection, {
                        disabled: !e,
                        children: [!e && (0, a.jsx)(T.default, {
                            look: T.InfoBoxLooks.WARNING,
                            className: x.formItem,
                            children: M.default.Messages.CLIPS_SETTINGS_HW_ENCODING_MUST_BE_ENABLED_INFOBOX.format({
                                onClick: () => u.default.open(h.UserSettingsSections.VOICE, null, {
                                    scrollPosition: p.UserSettingsScrollPositions.VoiceAndVideoScrollPositions.HARDWARE_ACCELERATION
                                })
                            })
                        }), v === f.ClipsHardwareClassification.BELOW_MINIMUM ? (0, a.jsx)(T.default, {
                            look: T.InfoBoxLooks.WARNING,
                            className: x.formItem,
                            children: M.default.Messages.CLIPS_SETTINGS_UNDER_MIN_SPECS
                        }) : null, (0, a.jsx)(o.FormSwitch, {
                            hideBorder: !0,
                            disabled: !e,
                            className: x.formItem,
                            value: t,
                            note: M.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS_HELP,
                            onChange: e => A.updateClipsEnabled({
                                clipsEnabled: e,
                                trackAnalytics: !0
                            }),
                            children: M.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS
                        }), e && (0, a.jsx)(T.default, {
                            className: x.formItem,
                            children: M.default.Messages.CLIPS_SETTINGS_QUALITY_INFOBOX
                        })]
                    }), j && G && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.FormDivider, {}), (0, a.jsx)(o.FormSection, {
                            className: L.marginTop20,
                            disabled: !e,
                            children: (0, a.jsx)(o.FormSwitch, {
                                hideBorder: !0,
                                disabled: !e,
                                className: x.formItem,
                                value: i,
                                note: M.default.Messages.CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS_HELP,
                                onChange: e => A.updateDecoupledClipsEnabled({
                                    enabled: e,
                                    trackAnalytics: !0
                                }),
                                children: M.default.Messages.CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS
                            })
                        })]
                    }), F && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.FormDivider, {}), (0, a.jsx)(o.FormSection, {
                            className: L.marginTop20,
                            children: (0, a.jsx)(o.FormSwitch, {
                                hideBorder: !0,
                                className: x.formItem,
                                value: s,
                                note: M.default.Messages.CLIPS_SETTINGS_ENABLE_REMINDERS_HELP,
                                onChange: e => A.updateRemindersEnabled(e),
                                children: M.default.Messages.CLIPS_SETTINGS_ENABLE_REMINDERS
                            })
                        })]
                    }), (0, a.jsx)(o.FormDivider, {}), (0, a.jsxs)(o.FormSection, {
                        className: L.marginTop20,
                        children: [(0, a.jsx)(C.SelectItem, {
                            className: x.formItem,
                            select: A.updateClipsLength,
                            title: M.default.Messages.CLIPS_SETTINGS_LENGTH,
                            note: M.default.Messages.CLIPS_SETTINGS_LENGTH_HELP,
                            value: P,
                            options: y
                        }), (0, a.jsx)(C.SelectItem, {
                            className: x.formItem,
                            select: e => A.updateClipsQuality({
                                resolution: e,
                                frameRate: b.frameRate
                            }),
                            title: M.default.Messages.CLIPS_SETTINGS_RESOLUTION,
                            note: M.default.Messages.CLIPS_SETTINGS_RESOLUTION_NOTE,
                            value: b.resolution,
                            options: V
                        }), (0, a.jsx)(C.SelectItem, {
                            className: x.formItem,
                            select: e => A.updateClipsQuality({
                                resolution: b.resolution,
                                frameRate: e
                            }),
                            title: M.default.Messages.CLIPS_SETTINGS_FRAMERATE,
                            note: M.default.Messages.CLIPS_SETTINGS_FRAMERATE_NOTE,
                            value: b.frameRate,
                            options: H
                        }), (0, a.jsx)(C.InputItem, {
                            className: x.formItem,
                            title: M.default.Messages.CLIPS_SETTINGS_KEYBIND,
                            note: M.default.Messages.CLIPS_SETTINGS_KEYBIND_HELP,
                            children: (0, a.jsx)("div", {
                                className: D.keyRecorder,
                                children: (0, a.jsx)(c.default, {
                                    defaultValue: U.shortcut,
                                    onChange: Y
                                })
                            })
                        })]
                    })]
                })
            }
        },
        574755: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("704215"),
                r = s("481060"),
                o = s("906732"),
                d = s("605236"),
                u = s("441167"),
                c = s("695346"),
                S = s("131951"),
                E = s("924557"),
                T = s("435064"),
                _ = s("779618"),
                I = s("39604"),
                N = s("703288"),
                g = s("491758"),
                f = s("183632"),
                m = s("689938"),
                A = s("477716"),
                C = s("151501"),
                O = s("611273");

            function h(e) {
                let {
                    className: t,
                    showHeader: s = !0
                } = e, h = c.ClipsAllowVoiceRecording.useSetting(), {
                    enableViewerClipping: R
                } = u.default.useExperiment({
                    location: "Clips Settings"
                }, {
                    autoTrackExposure: !1
                }), {
                    analyticsLocations: p
                } = (0, o.default)(), M = (0, E.useEnableClips)(), {
                    viewerClipsEnabled: D
                } = (0, i.useStateFromStoresObject)([T.default], () => T.default.getSettings()), x = (0, _.default)(S.default);
                return n.useEffect(() => {
                    (0, d.markDismissibleContentAsDismissed)(l.DismissibleContent.CLIPS_SETTINGS_BETA_TAG)
                }), (0, a.jsxs)(o.AnalyticsLocationProvider, {
                    value: p,
                    children: [(M || s) && (0, a.jsx)(r.FormSection, {
                        className: t,
                        tag: r.FormTitleTags.H1,
                        title: s ? (0, a.jsxs)("div", {
                            className: A.headerContainer,
                            children: [m.default.Messages.CLIPS, (0, a.jsx)(N.default, {})]
                        }) : null,
                        children: M && (0, a.jsxs)("form", {
                            onSubmit: e => e.preventDefault(),
                            children: [(0, a.jsx)(g.default, {}), (0, a.jsx)(f.default, {})]
                        })
                    }), M && (0, a.jsx)(r.FormDivider, {}), (0, a.jsxs)(r.FormSection, {
                        className: s || M ? O.marginTop20 : t,
                        children: [(0, a.jsx)(r.FormSwitch, {
                            hideBorder: !0,
                            className: C.formItem,
                            value: h,
                            note: m.default.Messages.CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING_DESCRIPTION,
                            onChange: e => I.updateAllowVoiceRecording({
                                allowVoiceRecording: e
                            }),
                            children: m.default.Messages.CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING
                        }), R && x && (0, a.jsx)(r.FormSwitch, {
                            hideBorder: !0,
                            className: C.formItem,
                            value: D,
                            note: m.default.Messages.CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE_DESCRIPTION,
                            onChange: e => I.updateViewerClipsEnabled({
                                enabled: e,
                                trackAnalytics: !0
                            }),
                            children: m.default.Messages.CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE
                        })]
                    })]
                })
            }
        },
        183632: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("579806"),
                r = s("435064"),
                o = s("39604"),
                d = s("442334"),
                u = s("689938"),
                c = s("151501"),
                S = s("387454");

            function E() {
                let e = (0, n.useStateFromStores)([r.default], () => r.default.getSettings().storageLocation),
                    t = async () => {
                        let e = await l.default.fileManager.showOpenDialog({
                            properties: ["openDirectory", "createDirectory"]
                        });
                        e.length > 0 && o.updateClipsStorageLocation(e[0])
                    };
                return (0, a.jsx)(i.FormSection, {
                    children: (0, a.jsx)(d.InputItem, {
                        title: u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION,
                        note: u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION_HELP,
                        className: c.formItem,
                        children: (0, a.jsx)(i.Clickable, {
                            className: S.selectControl,
                            "aria-label": u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION_LABEL.format({
                                storageLocation: e
                            }),
                            onClick: t,
                            children: (0, a.jsx)(i.TextInput, {
                                tabIndex: -1,
                                value: e,
                                editable: !1,
                                "aria-hidden": !0
                            })
                        })
                    })
                })
            }
        },
        442334: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InputItem: function() {
                    return d
                },
                SelectItem: function() {
                    return u
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("387454");

            function d(e) {
                let {
                    title: t,
                    note: s,
                    children: n,
                    className: i,
                    id: d
                } = e;
                return (0, a.jsxs)("div", {
                    className: l()(o.inputItem, i),
                    children: [(0, a.jsxs)("div", {
                        className: o.inputItemText,
                        children: [(0, a.jsx)(r.Text, {
                            tag: "label",
                            variant: "text-md/medium",
                            className: o.inputItemTitle,
                            id: d,
                            children: t
                        }), null != s && (0, a.jsx)(r.FormText, {
                            className: o.__invalid_note,
                            type: r.FormText.Types.DESCRIPTION,
                            children: s
                        })]
                    }), n]
                })
            }

            function u(e) {
                let {
                    options: t,
                    value: s,
                    select: i,
                    selectClassName: u,
                    ...c
                } = e, S = n.useId();
                return (0, a.jsx)(d, {
                    ...c,
                    id: S,
                    children: (0, a.jsx)(r.Select, {
                        "aria-labelledby": S,
                        className: l()(o.selectControl, u),
                        options: t,
                        isSelected: e => e === s,
                        select: i,
                        serialize: e => String(e)
                    })
                })
            }
        },
        590259: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                createLayer: function() {
                    return l
                },
                exportConfig: function() {
                    return o
                },
                patchAndroid: function() {
                    return r
                }
            });
            var a = s("392711"),
                n = s("423891"),
                i = s.n(n);
            let l = async (e, t, s) => {
                var a;
                return {
                    src: e,
                    loop: !1,
                    loopDelay: 0,
                    duration: (a = await t.arrayBuffer(), i().decode(a).frames.length * 80),
                    start: 0,
                    position: {
                        x: 0,
                        y: 0
                    },
                    zIndex: 100 + s,
                    height: 880,
                    width: 450,
                    name: t.name
                }
            }, r = e => {
                let t = (0, a.cloneDeep)(e),
                    s = Math.floor(101 * Math.random()) + 150;
                return t.forEach((e, t) => {
                    0 !== t && (e.start += s)
                }), t
            }, o = function(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "json",
                    s = "\n[";
                return "json" === t && e.forEach((e, t) => {
                    s += '\n              {\n                  "src": "file-'.concat(t, '.png",\n                  "start": ').concat(e.start, ',\n                  "duration": ').concat(e.duration, ',\n                  "height": ').concat(e.height, ',\n                  "width": ').concat(e.width, ',\n                  "zIndex": ').concat(e.zIndex, ',\n                  "loop": ').concat(e.loop, ",\n              },\n          ")
                }), "proto" === t && e.forEach((e, t) => {
                    s += "\n              ProfileEffectKeyFrame(\n                  src='file-".concat(t, ".png',\n                  loop=").concat(e.loop, ",\n                  width=").concat(e.width, ",\n                  height=").concat(e.height, ",\n                  duration=").concat(e.duration, ",\n                  start=").concat(e.start, ",\n                  loop_delay=0,\n                  position=Point(x=0, y=0),\n                  z_index=").concat(e.zIndex, ",\n              ),\n          ")
                }), s += "\n]"
            }
        },
        588126: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("470079"),
                n = s("597688"),
                i = s("884697"),
                l = s("223143");
            t.default = e => {
                let [t, s] = a.useState(), {
                    categories: r,
                    purchases: o
                } = (0, l.default)();
                return a.useEffect(() => {
                    (null == t || 0 === t.size) && s(r)
                }, [r, t]), a.useMemo(() => {
                    if (null != e) return e;
                    if (null == t) return;
                    let s = (0, i.getAvatarDecorations)(o, t).filter(e => {
                        let {
                            skuId: t
                        } = e, s = n.default.getProduct(t);
                        return (0, i.isPremiumCollectiblesProduct)(s)
                    });
                    return s[Math.floor(Math.random() * s.length)]
                }, [t, e, o])
            }
        },
        175756: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("470079"),
                n = s("597688"),
                i = s("884697"),
                l = s("223143");
            t.default = e => {
                let [t, s] = a.useState(), {
                    categories: r
                } = (0, l.default)();
                return a.useEffect(() => {
                    (null == t || 0 === t.size) && s(r)
                }, [r, t]), a.useMemo(() => {
                    if (null != e) return e;
                    if (null == t) return;
                    let s = (0, i.getProfileEffectsFromCategories)(t).filter(e => {
                        let {
                            skuId: t
                        } = e, s = n.default.getProduct(t);
                        return (0, i.isPremiumCollectiblesProduct)(s)
                    }).map(e => e.id);
                    return s[Math.floor(Math.random() * s.length)]
                }, [t, e])
            }
        },
        475977: function(e, t, s) {
            "use strict";
            s.r(t), s("627341");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("278074"),
                o = s("481060"),
                d = s("100527"),
                u = s("906732"),
                c = s("626135"),
                S = s("335131"),
                E = s("410154"),
                T = s("981631"),
                _ = s("474936"),
                I = s("689938"),
                N = s("449221"),
                g = s("786792");
            let f = e => {
                    let {
                        artSrc: t
                    } = e;
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: N.artContainer,
                            "aria-hidden": !0,
                            role: "presentation",
                            children: (0, a.jsx)("img", {
                                src: t,
                                className: N.art,
                                alt: " "
                            })
                        }), (0, a.jsxs)("div", {
                            className: N.mainColumn,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-lg/extrabold",
                                color: "always-white",
                                className: N.title,
                                children: I.default.Messages.COLLECTIBLES_BANNER_TITLE_2024
                            }), (0, a.jsx)(o.Text, {
                                className: N.__invalid_textBody,
                                variant: "text-sm/normal",
                                color: "always-white",
                                children: I.default.Messages.COLLECTIBLES_BANNER_DESCRIPTION_2024
                            })]
                        })]
                    })
                },
                m = e => {
                    let {
                        variation: t
                    } = e;
                    return (0, r.match)(t).with(E.CollectiblesShopMarketingVariants.GALAXY, () => (0, a.jsx)(f, {
                        artSrc: s("161594")
                    })).otherwise(() => (0, a.jsx)(f, {
                        artSrc: s("353437")
                    }))
                };
            t.default = () => {
                let {
                    analyticsLocations: e
                } = (0, u.default)(d.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL), t = n.useRef(null), s = (0, E.default)("CollectiblesUpsellBanner");
                return n.useEffect(() => {
                    c.default.track(T.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: _.PremiumUpsellTypes.COLLECTIBLES_PROFILE_SETTINGS_UPSELL,
                        location_stack: e
                    })
                }, [e]), (0, a.jsxs)("div", {
                    ref: t,
                    className: l()(N.container),
                    style: {
                        backgroundImage: "url(".concat(g, ")")
                    },
                    children: [(0, a.jsx)(m, {
                        variation: s
                    }), (0, a.jsx)(o.Button, {
                        onClick: () => {
                            (0, S.openCollectiblesShop)({
                                analyticsLocations: e,
                                analyticsSource: d.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL
                            })
                        },
                        className: N.ctaButton,
                        color: o.Button.Colors.BRAND_INVERTED,
                        children: (0, r.match)(s).with(E.CollectiblesShopMarketingVariants.WINTER_2023_DROP, () => I.default.Messages.CHECK_IT_OUT).otherwise(() => I.default.Messages.COLLECTIBLES_CTA_GO_TO_SHOP)
                    })]
                })
            }
        },
        425799: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120"), s("315314"), s("610138"), s("216116"), s("78328"), s("815648");
            var a = s("735250"),
                n = s("470079"),
                i = s("979554"),
                l = s("442837"),
                r = s("780384"),
                o = s("481060"),
                d = s("53281"),
                u = s("410030"),
                c = s("589266"),
                S = s("680295"),
                E = s("594174"),
                T = s("590259"),
                _ = s("301733"),
                I = s("334428"),
                N = s("844593");

            function g() {
                let e = (0, l.useStateFromStores)([E.default], () => E.default.getCurrentUser()),
                    [t, s] = n.useState(!0),
                    [g, f] = n.useState([]),
                    m = n.useRef(null),
                    [A, C] = n.useState(!1),
                    [O, h] = n.useState(!1),
                    [R, p] = n.useState(!1),
                    M = (0, r.isThemeDark)((0, u.default)());
                return null == e ? (0, a.jsx)("div", {}) : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: _.root,
                        children: [(0, a.jsx)("img", {
                            src: A ? I : N,
                            alt: "",
                            width: 450
                        }), t && (0, a.jsx)(S.ProfileEffect, {
                            profileEffectConfig: {
                                type: i.CollectiblesItemType.PROFILE_EFFECT,
                                title: "debug",
                                description: "debug",
                                accessibilityLabel: "debug",
                                reducedMotionSrc: "",
                                effects: R ? (0, T.patchAndroid)(g) : g,
                                animationType: 0
                            },
                            profileEffectId: "debug"
                        })]
                    }), O && (0, a.jsxs)("div", {
                        className: _.userProfilePreview,
                        children: [(0, a.jsx)(c.default, {
                            location: "ProfileEffectsPreviewToolPage",
                            user: e,
                            pendingAvatar: void 0,
                            pendingProfileEffectId: null,
                            onAvatarChange: () => {},
                            onBannerChange: () => {},
                            canUsePremiumCustomization: !0,
                            isTryItOutFlow: !0
                        }), (0, a.jsx)(S.ProfileEffect, {
                            profileEffectConfig: {
                                type: i.CollectiblesItemType.PROFILE_EFFECT,
                                title: "debug",
                                description: "debug",
                                accessibilityLabel: "debug",
                                reducedMotionSrc: "",
                                effects: R ? (0, T.patchAndroid)(g) : g,
                                animationType: 0
                            },
                            profileEffectId: "debug"
                        })]
                    }), (0, a.jsxs)("div", {
                        className: _.options,
                        children: [(0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            children: "Dark Theme"
                        }), (0, a.jsx)("input", {
                            type: "checkbox",
                            checked: A,
                            className: _.checkBox,
                            onChange: () => {
                                C(!A)
                            }
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            children: "Show User Profile"
                        }), (0, a.jsx)("input", {
                            type: "checkbox",
                            checked: O,
                            className: _.checkBox,
                            onChange: () => {
                                h(!O)
                            }
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            children: "Simulate Android"
                        }), (0, a.jsx)("input", {
                            type: "checkbox",
                            checked: R,
                            className: _.checkBox,
                            onChange: () => {
                                p(!R)
                            }
                        })]
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsxs)("div", {
                            className: _.uploadButton,
                            children: [(0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                color: "always-white",
                                children: "Click to upload image"
                            }), (0, a.jsx)(d.default, {
                                ref: m,
                                onChange: e => {
                                    let t = e.currentTarget.files[0],
                                        s = new FileReader;
                                    s.onload = async e => {
                                        if (null == e.target || "string" != typeof e.target.result) return;
                                        let s = await (0, T.createLayer)(URL.createObjectURL(t), t, g.length);
                                        f(e => [...e, s])
                                    }, s.readAsDataURL(t)
                                },
                                multiple: !1
                            })]
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/semibold",
                            children: "Make sure to upload the bottommost layer first!"
                        })]
                    }), g.map((e, t) => (0, a.jsxs)("div", {
                        style: {
                            marginBottom: 8,
                            color: M ? "white" : "black"
                        },
                        children: [(0, a.jsxs)("div", {
                            style: {
                                display: "flex",
                                flexDirection: "row"
                            },
                            children: [(0, a.jsx)(o.Text, {
                                variant: "text-sm/bold",
                                style: {
                                    marginTop: 8,
                                    marginBottom: 8
                                },
                                children: e.name
                            }), (0, a.jsx)(o.Button, {
                                color: o.ButtonColors.RED,
                                look: o.ButtonLooks.LINK,
                                onClick: () => {
                                    f(t => t.filter(t => t !== e))
                                },
                                children: "Remove"
                            })]
                        }), (0, a.jsx)("label", {
                            children: "Start"
                        }), (0, a.jsx)("input", {
                            type: "number",
                            value: e.start,
                            className: _.numberInput,
                            onChange: e => {
                                f(s => {
                                    let a = [...s],
                                        n = s[t];
                                    return n.start = +e.target.value, a[t] = n, a
                                })
                            }
                        }), (0, a.jsx)("label", {
                            children: "Duration"
                        }), (0, a.jsx)("input", {
                            type: "number",
                            value: e.duration,
                            className: _.numberInput,
                            onChange: e => {
                                f(s => {
                                    let a = [...s],
                                        n = s[t];
                                    return n.duration = +e.target.value, a[t] = n, a
                                })
                            }
                        }), (0, a.jsx)("label", {
                            children: "Loop"
                        }), (0, a.jsx)("input", {
                            type: "checkbox",
                            checked: e.loop,
                            className: _.checkBox,
                            onChange: e => {
                                f(s => {
                                    let a = [...s],
                                        n = s[t];
                                    return n.loop = e.target.checked, a[t] = n, a
                                })
                            }
                        }), e.loop && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("label", {
                                children: "Loop Delay"
                            }), (0, a.jsx)("input", {
                                type: "number",
                                value: e.loopDelay,
                                className: _.checkBox,
                                onChange: e => {
                                    f(s => {
                                        let a = [...s],
                                            n = s[t];
                                        return n.loopDelay = +e.target.value, a[t] = n, a
                                    })
                                }
                            })]
                        }), (0, a.jsx)("label", {
                            children: "Z-Index"
                        }), (0, a.jsx)("input", {
                            type: "number",
                            value: e.zIndex,
                            className: _.checkBox,
                            disabled: !0,
                            onChange: e => {
                                f(s => {
                                    let a = [...s],
                                        n = s[t];
                                    return n.zIndex = +e.target.value, a[t] = n, a
                                })
                            }
                        })]
                    }, t)), (0, a.jsxs)("div", {
                        className: _.bottomControls,
                        children: [(0, a.jsx)(o.Button, {
                            color: o.ButtonColors.RED,
                            look: o.ButtonLooks.LINK,
                            onClick: () => {
                                f([])
                            },
                            children: "Clear Assets"
                        }), (0, a.jsx)(o.Button, {
                            color: o.ButtonColors.BRAND,
                            onClick: () => {
                                s(!1), setTimeout(() => s(!0), 100)
                            },
                            children: "Replay Animation"
                        }), (0, a.jsx)(o.Button, {
                            color: o.ButtonColors.BRAND,
                            onClick: () => {
                                navigator.clipboard.writeText((0, T.exportConfig)(g, "proto")), (0, o.showToast)((0, o.createToast)("Copied to clipboard!", o.ToastType.SUCCESS))
                            },
                            children: "Export"
                        })]
                    })]
                })
            }
        },
        246992: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                DevToolsLayerContainer: function() {
                    return r
                },
                DevToolsLayerProvider: function() {
                    return o
                },
                devToolsLayerContext: function() {
                    return d
                }
            });
            let {
                Layer: a,
                LayerContainer: n,
                LayerProvider: i,
                layerContext: l
            } = (0, s("481060").createLayer)("DevTools"), r = n, o = i, d = l
        },
        621628: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("47120"), s("518263"), s("970173"), s("520712"), s("268111"), s("941497"), s("32026"), s("480839"), s("744285"), s("492257"), s("873817"), s("733860");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("704215"),
                d = s("433517"),
                u = s("481060"),
                c = s("675478"),
                S = s("581883"),
                E = s("285952"),
                T = s("154921"),
                _ = s("915486"),
                I = s("883904"),
                N = s("68985"),
                g = s("211644"),
                f = s("312244"),
                m = s("611273");

            function A(e) {
                let {
                    contents: t,
                    content: s,
                    onChange: n
                } = e, i = (0, _.hasBit)(t, o.DismissibleContent[s]);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsx)(u.FormSwitch, {
                        value: i,
                        onChange: function() {
                            n(s), i ? (0, c.removeDismissedContent)(o.DismissibleContent[s]) : (0, c.addDismissedContent)(o.DismissibleContent[s])
                        },
                        children: (0, a.jsx)(u.FormText, {
                            size: T.default.Sizes.SIZE_16,
                            className: m.marginTop4,
                            children: "".concat(s.toLowerCase(), " (").concat(o.DismissibleContent[s], ")")
                        })
                    })
                })
            }

            function C(e) {
                let {
                    items: t,
                    dismissedContents: s,
                    handleChange: n
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: t.filter(e => isNaN(Number(e))).map(e => (0, a.jsx)(A, {
                        contents: s,
                        content: e,
                        onChange: n
                    }, e))
                })
            }

            function O() {
                var e;
                let t = (0, g.default)(e => e.recentlyShown),
                    {
                        dailyCapReached: s,
                        dailyCapOverridden: i
                    } = (0, r.useStateFromStoresObject)([N.default], () => ({
                        dailyCapReached: N.default.hasUserHitDCCap(),
                        dailyCapOverridden: N.default.dailyCapOverridden
                    })),
                    [T, _] = n.useState(""),
                    A = null !== (e = (0, r.useStateFromStores)([S.default], () => {
                        var e;
                        return null === (e = S.default.settings.userContent) || void 0 === e ? void 0 : e.dismissedContents
                    })) && void 0 !== e ? e : new Uint8Array,
                    [O, h] = function(e, t) {
                        let [s, a] = n.useState(() => {
                            let s = d.Storage.get(e);
                            return null != s ? s : t
                        });
                        return n.useEffect(() => {
                            d.Storage.set(e, s)
                        }, [e, s]), [s, a]
                    }("RecentDismissibleOverrides", []),
                    R = e => {
                        h(t => {
                            let s = new Set(t);
                            s.delete(e);
                            let a = Array.from(s).slice(0, 4);
                            return a.unshift(e), a
                        })
                    },
                    p = t.map(e => o.DismissibleContent[e]),
                    M = O.filter(e => e.toLowerCase().includes(T.toLowerCase())).filter(e => !p.includes(e)),
                    D = Object.keys(o.DismissibleContent).filter(e => !p.includes(e)).filter(e => !O.includes(e)).filter(e => e.toLowerCase().includes(T.toLowerCase())).sort((e, t) => e.localeCompare(t));
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormSection, {
                        title: "Dismissible Content Fatigue",
                        tag: u.FormTitleTags.H1,
                        className: m.marginBottom60,
                        children: [(0, a.jsx)(u.FormItem, {
                            children: (0, a.jsxs)(u.FormText, {
                                className: m.marginBottom4,
                                children: ["Daily Cap Reached: ", s ? "Yes" : "No"]
                            })
                        }), (0, a.jsx)(u.FormSwitch, {
                            value: i,
                            onChange: I.overrideDismissibleContentFramework,
                            children: "Override Dismissible Content Daily Cap"
                        }), (0, a.jsxs)(u.FormItem, {
                            children: [(0, a.jsx)(u.Button, {
                                onClick: () => (0, I.resetDismissibleContentFrameworkStore)(),
                                children: "Reset DismissibleContentFrameworkStore"
                            }), (0, a.jsx)(u.FormText, {
                                className: m.marginTop4,
                                children: "This will reset the daily cap and content seen during session"
                            })]
                        })]
                    }), (0, a.jsxs)(u.FormSection, {
                        title: "Dismissible Contents",
                        tag: u.FormTitleTags.H1,
                        children: [(0, a.jsx)(u.SearchBar, {
                            className: m.marginBottom20,
                            size: u.SearchBar.Sizes.LARGE,
                            query: T,
                            onChange: _,
                            onClear: () => _("")
                        }), (0, a.jsxs)(u.FormItem, {
                            className: f.buttonsContainer,
                            children: [(0, a.jsx)(u.Button, {
                                onClick: c.clearDismissedContents,
                                children: "Clear All Dismissed Contents"
                            }), (0, a.jsx)(u.Button, {
                                onClick: c.checkAllDismissedContents,
                                children: "Check All Dismissed Contents"
                            })]
                        }), t.length > 0 ? (0, a.jsxs)("div", {
                            className: m.marginBottom20,
                            children: [(0, a.jsx)("div", {
                                className: m.marginBottom20,
                                children: (0, a.jsx)(u.FormTitle, {
                                    children: "Recently Shown"
                                })
                            }), (0, a.jsx)(C, {
                                items: p,
                                dismissedContents: A,
                                handleChange: R
                            })]
                        }) : null, M.length > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("div", {
                                className: m.marginBottom20,
                                children: (0, a.jsx)(u.FormTitle, {
                                    children: "Recent Overrides"
                                })
                            }), (0, a.jsx)(C, {
                                items: M,
                                dismissedContents: A,
                                handleChange: R
                            })]
                        }) : null, (0, a.jsx)(E.default, {
                            className: l()(m.marginBottom20, m.marginTop20),
                            children: (0, a.jsx)(u.FormTitle, {
                                children: "Available Dismissible Contents"
                            })
                        }), (0, a.jsx)(C, {
                            items: D,
                            dismissedContents: A,
                            handleChange: R
                        })]
                    })]
                })
            }
        },
        430492: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                DropsCopyCodeModalContent: function() {
                    return _
                },
                DropsModalClaimErrorBody: function() {
                    return I
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("570140"),
                o = s("782568"),
                d = s("153124"),
                u = s("960359"),
                c = s("524347"),
                S = s("853197"),
                E = s("689938"),
                T = s("751423");

            function _(e) {
                let {
                    onClose: t,
                    code: s,
                    copyInputTitle: n,
                    bodyText: i
                } = e;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        className: T.headerContainer,
                        children: [(0, a.jsx)("div", {
                            className: T.dropArt
                        }), (0, a.jsx)(l.Heading, {
                            variant: "heading-xl/semibold",
                            children: E.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                        })]
                    }), (0, a.jsxs)(l.ModalContent, {
                        className: T.modalContent,
                        children: [(0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            className: T.codeBodyText,
                            children: i
                        }), (0, a.jsx)(l.FormDivider, {
                            className: T.formDivider
                        }), (0, a.jsx)(l.FormSection, {
                            title: n,
                            className: T.formSection,
                            children: (0, a.jsx)(l.Button, {
                                onClick: () => (0, o.default)(s),
                                color: l.Button.Colors.BRAND,
                                look: l.Button.Looks.FILLED,
                                children: E.default.Messages.GIFT_EMBED_BUTTON_CLAIM
                            })
                        })]
                    }), (0, a.jsx)(l.ModalFooter, {
                        className: T.modalFooter,
                        children: (0, a.jsx)(l.Button, {
                            className: T.closeButton,
                            onClick: t,
                            look: l.Button.Looks.LINK,
                            color: T.closeButton,
                            children: E.default.Messages.CLOSE
                        })
                    })]
                })
            }

            function I(e) {
                let {
                    onClose: t,
                    errorCode: s
                } = e, n = {
                    26e4: E.default.Messages.DROPS_USER_NOT_ENROLLED_ERROR,
                    260001: E.default.Messages.DROPS_QUEST_NOT_COMPLETED_ERROR,
                    260002: E.default.Messages.DROPS_NO_CODE_AVAILABLE_ERROR,
                    260003: E.default.Messages.DROPS_CODE_ALREADY_CLAIMED_ERROR
                }, i = E.default.Messages.GENERIC_ERROR_BODY;
                return null != n[s] && (i = n[s]), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        className: T.errorHeader,
                        children: [(0, a.jsx)("div", {
                            className: T.errorArt
                        }), (0, a.jsx)(l.Heading, {
                            variant: "heading-xl/semibold",
                            children: E.default.Messages.GENERIC_ERROR_TITLE
                        })]
                    }), (0, a.jsx)(l.ModalContent, {
                        className: T.errorBody,
                        children: (0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            className: T.bodyText,
                            children: i
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.BRAND,
                            onClick: t,
                            children: E.default.Messages.CLOSE
                        })
                    })]
                })
            }
            t.default = function(e) {
                let {
                    onClose: t,
                    code: o,
                    drop: I,
                    platform: N,
                    transitionState: g
                } = e, f = (0, d.useUID)(), [m, A] = n.useState();
                n.useEffect(() => {
                    null == o && r.default.wait(async () => {
                        await (0, u.fetchCodePlatformAvailability)(I.dropsQuestId)
                    })
                }, [I.dropsQuestId, o]);
                let C = (0, i.useStateFromStores)([c.default], () => c.default.platformAvailability);
                return (0, a.jsx)(l.ModalRoot, {
                    transitionState: g,
                    "aria-labelledby": f,
                    children: (0, a.jsx)(a.Fragment, {
                        children: (() => {
                            if (null != o) return (0, a.jsx)(_, {
                                bodyText: I.messages.claimTip(),
                                onClose: t,
                                copyInputTitle: E.default.Messages.DROPS_REDEMPTION_CODE_PLATFORM_TITLE.format({
                                    platform: N
                                }),
                                code: o
                            });
                            {
                                if (null === C) return (0, a.jsx)("div", {
                                    className: T.spinnerContainer,
                                    children: (0, a.jsx)(l.Spinner, {})
                                });
                                let e = C.length > 0,
                                    n = 1 === C.length;
                                return (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsxs)(l.ModalHeader, {
                                        separator: !1,
                                        className: T.headerContainer,
                                        children: [(0, a.jsx)("div", {
                                            className: T.dropArt
                                        }), (0, a.jsx)(l.Heading, {
                                            variant: "heading-lg/semibold",
                                            children: E.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                                        })]
                                    }), (0, a.jsxs)(l.ModalContent, {
                                        children: [(0, a.jsx)(l.Text, {
                                            variant: "text-md/normal",
                                            className: T.dropBodyText,
                                            children: n ? E.default.Messages.DROPS_MODAL_CHOOSE_SINGLE_PLATFORM.format({
                                                platform: (0, S.getPlatformLabel)(C[0])
                                            }) : E.default.Messages.DROPS_MODAL_CHOOSE_PLATFORM.format({
                                                title: I.title
                                            })
                                        }), (0, a.jsx)(l.FormDivider, {
                                            className: T.formDivider
                                        }), (0, a.jsxs)(l.FormSection, {
                                            className: T.dropFormSection,
                                            children: [(0, a.jsx)(l.SingleSelect, {
                                                onChange: A,
                                                options: C.map(e => ({
                                                    value: e,
                                                    label: (0, S.getPlatformLabel)(e)
                                                })),
                                                value: n ? C[0] : m,
                                                isDisabled: !e,
                                                className: e ? "" : T.selectDangerBorder,
                                                look: e ? l.SelectLooks.FILLED : l.SelectLooks.CUSTOM
                                            }), !e && (0, a.jsx)(l.Text, {
                                                variant: "text-sm/medium",
                                                color: "text-danger",
                                                className: T.errorCodesText,
                                                children: E.default.Messages.DROPS_CODES_RAN_OUT
                                            })]
                                        })]
                                    }), (0, a.jsxs)(l.ModalFooter, {
                                        children: [e && (0, a.jsx)(l.Button, {
                                            color: l.Button.Colors.BRAND,
                                            onClick: () => {
                                                (0, l.openModalLazy)(async () => {
                                                    let {
                                                        default: e
                                                    } = await Promise.all([s.e("99387"), s.e("5004")]).then(s.bind(s, "233070"));
                                                    return s => (void 0 !== m || n) && (0, a.jsx)(e, {
                                                        ...s,
                                                        platform: void 0 === m ? C[0] : m,
                                                        code: o,
                                                        dropsQuestId: I.dropsQuestId,
                                                        closeParentModal: t,
                                                        singlePlatformClaim: n
                                                    })
                                                })
                                            },
                                            disabled: void 0 === m && !n,
                                            children: E.default.Messages.UNLOCK_CODE
                                        }), e ? (0, a.jsx)(l.Button, {
                                            onClick: t,
                                            look: l.Button.Looks.LINK,
                                            color: T.maybeLaterButton,
                                            children: E.default.Messages.MAYBE_LATER
                                        }) : (0, a.jsx)(l.Button, {
                                            onClick: t,
                                            look: l.Button.Looks.LINK,
                                            color: T.closeButton,
                                            children: E.default.Messages.CLOSE
                                        })]
                                    })]
                                })
                            }
                        })()
                    })
                })
            }
        },
        254901: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("987170");
            t.default = (0, a.default)({
                kind: "user",
                id: "2023-08_aa_imbalance_remediation",
                label: "AA test to validate fallback trigger and location frequency change",
                defaultConfig: {
                    isEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "AA test enabled. Noop on UI effect.",
                    config: {
                        isEnabled: !0
                    }
                }]
            })
        },
        763610: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("53281"),
                d = s("383638");

            function u(e) {
                let {
                    filename: t,
                    className: s,
                    filters: i,
                    buttonText: u,
                    placeholder: c,
                    onFileSelect: S
                } = e, E = n.useRef(null);
                return (0, a.jsxs)("div", {
                    className: l()(s, d.fileUpload),
                    children: [(0, a.jsx)("input", {
                        className: d.fileUploadInput,
                        tabIndex: -1,
                        readOnly: !0,
                        placeholder: c,
                        type: "text",
                        value: t
                    }), (0, a.jsxs)(r.Button, {
                        size: r.Button.Sizes.MIN,
                        className: d.fileUploadButton,
                        children: [u, (0, a.jsx)(o.default, {
                            ref: E,
                            tabIndex: -1,
                            onChange: e => {
                                var t;
                                S(null === (t = e.currentTarget.files) || void 0 === t ? void 0 : t[0])
                            },
                            multiple: !1,
                            filters: i
                        })]
                    })]
                })
            }
        },
        320724: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                stopWatchingCandidateGames: function() {
                    return r
                },
                watchCandidateGames: function() {
                    return l
                }
            }), s("411104");
            var a = s("570140"),
                n = s("358085"),
                i = s("998502");

            function l() {
                if (!(0, n.isDesktop)()) throw Error("Attempted to observe candidate games on a non-desktop platform");
                i.default.setCandidateGamesCallback(e => {
                    a.default.dispatch({
                        type: "CANDIDATE_GAMES_CHANGE",
                        games: e
                    })
                }), a.default.dispatch({
                    type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_START"
                })
            }

            function r() {
                if (!(0, n.isDesktop)()) throw Error("Attempted to stop observing candidate games on a non-desktop platform");
                i.default.clearCandidateGamesCallback(), a.default.dispatch({
                    type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_STOP"
                })
            }
        },
        158153: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots: function() {
                    return n
                }
            });
            var a = s("74538");

            function n(e, t) {
                return a.default.getNumIncludedPremiumGuildSubscriptionSlots(e.planId) + (null != t ? 1 : 0)
            }
        },
        401786: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return F
                }
            }), s("411104"), s("47120");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("392711"),
                o = s.n(r),
                d = s("442837"),
                u = s("481060"),
                c = s("355467"),
                S = s("179360"),
                E = s("100527"),
                T = s("906732"),
                _ = s("374649"),
                I = s("431369"),
                N = s("55610"),
                g = s("653798"),
                f = s("311821"),
                m = s("42818"),
                A = s("314884"),
                C = s("509545"),
                O = s("78839"),
                h = s("285952"),
                R = s("267642"),
                p = s("74538"),
                M = s("937615"),
                D = s("518062"),
                x = s("474936"),
                L = s("231338"),
                P = s("689938"),
                b = s("683932");

            function v(e) {
                let {
                    premiumSubscription: t,
                    isInventory: s,
                    onNext: a,
                    onClose: n
                } = e;
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)(u.ModalHeader, {
                        separator: !1,
                        children: [(0, i.jsx)(u.FormTitle, {
                            tag: u.FormTitleTags.H4,
                            children: s ? P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_TITLE_INVENTORY : P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_TITLE_GUILD
                        }), (0, i.jsx)(u.ModalCloseButton, {
                            onClick: n
                        })]
                    }), (0, i.jsxs)(u.ModalContent, {
                        className: b.body,
                        children: [(0, i.jsx)("div", {
                            className: b.cancelImage
                        }), (0, i.jsx)("div", {
                            children: t.isPurchasedExternally && null != t.paymentGateway ? P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BODY_EXTERNAL.format({
                                paymentGatewayName: L.PaymentGatewayToFriendlyName[t.paymentGateway],
                                subscriptionManagementLink: (0, p.getExternalSubscriptionMethodUrl)(t.paymentGateway, "SUBSCRIPTION_MANAGEMENT")
                            }) : s ? P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BODY_INVENTORY.format({
                                endDate: t.currentPeriodEnd
                            }) : P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BODY_GUILD.format({
                                endDate: t.currentPeriodEnd
                            })
                        }), (0, i.jsx)(N.default, {
                            fromBoostCancelModal: !0
                        })]
                    }), t.isPurchasedExternally ? null : (0, i.jsxs)(u.ModalFooter, {
                        justify: h.default.Justify.START,
                        children: [(0, i.jsx)(u.Button, {
                            onClick: a,
                            children: P.default.Messages.NEXT
                        }), (0, i.jsx)(u.Button, {
                            look: u.Button.Looks.LINK,
                            onClick: n,
                            children: P.default.Messages.CANCEL
                        })]
                    })]
                })
            }(n = a || (a = {}))[n.START = 1] = "START", n[n.PREVIEW = 2] = "PREVIEW", n[n.CONFIRM = 3] = "CONFIRM";
            async function U(e, t, s, a) {
                let n = null != a ? a : function() {
                    let e = Object.values(A.default.boostSlots),
                        t = o().sortBy(e.filter(e => !(0, R.isGuildBoostSlotCanceled)(e)), e => [null != e.premiumGuildSubscription, null != e.cooldownEndsAt ? new Date(e.cooldownEndsAt) : null])[0];
                    return null != t ? t.id : null
                }();
                if (null == n) throw Error("No slot to cancel");
                await (0, S.cancelGuildBoostSlot)(n), await (0, c.updateSubscription)(e, {
                    items: (0, p.getItemsFromNewAdditionalPlans)(e, t)
                }, s)
            }

            function j(e) {
                var t, s, a;
                let {
                    premiumSubscription: n,
                    guildBoostSlotId: r,
                    onBack: o,
                    onNext: c,
                    onClose: S
                } = e, [N, A] = l.useState(!1), [O, R] = l.useMemo(() => {
                    try {
                        return [(0, I.calculateAdditionalPlansWithPremiumGuildAdjustment)(n, -1), !1]
                    } catch {
                        return [
                            [], !0
                        ]
                    }
                }, [n]);
                l.useEffect(() => {
                    R && S()
                }, [R]);
                let {
                    premiumSubscriptionPlan: L,
                    premiumGuildPlan: v
                } = (0, d.useStateFromStoresObject)([C.default], () => {
                    let e = C.default.get(n.planId);
                    return {
                        premiumSubscriptionPlan: e,
                        premiumGuildPlan: null != e ? C.default.getForSkuAndInterval((0, p.castPremiumSubscriptionAsSkuId)(x.PremiumSubscriptionSKUs.GUILD), e.interval, e.intervalCount) : null
                    }
                }), {
                    analyticsLocations: j
                } = (0, T.default)(), [G] = (0, _.useSubscriptionInvoicePreview)({
                    subscriptionId: n.id,
                    renewal: !0,
                    currency: n.currency,
                    paymentSourceId: n.paymentSourceId,
                    analyticsLocations: j,
                    analyticsLocation: E.default.GUILD_BOOST_SLOT_CANCELLATION_MODAL_CURRENT_INVOICE_PREVIEW
                }), F = null != v ? (0, p.getItemsWithUpsertedPremiumGuildPlan)(n, null !== (a = null === (t = O[0]) || void 0 === t ? void 0 : t.quantity) && void 0 !== a ? a : 0, v.id) : null, [B] = (0, _.useSubscriptionInvoicePreview)({
                    subscriptionId: n.id,
                    items: F,
                    renewal: !0,
                    analyticsLocations: j,
                    analyticsLocation: E.default.GUILD_BOOST_SLOT_CANCELLATION_MODAL_RENEWAL_INVOICE_PREVIEW
                });
                if (null == B || null == L || null == v || null == G) return (0, i.jsx)(u.Spinner, {});
                let y = n.items.some(e => {
                        let {
                            planId: t
                        } = e;
                        return !x.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(t)
                    }) && null == n.renewalMutations || (null === (s = n.renewalMutations) || void 0 === s ? void 0 : s.items.find(e => {
                        let {
                            planId: t
                        } = e;
                        return !x.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(t)
                    })) != null,
                    V = O.some(e => {
                        let {
                            planId: t
                        } = e;
                        return x.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(t)
                    }),
                    H = y || V ? B.total - G.total : -G.total,
                    {
                        interval: Y,
                        intervalCount: k
                    } = L;
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsx)(D.default, {
                        onClose: S
                    }), (0, i.jsxs)(u.ModalContent, {
                        className: b.body,
                        children: [(0, i.jsx)("div", {
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_PREVIEW.format({
                                endDate: B.subscriptionPeriodStart
                            })
                        }), (0, i.jsxs)(g.PremiumInvoiceTable, {
                            className: b.invoiceTable,
                            children: [(0, i.jsx)(g.PremiumInvoiceTableHeader, {
                                children: P.default.Messages.PREMIUM_SUBSCRIPTION_UPDATES
                            }), (0, i.jsx)(g.PremiumInvoiceTableRow, {
                                label: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_INVOICE_SUBSCRIPTION_CANCELLED.format({
                                    subscriptionCount: 1
                                }),
                                value: (0, M.formatRate)((0, M.formatPrice)(H, n.currency), Y, k),
                                className: b.invoiceCancelRow
                            }), null != F && F.length > 0 ? (0, i.jsxs)("div", {
                                children: [(0, i.jsx)(g.PremiumInvoiceTableDivider, {}), (0, i.jsx)(m.SubscriptionInvoiceFooter, {
                                    premiumSubscription: n,
                                    renewalInvoice: B,
                                    isUpdate: !0
                                })]
                            }) : null]
                        })]
                    }), (0, i.jsxs)(u.ModalFooter, {
                        align: h.default.Align.CENTER,
                        justify: h.default.Justify.BETWEEN,
                        children: [(0, i.jsx)(u.Button, {
                            color: u.Button.Colors.RED,
                            disabled: N,
                            onClick: async () => {
                                try {
                                    A(!0), await U(n, O, j, r), c()
                                } catch {
                                    A(!1)
                                }
                            },
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON
                        }), (0, i.jsx)(f.default, {
                            onClick: o
                        })]
                    })]
                })
            }

            function G(e) {
                let {
                    premiumSubscription: t,
                    onClose: s
                } = e;
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)(u.ModalHeader, {
                        separator: !1,
                        children: [(0, i.jsx)(u.FormTitle, {
                            tag: u.FormTitleTags.H4,
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CONFIRM_TITLE
                        }), (0, i.jsx)(u.ModalCloseButton, {
                            onClick: s
                        })]
                    }), (0, i.jsxs)(u.ModalContent, {
                        className: b.body,
                        children: [(0, i.jsx)("div", {
                            className: b.cancelImage
                        }), (0, i.jsx)("div", {
                            children: P.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CONFIRM_BODY.format({
                                endDate: t.currentPeriodEnd
                            })
                        })]
                    }), (0, i.jsx)(u.ModalFooter, {
                        children: (0, i.jsx)(u.Button, {
                            onClick: s,
                            children: P.default.Messages.OKAY
                        })
                    })]
                })
            }

            function F(e) {
                let t, {
                    guildBoostSlot: s,
                    transitionState: a,
                    onClose: n
                } = e;
                l.useEffect(() => {
                    !O.default.hasFetchedSubscriptions() && (0, c.fetchSubscriptions)()
                }, []);
                let r = (0, d.useStateFromStores)([O.default], () => O.default.getPremiumTypeSubscription()),
                    [o, S] = l.useState(1),
                    {
                        analyticsLocations: _
                    } = (0, T.default)(E.default.GUILD_BOOST_CANCELLATION_MODAL);
                if (null == r) t = (0, i.jsx)(u.ModalContent, {
                    children: (0, i.jsx)(u.Spinner, {})
                });
                else switch (o) {
                    case 1:
                        t = (0, i.jsx)(v, {
                            premiumSubscription: r,
                            isInventory: null == s.premiumGuildSubscription,
                            onNext: () => S(2),
                            onClose: n
                        });
                        break;
                    case 2:
                        t = (0, i.jsx)(j, {
                            premiumSubscription: r,
                            guildBoostSlotId: s.id,
                            onBack: () => S(1),
                            onNext: () => S(3),
                            onClose: n
                        });
                        break;
                    case 3:
                        t = (0, i.jsx)(G, {
                            premiumSubscription: r,
                            onClose: n
                        });
                        break;
                    default:
                        throw Error("Unexpected step: ".concat(o))
                }
                return (0, i.jsx)(T.AnalyticsLocationProvider, {
                    value: _,
                    children: (0, i.jsx)(u.ModalRoot, {
                        transitionState: a,
                        children: t
                    })
                })
            }
        },
        280942: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("178346"),
                i = s("481060"),
                l = s("230711"),
                r = s("267642"),
                o = s("760558"),
                d = s("981631"),
                u = s("689938"),
                c = s("584545");

            function S(e) {
                let {
                    guildBoostSlot: t,
                    onClose: S,
                    hasCancelableGuildBoostSlot: E,
                    premiumSubscription: T,
                    onSelect: _
                } = e, I = {
                    transfer: {
                        label: null != t.premiumGuildSubscription ? u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON : u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SELECT_SERVER_BUTTON,
                        subtext: t.isOnCooldown() ? u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON_DISABLED_TOOLTIP : null,
                        disabled: t.isOnCooldown()
                    },
                    cancel: {
                        label: u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON,
                        subtext: E ? null : u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_TOOLTIP,
                        disabled: !E
                    },
                    uncancel: {
                        label: u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON,
                        subtext: null,
                        disabled: !1
                    }
                };
                switch (T.status) {
                    case d.SubscriptionStatusTypes.PAST_DUE:
                        I.cancel.disabled = !0, I.cancel.subtext = u.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_PAST_DUE_TOOLTIP, I.uncancel.disabled = !0;
                        break;
                    case d.SubscriptionStatusTypes.PAUSE_PENDING:
                    case d.SubscriptionStatusTypes.PAUSED:
                        I.transfer.disabled = !0, I.transfer.subtext = u.default.Messages.GUILD_BOOSTING_TRANSFER_DISABLED_FOR_PAUSED_SUBSCRIPTION, I.cancel.disabled = !0, I.cancel.subtext = u.default.Messages.GUILD_BOOSTING_CANCEL_DISABLED_FOR_PAUSED_SUBSCRIPTION, I.uncancel.disabled = !0
                }
                return (0, a.jsxs)(i.Menu, {
                    onSelect: _,
                    navId: "subscription-context",
                    variant: "fixed",
                    "aria-label": u.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onClose: S,
                    children: [(0, a.jsx)(i.MenuItem, {
                        id: "apply",
                        label: I.transfer.label,
                        subtext: I.transfer.subtext,
                        action: function() {
                            (0, i.openModalLazy)(async () => e => (0, a.jsx)(o.default, {
                                ...e,
                                guildBoostSlots: [t],
                                locationSection: d.AnalyticsSections.SETTINGS_PREMIUM
                            }))
                        },
                        disabled: I.transfer.disabled
                    }), (0, r.isGuildBoostSlotCanceled)(t) ? (0, a.jsx)(i.MenuItem, {
                        id: "uncancel",
                        label: I.uncancel.label,
                        subtext: I.uncancel.subtext,
                        action: function() {
                            (0, i.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.resolve().then(s.bind(s, "450468"));
                                return s => (0, a.jsx)(e, {
                                    ...s,
                                    guildBoostSlotId: t.id
                                })
                            })
                        },
                        disabled: I.uncancel.disabled
                    }) : (0, a.jsx)(i.MenuItem, {
                        id: "cancel",
                        label: I.cancel.label,
                        subtext: I.cancel.subtext,
                        action: function() {
                            (0, i.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.resolve().then(s.bind(s, "401786"));
                                return s => (0, a.jsx)(e, {
                                    ...s,
                                    guildBoostSlot: t
                                })
                            })
                        },
                        disabled: I.cancel.disabled,
                        color: "danger"
                    }), T.isPausedOrPausePending ? (0, a.jsx)(i.MenuItem, {
                        id: "manage-subscription",
                        label: u.default.Messages.BILLING_MANAGE_SUBSCRIPTION,
                        action: () => l.default.open(d.UserSettingsSections.SUBSCRIPTIONS),
                        icon: n.LightbulbIcon,
                        showIconFirst: !0,
                        className: c.manageSubscription
                    }) : null]
                })
            }
        },
        450468: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return p
                }
            }), s("47120"), s("411104");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("512722"),
                o = s.n(r),
                d = s("442837"),
                u = s("780384"),
                c = s("481060"),
                S = s("355467"),
                E = s("179360"),
                T = s("100527"),
                _ = s("906732"),
                I = s("431369"),
                N = s("210887"),
                g = s("78839"),
                f = s("285952"),
                m = s("74538"),
                A = s("689938"),
                C = s("625699");
            async function O(e, t, s, a) {
                await (0, E.uncancelGuildBoostSlot)(s), await (0, S.updateSubscription)(e, {
                    items: (0, m.getItemsFromNewAdditionalPlans)(e, t)
                }, a)
            }

            function h(e) {
                let {
                    premiumSubscription: t,
                    guildBoostSlotId: s,
                    onNext: a,
                    onClose: n
                } = e, [r, S] = l.useState(!1), E = (0, d.useStateFromStores)([N.default], () => N.default.theme), {
                    analyticsLocations: T
                } = (0, _.default)();
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)(c.ModalHeader, {
                        separator: !1,
                        children: [(0, i.jsx)(c.FormTitle, {
                            tag: c.FormTitleTags.H4,
                            children: A.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_INVENTORY_UNCANCEL_TITLE
                        }), (0, i.jsx)(c.ModalCloseButton, {
                            onClick: n
                        })]
                    }), (0, i.jsx)(c.ModalContent, {
                        className: C.body,
                        children: A.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_INVENTORY_UNCANCEL_DESCRIPTION
                    }), (0, i.jsxs)(c.ModalFooter, {
                        justify: f.default.Justify.START,
                        children: [(0, i.jsx)(c.Button, {
                            onClick: async () => {
                                try {
                                    S(!0);
                                    let e = (0, I.calculateAdditionalPlansWithPremiumGuildAdjustment)(t, 1);
                                    o()((0, m.getNumPremiumGuildSubscriptions)(e) <= (0, m.getNumPremiumGuildSubscriptions)(t.additionalPlans), "Uncanceling should not increase the number of guild subscriptions"), await O(t, e, s, T), a()
                                } catch (e) {
                                    S(!1)
                                }
                            },
                            submitting: r,
                            children: A.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_INVENTORY_UNCANCEL_BUTTON
                        }), (0, i.jsx)(c.Button, {
                            look: c.Button.Looks.LINK,
                            color: (0, u.isThemeLight)(E) ? c.Button.Colors.PRIMARY : c.Button.Colors.WHITE,
                            onClick: n,
                            disabled: r,
                            children: A.default.Messages.NEVERMIND
                        })]
                    })]
                })
            }

            function R(e) {
                let {
                    onClose: t
                } = e;
                return (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)(c.ModalHeader, {
                        separator: !1,
                        children: [(0, i.jsx)(c.FormTitle, {
                            tag: c.FormTitleTags.H4,
                            children: A.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_INVENTORY_UNCANCEL_CONFIRM_TITLE
                        }), (0, i.jsx)(c.ModalCloseButton, {
                            onClick: t
                        })]
                    }), (0, i.jsxs)(c.ModalContent, {
                        className: C.body,
                        children: [(0, i.jsx)("div", {
                            className: C.uncancelImage
                        }), (0, i.jsx)("div", {
                            children: A.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_INVENTORY_UNCANCEL_CONFIRM_DESCRIPTION
                        })]
                    }), (0, i.jsx)(c.ModalFooter, {
                        children: (0, i.jsx)(c.Button, {
                            onClick: t,
                            children: A.default.Messages.OKAY
                        })
                    })]
                })
            }

            function p(e) {
                let t, {
                        guildBoostSlotId: s,
                        transitionState: a,
                        onClose: n
                    } = e,
                    {
                        analyticsLocations: r
                    } = (0, _.default)(T.default.GUILD_BOOST_UNCANCELLATION_MODAL);
                l.useEffect(() => {
                    !g.default.hasFetchedSubscriptions() && (0, S.fetchSubscriptions)()
                }, []);
                let o = (0, d.useStateFromStores)([g.default], () => g.default.getPremiumTypeSubscription()),
                    [u, E] = l.useState(1);
                if (null == o) t = (0, i.jsx)(c.ModalContent, {
                    children: (0, i.jsx)(c.Spinner, {})
                });
                else switch (u) {
                    case 1:
                        t = (0, i.jsx)(h, {
                            premiumSubscription: o,
                            guildBoostSlotId: s,
                            onNext: () => E(2),
                            onClose: n
                        });
                        break;
                    case 2:
                        t = (0, i.jsx)(R, {
                            onClose: n
                        });
                        break;
                    default:
                        throw Error("Unexpected step: ".concat(u))
                }
                return (0, i.jsx)(_.AnalyticsLocationProvider, {
                    value: r,
                    children: (0, i.jsx)(c.ModalRoot, {
                        transitionState: a,
                        children: t
                    })
                })
            }(n = a || (a = {}))[n.START = 1] = "START", n[n.CONFIRM = 2] = "CONFIRM"
        },
        52597: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                canResetThemeColors: function() {
                    return o
                },
                setNewPendingGuildIdentityBio: function() {
                    return n
                },
                setNewPendingGuildIdentityPronouns: function() {
                    return i
                },
                setNewPendingGuildIdentityThemeColors: function() {
                    return r
                },
                setNewPendingNickname: function() {
                    return l
                }
            });
            var a = s("18438");

            function n(e, t) {
                (0, a.setPendingBio)(e === t ? void 0 : e)
            }

            function i(e, t) {
                (0, a.setPendingPronouns)(e === t ? void 0 : e)
            }

            function l(e, t) {
                (0, a.setPendingNickname)(e === t || "" === e && null === t ? void 0 : e)
            }

            function r(e, t) {
                let s = (null == e ? void 0 : e[0]) == null || (null == e ? void 0 : e[1]) == null;
                (0, a.setPendingThemeColors)(s && null == t ? void 0 : e)
            }

            function o(e, t) {
                return void 0 === e ? null != t : (null == e ? void 0 : e[0]) != null && (null == e ? void 0 : e[1]) != null
            }
        },
        856607: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("37234"),
                l = s("703656"),
                r = s("981631"),
                o = s("689938"),
                d = s("42205"),
                u = s("322221");

            function c() {
                return (0, a.jsxs)("div", {
                    className: d.emptyState,
                    children: [(0, a.jsx)("img", {
                        src: u,
                        alt: "",
                        className: d.image
                    }), (0, a.jsx)(n.Heading, {
                        className: d.topSpacing,
                        variant: "heading-lg/extrabold",
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_TITLE
                    }), (0, a.jsx)(n.Text, {
                        className: d.topSpacing,
                        variant: "text-md/normal",
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_DESCRIPTION
                    }), (0, a.jsx)(n.Button, {
                        className: d.topSpacing,
                        onClick: () => {
                            (0, l.transitionTo)(r.Routes.GUILD_DISCOVERY), i.popLayer()
                        },
                        children: o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_CTA
                    })]
                })
            }
        },
        594496: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("512722"),
                i = s.n(n),
                l = s("442837"),
                r = s("481060"),
                o = s("295474"),
                d = s("150039"),
                u = s("126631"),
                c = s("433411"),
                S = s("532432"),
                E = s("134795"),
                T = s("513901"),
                _ = s("451392"),
                I = s("906364"),
                N = s("621853"),
                g = s("271383"),
                f = s("594174"),
                m = s("466111"),
                A = s("74538"),
                C = s("51144"),
                O = s("18438"),
                h = s("778825"),
                R = s("52597"),
                p = s("430131"),
                M = s("133484"),
                D = s("689938"),
                x = s("30314");

            function L(e) {
                var t, s, n, L;
                let {
                    guild: P
                } = e, b = (0, l.useStateFromStores)([f.default], () => {
                    let e = f.default.getCurrentUser();
                    return i()(null != e, "GuildIdentitySettingsPage: user cannot be undefined"), e
                }), {
                    pendingAvatar: v,
                    pendingNickname: U,
                    pendingBanner: j,
                    pendingBio: G,
                    pendingPronouns: F,
                    pendingThemeColors: B,
                    errors: y,
                    guild: V
                } = (0, l.useStateFromStoresObject)([h.default], () => {
                    let {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingBanner: n,
                        pendingThemeColors: i
                    } = h.default.getAllPending();
                    return {
                        pendingAvatar: e,
                        pendingNickname: t,
                        pendingBanner: n,
                        pendingBio: s,
                        pendingPronouns: a,
                        pendingThemeColors: i,
                        errors: h.default.getErrors(),
                        guild: h.default.getGuild()
                    }
                }), H = null != P ? P : V;
                i()(null != H, "guild should not be null");
                let Y = (0, o.useGuildAutomodProfileQuarantineErrors)(H.id),
                    k = (0, l.useStateFromStores)([g.default], () => null == H.id ? null : g.default.getMember(H.id, b.id)),
                    w = (0, l.useStateFromStores)([N.default], () => N.default.getGuildMemberProfile(b.id, H.id)),
                    W = A.default.canUsePremiumProfileCustomization(b),
                    K = (0, d.showRemoveAvatar)(v, null == k ? void 0 : k.avatar),
                    Q = (0, d.showRemoveBanner)(j, null == w ? void 0 : w.banner),
                    z = (0, R.canResetThemeColors)(B, null == w ? void 0 : w.themeColors),
                    X = null !== (t = null == w ? void 0 : w.bio) && void 0 !== t ? t : "",
                    q = null !== (s = null == w ? void 0 : w.pronouns) && void 0 !== s ? s : "",
                    Z = (e, t, s) => {
                        s(null != e ? e : null != t ? null : void 0)
                    };
                return (0, a.jsxs)("div", {
                    className: x.sectionsContainer,
                    children: [(0, a.jsx)(p.default, {
                        errors: null !== (n = null == y ? void 0 : y.nick) && void 0 !== n ? n : null == Y ? void 0 : Y.nick,
                        username: C.default.getName(b),
                        pendingNick: U,
                        currentNick: null == k ? void 0 : k.nick,
                        guild: H
                    }, "nick"), (0, a.jsx)(I.default, {
                        sectionTitle: D.default.Messages.USER_SETTINGS_PRONOUNS,
                        errors: null == y ? void 0 : y.pronouns,
                        onPronounsChange: e => {
                            (0, R.setNewPendingGuildIdentityPronouns)(e, q)
                        },
                        pendingPronouns: F,
                        currentPronouns: q
                    }, "pronouns"), (0, a.jsxs)(M.default, {
                        user: b,
                        showOverlay: !W,
                        children: [(0, a.jsx)(S.default, {
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [D.default.Messages.USER_SETTINGS_AVATAR, (0, a.jsx)(r.Tooltip, {
                                    text: D.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(m.default, {
                                        ...e,
                                        className: x.nitroWheel
                                    })
                                })]
                            }),
                            showRemoveAvatarButton: K,
                            onAvatarChange: e => Z(e, null == k ? void 0 : k.avatar, O.setPendingAvatar),
                            errors: null == y ? void 0 : y.avatar,
                            guildId: H.id,
                            disabled: !W
                        }, "avatar"), (0, a.jsx)(c.default, {
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [D.default.Messages.USER_SETTINGS_AVATAR_DECORATION, (0, a.jsx)(r.Tooltip, {
                                    text: D.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(m.default, {
                                        ...e,
                                        className: x.nitroWheel
                                    })
                                })]
                            }),
                            user: b,
                            guild: H
                        }, "decoration"), (0, a.jsx)(T.default, {
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [D.default.Messages.USER_SETTINGS_PROFILE_EFFECT, (0, a.jsx)(r.Tooltip, {
                                    text: D.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(m.default, {
                                        ...e,
                                        className: x.nitroWheel
                                    })
                                })]
                            }),
                            user: b,
                            guild: H
                        }, "effect"), (0, a.jsx)(E.default, {
                            showRemoveBannerButton: Q,
                            errors: null == y ? void 0 : y.banner,
                            onBannerChange: e => Z(e, null == w ? void 0 : w.banner, O.setPendingBanner),
                            guildId: null == H ? void 0 : H.id,
                            disabled: !W
                        }, "banner"), (0, a.jsx)(_.default, {
                            user: b,
                            pendingAvatar: v,
                            pendingColors: B,
                            onThemeColorsChange: e => {
                                (0, R.setNewPendingGuildIdentityThemeColors)(e, null == w ? void 0 : w.themeColors)
                            },
                            guildId: null == H ? void 0 : H.id,
                            showResetThemeButton: z
                        }), (0, a.jsx)(u.default, {
                            placeholder: D.default.Messages.CHANGE_IDENTITY_BIO_PLACEHOLDER,
                            sectionTitle: (0, a.jsxs)(a.Fragment, {
                                children: [D.default.Messages.USER_PROFILE_ABOUT_ME, (0, a.jsx)(r.Tooltip, {
                                    text: D.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                                    children: e => (0, a.jsx)(m.default, {
                                        ...e,
                                        className: x.nitroWheel
                                    })
                                })]
                            }),
                            onBioChange: e => (0, R.setNewPendingGuildIdentityBio)(e, X),
                            errors: null !== (L = null == y ? void 0 : y.bio) && void 0 !== L ? L : null == Y ? void 0 : Y.bio,
                            pendingBio: G,
                            currentBio: X,
                            disabled: !W
                        }, "about")]
                    })]
                })
            }
        },
        905027: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("852860"),
                r = s("164946"),
                o = s("350327"),
                d = s("647699"),
                u = s("18438"),
                c = s("778825"),
                S = s("689938");

            function E() {
                let e = (0, i.useStateFromStores)([c.default], () => c.default.getIsSubmitDisabled()),
                    t = (0, i.useStateFromStores)([c.default], () => c.default.getGuild()),
                    s = (0, i.useStateFromStores)([c.default], () => c.default.getErrors()),
                    [E, T] = n.useState(!1),
                    _ = n.useMemo(() => (null == s ? void 0 : s.message) != null ? null == s ? void 0 : s.message : Object.keys(null != s ? s : {}).length > 0 ? S.default.Messages.GUILD_SETTINGS_EDIT_PROFILE_GENERIC_ERROR : null, [s]),
                    I = n.useCallback(async () => {
                        var e, s;
                        T(!0);
                        let a = c.default.getAllPending(),
                            n = (0, r.getGuildMemberChangesForUpdateRequest)(a),
                            i = (0, r.getProfileChangesForUpdateRequest)(a),
                            l = !0;
                        if (Object.keys(n).length > 0) {
                            let s = await (0, u.saveGuildIdentityChanges)(null == t ? void 0 : t.id, n);
                            l = l && null !== (e = null == s ? void 0 : s.ok) && void 0 !== e && e, (null == s ? void 0 : s.ok) && (0, u.resetPendingMemberChanges)()
                        }
                        if (Object.keys(i).length > 0) {
                            let e = await (0, o.saveProfileChanges)(i, null == t ? void 0 : t.id);
                            l = l && null !== (s = null == e ? void 0 : e.ok) && void 0 !== s && s, (null == e ? void 0 : e.ok) ? (0, u.resetPendingProfileChanges)() : (0, d.showGenericGuildProfileUpdateFailureToast)()
                        }
                        l && (0, u.clearErrors)(), T(!1)
                    }, [null == t ? void 0 : t.id]),
                    N = n.useCallback(() => {
                        (0, u.resetAllPending)()
                    }, []);
                return (0, a.jsx)(l.default, {
                    submitting: E,
                    onSave: I,
                    onReset: N,
                    disabled: e,
                    errorMessage: null != _ ? _ : void 0
                })
            }
        },
        66516: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return v
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("230711"),
                c = s("497321"),
                S = s("100527"),
                E = s("367907"),
                T = s("906732"),
                _ = s("414666"),
                I = s("589266"),
                N = s("296810"),
                g = s("621853"),
                f = s("246946"),
                m = s("594174"),
                A = s("626135"),
                C = s("63063"),
                O = s("74538"),
                h = s("18438"),
                R = s("778825"),
                p = s("856607"),
                M = s("594496"),
                D = s("856768"),
                x = s("981631"),
                L = s("689938");

            function P() {
                A.default.track(x.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                    location_page: x.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS,
                    location_object: x.AnalyticsObjects.BADGE
                }), (0, h.closeGuildIdentitySettings)(), u.default.open(x.UserSettingsSections.PREMIUM)
            }

            function b(e) {
                (0, o.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await s.e("84509").then(s.bind(s, "933696"));
                    return s => (0, a.jsx)(t, {
                        source: {
                            ...e,
                            page: x.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS
                        },
                        ...s
                    })
                })
            }

            function v(e) {
                let {
                    selectedGuild: t
                } = e, {
                    analyticsLocations: s
                } = (0, T.default)(S.default.GUILD_PROFILE), i = (0, r.useStateFromStores)([m.default], () => {
                    let e = m.default.getCurrentUser();
                    return l()(null != e, "GuildIdentitySettingsPage: user cannot be undefined"), e
                }), u = (0, r.useStateFromStores)([g.default], () => !g.default.isFetchingProfile(i.id)), A = (0, r.useStateFromStores)([f.default], () => f.default.hidePersonalInformation), {
                    pendingAvatar: v,
                    pendingAvatarDecoration: U,
                    pendingProfileEffectId: j,
                    pendingNickname: G,
                    pendingBanner: F,
                    pendingBio: B,
                    pendingPronouns: y,
                    pendingThemeColors: V,
                    source: H
                } = (0, r.useStateFromStoresObject)([R.default], () => ({
                    ...R.default.getAllPending(),
                    source: R.default.getSource()
                }));
                if (n.useEffect(() => () => d.default.wait(h.resetAllPending), []), n.useEffect(() => {
                        null != H && E.default.trackWithMetadata(x.AnalyticEvents.SETTINGS_PANE_VIEWED, {
                            settings_type: "guild",
                            destination_pane: x.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                            source: H
                        })
                    }, [H]), A) return (0, a.jsx)(c.default, {});
                if (!u) return (0, a.jsx)(o.Spinner, {});
                let Y = O.default.canUsePremiumProfileCustomization(i),
                    k = {
                        user: i,
                        guild: t,
                        canUsePremiumCustomization: Y,
                        onAvatarChange: h.setPendingAvatar,
                        onBannerChange: h.setPendingBanner,
                        onUpsellClick: b,
                        pendingAvatar: v,
                        pendingAvatarDecoration: U,
                        pendingProfileEffectId: j,
                        pendingBanner: F,
                        pendingBio: B,
                        pendingPronouns: y,
                        pendingNickname: G,
                        activityName: L.default.Messages.CHANGE_IDENTITY_SERVER_PROFILE,
                        activityCharacter: _.FakeActivityCharacter.PHIBI,
                        openPremiumSettings: P
                    };
                return (0, a.jsxs)(T.AnalyticsLocationProvider, {
                    value: s,
                    children: [(0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        children: L.default.Messages.PROFILE_CUSTOMIZATION_GUILD_HINT.format({
                            helpCenterLink: C.default.getArticleURL(x.HelpdeskArticles.GUILD_PROFILES)
                        })
                    }), null != t ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(D.default, {
                            guildId: t.id,
                            onChange: e => {
                                null != e && (0, h.setCurrentGuild)(e)
                            }
                        }), (0, a.jsx)(N.default, {
                            previewTitle: L.default.Messages.CHANGE_IDENTITY_PREVIEW_WITH_GUILD_NAME.format({
                                guildName: null == t ? void 0 : t.name
                            }),
                            profilePreview: (0, a.jsx)(I.default, {
                                ...k,
                                location: "GuildIdentitySettingsPage",
                                pendingThemeColors: V
                            }),
                            children: (0, a.jsx)(M.default, {})
                        })]
                    }) : (0, a.jsx)(p.default, {})]
                })
            }
        },
        856768: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                GuildSelector: function() {
                    return g
                },
                default: function() {
                    return N
                }
            }), s("733860");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("993413"),
                u = s("430824"),
                c = s("771845"),
                S = s("346656"),
                E = s("823379"),
                T = s("778825"),
                _ = s("689938"),
                I = s("255069");

            function N(e) {
                let {
                    guildId: t,
                    className: s,
                    globalOption: n,
                    hideDivider: i = !1,
                    onChange: r,
                    renderOptionSuffix: o
                } = e;
                return (0, a.jsx)(d.default, {
                    className: l()(I.section, s),
                    title: _.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_TITLE,
                    hideDivider: i,
                    forcedDivider: !0,
                    children: (0, a.jsx)(g, {
                        guildId: t,
                        onChange: r,
                        renderOptionSuffix: o,
                        globalOption: n
                    })
                })
            }

            function g(e) {
                let {
                    guildId: t,
                    globalOption: s,
                    onChange: i,
                    renderOptionSuffix: l
                } = e, d = (0, r.useStateFromStores)([T.default], () => T.default.showNotice()), N = (0, r.useStateFromStores)([c.default], () => c.default.getFlattenedGuildIds()), g = (0, r.useStateFromStores)([u.default], () => u.default.getGuilds()), f = n.useMemo(() => {
                    let e = N.map(e => {
                        let t = g[e];
                        return null == t ? null : {
                            label: t.name,
                            value: t.id
                        }
                    }).filter(E.isNotNullish);
                    return null != s && e.unshift(s), e
                }, [N, g, s]), m = n.useCallback(e => {
                    let t = (null == e ? void 0 : e.label) === (null == s ? void 0 : s.label) && (null == e ? void 0 : e.value) === (null == s ? void 0 : s.value);
                    return null == e || "" === e.value || t ? null : (0, a.jsx)(S.default, {
                        className: I.guildSelectOptionIcon,
                        guild: g[e.value],
                        size: S.default.Sizes.SMOL,
                        active: !0
                    })
                }, [g, s]);
                return (0, a.jsx)(o.SearchableSelect, {
                    isDisabled: d,
                    onChange: e => {
                        if ("" === e || e === (null == s ? void 0 : s.value)) {
                            i(null);
                            return
                        }
                        let t = g[e];
                        null != t && i(t)
                    },
                    value: t,
                    options: f,
                    renderOptionPrefix: m,
                    renderOptionSuffix: l,
                    placeholder: _.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_PLACEHOLDER
                })
            }
        },
        430131: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("993413"),
                r = s("496675"),
                o = s("52597"),
                d = s("981631"),
                u = s("689938"),
                c = s("767502");

            function S(e) {
                let {
                    errors: t,
                    pendingNick: s,
                    currentNick: S,
                    username: E,
                    guild: T
                } = e, _ = null != s ? s : S, I = (0, n.useStateFromStores)([r.default], () => r.default.can(d.Permissions.CHANGE_NICKNAME, T) || r.default.can(d.Permissions.MANAGE_NICKNAMES, T));
                return (0, a.jsxs)(l.default, {
                    title: u.default.Messages.SERVER_NICKNAME,
                    errors: t,
                    children: [(0, a.jsx)(i.TextInput, {
                        value: null != _ ? _ : "",
                        placeholder: E,
                        maxLength: d.USERNAME_MAX_LENGTH,
                        onChange: function(e) {
                            (0, o.setNewPendingNickname)(e, S)
                        },
                        disabled: !I
                    }), !I && (0, a.jsx)(i.FormText, {
                        className: c.nicknameDisabled,
                        type: i.FormText.Types.DESCRIPTION,
                        children: u.default.Messages.CHANGE_IDENTITY_NICKNAME_PERMISSIONS_DISABLED
                    })]
                })
            }
        },
        133484: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("410030"),
                r = s("100527"),
                o = s("906732"),
                d = s("197115"),
                u = s("626135"),
                c = s("74538"),
                S = s("981631"),
                E = s("474936"),
                T = s("689938"),
                _ = s("664338"),
                I = s("699623"),
                N = s("820350");

            function g(e) {
                let {
                    user: t,
                    showOverlay: s,
                    children: g
                } = e, f = (0, l.default)(), {
                    analyticsLocations: m
                } = (0, o.default)(r.default.PREMIUM_UPSELL_OVERLAY);
                return (n.useEffect(() => {
                    s && u.default.track(S.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        location_stack: m,
                        type: E.PremiumUpsellTypes.PREMIUM_GUILD_MEMBER_PROFILE_UPSELL_INLINE
                    })
                }, [s, m]), s) ? (0, a.jsxs)("div", {
                    className: _.upsellOverlayContainer,
                    children: [(0, a.jsx)("div", {
                        children: g
                    }), (0, a.jsxs)("div", {
                        className: _.upsellOverlay,
                        children: [(0, a.jsx)("img", {
                            className: _.upsellImage,
                            alt: T.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_IMAGE_ALT,
                            src: function(e) {
                                switch (e) {
                                    case S.ThemeTypes.DARK:
                                        return I;
                                    case S.ThemeTypes.LIGHT:
                                        return N
                                }
                            }(f)
                        }), (0, a.jsxs)("div", {
                            className: _.upsellTextContainer,
                            children: [(0, a.jsx)(i.Text, {
                                variant: "text-lg/semibold",
                                color: "always-white",
                                children: T.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_TITLE
                            }), (0, a.jsx)(i.Text, {
                                variant: "text-sm/normal",
                                color: "always-white",
                                children: T.default.Messages.GUILD_IDENTITY_UPSELL_OVERLAY_DESCRIPTION_THEMES
                            })]
                        }), (0, a.jsx)(d.default, {
                            size: i.Button.Sizes.LARGE,
                            color: i.Button.Colors.GREEN,
                            buttonText: c.default.isPremium(t) ? T.default.Messages.USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE : T.default.Messages.CHANGE_IDENTITY_UPSELL,
                            subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2
                        })]
                    })]
                }) : (0, a.jsx)(a.Fragment, {
                    children: g
                })
            }
        },
        245950: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            }), s("47120");
            var a = s("470079"),
                n = s("913527"),
                i = s.n(n),
                l = s("442837"),
                r = s("430824"),
                o = s("937615"),
                d = s("584825"),
                u = s("289393"),
                c = s("697227"),
                S = s("981631"),
                E = s("689938");

            function T(e) {
                let t = (0, c.getRoleSubscriptionPlanId)(e),
                    s = (0, l.useStateFromStores)([u.default], () => u.default.getSubscriptionListingForPlan(t)),
                    n = (0, l.useStateFromStores)([u.default], () => null != s ? u.default.getSubscriptionGroupListingForSubscriptionListing(s.id) : null),
                    T = (0, l.useStateFromStores)([r.default], () => r.default.getGuild(null == n ? void 0 : n.guild_id)),
                    [_, I] = a.useState(!1),
                    {
                        fetchSubscriptionsSettings: N
                    } = (0, d.useFetchSubscriptionsSettings)();
                a.useEffect(() => {
                    _ && null != T && null == u.default.getSubscriptionSettings(T.id) && N(T.id)
                }, [_, T, N]);
                let g = null == s ? void 0 : function(e) {
                    let {
                        subscription: t
                    } = e, s = i()(t.currentPeriodEnd).format("M/D/YY"), a = null != t.price ? (0, o.formatPrice)(t.price, t.currency) : "", n = i()(t.createdAt).format("M/D/YY"), l = t.status === S.SubscriptionStatusTypes.CANCELED, r = t.status === S.SubscriptionStatusTypes.PAST_DUE, d = null != t.trialId;
                    return {
                        memberSince: n,
                        nextRenewalDate: s,
                        nextRenewalLabel: l ? E.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBERSHIP_ENDS : E.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_NEXT_RENEWAL,
                        subscriptionPrice: a,
                        isCancelled: l,
                        isPastDue: r,
                        isTrial: d
                    }
                }({
                    subscription: e
                });
                return {
                    guild: T,
                    expanded: _,
                    handleToggleExpanded: () => I(e => !e),
                    listing: s,
                    groupListing: n,
                    subscriptionInfo: g
                }
            }
        },
        892729: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("470079"),
                n = s("442837"),
                i = s("355467"),
                l = s("78839"),
                r = s("261744"),
                o = s("293810");
            let d = [];

            function u() {
                let {
                    ensureFresh: e = !1
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = (0, r.default)() === o.UserGuildRoleSubscriptionRelationship.SUBSCRIBED, s = (0, n.useStateFromStores)([l.default], () => l.default.getActiveGuildSubscriptions()), u = a.useRef(!1);
                return a.useEffect(() => {
                    (function(e) {
                        var t;
                        let {
                            ensureFresh: s,
                            hasFetched: a,
                            hasRoleSubscriptions: n
                        } = e, i = l.default.getActiveGuildSubscriptions();
                        return (null !== (t = null == i ? void 0 : i.length) && void 0 !== t ? t : 0) === 0 && !!n || !!s && !a || !a && !l.default.hasFetchedSubscriptions()
                    })({
                        ensureFresh: e,
                        hasRoleSubscriptions: t,
                        hasFetched: u.current
                    }) && (u.current = !0, i.fetchSubscriptions())
                }, [e, t]), null != s ? s : d
            }
        },
        261744: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            }), s("47120");
            var a = s("442837"),
                n = s("687476"),
                i = s("293810");

            function l() {
                return (0, a.useStateFromStores)([n.default], () => (function() {
                    let [e] = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [n.default], t = e.getGuildIdsWithPurchasableRoles(), s = !1;
                    return (t.forEach(t => {
                        e.getUserSubscriptionRoles(t).size > 0 && (s = !0)
                    }), s) ? i.UserGuildRoleSubscriptionRelationship.SUBSCRIBED : 0 === t.size ? i.UserGuildRoleSubscriptionRelationship.NONE : i.UserGuildRoleSubscriptionRelationship.IN_SUBSCRIPTION_SERVER
                })([n.default]))
            }
        },
        954821: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openModal: function() {
                    return m
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("913527"),
                l = s.n(i),
                r = s("481060"),
                o = s("355467"),
                d = s("100527"),
                u = s("906732"),
                c = s("153124"),
                S = s("73346"),
                E = s("584825"),
                T = s("305342"),
                _ = s("293810"),
                I = s("689938"),
                N = s("504110");
            let g = e => {
                    let [t, s] = n.useState(!1), [a, i] = n.useState(null);
                    return {
                        cancelSubscription: async t => {
                            try {
                                return s(!0), await o.cancelSubscription(t, e), !0
                            } catch (e) {
                                i(e)
                            } finally {
                                s(!1)
                            }
                        },
                        error: a,
                        submitting: t
                    }
                },
                f = e => {
                    var t;
                    let {
                        transitionState: s,
                        groupListing: n,
                        guildId: i,
                        listing: o,
                        subscription: f,
                        onClose: m
                    } = e, A = (0, c.useUID)(), C = (0, E.useSubscriptionsSettings)(i), O = (null == C ? void 0 : null === (t = C.cover_image_asset) || void 0 === t ? void 0 : t.application_id) != null ? (0, S.getAssetURL)(C.cover_image_asset.application_id, C.cover_image_asset, 440) : void 0, {
                        analyticsLocations: h
                    } = (0, u.default)(d.default.GUILD_ROLE_SUBSCRIPTION_CANCELLATION_MODAL), {
                        cancelSubscription: R,
                        error: p,
                        submitting: M
                    } = g(h), D = async () => {
                        await R(f.id) && m()
                    }, x = o.role_benefits.benefits.filter(e => e.ref_type === _.GuildRoleSubscriptionBenefitTypes.CHANNEL), L = o.role_benefits.benefits.filter(e => e.ref_type === _.GuildRoleSubscriptionBenefitTypes.INTANGIBLE), P = l()(f.currentPeriodEnd).format("MMMM Do, YYYY"), b = I.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_DESCRIPTION.format({
                        numChannels: x.length,
                        numAdditionalBenefits: L.length,
                        subscriptionEndDate: P
                    });
                    return (0, a.jsxs)(r.ModalRoot, {
                        transitionState: s,
                        className: N.__invalid_modal,
                        "aria-labelledby": A,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("img", {
                                src: O,
                                alt: "",
                                className: N.headerImage
                            }), (0, a.jsx)(r.ModalCloseButton, {
                                withCircleBackground: !0,
                                className: N.closeButton,
                                onClick: m
                            })]
                        }), null != p ? (0, a.jsx)(r.FormErrorBlock, {
                            children: p.message
                        }) : null, (0, a.jsxs)(r.ModalContent, {
                            className: N.content,
                            children: [(0, a.jsx)(r.Heading, {
                                id: A,
                                variant: "text-md/medium",
                                className: N.title,
                                children: I.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_TITLE
                            }), (0, a.jsx)(r.Text, {
                                className: N.description,
                                variant: "text-sm/normal",
                                children: b
                            }), (0, a.jsx)(T.GuildRoleSubscriptionBenefits, {
                                listingId: o.id,
                                guildId: n.guild_id,
                                className: N.benefits
                            })]
                        }), (0, a.jsxs)(r.ModalFooter, {
                            className: N.footer,
                            children: [(0, a.jsx)(r.Button, {
                                color: r.Button.Colors.RED,
                                onClick: D,
                                submitting: M,
                                children: I.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_CANCEL_CTA
                            }), (0, a.jsx)(r.Button, {
                                look: r.Button.Looks.LINK,
                                color: r.Button.Colors.WHITE,
                                className: N.goBackButton,
                                onClick: m,
                                children: I.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_NEVERMIND_CTA
                            })]
                        })]
                    })
                },
                m = e => {
                    (0, r.openModal)(t => (0, a.jsx)(f, {
                        ...t,
                        ...e
                    }))
                }
        },
        406174: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("78839"),
                u = s("981631"),
                c = s("689938"),
                S = s("431963"),
                E = s("822293"),
                T = s("834300");

            function _(e) {
                let {
                    onClickManageSubscription: t
                } = e, s = (0, r.useStateFromStores)([d.default], () => d.default.getSubscriptions()), i = n.useMemo(() => Object.values(null != s ? s : {}).filter(e => e.type === u.SubscriptionTypes.GUILD).filter(e => e.status !== u.SubscriptionStatusTypes.ENDED), [s]);
                return 0 === i.length ? null : (0, a.jsxs)("div", {
                    className: S.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: S.__invalid_sectionTitle,
                        children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                    }), (0, a.jsx)(o.Spacer, {
                        size: 4
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        className: S.sectionDescription,
                        children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_USER_SUBSCRIPTIONS_DESCRIPTION
                    }), (0, a.jsx)(o.Spacer, {
                        size: 24
                    }), (0, a.jsxs)("div", {
                        className: l()(E.guildBoostingSubscriptionRow, S.card),
                        children: [(0, a.jsx)("img", {
                            src: T,
                            alt: "",
                            className: S.handImage
                        }), (0, a.jsxs)("div", {
                            className: S.textContainer,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xl/semibold",
                                className: S.header,
                                children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: S.description,
                                children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format({
                                    numSubscriptions: i.length
                                })
                            })]
                        }), (0, a.jsx)(o.Button, {
                            color: o.Button.Colors.CUSTOM,
                            size: o.Button.Sizes.SMALL,
                            className: S.manageSubscriptionsButton,
                            onClick: t,
                            children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_BUTTON
                        })]
                    })]
                })
            }
        },
        949914: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("722770"),
                o = s("442837"),
                d = s("481060"),
                u = s("355467"),
                c = s("37234"),
                S = s("254854"),
                E = s("230711"),
                T = s("100527"),
                _ = s("906732"),
                I = s("377171"),
                N = s("674180"),
                g = s("374649"),
                f = s("908951"),
                m = s("703656"),
                A = s("853872"),
                C = s("346656"),
                O = s("755596"),
                h = s("153124"),
                R = s("86813"),
                p = s("41542"),
                M = s("245950"),
                D = s("404203"),
                x = s("330181"),
                L = s("954821"),
                P = s("980864"),
                b = s("981631"),
                v = s("176505"),
                U = s("526761"),
                j = s("689938"),
                G = s("113103");
            let F = e => {
                    let {
                        label: t,
                        value: s,
                        showInfoIcon: n,
                        infoIconTooltipText: i
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: G.infoCard,
                        children: [(0, a.jsxs)("div", {
                            className: G.infoCardLabelContainer,
                            children: [(0, a.jsx)(d.Heading, {
                                variant: "heading-deprecated-12/semibold",
                                className: G.infoCardLabel,
                                children: t
                            }), n && (0, a.jsx)(d.Tooltip, {
                                clickableOnMobile: !0,
                                text: i,
                                children: e => (0, a.jsx)(p.default, {
                                    ...e,
                                    className: G.infoCardIcon
                                })
                            })]
                        }), (0, a.jsx)(d.Heading, {
                            variant: "heading-xl/semibold",
                            className: G.infoCardValue,
                            children: s
                        })]
                    })
                },
                B = e => {
                    let {
                        subscription: t
                    } = e, {
                        analyticsLocations: s
                    } = (0, _.default)(), [n] = (0, g.useSubscriptionInvoicePreview)({
                        subscriptionId: t.id,
                        renewal: !0,
                        analyticsLocations: s,
                        analyticsLocation: T.default.GUILD_ROLE_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE
                    }), i = (0, o.useStateFromStores)([A.default], () => A.default.hasFetchedPaymentSources);
                    return null != n && i ? (0, a.jsx)(f.default, {
                        subscription: t,
                        currentInvoicePreview: n,
                        dropdownClassName: G.paymentSourceDropdown
                    }) : (0, a.jsx)(d.Spinner, {})
                },
                y = e => {
                    let {
                        isTrial: t,
                        isCancelled: s,
                        isResubscribing: n,
                        shouldHideRoleSubscriptionEntryPoints: i,
                        onCancelSubscriptionClick: l,
                        onResubscribeClick: r,
                        onChangePlanClick: o
                    } = e;
                    return s && (t || i) ? null : (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(d.FormTitle, {
                            children: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL
                        }), (0, a.jsx)("div", {
                            className: G.__invalid_rowButtons,
                            children: s ? (0, a.jsx)(d.Button, {
                                onClick: r,
                                submitting: n,
                                children: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART_SUBSCRIPTION
                            }) : (0, a.jsxs)(a.Fragment, {
                                children: [!t && !i && (0, a.jsx)(O.default, {
                                    label: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CHANGE_TIER,
                                    onClick: o
                                }), (0, a.jsx)(O.default, {
                                    label: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                                    onClick: l
                                })]
                            })
                        })]
                    })
                };
            t.default = e => {
                let {
                    subscription: t
                } = e, {
                    listing: s,
                    groupListing: i,
                    guild: o,
                    expanded: T,
                    handleToggleExpanded: g,
                    subscriptionInfo: f
                } = (0, M.default)(t), [A, O] = n.useState(!1), p = (0, h.useUID)(), {
                    analyticsLocations: V
                } = (0, _.default)(), {
                    shouldHideGuildPurchaseEntryPoints: H
                } = (0, N.useShouldHideGuildPurchaseEntryPoints)(null == o ? void 0 : o.id), Y = (null == t ? void 0 : t.paymentGateway) === b.PaymentGateways.APPLE_PARTNER;
                if (null == i || null == s || null == f) return null;
                let k = () => {
                        null != o && ((0, m.transitionTo)(b.Routes.CHANNEL(o.id, v.StaticChannelRoute.ROLE_SUBSCRIPTIONS)), (0, c.popLayer)(), S.default.show(b.NoticeTypes.BACK_TO_PREVIOUS_SCREEN, void 0, j.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_BACK_TO_SUBSCRIPTION_USER_SETTING_CTA, () => E.default.open(b.UserSettingsSections.SUBSCRIPTIONS, U.ROLE_SUBSCRIPTION_SUBSECTION)))
                    },
                    w = () => {
                        null != o && (0, L.openModal)({
                            guildId: o.id,
                            groupListing: i,
                            listing: s,
                            subscription: t
                        })
                    },
                    W = async () => {
                        try {
                            O(!0), await u.resubscribeToSubscription(t, V), (0, P.openModal)()
                        } finally {
                            O(!1)
                        }
                    }, {
                        isCancelled: K,
                        isPastDue: Q,
                        subscriptionPrice: z,
                        memberSince: X,
                        nextRenewalDate: q,
                        nextRenewalLabel: Z,
                        isTrial: J
                    } = f, $ = s.soft_deleted || null == o || Y, ee = () => {
                        if (K) return (0, a.jsx)(d.TextBadge, {
                            text: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_CANCELLED
                        });
                        if (J) return (0, a.jsx)(d.TextBadge, {
                            text: j.default.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TITLE,
                            color: r.default.BRAND_500
                        });
                        if (Q) return (0, a.jsx)(d.Tooltip, {
                            text: j.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                            children: e => (0, a.jsx)("div", {
                                ...e,
                                children: (0, a.jsx)(d.TextBadge, {
                                    className: G.paymentDueBadge,
                                    text: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAST_DUE,
                                    color: r.default.YELLOW_300
                                })
                            })
                        });
                        else return null
                    }, et = () => Y ? (0, a.jsx)(d.Tooltip, {
                        text: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM_TOOLTIP,
                        children: e => (0, a.jsx)("div", {
                            ...e,
                            children: (0, a.jsx)(d.TextBadge, {
                                text: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM,
                                color: I.default.INTERACTIVE_MUTED
                            })
                        })
                    }) : null;
                return (0, a.jsxs)("div", {
                    className: G.container,
                    children: [(0, a.jsx)(D.default, {
                        onClick: g,
                        className: G.headerContainer,
                        children: e => {
                            let {
                                areaRef: t,
                                handleStopPropagation: n
                            } = e;
                            return (0, a.jsxs)(a.Fragment, {
                                children: [null != o && (0, a.jsx)(C.default, {
                                    guild: o,
                                    active: !0,
                                    size: C.default.Sizes.MEDIUM
                                }), (0, a.jsxs)("div", {
                                    className: G.headerTextContainer,
                                    children: [(0, a.jsx)(d.Text, {
                                        variant: "text-md/medium",
                                        className: G.guildName,
                                        children: null != o ? o.name : j.default.Messages.GUILD_ROLE_SUBSCRIPTION_SERVER_NAME_UNAVAILABLE
                                    }), (0, a.jsxs)("div", {
                                        className: G.headerSubtitleContainer,
                                        children: [(0, a.jsx)(d.Text, {
                                            variant: "text-sm/normal",
                                            className: G.tierName,
                                            children: s.name
                                        }), ee(), et()]
                                    })]
                                }), (0, a.jsx)(d.Clickable, {
                                    onClick: n(g),
                                    "aria-label": j.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TOGGLE_SECTION_LABEL,
                                    "aria-controls": p,
                                    "aria-expanded": T,
                                    focusProps: {
                                        ringTarget: t
                                    },
                                    children: (0, a.jsx)(R.default, {
                                        className: l()(G.arrowIcon, {
                                            [G.arrowIconExpanded]: T
                                        })
                                    })
                                })]
                            })
                        }
                    }), T ? (0, a.jsxs)("div", {
                        id: p,
                        children: [(0, a.jsx)("div", {
                            className: G.divider
                        }), (0, a.jsx)(x.default, {
                            groupListingId: i.id,
                            subscription: t,
                            className: G.changePlanNotice
                        }), (0, a.jsxs)("div", {
                            className: G.subscriptionInfoCards,
                            children: [(0, a.jsx)(F, {
                                label: Z,
                                value: q
                            }), (0, a.jsx)(F, {
                                label: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_PRICE,
                                value: z,
                                showInfoIcon: J,
                                infoIconTooltipText: J ? j.default.Messages.GUILD_ROLE_SUBSCRIPTION_MANAGE_SUBSCRIPTION_PAGE_TRIAL_PRICE_INFO : void 0
                            }), (0, a.jsx)(F, {
                                label: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBER_SINCE,
                                value: X
                            })]
                        }), (0, a.jsx)(d.Spacer, {
                            size: 16
                        }), !K && !Y && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(d.FormTitle, {
                                children: j.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL
                            }), (0, a.jsx)(B, {
                                subscription: t
                            })]
                        }), !$ && (0, a.jsx)(y, {
                            isTrial: J,
                            isCancelled: K,
                            isResubscribing: A,
                            shouldHideRoleSubscriptionEntryPoints: H,
                            onCancelSubscriptionClick: w,
                            onChangePlanClick: k,
                            onResubscribeClick: W
                        })]
                    }) : null]
                })
            }
        },
        980864: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openModal: function() {
                    return l
                }
            });
            var a = s("416867"),
                n = s("549631"),
                i = s("689938");
            let l = () => {
                (0, a.openActionCompleteSuccessModal)({
                    title: i.default.Messages.GUILD_ROLE_SUBSCRIPTION_RESTARTED_TITLE,
                    body: i.default.Messages.GUILD_ROLE_SUBSCRIPTION_RESTARTED_DESCRIPTION,
                    Icon: n.default
                })
            }
        },
        810762: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("873546"),
                i = s("481060"),
                l = s("270237"),
                r = s("877453"),
                o = s("584825"),
                d = s("892729"),
                u = s("949914"),
                c = s("689938"),
                S = s("591537");
            t.default = e => {
                let {
                    onGoBack: t
                } = e, s = (0, d.default)(), {
                    loading: E
                } = (0, o.useFetchListingsForSubscriptions)(s);
                return ((0, l.default)(n.isMobile ? "role-subscriptions-user-setting" : void 0), E) ? (0, a.jsx)(i.Spinner, {}) : 0 === s.length ? null : (0, a.jsxs)("div", {
                    className: S.__invalid_container,
                    children: [(0, a.jsxs)(i.Button, {
                        look: i.Button.Looks.BLANK,
                        innerClassName: S.backButtonContents,
                        onClick: t,
                        children: [(0, a.jsx)(r.default, {
                            className: S.arrowIcon
                        }), c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_PAGE_BACK_BUTTON_CTA]
                    }), (0, a.jsx)(i.Spacer, {
                        size: 10
                    }), (0, a.jsx)(i.FormTitle, {
                        tag: "h1",
                        children: c.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/normal",
                        className: S.pageDescription,
                        children: c.default.Messages.GUILD_ROLE_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION
                    }), (0, a.jsx)("div", {
                        className: S.subscriptionsContainer,
                        children: s.map(e => (0, a.jsx)(u.default, {
                            subscription: e
                        }, e.id))
                    })]
                })
            }
        },
        346951: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("707558"),
                r = s("577720"),
                o = s("689938"),
                d = s("96181");
            let u = () => [{
                icon: d.perkNewsletter,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_NEWSLETTER,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_NEWSLETTER
            }, {
                icon: d.perkBadge,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_PROFILE_BADGE,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_PROFILE_BADGE
            }, {
                icon: d.perkChallenges,
                title: o.default.Messages.HYPESQUAD_PERK_TITLE_SQUAD_CHALLENGES,
                description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_SQUAD_CHALLENGES
            }];
            class c extends n.Component {
                render() {
                    return (0, a.jsxs)("div", {
                        className: d.features,
                        children: [(0, a.jsx)(r.default, {
                            className: d.video,
                            videoID: "SWzB1mx2o5k"
                        }), (0, a.jsx)(i.Heading, {
                            className: d.perksHeading,
                            variant: "heading-sm/semibold",
                            children: o.default.Messages.HYPESQUAD_PERKS_HEADING
                        }), (0, a.jsx)(l.default, {
                            features: u()
                        })]
                    })
                }
            }
            t.default = c
        },
        644744: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("285952"),
                d = s("490529"),
                u = s("981631"),
                c = s("689938"),
                S = s("46488");
            let E = {
                    [u.HypeSquadHouses.HOUSE_1]: S.membershipDialogHouse1,
                    [u.HypeSquadHouses.HOUSE_2]: S.membershipDialogHouse2,
                    [u.HypeSquadHouses.HOUSE_3]: S.membershipDialogHouse3
                },
                T = {
                    [u.HypeSquadHouses.HOUSE_1]: S.houseLogoHouse1,
                    [u.HypeSquadHouses.HOUSE_2]: S.__invalid_houseLogoHouse2,
                    [u.HypeSquadHouses.HOUSE_3]: S.__invalid_houseLogoHouse3
                },
                _ = {
                    [u.HypeSquadHouses.HOUSE_1]: s("246300"),
                    [u.HypeSquadHouses.HOUSE_2]: s("797148"),
                    [u.HypeSquadHouses.HOUSE_3]: s("374347")
                },
                I = e => ({
                    [u.HypeSquadHouses.HOUSE_1]: c.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_1,
                    [u.HypeSquadHouses.HOUSE_2]: c.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_2,
                    [u.HypeSquadHouses.HOUSE_3]: c.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_3
                })[e];
            class N extends n.Component {
                render() {
                    let {
                        houseMembership: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    if (!t || !s) return null;
                    if (null != e) {
                        let t = c.default.Messages.HYPESQUAD_MEMBERSHIP_HEADING.format({
                            houseName: (0, d.getHouseNameFromHouseID)(e)
                        });
                        return (0, a.jsx)("div", {
                            className: l()(S.membershipDialog, E[e]),
                            children: (0, a.jsxs)("div", {
                                className: S.membershipDialogContent,
                                children: [(0, a.jsxs)(o.default, {
                                    children: [(0, a.jsxs)(o.default.Child, {
                                        grow: 1,
                                        shrink: 1,
                                        children: [(0, a.jsx)(r.Text, {
                                            className: S.membershipDialogHeading,
                                            variant: "text-xs/bold",
                                            children: c.default.Messages.HYPESQUAD_YOUR_HOUSE
                                        }), (0, a.jsx)(r.Heading, {
                                            className: S.membershipDialogHouseName,
                                            variant: "heading-sm/semibold",
                                            children: t
                                        }), (0, a.jsx)(r.Text, {
                                            className: S.membershipDialogHouseDescription,
                                            variant: "text-md/normal",
                                            children: I(e)
                                        })]
                                    }), (0, a.jsx)(o.default.Child, {
                                        className: S.houseLogoWrapper,
                                        grow: 0,
                                        shrink: 0,
                                        wrap: !0,
                                        children: (0, a.jsx)("img", {
                                            className: l()(S.houseLogo, T[e]),
                                            src: _[e],
                                            alt: t
                                        })
                                    })]
                                }), (0, a.jsxs)(r.Text, {
                                    className: S.membershipDialogSwitchHouses,
                                    variant: "text-md/normal",
                                    children: [c.default.Messages.HYPESQUAD_SWITCH_HOUSES_PROMPT, (0, a.jsx)(r.Clickable, {
                                        className: S.membershipDialogSwitchHousesAction,
                                        onClick: this.handleJoinHypeSquadClick,
                                        tag: "span",
                                        children: c.default.Messages.HYPESQUAD_SWITCH_HOUSES_ACTION
                                    })]
                                })]
                            })
                        })
                    }
                    return (0, a.jsxs)("div", {
                        className: S.joinCTAWrapper,
                        children: [(0, a.jsxs)(o.default, {
                            className: S.joinCTA,
                            align: o.default.Align.CENTER,
                            justify: o.default.Justify.CENTER,
                            direction: o.default.Direction.HORIZONTAL,
                            children: [(0, a.jsx)(o.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(r.Text, {
                                    variant: "text-sm/normal",
                                    children: c.default.Messages.HYPESQUAD_READY_TO_REP
                                })
                            }), (0, a.jsx)(o.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(r.Button, {
                                    onClick: this.handleJoinHypeSquadClick,
                                    children: c.default.Messages.HYPESQUAD_JOIN
                                })
                            })]
                        }), (0, a.jsx)(r.Text, {
                            className: S.newsletterWarning,
                            variant: "text-sm/normal",
                            children: c.default.Messages.HYPESQUAD_NEWSLETTER_WARNING
                        })]
                    })
                }
                constructor(...e) {
                    var t, n, i;
                    super(...e), t = this, n = "handleJoinHypeSquadClick", i = () => {
                        (0, r.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([s.e("99387"), s.e("83264")]).then(s.bind(s, "711184"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    }, n in t ? Object.defineProperty(t, n, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = i
                }
            }
        },
        792423: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("401190"),
                r = s("689938"),
                o = s("331210");

            function d(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class u extends n.PureComponent {
                renderErrorMessage() {
                    let {
                        hasError: e
                    } = this.state;
                    return e ? (0, a.jsx)("div", {
                        className: o.error,
                        children: r.default.Messages.HYPESQUAD_LEAVE_ERROR
                    }) : null
                }
                render() {
                    let {
                        isRequestPending: e
                    } = this.state, {
                        isHypeSquadOnlineMember: t
                    } = this.props;
                    return t ? (0, a.jsxs)("div", {
                        className: o.leaveActionWrapper,
                        children: [this.renderErrorMessage(), (0, a.jsxs)(i.Text, {
                            variant: "text-sm/normal",
                            children: [r.default.Messages.HYPESQUAD_LEAVE_PROMPT, (0, a.jsx)(i.Button, {
                                className: o.leaveButton,
                                color: i.Button.Colors.LINK,
                                look: i.Button.Looks.LINK,
                                onClick: this.handleLeaveHypeSquadClick,
                                size: i.Button.Sizes.NONE,
                                submitting: e,
                                children: r.default.Messages.HYPESQUAD_LEAVE_ACTION
                            })]
                        })]
                    }) : null
                }
                constructor(...e) {
                    super(...e), d(this, "state", {
                        isRequestPending: !1,
                        hasError: !1
                    }), d(this, "handleLeaveHypeSquadError", () => {
                        this.setState({
                            hasError: !0
                        })
                    }), d(this, "handleLeaveHypeSquadClick", () => {
                        this.setState({
                            isRequestPending: !0
                        }, () => {
                            l.default.leaveHypeSquadOnline().then(() => {
                                this.setState({
                                    isRequestPending: !1
                                })
                            }).catch(() => {
                                this.setState({
                                    hasError: !0,
                                    isRequestPending: !1
                                })
                            })
                        })
                    })
                }
            }
        },
        248998: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("913527"),
                r = s.n(l),
                o = s("481060"),
                d = s("55935"),
                u = s("955204"),
                c = s("674680"),
                S = s("83118");

            function E(e) {
                let {
                    achievementId: t,
                    dateUnlocked: s
                } = e, n = (0, u.getPoggermodeAchievementData)(t);
                if (null == n) return null;
                let l = null != s,
                    {
                        name: E,
                        description: T,
                        hideDescriptionUntilUnlock: _,
                        onAction: I
                    } = n,
                    N = _ && !l,
                    g = l ? "header-primary" : "text-muted",
                    f = l ? "header-secondary" : "text-muted",
                    m = r()(s),
                    A = null != I && l,
                    C = A ? o.Clickable : "div";
                return (0, a.jsxs)(C, {
                    className: i()(S.container, A && S.actionable),
                    onClick: () => {
                        A && I()
                    },
                    children: [(0, a.jsx)("div", {
                        className: S.iconContainer,
                        children: (0, a.jsx)(c.default, {
                            achievementId: t,
                            size: c.default.Sizes.SIZE_40,
                            unlocked: l
                        })
                    }), (0, a.jsxs)("div", {
                        className: S.nameContainer,
                        children: [null != s && (0, a.jsx)(o.Text, {
                            variant: "text-xxs/semibold",
                            color: "text-muted",
                            className: S.unlocked,
                            children: (0, d.calendarFormat)(m)
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-md/medium",
                            color: g,
                            children: E()
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            color: f,
                            children: N ? "?????" : T()
                        })]
                    })]
                })
            }
        },
        231765: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return X
                }
            }), s("47120");
            var a, n, i, l, r = s("735250"),
                o = s("470079"),
                d = s("392711"),
                u = s("442837"),
                c = s("692547"),
                S = s("481060"),
                E = s("37234"),
                T = s("607070"),
                _ = s("206895"),
                I = s("692437"),
                N = s("783539"),
                g = s("585483"),
                f = s("557177"),
                m = s("57562"),
                A = s("955204"),
                C = s("64078"),
                O = s("351780"),
                h = s("954794"),
                R = s("112843"),
                p = s("524484"),
                M = s("981631"),
                D = s("689938"),
                x = s("855658");
            let L = {
                    enabled: !0,
                    combosEnabled: !0,
                    screenshakeEnabled: !1,
                    confettiEnabled: !1
                },
                P = (0, d.range)(0, 11),
                b = (0, d.range)(0, 2.25, .25),
                v = (0, d.range)(1, 11),
                U = (0, d.range)(1, 26);
            (i = a || (a = {}))[i.CONFETTI = 0] = "CONFETTI", i[i.SHAKE = 1] = "SHAKE", (l = n || (n = {}))[l.USER_SETTINGS = 0] = "USER_SETTINGS", l[l.ACHIEVEMENT_LIST = 1] = "ACHIEVEMENT_LIST";
            let j = () => [{
                    location: p.ConfettiLocation.CHAT_INPUT,
                    title: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED,
                    description: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION
                }, {
                    location: p.ConfettiLocation.REACTION,
                    title: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED,
                    description: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED_DESCRIPTION
                }, {
                    location: p.ConfettiLocation.MEMBER_USER,
                    title: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED,
                    description: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED_DESCRIPTION
                }, {
                    location: p.ConfettiLocation.CALL_TILE,
                    title: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED,
                    description: D.default.Messages.POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED_DESCRIPTION
                }],
                G = () => [{
                    location: p.ShakeLocation.CHAT_INPUT,
                    title: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED,
                    description: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION
                }, {
                    location: p.ShakeLocation.VOICE_USER,
                    title: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED,
                    description: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED_DESCRIPTION
                }, {
                    location: p.ShakeLocation.MENTION,
                    title: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED,
                    description: D.default.Messages.POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED_DESCRIPTION
                }];

            function F(e) {
                let {
                    disabled: t,
                    locations: s,
                    settingsLocations: a,
                    onChange: n
                } = e, i = s.map(e => (0, r.jsx)(S.FormSwitch, {
                    disabled: t,
                    value: a[e.location],
                    note: e.description,
                    onChange: t => n({
                        ...a,
                        [e.location]: t
                    }),
                    children: e.title
                }, e.location));
                return (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(S.FormTitle, {
                        children: D.default.Messages.POGGERMODE_LOCATIONS
                    }), i]
                })
            }

            function B(e) {
                let {
                    children: t
                } = e;
                return (0, r.jsx)(S.Text, {
                    className: x.sliderDescription,
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    children: t
                })
            }

            function y(e) {
                let {
                    settings: {
                        enabled: t,
                        warningSeen: s
                    },
                    updateSettings: a
                } = e, n = (0, u.useStateFromStores)([T.default], () => T.default.useReducedMotion);
                return (0, r.jsx)(S.FormSwitch, {
                    value: t,
                    note: D.default.Messages.POGGERMODE_ENABLE_DESCRIPTION,
                    onChange: e => {
                        !e && (0, m.unlockAchievement)(A.PoggermodeAchievementId.DISABLE_POGGERMODE), e && (!s || n) ? (0, S.openModal)(e => (0, r.jsx)(S.ConfirmModal, {
                            header: n ? D.default.Messages.POGGERMODE_WARNING_TITLE_REDUCED_MOTION : D.default.Messages.POGGERMODE_WARNING_TITLE,
                            confirmText: D.default.Messages.ENABLE,
                            cancelText: D.default.Messages.CANCEL,
                            onConfirm: () => a(n ? L : {
                                enabled: !0,
                                warningSeen: !0
                            }),
                            ...e,
                            children: (0, r.jsx)(S.Text, {
                                variant: "text-md/normal",
                                children: n ? D.default.Messages.POGGERMODE_WARNING_BODY_REDUCED_MOTION : D.default.Messages.POGGERMODE_WARNING_BODY
                            })
                        })) : a({
                            enabled: e
                        })
                    },
                    children: D.default.Messages.POGGERMODE_ENABLE
                })
            }

            function V(e) {
                let {
                    settings: {
                        enabled: t,
                        confettiEnabled: s,
                        confettiCount: a,
                        confettiSize: n,
                        confettiEnabledLocations: i
                    },
                    updateSettings: l
                } = e, o = !t || !s;
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: D.default.Messages.POGGERMODE_CONFETTI_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: s,
                        note: D.default.Messages.POGGERMODE_CONFETTI_ENABLED_DESCRIPTION,
                        onChange: e => l({
                            confettiEnabled: e
                        }, 0),
                        children: D.default.Messages.POGGERMODE_CONFETTI_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: D.default.Messages.POGGERMODE_CONFETTI_COUNT,
                        className: x.formItem,
                        children: [(0, r.jsx)(B, {
                            children: D.default.Messages.POGGERMODE_CONFETTI_COUNT_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: v,
                            stickToMarkers: !0,
                            minValue: v[0],
                            maxValue: v[v.length - 1],
                            initialValue: a,
                            onValueChange: e => l({
                                confettiCount: e
                            }, 0),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: D.default.Messages.POGGERMODE_CONFETTI_SIZE,
                        className: x.formItem,
                        children: [(0, r.jsx)(B, {
                            children: D.default.Messages.POGGERMODE_CONFETTI_SIZE_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: U,
                            stickToMarkers: !0,
                            minValue: U[0],
                            maxValue: U[U.length - 1],
                            initialValue: n,
                            onValueChange: e => l({
                                confettiSize: e
                            }, 0),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsx)(F, {
                        disabled: o,
                        locations: j(),
                        settingsLocations: i,
                        onChange: e => l({
                            confettiEnabledLocations: e
                        }, 0)
                    })]
                })
            }

            function H(e) {
                let {
                    settings: {
                        enabled: t,
                        combosEnabled: s,
                        comboSoundsEnabled: a,
                        combosRequiredCount: n
                    },
                    updateSettings: i
                } = e, l = !t || !s;
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: D.default.Messages.POGGERMODE_COMBOS_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: s,
                        note: D.default.Messages.POGGERMODE_COMBOS_ENABLED_DESCRIPTION,
                        onChange: e => i({
                            combosEnabled: e
                        }),
                        children: D.default.Messages.POGGERMODE_COMBOS_ENABLED
                    }), (0, r.jsx)(S.FormSwitch, {
                        disabled: !t,
                        value: a,
                        note: D.default.Messages.POGGERMODE_COMBO_SOUNDS_ENABLED_DESCRIPTION,
                        onChange: e => i({
                            comboSoundsEnabled: e
                        }),
                        children: D.default.Messages.POGGERMODE_COMBO_SOUNDS_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: l,
                        title: D.default.Messages.POGGERMODE_COMBOS_REQUIRED,
                        className: x.formItem,
                        children: [(0, r.jsx)(B, {
                            children: D.default.Messages.POGGERMODE_COMBOS_REQUIRED_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: l,
                            markers: P,
                            stickToMarkers: !0,
                            minValue: P[0],
                            maxValue: P[P.length - 1],
                            initialValue: n,
                            onValueChange: e => i({
                                combosRequiredCount: e
                            }),
                            onValueRender: e => "".concat(e)
                        })]
                    }), (0, r.jsx)(S.FormDivider, {
                        className: x.divider
                    })]
                })
            }

            function Y(e) {
                let {
                    settings: {
                        enabled: t,
                        screenshakeEnabled: s,
                        shakeIntensity: a,
                        screenshakeEnabledLocations: n
                    },
                    updateSettings: i
                } = e, l = (0, u.useStateFromStores)([T.default], () => T.default.useReducedMotion), o = !t || !s || l, d = (e, t) => {
                    null != e.shakeIntensity && e.shakeIntensity > a && (0, m.unlockAchievement)(A.PoggermodeAchievementId.MORE), i(e, t)
                };
                return (0, r.jsxs)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: D.default.Messages.POGGERMODE_SCREENSHAKE_CUSTOMIZATION,
                    children: [(0, r.jsx)(S.FormSwitch, {
                        disabled: !t || l,
                        tooltipNote: l ? D.default.Messages.POGGERMODE_SCREENSHAKE_DISABLED_REDUCED_MOTION : null,
                        value: s && !l,
                        note: D.default.Messages.POGGERMODE_SCREENSHAKE_ENABLED_DESCRIPTION,
                        onChange: e => i({
                            screenshakeEnabled: e
                        }, 1),
                        children: D.default.Messages.POGGERMODE_SCREENSHAKE_ENABLED
                    }), (0, r.jsxs)(S.FormItem, {
                        disabled: o,
                        title: D.default.Messages.POGGERMODE_SCREENSHAKE,
                        className: x.formItem,
                        children: [(0, r.jsx)(B, {
                            children: D.default.Messages.POGGERMODE_SCREENSHAKE_DESCRIPTION
                        }), (0, r.jsx)(S.Slider, {
                            disabled: o,
                            markers: b,
                            equidistant: !0,
                            stickToMarkers: !0,
                            minValue: b[0],
                            maxValue: b[b.length - 1],
                            initialValue: a,
                            onValueChange: e => d({
                                shakeIntensity: e
                            }, 1),
                            onMarkerRender: e => e === b[b.length - 1] ? D.default.Messages.POGGERMODE_SCREENSHAKE_MAX : "".concat(100 * e, "%")
                        })]
                    }), (0, r.jsx)(F, {
                        disabled: o,
                        locations: G(),
                        settingsLocations: n,
                        onChange: e => i({
                            screenshakeEnabledLocations: e
                        }, 1)
                    })]
                })
            }

            function k(e) {
                let {
                    updateSettings: t
                } = e;
                return (0, r.jsx)(S.FormSection, {
                    tag: S.FormTitleTags.H1,
                    title: D.default.Messages.POGGERMODE_SETTINGS_CUSTOMIZATION,
                    children: (0, r.jsxs)(S.FormItem, {
                        className: x.formItem,
                        children: [(0, r.jsx)(S.FormText, {
                            className: x.formItem,
                            children: D.default.Messages.POGGERMODE_HIDE_SETTINGS_DESCRIPTION
                        }), (0, r.jsx)(S.Button, {
                            className: x.hideButton,
                            size: S.Button.Sizes.SMALL,
                            onClick: () => {
                                t({
                                    enabled: !1,
                                    settingsVisible: !1
                                }), (0, E.popLayer)()
                            },
                            children: D.default.Messages.POGGERMODE_HIDE_SETTINGS
                        })]
                    })
                })
            }

            function w(e) {
                let {
                    onChangePage: t
                } = e;
                return (0, r.jsxs)(S.FormSection, {
                    children: [(0, r.jsxs)(S.Clickable, {
                        onClick: () => t(1),
                        className: x.achievementContainer,
                        children: [(0, r.jsx)("div", {
                            className: x.achievementIconContainer,
                            children: (0, r.jsx)(N.default, {
                                color: c.default.unsafe_rawColors.ORANGE_345.css
                            })
                        }), (0, r.jsxs)("div", {
                            className: x.achievementTextContainer,
                            children: [(0, r.jsx)(S.Heading, {
                                variant: "heading-md/semibold",
                                color: "header-primary",
                                children: D.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE
                            }), (0, r.jsx)(S.Text, {
                                variant: "text-md/normal",
                                color: "header-secondary",
                                children: D.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION
                            })]
                        }), (0, r.jsx)(I.default, {
                            width: 16,
                            className: x.rightCaretIcon
                        })]
                    }), (0, r.jsx)(S.FormDivider, {
                        className: x.divider
                    })]
                })
            }
            let W = () => s.e("20467").then(s.t.bind(s, "205663", 19)).then(e => {
                let {
                    default: t
                } = e;
                return t
            });

            function K(e) {
                let {
                    onChangePage: t,
                    setShowEnableAnimation: s
                } = e, a = (0, u.useStateFromStoresObject)([O.default], () => O.default.getState()), [n, i] = o.useState({
                    x: 0,
                    y: 0
                }), l = (0, R.default)();

                function d(e, t, s, a) {
                    return (null != t ? t : e) && (null != a ? a : s)
                }
                let c = e => {
                        if (e.enabled && !1 === a.enabled) {
                            var t;
                            s(!0), (0, f.playSound)("poggermode_enabled"), g.ComponentDispatch.dispatch(M.ComponentActions.SHAKE_APP, {
                                duration: 2e3,
                                intensity: null !== (t = e.shakeIntensity) && void 0 !== t ? t : a.shakeIntensity
                            })
                        }
                    },
                    E = (e, t) => {
                        if (c(e), (0, C.updatePoggermodeSettings)(e), null == t) return;
                        let s = d(a.confettiEnabled, e.confettiEnabled, a.enabled, e.enabled);
                        0 === t && s && l.fire(n.x, n.y, {
                            settings: e
                        });
                        let i = d(a.screenshakeEnabled, e.screenshakeEnabled, a.enabled, e.enabled);
                        if (1 === t && i) {
                            var r;
                            g.ComponentDispatch.dispatch(M.ComponentActions.SHAKE_APP, {
                                duration: 1e3,
                                intensity: null !== (r = e.shakeIntensity) && void 0 !== r ? r : a.shakeIntensity
                            })
                        }
                    },
                    T = e => {
                        i({
                            x: e.clientX,
                            y: e.clientY
                        })
                    };
                return o.useEffect(() => (window.addEventListener("mousemove", T), () => window.removeEventListener("mousemove", T)), []), (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(S.Heading, {
                        variant: "heading-lg/semibold",
                        className: x.title,
                        children: D.default.Messages.POGGERMODE
                    }), (0, r.jsx)(y, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(w, {
                        onChangePage: t
                    }), (0, r.jsx)(H, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(Y, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(V, {
                        settings: a,
                        updateSettings: E
                    }), (0, r.jsx)(k, {
                        updateSettings: E
                    })]
                })
            }
            let Q = (e, t, s) => {
                    let a = e => () => {
                        t(e)
                    };
                    switch (e) {
                        case 0:
                            return (0, r.jsx)(K, {
                                onChangePage: a(1),
                                setShowEnableAnimation: s
                            });
                        case 1:
                            return (0, r.jsx)(h.default, {
                                onBackClick: a(0)
                            });
                        default:
                            return null
                    }
                },
                z = e => 0 === e ? _.SlideDirection.LEFT : _.SlideDirection.RIGHT;

            function X() {
                let [e, t] = o.useState(0), [s, a] = o.useState(z(e)), [n, i] = o.useState(!1), l = (0, u.useStateFromStores)([T.default], () => T.default.useReducedMotion), d = n && !l;
                return o.useEffect(() => {
                    let t = setTimeout(() => {
                        a(z(e))
                    }, 500);
                    return () => clearTimeout(t)
                }, [e]), o.useEffect(() => {
                    Math.random() > .99 && (0, m.unlockAchievement)(A.PoggermodeAchievementId.VISITOR_100)
                }, []), (0, r.jsxs)(r.Fragment, {
                    children: [(0, r.jsx)(_.default, {
                        className: x.slideAnimator,
                        step: e,
                        direction: s,
                        children: Q(e, t, i)
                    }), (0, r.jsx)("div", {
                        className: d ? x.enableAnimationOverlayVisible : x.enableAnimationOverlayHidden,
                        children: (0, r.jsx)(S.LottieAnimation, {
                            className: x.enableAnimation,
                            importData: W,
                            shouldAnimate: d,
                            autoplay: !1,
                            resetOnPlay: !0,
                            loop: !1,
                            onComplete: () => i(!1)
                        })
                    })]
                })
            }
        },
        954794: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("692547"),
                r = s("481060"),
                o = s("996753"),
                d = s("783539"),
                u = s("823379"),
                c = s("882029"),
                S = s("955204"),
                E = s("248998"),
                T = s("689938"),
                _ = s("574923");

            function I(e) {
                let {
                    onBackClick: t
                } = e, s = (0, i.useStateFromStores)([c.default], () => c.default.getAllUnlockedAchievements()), I = n.useMemo(() => Object.values(s).sort((e, t) => t.dateUnlocked - e.dateUnlocked), [s]), N = n.useMemo(() => Object.values(S.ACHIEVEMENT_LIST).filter(u.isNotNullish).filter(e => null == s[e.id]).sort((e, t) => e.rarity - t.rarity), [s]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.FormSection, {
                        children: (0, a.jsxs)(r.Clickable, {
                            onClick: t,
                            className: _.backContainer,
                            children: [(0, a.jsx)(o.default, {
                                direction: o.default.Directions.LEFT,
                                className: _.icon
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-lg/normal",
                                color: "text-normal",
                                children: T.default.Messages.BACK
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: _.headerContainer,
                        children: [(0, a.jsxs)("div", {
                            className: _.headerTextContainer,
                            children: [(0, a.jsx)(r.Heading, {
                                variant: "heading-lg/extrabold",
                                color: "header-primary",
                                children: T.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-md/normal",
                                color: "header-secondary",
                                children: T.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION
                            })]
                        }), (0, a.jsx)("div", {
                            className: _.headerIcon,
                            children: (0, a.jsx)(d.default, {
                                color: l.default.unsafe_rawColors.ORANGE_345.css,
                                width: 40,
                                height: 40
                            })
                        })]
                    }), I.length > 0 && (0, a.jsx)(r.FormSection, {
                        className: _.divider,
                        children: (0, a.jsx)("div", {
                            className: _.achievementGrid,
                            children: I.map(e => {
                                let {
                                    achievementId: t,
                                    dateUnlocked: s
                                } = e;
                                return (0, a.jsx)(E.default, {
                                    achievementId: t,
                                    dateUnlocked: s
                                }, t)
                            })
                        })
                    }), N.length > 0 && (0, a.jsxs)(r.FormSection, {
                        className: _.divider,
                        children: [(0, a.jsx)("div", {
                            className: _.headerTextContainer,
                            children: (0, a.jsx)(r.Text, {
                                variant: "text-md/bold",
                                color: "header-secondary",
                                children: T.default.Messages.POGGERMODE_ACHIEVEMENT_LOCKED_TITLE
                            })
                        }), (0, a.jsx)("div", {
                            className: _.achievementGrid,
                            children: N.map(e => (0, a.jsx)(E.default, {
                                achievementId: e.id
                            }, e.id))
                        })]
                    }), (0, a.jsx)(r.FormSection, {
                        className: _.divider,
                        children: (0, a.jsx)("div", {
                            className: _.bottomPadding
                        })
                    })]
                })
            }
        },
        535664: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                updateClientCreatedAtOverride: function() {
                    return i
                },
                updateClientPremiumTypeOverride: function() {
                    return n
                }
            });
            var a = s("570140");
            let n = (e, t) => {
                    a.default.dispatch({
                        type: "SET_PREMIUM_TYPE_OVERRIDE",
                        premiumType: e
                    }), a.default.dispatch({
                        type: "UPDATE_CLIENT_PREMIUM_TYPE",
                        user: t
                    })
                },
                i = e => {
                    a.default.dispatch({
                        type: "SET_CREATED_AT_OVERRIDE",
                        createdAt: e
                    })
                }
        },
        223639: function(e, t, s) {
            "use strict";
            s.r(t);
            let a = (0, s("818083").createExperiment)({
                kind: "user",
                id: "2024-01_expanded_gift_entry_points_gift_inventory",
                label: "Expanded Gift Entry Points - Gift Inventory",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show Gift Entry Point in Gift Inventory",
                    config: {
                        enabled: !0
                    }
                }]
            });
            t.default = a
        },
        178100: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("470079"),
                n = s("913527"),
                i = s.n(n),
                l = s("55935");
            let r = i().duration(30, "days");

            function o(e, t) {
                return a.useMemo(() => (0, l.dateFormat)(t ? null != e.outboundRedemptionEndDate ? i()(e.outboundRedemptionEndDate) : i()(e.endDate).add(r) : i()(e.endDate), "LL"), [e, t])
            }
        },
        454982: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("484614"),
                r = s("430492"),
                o = s("153124"),
                d = s("518638"),
                u = s("689938"),
                c = s("972307");
            t.default = function(e) {
                let {
                    onClose: t,
                    onClaim: s,
                    code: S,
                    outboundPromotion: E,
                    transitionState: T
                } = e, [_, I] = n.useState(null), N = (0, o.useUID)();
                return n.useEffect(() => {
                    null == S && (0, d.claimOutboundPromotion)(E.id).then(e => s(e)).catch(e => {
                        var t;
                        return I(null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.code)
                    })
                }, [S, E.id, s]), (0, a.jsx)(i.ModalRoot, {
                    transitionState: T,
                    "aria-labelledby": N,
                    children: null != _ ? (0, a.jsx)(r.DropsModalClaimErrorBody, {
                        onClose: t,
                        errorCode: _
                    }) : null == S ? (0, a.jsx)(i.ModalContent, {
                        children: (0, a.jsx)(i.Spinner, {
                            className: c.loading
                        })
                    }) : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(i.ModalHeader, {
                            separator: !1,
                            className: c.headerContainer,
                            children: [(0, a.jsx)("div", {
                                className: c.art
                            }), (0, a.jsx)(i.Heading, {
                                variant: "heading-xl/semibold",
                                children: u.default.Messages.OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE
                            })]
                        }), (0, a.jsxs)(i.ModalContent, {
                            children: [(0, a.jsx)(i.Text, {
                                variant: "text-md/normal",
                                className: c.bodyText,
                                children: E.outboundRedemptionModalBody
                            }), (0, a.jsx)(i.FormDivider, {
                                className: c.formDivider
                            }), (0, a.jsxs)(i.FormSection, {
                                title: u.default.Messages.REDEMPTION_CODE,
                                className: c.formSection,
                                children: [(0, a.jsx)(l.default, {
                                    value: S,
                                    buttonColor: i.Button.Colors.BRAND,
                                    buttonLook: i.Button.Looks.FILLED,
                                    delay: 1e3,
                                    inputClassName: c.textInput
                                }), (0, a.jsx)(i.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    className: c.confirmationText,
                                    children: u.default.Messages.OUTBOUND_PROMOTION_CODE_CONFIRMATION_EMAIL
                                })]
                            })]
                        }), (0, a.jsxs)(i.ModalFooter, {
                            children: [(0, a.jsx)(i.Button, {
                                color: i.Button.Colors.BRAND,
                                onClick: () => {
                                    let e = (0, d.getOutboundPromotionRedemptionUrl)(S, E);
                                    window.open(e, "_blank")
                                },
                                children: u.default.Messages.REDEEM
                            }), (0, a.jsx)(i.Button, {
                                onClick: t,
                                look: i.Button.Looks.LINK,
                                color: c.maybeLaterButton,
                                children: u.default.Messages.MAYBE_LATER
                            })]
                        })]
                    })
                })
            }
        },
        218390: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("913527"),
                o = s.n(r),
                d = s("442837"),
                u = s("622535"),
                c = s("780384"),
                S = s("481060"),
                E = s("570140"),
                T = s("355467"),
                _ = s("37234"),
                I = s("821849"),
                N = s("230711"),
                g = s("497321"),
                f = s("634894"),
                m = s("410030"),
                A = s("100527"),
                C = s("906732"),
                O = s("211242"),
                h = s("15640"),
                R = s("89057"),
                p = s("703656"),
                M = s("246946"),
                D = s("78839"),
                x = s("586576"),
                L = s("483444"),
                P = s("626135"),
                b = s("74538"),
                v = s("140465"),
                U = s("646476"),
                j = s("424082"),
                G = s("730314"),
                F = s("91802"),
                B = s("898997"),
                y = s("197115"),
                V = s("823188"),
                H = s("504865"),
                Y = s("179984"),
                k = s("386733"),
                w = s("487980"),
                W = s("474936"),
                K = s("981631"),
                Q = s("689938"),
                z = s("995953"),
                X = s("881188"),
                q = s("520314"),
                Z = s("434691");

            function J() {
                var e, t, s;
                let n = (0, d.useStateFromStores)([D.default], () => D.default.getPremiumTypeSubscription()),
                    {
                        bucket: i
                    } = (0, G.usePremiumTierCardsExperiment)("PremiumMarketingHome"),
                    r = i > 0,
                    u = (0, v.useHasDiscountApplied)(),
                    E = (0, v.useActiveDiscountInfo)(),
                    {
                        annualDiscountPercentage: T
                    } = (0, j.getAnnualDiscountsExperimentConfig)("PremiumManagementSettings"),
                    I = (0, m.default)();
                if (null == n || null == n.planIdFromItems) return null;
                let g = null != n.trialId,
                    f = n.planIdFromItems === W.SubscriptionPlans.PREMIUM_YEAR_TIER_2,
                    A = u || g,
                    C = null != n.trialEndsAt ? o()(n.trialEndsAt).diff(o()(), "d") : 0,
                    O = W.SubscriptionPlanInfo[n.planIdFromItems],
                    h = b.default.formatPriceString(b.default.getDefaultPrice(O.id), O.interval);
                return (0, a.jsxs)("div", {
                    className: l()(z.tierCard, {
                        [z.withTier2Rim]: A
                    }),
                    children: [(0, a.jsxs)("div", {
                        className: l()({
                            [z.tierInfo]: !r,
                            [z.modifiedTierInfo]: r
                        }),
                        children: [(0, a.jsx)(L.default, {
                            className: l()({
                                [z.tierTitle]: !r,
                                [z.modifiedTier2Title]: r
                            })
                        }), r && (0, a.jsx)(S.Text, {
                            variant: "display-md",
                            color: "always-white",
                            className: z.modifiedSubHeader,
                            children: Q.default.Messages.PREMIUM_TIER_2_SUBHEADER
                        }), A ? (0, a.jsxs)(a.Fragment, {
                            children: [(g || !f) && (0, a.jsx)(V.PremiumPillWithSparkles, {
                                text: g ? Q.default.Messages.PREMIUM_TIER_CARD_TRIAL_ACTIVATED : Q.default.Messages.PREMIUM_TIER_CARD_DISCOUNT_APPLIED,
                                className: z.topRimPill,
                                colorOptions: (0, c.isThemeDark)(I) ? V.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_WHITE_FILL : V.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_OLD_GRADIENT_FILL
                            }), (g || !f) && (0, a.jsx)("div", {
                                className: z.rimGlowTier2
                            }), (0, a.jsx)(S.Heading, {
                                variant: "heading-md/normal",
                                color: "always-white",
                                className: z.trialHeader,
                                children: g ? Q.default.Messages.PREMIUM_TIER_CARD_TRIAL_HEADER_AFTER_REDEMPTION.format({
                                    remainingTime: C,
                                    price: h
                                }) : f ? Q.default.Messages.PREMIUM_TIER_CARD_ANNUAL_DISCOUNT_HEADER.format({
                                    percent: null !== (e = null == E ? void 0 : E.percentage) && void 0 !== e ? e : T,
                                    regularPrice: h
                                }) : Q.default.Messages.PREMIUM_TIER_CARD_DISCOUNT_HEADER_AFTER_REDEMPTION_GENERIC.format({
                                    percent: null !== (t = null == E ? void 0 : E.percentage) && void 0 !== t ? t : W.DISCOUNT_PERCENTAGE_FALLBACK,
                                    regularPrice: h,
                                    numMonths: null !== (s = null == E ? void 0 : E.duration) && void 0 !== s ? s : W.DISCOUNT_DURATION_FALLBACK
                                })
                            })]
                        }) : (0, a.jsx)(H.default, {
                            variant: r ? "heading-lg/normal" : void 0,
                            subscriptionTier: W.PremiumSubscriptionSKUs.TIER_2,
                            interval: O.interval,
                            shouldUseModifiedCopy: r
                        }), (0, a.jsx)(V.Tier2FeatureItems, {
                            featureSet: r ? V.Tier2FeatureSet.MODIFIED : void 0
                        }), (0, a.jsx)(S.Button, {
                            className: z.tierCardButton,
                            color: S.Button.Colors.WHITE,
                            onClick: () => {
                                P.default.track(K.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "to_premium_home_button",
                                    target: "premium home page"
                                }), (0, _.popLayer)(), (0, p.transitionTo)(K.Routes.APPLICATION_STORE)
                            },
                            children: (0, a.jsx)(S.Text, {
                                className: z.tierCardButtonCTA,
                                variant: "text-sm/medium",
                                children: Q.default.Messages.PREMIUM_SETTINGS_NAVIGATE_TO_HOME_CTA_V2
                            })
                        }), (0, a.jsx)(S.Button, {
                            className: z.managePlanButton,
                            look: S.Button.Looks.OUTLINED,
                            color: S.Button.Colors.WHITE,
                            onClick: () => {
                                P.default.track(K.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "to_subscriptions_button",
                                    target: "subscriptions settings"
                                }), N.default.open(K.UserSettingsSections.SUBSCRIPTIONS)
                            },
                            children: (0, a.jsx)(S.Text, {
                                className: z.__invalid_managePlanButtonCTA,
                                variant: "text-sm/medium",
                                color: "always-white",
                                children: Q.default.Messages.PREMIUM_SETTINGS_NATIGATE_TO_SUBSCRIPTIONS_CTA
                            })
                        })]
                    }), !r && (0, a.jsx)("div", {
                        className: z.tierImage,
                        children: (0, a.jsx)("img", {
                            className: z.tierImage,
                            alt: "",
                            src: X
                        })
                    })]
                })
            }

            function $() {
                let e = (0, U.useIsSeasonalGiftingActive)(),
                    {
                        enabled: t
                    } = U.SeasonalGiftingMarketingExperiment.useExperiment({
                        location: "GiftNitro"
                    }, {
                        autoTrackExposure: e
                    }),
                    s = t && e;
                return (0, a.jsxs)("div", {
                    className: l()(z.giftCard, {
                        [z.giftCardSeasonal]: s
                    }),
                    children: [s && (0, a.jsx)("img", {
                        className: z.seasonalGiftImage,
                        alt: "",
                        src: q
                    }), (0, a.jsx)("img", {
                        className: z.giftImage,
                        style: {
                            visibility: s ? "hidden" : "visible"
                        },
                        alt: "",
                        src: Z
                    }), (0, a.jsxs)("div", {
                        className: z.giftInfo,
                        children: [(0, a.jsx)(S.Heading, {
                            className: l()(z.giftTitle, {
                                [z.seasonalColor]: s
                            }),
                            variant: "heading-xl/extrabold",
                            children: s ? Q.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_HEADING : Q.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_HEADING
                        }), (0, a.jsx)(S.Text, {
                            className: l()(z.giftText, {
                                [z.seasonalColor]: s
                            }),
                            variant: "text-sm/normal",
                            children: s ? Q.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_BODY : Q.default.Messages.PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_BODY
                        }), (0, a.jsx)(y.default, {
                            isGift: !0,
                            className: l()(z.giftCardButton, s ? z.seasonalColor : z.giftCardButtonColor),
                            look: S.Button.Looks.OUTLINED,
                            buttonText: Q.default.Messages.GIFT_NITRO,
                            buttonTextClassName: z.giftButtonCTA,
                            color: S.Button.Colors.CUSTOM,
                            onClick: () => {
                                P.default.track(K.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED, {
                                    cta_type: "gifting_button",
                                    target: "payment modal"
                                })
                            }
                        })]
                    })]
                })
            }
            t.default = function() {
                let e = (0, O.useBlockedPaymentsConfig)(),
                    {
                        analyticsLocations: t
                    } = (0, C.default)(A.default.PREMIUM_SETTINGS),
                    s = (0, d.useStateFromStores)([D.default], () => D.default.getPremiumTypeSubscription()),
                    i = (0, d.useStateFromStores)([D.default], () => D.default.hasFetchedSubscriptions()),
                    l = (0, h.useSubscriptionPlansLoaded)(),
                    [r, o] = n.useState(!0),
                    c = (0, F.useLocalizedPromoQuery)(),
                    _ = null == c ? void 0 : c.countryCode,
                    N = (0, d.useStateFromStores)([M.default], () => M.default.enabled),
                    m = "PremiumManagementSettings";
                (0, f.useTriggerDebuggingAA)({
                    location: m + " auto on",
                    autoTrackExposure: !0
                }), (0, f.useTriggerDebuggingAA)({
                    location: m + " auto off",
                    autoTrackExposure: !1
                }), (0, B.useMaybeFetchReferralsRemaining)("PremiumManagementSettings");
                let p = (0, w.useIsEligibleSenderForReferralProgram)("PremiumManagementSettings");
                n.useEffect(() => {
                    E.default.wait(async () => {
                        !N && !e && await Promise.all([T.fetchSubscriptions(), T.fetchPaymentSources(), (0, I.fetchPremiumSubscriptionPlans)(_, null, K.RevenueSurfaces.DISCOVERY)]), o(!1)
                    })
                }, [_, N, e]);
                let [L, b] = n.useState(!1);
                if (N) return (0, a.jsx)(g.default, {});
                if (e) return (0, a.jsx)(R.BlockedPaymentsContentSettings, {});
                if ((!i || null == s || !l) && !r) return (0, a.jsx)(x.default, {
                    title: Q.default.Messages.REDIRECTED_CALLBACK_ERROR,
                    note: null
                });
                if (!i || null == s || !l || r) return (0, a.jsx)(S.Spinner, {});
                let v = null != s.trialId;
                return (0, a.jsx)(C.AnalyticsLocationProvider, {
                    value: t,
                    children: (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)("div", {
                            className: z.__invalid_container,
                            children: [(0, a.jsx)(J, {}), p && (0, a.jsx)(k.default, {
                                isInSettings: !0
                            }), (0, a.jsx)($, {}), (0, a.jsx)(Y.default, {
                                className: z.__invalid_planComparisonTable,
                                hideCTAs: !0,
                                headingOverride: Q.default.Messages.PREMIUM_COMPARISON_TABLE_WHAT_YOU_HAVE_GOT_TITLE,
                                hidePill: !v,
                                selectedPlanColumnClassName: z.tier2PlanComparisonTableBackground,
                                selectedPlanTier: W.PremiumTypes.TIER_2
                            })]
                        }), (0, a.jsx)(u.VisibilitySensor, {
                            onChange: e => {
                                e && !L && (P.default.track(K.AnalyticEvents.PREMIUM_MARKETING_SURFACE_REACHED_BOTTOM, {
                                    location_stack: t
                                }), b(!0))
                            },
                            children: (0, a.jsx)("div", {
                                className: z.bottomOfPageVisibilitySensor
                            })
                        })]
                    })
                })
            }
        },
        639056: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("392711"),
                r = s.n(l),
                o = s("442837"),
                d = s("481060"),
                u = s("594174"),
                c = s("509545"),
                S = s("78839"),
                E = s("466111"),
                T = s("74538"),
                _ = s("393411"),
                I = s("474936"),
                N = s("689938"),
                g = s("697466");

            function f(e) {
                let {
                    user: t,
                    planId: s,
                    count: n,
                    userPremiumSubscription: l
                } = e, [r, u] = (0, o.useStateFromStoresArray)([c.default], () => [c.default.get(s), null != l ? c.default.get(l.planId) : null]);
                if (null == r || T.default.getInterval(s).intervalType !== I.SubscriptionIntervalTypes.MONTH) return null;
                let S = null != u ? u.skuId : null,
                    _ = r.skuId === S,
                    f = T.default.getDisplayName(s);
                return (0, a.jsxs)("div", {
                    className: g.accountCreditRow,
                    children: [(0, a.jsx)("div", {
                        className: i()({
                            [g.iconBackgroundTier0]: r.skuId === I.PremiumSubscriptionSKUs.TIER_0,
                            [g.iconBackgroundTier1]: r.skuId === I.PremiumSubscriptionSKUs.TIER_1,
                            [g.iconBackgroundTier2]: r.skuId === I.PremiumSubscriptionSKUs.TIER_2
                        }),
                        children: (0, a.jsx)(E.default, {
                            className: g.icon
                        })
                    }), (0, a.jsxs)("div", {
                        className: g.rowDetails,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-md/semibold",
                            children: N.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT.format({
                                planName: f
                            })
                        }), t.hasFreePremium() || null != l && l.isPurchasedExternally ? null : (0, a.jsx)(d.Heading, {
                            className: g.rowApplied,
                            variant: "heading-sm/semibold",
                            color: "header-secondary",
                            children: _ && null != l ? N.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_ON.format({
                                date: l.currentPeriodEnd
                            }) : N.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_MISMATCHED_PLAN.format({
                                planName: f
                            })
                        })]
                    }), (0, a.jsx)(d.Text, {
                        className: g.rowCreditCount,
                        variant: "text-md/semibold",
                        children: N.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_COUNT_MONTHS.format({
                            count: n
                        })
                    })]
                })
            }
            t.default = function(e) {
                let {
                    className: t,
                    entitlements: s
                } = e, n = r()(Array.from(s)).filter(e => {
                    let {
                        subscriptionPlanId: t,
                        parentId: s,
                        consumed: a
                    } = e;
                    return null != t && null != s && !a
                }).groupBy(e => e.subscriptionPlanId).value(), l = (0, o.useStateFromStores)([S.default], () => S.default.getPremiumSubscription()), c = (0, o.useStateFromStores)([S.default], () => null == S.default.getPremiumTypeSubscription()), E = Object.keys(n).some(e => e === I.SubscriptionPlans.PREMIUM_MONTH_TIER_1), T = (0, o.useStateFromStores)([u.default], () => u.default.getCurrentUser());
                return null == T ? null : (0, a.jsxs)("div", {
                    children: [(0, a.jsx)("div", {
                        className: i()(t, g.premiumSubscriptionAccountCredit),
                        children: Object.keys(n).map(e => (0, a.jsx)(f, {
                            planId: e,
                            count: n[e].length,
                            userPremiumSubscription: l,
                            user: T
                        }, e))
                    }), E && c && (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(d.Text, {
                            className: g.tier1AccountCreditHeader,
                            variant: "text-md/normal",
                            children: N.default.Messages.PREMIUM_TIER_1_ACCOUNT_CREDIT_HEADER
                        }), (0, a.jsx)(_.Tier1AccountCreditBanner, {})]
                    })]
                })
            }
        },
        52164: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("512722"),
                i = s.n(n),
                l = s("481060"),
                r = s("100527"),
                o = s("906732"),
                d = s("509545"),
                u = s("74538"),
                c = s("937615"),
                S = s("374649"),
                E = s("474936"),
                T = s("981631"),
                _ = s("689938"),
                I = s("904014");

            function N(e) {
                let {
                    subscription: t,
                    withOverheadSeparator: s
                } = e, {
                    analyticsLocations: n
                } = (0, o.default)(), [N] = (0, S.useSubscriptionInvoicePreview)({
                    subscriptionId: t.id,
                    renewal: !0,
                    analyticsLocations: n,
                    analyticsLocation: r.default.PREMIUM_SUBSCRIPTION_FINE_PRINT_CONTENT
                });
                if (null == N) return null;
                let g = s ? I.finePrintWithOverheadSeparator : I.finePrint,
                    f = N.invoiceItems.find(e => {
                        let {
                            subscriptionPlanId: t
                        } = e;
                        return (0, u.isPremiumBaseSubscriptionPlan)(t)
                    });
                if (null == f) return null;
                let m = f.subscriptionPlanId,
                    A = d.default.get(m);
                i()(null != A, "Missing plan");
                let C = (0, c.formatPrice)(N.total, N.currency),
                    O = "";
                return A.interval === E.SubscriptionIntervalTypes.YEAR ? O = _.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_YEARLY.format({
                    price: C,
                    termsUrl: T.MarketingURLs.TERMS,
                    paidURL: T.MarketingURLs.PAID_TERMS,
                    privacyUrl: T.MarketingURLs.PRIVACY
                }) : A.interval === E.SubscriptionIntervalTypes.MONTH && (O = 1 === A.intervalCount ? _.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MONTHLY.format({
                    price: C,
                    termsUrl: T.MarketingURLs.TERMS,
                    paidURL: T.MarketingURLs.PAID_TERMS,
                    privacyUrl: T.MarketingURLs.PRIVACY
                }) : _.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MULTI_MONTH.format({
                    price: C,
                    termsUrl: T.MarketingURLs.TERMS,
                    paidURL: T.MarketingURLs.PAID_TERMS,
                    privacyUrl: T.MarketingURLs.PRIVACY,
                    intervalCount: A.intervalCount
                })), (0, a.jsx)(l.Text, {
                    color: "text-muted",
                    className: g,
                    variant: "text-xs/normal",
                    children: O
                })
            }

            function g(e) {
                let {
                    subscription: t,
                    withOverheadSeparator: s
                } = e;
                return t.status === T.SubscriptionStatusTypes.CANCELED || t.isPurchasedExternally ? null : (0, a.jsx)(N, {
                    subscription: t,
                    withOverheadSeparator: s
                })
            }
        },
        813732: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("355467"),
                c = s("179360"),
                S = s("496929"),
                E = s("821849"),
                T = s("230711"),
                _ = s("497321"),
                I = s("167354"),
                N = s("15640"),
                g = s("406174"),
                f = s("810762"),
                m = s("681833"),
                A = s("856888"),
                C = s("921801"),
                O = s("246946"),
                h = s("663389"),
                R = s("351402"),
                p = s("853872"),
                M = s("78839"),
                D = s("580130"),
                x = s("285952"),
                L = s("366695"),
                P = s("626135"),
                b = s("74538"),
                v = s("639056"),
                U = s("52164"),
                j = s("91430"),
                G = s("474936"),
                F = s("981631"),
                B = s("526761"),
                y = s("726985"),
                V = s("689938"),
                H = s("431008");

            function Y() {
                return (0, a.jsx)(o.Card, {
                    className: H.noItemsCard,
                    type: o.Card.Types.CUSTOM,
                    children: (0, a.jsxs)(x.default, {
                        align: x.default.Align.CENTER,
                        children: [(0, a.jsx)(L.default, {
                            game: null,
                            size: L.default.Sizes.SMALL,
                            className: H.noItemsIcon
                        }), (0, a.jsx)("span", {
                            className: H.cardText,
                            children: V.default.Messages.USER_SETTINGS_NO_SUBSCRIPTION_CREDIT
                        })]
                    })
                })
            }

            function k() {
                let e = (0, r.useStateFromStores)([D.default], () => D.default.getForApplication(G.PREMIUM_SUBSCRIPTION_APPLICATION));
                return n.useEffect(() => {
                    (0, S.fetchUserEntitlementsForApplication)(G.PREMIUM_SUBSCRIPTION_APPLICATION)
                }, []), (0, a.jsxs)("section", {
                    className: H.sectionAccountCredit,
                    children: [(0, a.jsx)(o.FormTitle, {
                        className: H.accountCreditTitle,
                        tag: o.FormTitleTags.H1,
                        children: V.default.Messages.BILLING_SUBSCRIPTION_CREDIT
                    }), (0, a.jsx)("p", {
                        className: H.accountCreditDescription,
                        children: V.default.Messages.BILLING_ACCOUNT_CREDIT_DESCRIPTION
                    }), null != e && b.default.hasAccountCredit(e) ? (0, a.jsx)(v.default, {
                        className: H.accountCredit,
                        entitlements: e
                    }) : (0, a.jsx)(Y, {})]
                })
            }
            t.default = function() {
                let e = (0, r.useStateFromStores)([M.default], () => M.default.getPremiumTypeSubscription()),
                    t = (0, I.default)({
                        subscriptionFilter: e => j.VIEWABLE_SUBSCRIPTION_STATUSES.has(e.status)
                    }),
                    s = t.length > 1,
                    i = (0, r.useStateFromStores)([p.default], () => null != e && null != e.paymentSourceId ? p.default.getPaymentSource(e.paymentSourceId) : null, [e]),
                    S = (0, r.useStateFromStores)([M.default], () => M.default.hasFetchedSubscriptions()),
                    D = (0, r.useStateFromStores)([R.default], () => R.default.isBusy),
                    x = (0, N.useSubscriptionPlansLoaded)(),
                    L = (0, r.useStateFromStores)([h.default], () => h.default.getSubsection());
                return (n.useEffect(() => (d.default.wait(() => {
                    (0, E.fetchPremiumSubscriptionPlans)(), u.fetchSubscriptions(), (0, c.fetchGuildBoostSlots)(), u.fetchPaymentSources()
                }), function() {
                    T.default.clearSubsection()
                }), []), O.default.enabled) ? (0, a.jsx)(_.default, {}) : S && x ? L === B.ROLE_SUBSCRIPTION_SUBSECTION ? (0, a.jsx)(f.default, {
                    onGoBack: () => T.default.clearSubsection()
                }) : L === B.APPLICATION_SUBSCRIPTION_SUBSECTION ? (0, a.jsx)(A.default, {
                    onGoBack: () => T.default.clearSubsection()
                }) : (0, a.jsx)("div", {
                    className: H.container,
                    children: (0, a.jsxs)("div", {
                        className: H.content,
                        children: [s ? (0, a.jsx)(j.DuplicateSubscriptionsBanner, {}) : null, null != e ? (0, a.jsx)(j.default, {
                            className: H.subscriptionDetails,
                            subscription: e,
                            paymentSource: i,
                            busy: D,
                            subscriptions: t
                        }) : (0, a.jsx)(j.SubscriptionDetailsEmpty, {
                            className: H.subscriptionDetails
                        }), (0, a.jsx)(g.default, {
                            onClickManageSubscription: () => T.default.setSection(F.UserSettingsSections.SUBSCRIPTIONS, B.ROLE_SUBSCRIPTION_SUBSECTION)
                        }), (0, a.jsx)(m.default, {
                            onClickManageSubscription: () => {
                                T.default.setSection(F.UserSettingsSections.SUBSCRIPTIONS, B.APPLICATION_SUBSCRIPTION_SUBSECTION), P.default.track(F.AnalyticEvents.PREMIUM_APPLICATION_SUBSCRIPTION_MANAGE_CTA_CLICKED)
                            }
                        }), (0, a.jsx)(C.Subsetting, {
                            setting: y.WebSetting.SUBSCRIPTIONS_CREDITS,
                            children: (0, a.jsx)(k, {})
                        }), null != e ? (0, a.jsx)(U.default, {
                            subscription: e,
                            withOverheadSeparator: !1
                        }) : null]
                    })
                }) : (0, a.jsx)("div", {
                    className: l()(H.container, H.loading),
                    children: (0, a.jsx)(o.Spinner, {})
                })
            }
        },
        681833: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("987997"),
                u = s("78839"),
                c = s("981631"),
                S = s("689938"),
                E = s("535273"),
                T = s("822293"),
                _ = s("845904");

            function I(e) {
                let {
                    onClickManageSubscription: t
                } = e, s = (0, r.useStateFromStores)([u.default], () => u.default.getSubscriptions()), i = n.useMemo(() => Object.values(null != s ? s : {}).filter(e => e.type === c.SubscriptionTypes.APPLICATION && e.status !== c.SubscriptionStatusTypes.ENDED), [s]);
                return 0 === i.length ? null : (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: E.__invalid_sectionTitle,
                        children: S.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_TITLE
                    }), (0, a.jsx)(o.Spacer, {
                        size: 4
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        className: E.sectionDescription,
                        children: S.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_DESCRIPTION
                    }), (0, a.jsx)(o.Spacer, {
                        size: 24
                    }), (0, a.jsxs)("div", {
                        className: l()(T.guildBoostingSubscriptionRow, E.card),
                        children: [(0, a.jsx)("img", {
                            src: _,
                            alt: "",
                            className: E.bannerImage
                        }), (0, a.jsxs)("div", {
                            className: E.textContainer,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xl/semibold",
                                className: E.header,
                                children: S.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/normal",
                                className: E.description,
                                children: S.default.Messages.APPLICATION_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format({
                                    numSubscriptions: i.length
                                })
                            })]
                        }), (0, a.jsx)(d.default, {
                            color: o.Button.Colors.BRAND,
                            onClick: t,
                            children: S.default.Messages.APPLICATION_MANAGE_SUBSCRIPTIONS_BUTTON
                        })]
                    })]
                })
            }
        },
        238847: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("512722"),
                o = s.n(r),
                d = s("722770"),
                u = s("442837"),
                c = s("481060"),
                S = s("355467"),
                E = s("100527"),
                T = s("906732"),
                _ = s("218946"),
                I = s("404203"),
                N = s("330181"),
                g = s("374649"),
                f = s("908951"),
                m = s("255078"),
                A = s("853872"),
                C = s("346656"),
                O = s("474333"),
                h = s("755596"),
                R = s("153124"),
                p = s("86813"),
                M = s("41542"),
                D = s("171246"),
                x = s("41959"),
                L = s("650919"),
                P = s("981631"),
                b = s("689938"),
                v = s("285136");
            let U = e => {
                    let {
                        label: t,
                        value: s,
                        showInfoIcon: n,
                        infoIconTooltipText: i
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: v.infoCard,
                        children: [(0, a.jsxs)("div", {
                            className: v.infoCardLabelContainer,
                            children: [(0, a.jsx)(c.Heading, {
                                variant: "heading-deprecated-12/semibold",
                                className: v.infoCardLabel,
                                children: t
                            }), n && (0, a.jsx)(c.Tooltip, {
                                text: i,
                                children: e => (0, a.jsx)(M.default, {
                                    ...e,
                                    className: v.infoCardIcon
                                })
                            })]
                        }), (0, a.jsx)(c.Heading, {
                            variant: "heading-xl/semibold",
                            className: v.infoCardValue,
                            children: s
                        })]
                    })
                },
                j = e => {
                    let {
                        subscription: t,
                        disabled: s
                    } = e, {
                        analyticsLocations: n
                    } = (0, T.default)(), [i] = (0, g.useSubscriptionInvoicePreview)({
                        subscriptionId: t.id,
                        renewal: !0,
                        analyticsLocations: n,
                        analyticsLocation: E.default.APP_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE
                    });
                    return (0, u.useStateFromStores)([A.default], () => A.default.hasFetchedPaymentSources) ? null == i ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(c.FormTitle, {
                            children: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL
                        }), (0, a.jsx)(f.default, {
                            subscription: t,
                            currentInvoicePreview: i,
                            dropdownClassName: v.paymentSourceDropdown,
                            disabled: s
                        })]
                    }) : (0, a.jsx)(c.Spinner, {})
                },
                G = e => {
                    let {
                        isCancelled: t,
                        onCancelSubscriptionClick: s,
                        isResubscribing: n,
                        onResubscribeClick: i
                    } = e;
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(c.FormTitle, {
                            children: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL
                        }), (0, a.jsx)("div", {
                            className: v.__invalid_rowButtons,
                            children: t ? (0, a.jsx)(c.Button, {
                                onClick: i,
                                submitting: n,
                                children: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART
                            }) : (0, a.jsx)(h.default, {
                                label: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                                onClick: s
                            })
                        })]
                    })
                };
            t.default = e => {
                let {
                    subscription: t
                } = e, {
                    listing: i,
                    groupListing: r,
                    guild: u,
                    expanded: E,
                    handleToggleExpanded: g,
                    subscriptionInfo: f,
                    application: A
                } = (0, L.default)(t), h = (0, R.useUID)(), [M, F] = n.useState(!1), {
                    analyticsLocations: B
                } = (0, T.default)();
                if (null == r || null == i || null == f) return null;
                let y = () => {
                        o()(null != A, "Application cannot be null"), (0, c.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([s.e("99387"), s.e("6284")]).then(s.bind(s, "257514"));
                            return s => (0, a.jsx)(e, {
                                application: A,
                                listing: i,
                                subscription: t,
                                guild: u,
                                ...s
                            })
                        })
                    },
                    V = async () => {
                        try {
                            F(!0);
                            let {
                                subscription: e
                            } = await S.resubscribeToSubscription(t, B);
                            null != e && (0, c.openModalLazy)(async () => {
                                let {
                                    default: t
                                } = await Promise.all([s.e("99387"), s.e("18879")]).then(s.bind(s, "535278"));
                                return s => (0, a.jsx)(t, {
                                    listing: i,
                                    subscription: m.default.createFromServer(e),
                                    ...s
                                })
                            })
                        } finally {
                            F(!1)
                        }
                    }, {
                        isCancelled: H,
                        isDeleted: Y,
                        isPastDue: k,
                        subscriptionPlanPrice: w,
                        subscribedSinceDate: W,
                        currentPeriodEndDate: K,
                        currentPeriodEndLabel: Q
                    } = f, z = (0, D.isApplicationUserSubscription)(i.sku_flags), X = (0, D.isApplicationGuildSubscription)(i.sku_flags), q = i.soft_deleted || null == A || (!X || null == u) && !z, Z = () => H || Y ? (0, a.jsx)(c.TextBadge, {
                        text: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CANCELED
                    }) : k ? (0, a.jsx)(c.Tooltip, {
                        text: b.default.Messages.APPLICATION_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                        children: e => (0, a.jsx)("div", {
                            ...e,
                            children: (0, a.jsx)(c.TextBadge, {
                                className: v.paymentDueBadge,
                                text: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAST_DUE,
                                color: d.default.YELLOW_300
                            })
                        })
                    }) : null, J = null;
                if (X) {
                    var $;
                    J = (0, a.jsxs)(c.Text, {
                        variant: "text-sm/normal",
                        className: v.tierName,
                        children: [b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_IN_GUILD.format({
                            guildName: null !== ($ = null == u ? void 0 : u.name) && void 0 !== $ ? $ : b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_GUILD_NAME_UNAVAILABLE
                        }), null != u && (0, a.jsx)(C.default, {
                            guild: u,
                            size: C.default.Sizes.MINI,
                            className: v.guildIcon
                        })]
                    })
                } else z && (J = (0, a.jsx)(c.Text, {
                    variant: "text-sm/normal",
                    className: v.tierName,
                    children: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_PERSONAL_SUBSCRIPTION
                }));
                return (0, a.jsxs)("div", {
                    className: v.container,
                    children: [(0, a.jsx)(I.default, {
                        onClick: g,
                        className: v.headerContainer,
                        children: e => {
                            let {
                                areaRef: t,
                                handleStopPropagation: s
                            } = e;
                            return (0, a.jsxs)(a.Fragment, {
                                children: [null != A && (0, a.jsx)(x.default, {
                                    size: x.ApplicationIconSize.SMALL,
                                    className: v.applicationIcon,
                                    application: A,
                                    asset: null != i.image_asset ? (0, _.transformStoreAssetFromServer)(i.image_asset) : null
                                }), (0, a.jsxs)("div", {
                                    className: v.headerTextContainer,
                                    children: [(0, a.jsx)(c.Text, {
                                        variant: "text-md/medium",
                                        className: v.applicationName,
                                        children: null != A ? A.name : b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_APPLICATION_NAME_UNAVAILABLE
                                    }), (0, a.jsxs)("div", {
                                        className: v.headerSubtitleContainer,
                                        children: [J, Z()]
                                    })]
                                }), (0, a.jsx)(c.Clickable, {
                                    onClick: s(g),
                                    "aria-label": b.default.Messages.APPLICATION_SUBSCRIPTION_TOGGLE_SECTION_LABEL,
                                    "aria-controls": h,
                                    "aria-expanded": E,
                                    focusProps: {
                                        ringTarget: t
                                    },
                                    children: (0, a.jsx)(p.default, {
                                        className: l()(v.arrowIcon, {
                                            [v.arrowIconExpanded]: E
                                        })
                                    })
                                })]
                            })
                        }
                    }), E ? (0, a.jsxs)("div", {
                        id: h,
                        children: [(0, a.jsx)("div", {
                            className: v.divider
                        }), Y ? (0, a.jsx)(O.default, {
                            messageType: O.HelpMessageTypes.WARNING,
                            className: v.deletedHelpMessage,
                            children: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_DELETED_WARNING
                        }) : null, (0, a.jsx)(N.default, {
                            groupListingId: r.id,
                            subscription: t,
                            className: v.changePlanNotice
                        }), (0, a.jsxs)("div", {
                            className: v.subscriptionInfoCards,
                            children: [(0, a.jsx)(U, {
                                label: Q,
                                value: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_CURRENT_PERIOD_END_DATE.format({
                                    timestamp: K.getTime()
                                })
                            }), (0, a.jsx)(U, {
                                label: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_PRICE,
                                value: w
                            }), (0, a.jsx)(U, {
                                label: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE,
                                value: b.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE_DATE.format({
                                    timestamp: W.getTime()
                                })
                            })]
                        }), (0, a.jsx)(c.Spacer, {
                            size: 16
                        }), t.status === P.SubscriptionStatusTypes.ACTIVE && (0, a.jsx)(j, {
                            subscription: t,
                            disabled: Y
                        }), !q && (0, a.jsx)(G, {
                            isCancelled: H,
                            onCancelSubscriptionClick: y,
                            isResubscribing: M,
                            onResubscribeClick: V
                        })]
                    }) : null]
                })
            }
        },
        856888: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("78839"),
                r = s("877453"),
                o = s("270144"),
                d = s("238847"),
                u = s("689938"),
                c = s("598497");
            t.default = e => {
                let {
                    onGoBack: t
                } = e, s = (0, n.useStateFromStores)([l.default], () => {
                    var e;
                    return null !== (e = l.default.getActiveApplicationSubscriptions()) && void 0 !== e ? e : []
                }), {
                    loading: S
                } = (0, o.useFetchListingsForSubscriptions)(s), {
                    loadState: E
                } = (0, o.useFetchUserApplicationSubscriptionEntitlements)();
                return S || E !== o.LoadState.LOADED ? (0, a.jsx)(i.Spinner, {}) : 0 === s.length ? null : (0, a.jsxs)("div", {
                    className: c.__invalid_container,
                    children: [(0, a.jsxs)(i.Button, {
                        look: i.Button.Looks.BLANK,
                        innerClassName: c.backButtonContents,
                        onClick: t,
                        children: [(0, a.jsx)(r.default, {
                            className: c.arrowIcon
                        }), u.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_BACK_CTA]
                    }), (0, a.jsx)(i.Spacer, {
                        size: 10
                    }), (0, a.jsx)(i.FormTitle, {
                        tag: "h1",
                        children: u.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_TITLE
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/normal",
                        className: c.pageDescription,
                        children: u.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION
                    }), (0, a.jsx)("div", {
                        className: c.subscriptionsContainer,
                        children: s.map(e => (0, a.jsx)(d.default, {
                            subscription: e
                        }, e.id))
                    })]
                })
            }
        },
        650919: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            }), s("47120");
            var a = s("470079"),
                n = s("913527"),
                i = s.n(n),
                l = s("442837"),
                r = s("812206"),
                o = s("430824"),
                d = s("580130"),
                u = s("937615"),
                c = s("488915"),
                S = s("171246"),
                E = s("981631"),
                T = s("689938");

            function _(e) {
                let t = (0, S.getApplicationSubscriptionPlanId)(e),
                    s = (0, l.useStateFromStores)([c.default], () => c.default.getSubscriptionListingForPlan(t), [t]),
                    n = (0, l.useStateFromStores)([c.default], () => null != s ? c.default.getSubscriptionGroupListingForSubscriptionListing(s.id) : null, [s]),
                    _ = (0, l.useStateFromStores)([d.default], () => {
                        let t = d.default.getForSubscription(e.id);
                        if (null != t) {
                            let [e] = Array.from(t);
                            return e
                        }
                        return null
                    }, [e]),
                    I = (0, l.useStateFromStores)([r.default], () => {
                        if (null == _) return;
                        let e = r.default.getApplication(_.applicationId);
                        if (null != e) return e
                    }, [_]),
                    N = (0, l.useStateFromStores)([o.default], () => {
                        if (null != _) return o.default.getGuild(_.guildId)
                    }, [_]),
                    [g, f] = a.useState(!1),
                    m = null == s ? void 0 : function(e) {
                        let {
                            listing: t,
                            subscription: s
                        } = e, a = s.currentPeriodEnd, n = t.subscription_plans[0], l = (0, u.formatPrice)(n.price, n.currency), r = s.createdAt, o = s.status === E.SubscriptionStatusTypes.CANCELED, d = t.soft_deleted, c = s.status === E.SubscriptionStatusTypes.PAST_DUE;
                        return {
                            subscribedSinceDate: r,
                            currentPeriodEndDate: a,
                            currentPeriodEndLabel: i()().isAfter(s.currentPeriodEnd) ? T.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDED : T.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDS,
                            subscriptionPlanPrice: l,
                            isCancelled: o,
                            isDeleted: d,
                            isPastDue: c
                        }
                    }({
                        listing: s,
                        subscription: e
                    });
                return {
                    application: I,
                    guild: N,
                    expanded: g,
                    handleToggleExpanded: () => f(e => !e),
                    listing: s,
                    groupListing: n,
                    subscriptionInfo: m
                }
            }
        },
        193528: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("153832"),
                o = s("866442"),
                d = s("692547"),
                u = s("481060"),
                c = s("699682"),
                S = s("44315"),
                E = s("586791"),
                T = s("654904"),
                _ = s("981631"),
                I = s("689938"),
                N = s("395495");

            function g(e) {
                let {
                    onChange: t,
                    onClose: s,
                    color: i,
                    suggestedColors: g,
                    disabled: f,
                    label: m,
                    colorPickerMiddle: A,
                    colorPickerFooter: C,
                    showEyeDropper: O
                } = e, h = n.useRef(null), R = (0, u.useToken)(d.default.colors.BACKGROUND_PRIMARY).hex(), p = d.default.colors.BACKGROUND_ACCENT.css, M = (0, T.isColorDark)(i), D = (0, o.int2hex)(i), x = D === R ? p : D, L = (0, S.getColor)(M ? _.Color.WHITE_500 : _.Color.PRIMARY_530), P = (0, c.default)(A), b = (0, c.default)(C), [v, U] = n.useState((0, r.v4)());
                return n.useEffect(() => {
                    (P !== A || b !== C) && U((0, r.v4)())
                }, [C, A, b, P]), (0, a.jsx)(u.Popout, {
                    positionKey: v,
                    renderPopout: e => (0, a.jsx)(u.CustomColorPicker, {
                        ...e,
                        value: i,
                        onChange: t,
                        suggestedColors: g,
                        middle: A,
                        footer: C,
                        showEyeDropper: O
                    }),
                    onRequestClose: s,
                    children: e => {
                        let {
                            onClick: t,
                            ...s
                        } = e;
                        return (0, a.jsxs)("div", {
                            ref: h,
                            className: l()(N.colorSwatch, {
                                [N.disabled]: f
                            }),
                            children: [(0, a.jsx)(u.Clickable, {
                                ...s,
                                tabIndex: f ? -1 : 0,
                                onClick: f ? _.NOOP : t,
                                style: {
                                    backgroundColor: D,
                                    borderColor: x
                                },
                                className: N.swatch,
                                "aria-label": I.default.Messages.USER_SETTINGS_PROFILE_COLOR_SELECT_COLOR,
                                focusProps: {
                                    ringTarget: h
                                },
                                children: (0, a.jsx)(E.default, {
                                    className: N.editPencilIcon,
                                    width: 14,
                                    height: 14,
                                    color: L
                                })
                            }), m]
                        })
                    }
                })
            }
        },
        398140: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("778825"),
                l = s("905027"),
                r = s("954756");

            function o() {
                return (0, n.useStateFromStores)([i.default], () => i.default.showNotice()) ? (0, a.jsx)(l.default, {}) : (0, a.jsx)(r.default, {})
            }
        },
        564344: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return p
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("503089"),
                o = s("906732"),
                d = s("254901"),
                u = s("18438"),
                c = s("778825"),
                S = s("66516"),
                E = s("484459"),
                T = s("216045"),
                _ = s("839469"),
                I = s("25990"),
                N = s("594174"),
                g = s("585483"),
                f = s("16703"),
                m = s("785145"),
                A = s("981631"),
                C = s("526761"),
                O = s("726985"),
                h = s("689938"),
                R = s("347620");

            function p() {
                d.default.useExperiment({
                    location: "profile_customization_auto"
                });
                let e = (0, i.useStateFromStores)([c.default], () => c.default.getGuild()),
                    t = (0, f.default)(),
                    s = (0, i.useStateFromStores)([c.default, I.default], () => c.default.showNotice() || I.default.showNotice()),
                    p = null != e ? e : t,
                    M = (0, i.useStateFromStores)([N.default], () => N.default.getCurrentUser()),
                    {
                        subsection: D,
                        setSubsection: x
                    } = (0, m.default)(),
                    {
                        analyticsLocations: L
                    } = (0, o.default)(),
                    {
                        hasSearchResults: P,
                        searchResults: b
                    } = (0, _.useSettingSearchResults)();

                function v(t) {
                    if (D !== t) {
                        if (s) {
                            g.ComponentDispatch.dispatch(A.ComponentActions.SHAKE_APP, {
                                duration: 300,
                                intensity: r.SHAKE_INTENSITY_DEFAULT
                            }), g.ComponentDispatch.dispatch(A.ComponentActions.EMPHASIZE_NOTICE);
                            return
                        }
                        t === C.ProfileCustomizationSubsection.GUILD && null == e && null != p && (0, u.initGuildIdentitySettings)(p, L), x(t)
                    }
                }
                n.useEffect(() => {
                    null != M && (0, E.default)(M.id, M.getAvatarURL(null == p ? void 0 : p.id, 80), {
                        guildId: null == p ? void 0 : p.id
                    })
                }, [null == p ? void 0 : p.id, M]);
                let U = !0,
                    j = !0;
                return P && 1 === b.length && (b.includes(O.WebSetting.PROFILE_SERVER_PROFILES) ? (v(C.ProfileCustomizationSubsection.GUILD), j = !1) : b.includes(O.WebSetting.PROFILE_USER_PROFILE) && (v(C.ProfileCustomizationSubsection.USER_PROFILE), U = !1)), (0, a.jsx)(o.AnalyticsLocationProvider, {
                    value: L,
                    children: (0, a.jsxs)(l.HeadingLevel, {
                        component: (0, a.jsx)(l.Heading, {
                            variant: "heading-lg/semibold",
                            children: h.default.Messages.USER_SETTINGS_PROFILES
                        }),
                        children: [(0, a.jsxs)(l.TabBar, {
                            className: R.tabBar,
                            type: "top",
                            look: "brand",
                            selectedItem: D,
                            onItemSelect: v,
                            children: [j ? (0, a.jsx)(l.TabBar.Item, {
                                className: R.tabBarItem,
                                id: C.ProfileCustomizationSubsection.USER_PROFILE,
                                children: h.default.Messages.EDIT_PROFILE_CATEGORY_USER_PROFILE
                            }, C.ProfileCustomizationSubsection.USER_PROFILE) : null, U ? (0, a.jsx)(l.TabBar.Item, {
                                className: R.tabBarItem,
                                id: C.ProfileCustomizationSubsection.GUILD,
                                children: h.default.Messages.EDIT_PROFILE_CATEGORY_GUILD_IDENTITY
                            }, C.ProfileCustomizationSubsection.GUILD) : null]
                        }), D === C.ProfileCustomizationSubsection.GUILD ? (0, a.jsx)(S.default, {
                            selectedGuild: p
                        }) : (0, a.jsx)(T.default, {})]
                    })
                })
            }
        },
        296810: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("873546"),
                r = s("481060"),
                o = s("993413"),
                d = s("689938"),
                u = s("521039");

            function c(e) {
                let {
                    children: t,
                    className: s,
                    layoutClassName: n,
                    profilePreview: c,
                    previewTitle: S
                } = e, E = () => (0, a.jsx)(o.default, {
                    title: null != S ? S : d.default.Messages.PROFILE_CUSTOMIZATION_PREVIEW,
                    className: u.preview,
                    children: c
                });
                return (0, a.jsx)("div", {
                    className: s,
                    children: (0, a.jsxs)(r.FormSection, {
                        className: u.profileCustomizationSection,
                        children: [l.isMobile && E(), (0, a.jsxs)("div", {
                            className: i()(u.baseLayout, n),
                            children: [t, !l.isMobile && E()]
                        })]
                    })
                })
            }
        },
        126631: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("541716"),
                r = s("752305"),
                o = s("893718"),
                d = s("131704"),
                u = s("153124"),
                c = s("993413"),
                S = s("981631"),
                E = s("689938"),
                T = s("496166");
            let _ = (0, u.uid)(),
                I = (0, d.createChannelRecord)({
                    id: "1",
                    type: S.ChannelTypes.DM
                }),
                N = (0, u.uid)();

            function g(e) {
                let {
                    sectionTitle: t,
                    errors: s,
                    onBioChange: d,
                    pendingBio: u,
                    placeholder: g,
                    currentBio: f,
                    disabled: m = !1
                } = e, [A, C] = n.useState(null != u ? u : f), [O, h] = n.useState((0, r.toRichValue)(A)), R = n.useRef(!1);
                return n.useEffect(() => {
                    if (void 0 === u) {
                        let e = (0, r.toRichValue)(f);
                        C(f), h(e)
                    }
                }, [u, f]), (0, a.jsxs)(c.default, {
                    title: t,
                    titleId: _,
                    description: E.default.Messages.USER_SETTINGS_ABOUT_ME_DETAILS,
                    errors: s,
                    disabled: m,
                    children: [(0, a.jsx)(o.default, {
                        "aria-describedby": N,
                        "aria-labelledby": _,
                        innerClassName: T.bioTextArea,
                        maxCharacterCount: S.BIO_MAX_LENGTH,
                        onChange: function(e, t, s) {
                            t !== A && (C(t), h(s), d(t))
                        },
                        placeholder: g,
                        channel: I,
                        textValue: A,
                        richValue: O,
                        type: l.ChatInputTypes.PROFILE_BIO_INPUT,
                        onBlur: () => {
                            R.current = !1
                        },
                        onFocus: () => {
                            R.current = !0
                        },
                        focused: R.current,
                        onSubmit: function() {
                            return new Promise(e => {
                                e({
                                    shouldClear: !1,
                                    shouldRefocus: !0
                                })
                            })
                        }
                    }), (0, a.jsx)(i.HiddenVisually, {
                        id: N,
                        children: E.default.Messages.MAXIMUM_LENGTH.format({
                            maxLength: S.BIO_MAX_LENGTH
                        })
                    })]
                })
            }
        },
        433411: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("906732"),
                d = s("864106"),
                u = s("1585"),
                c = s("580747"),
                S = s("540086"),
                E = s("150039"),
                T = s("993413"),
                _ = s("689938"),
                I = s("35071");

            function N(e) {
                let {
                    user: t,
                    guild: s,
                    className: i,
                    sectionTitle: S,
                    forcedDivider: N = !1,
                    withTutorial: f = !1,
                    isTryItOutFlow: m = !1
                } = e, {
                    analyticsLocations: A
                } = (0, o.default)(), C = null != s, {
                    userAvatarDecoration: O,
                    guildAvatarDecoration: h,
                    pendingAvatarDecoration: R,
                    pendingErrors: p
                } = (0, E.useGuildMemberAndUserPendingAvatarDecoration)(t, s), M = (0, c.default)("enable_avatar_decoration_uploads"), D = n.useCallback(() => (0, u.openAvatarDecorationModal)({
                    analyticsLocations: A,
                    isTryItOutFlow: m,
                    guild: s
                }), [A, m, s]), x = m || void 0 !== R ? null != R : (C ? h : O) != null, L = f ? r.ShinyButton : r.Button;
                return (0, a.jsxs)(T.default, {
                    className: i,
                    forcedDivider: N,
                    hasBackground: !0,
                    title: S,
                    errors: p,
                    children: [(0, a.jsxs)("div", {
                        className: I.buttonsContainer,
                        children: [(0, a.jsx)(L, {
                            size: r.Button.Sizes.SMALL,
                            onClick: D,
                            className: l()({
                                [I.buttonHighlighted]: f
                            }),
                            children: _.default.Messages.USER_SETTINGS_CHANGE_AVATAR_DECORATION
                        }), x && (0, a.jsx)(r.Button, {
                            className: I.removeButton,
                            color: r.Button.Colors.PRIMARY,
                            look: r.Button.Looks.LINK,
                            size: r.Button.Sizes.SMALL,
                            onClick: function() {
                                (0, E.setNewPendingAvatarDecoration)(null == s ? void 0 : s.id, null)
                            },
                            children: (0, d.hasGlobalDefaultAvatarDecoration)(t, s) ? _.default.Messages.USER_SETTINGS_REMOVE_PER_GUILD_AVATAR_DECORATION : _.default.Messages.USER_SETTINGS_REMOVE_AVATAR_DECORATION
                        })]
                    }), t.isStaff() && M && (0, a.jsx)(g, {
                        user: t
                    })]
                })
            }
            let g = e => {
                let {
                    user: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: I.overrideButtonsContainer,
                    children: [(0, a.jsx)(r.Text, {
                        variant: "text-xs/bold",
                        children: "STAFF ONLY and Experimental. Upload a decoration to view throughout the app."
                    }), (0, a.jsx)(S.default, {
                        onChange: e => {
                            null != e && (t.avatarDecoration = {
                                asset: e,
                                skuID: "PALUE000000001"
                            })
                        },
                        buttonCTA: "Upload Override"
                    })]
                })
            }
        },
        532432: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("481060"),
                r = s("654904"),
                o = s("993413"),
                d = s("486324"),
                u = s("689938"),
                c = s("378594");
            let S = [{
                name: "gif",
                extensions: ["gif"]
            }];

            function E(e) {
                let {
                    showRemoveAvatarButton: t,
                    errors: s,
                    onAvatarChange: n,
                    sectionTitle: E,
                    changeAvatarButtonText: T,
                    guildId: _,
                    className: I,
                    disabled: N = !1,
                    isTryItOutFlow: g = !1,
                    forcedDivider: f,
                    withHighlight: m = !1
                } = e, A = m ? l.ShinyButton : l.Button;
                return (0, a.jsx)(o.default, {
                    className: I,
                    title: E,
                    errors: s,
                    disabled: N,
                    forcedDivider: f,
                    children: (0, a.jsxs)("div", {
                        className: c.buttonsContainer,
                        children: [(0, a.jsx)(A, {
                            className: i()({
                                [c.buttonHighlighted]: m
                            }),
                            size: l.Button.Sizes.SMALL,
                            onClick: () => (0, r.handleOpenSelectImageModal)(d.UploadTypes.AVATAR, _, g, g ? S : void 0),
                            children: null != T ? T : u.default.Messages.USER_SETTINGS_CHANGE_AVATAR
                        }), t && (0, a.jsx)(l.Button, {
                            className: c.removeButton,
                            color: l.Button.Colors.PRIMARY,
                            look: l.Button.Looks.LINK,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => n(null),
                            children: null != _ ? u.default.Messages.USER_SETTINGS_RESET_AVATAR : u.default.Messages.USER_SETTINGS_REMOVE_AVATAR
                        })]
                    })
                })
            }
        },
        349177: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("993413"),
                l = s("981631"),
                r = s("689938");

            function o(e) {
                var t, s;
                return (0, a.jsx)(i.default, {
                    errors: e.errors,
                    disabled: e.disabled,
                    title: r.default.Messages.DISPLAY_NAME,
                    children: (0, a.jsx)("div", {
                        children: (0, a.jsx)(n.TextInput, {
                            placeholder: e.placeholder,
                            maxLength: l.DISPLAY_NAME_MAX_LENGTH,
                            onChange: e.onGlobalNameChange,
                            value: null !== (s = null !== (t = e.pendingGlobalName) && void 0 !== t ? t : e.currentGlobalName) && void 0 !== s ? s : ""
                        })
                    })
                })
            }
        },
        872736: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("695346"),
                l = s("689938");

            function r(e) {
                let t = i.LegacyUsernameDisabled.useSetting();
                return (0, a.jsx)(n.FormSwitch, {
                    hideBorder: !0,
                    value: !t,
                    onChange: () => i.LegacyUsernameDisabled.updateSetting(!t),
                    note: t ? null : l.default.Messages.UNIQUE_USERNAME_TOGGLE_SUBTITLE.format({
                        username: e.legacyUsername
                    }),
                    children: l.default.Messages.UNIQUE_USERNAME_TOGGLE_TITLE
                })
            }
        },
        134795: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("481060"),
                r = s("654904"),
                o = s("993413"),
                d = s("486324"),
                u = s("689938"),
                c = s("851028");

            function S(e) {
                let {
                    showRemoveBannerButton: t,
                    errors: s,
                    onBannerChange: n,
                    guildId: S,
                    className: E,
                    disabled: T = !1,
                    showPremiumIcon: _ = !0,
                    isTryItOutFlow: I = !1,
                    forcedDivider: N,
                    withHighlight: g = !1
                } = e, f = g ? l.ShinyButton : l.Button;
                return (0, a.jsx)(o.default, {
                    className: E,
                    title: u.default.Messages.USER_SETTINGS_PROFILE_BANNER,
                    showPremiumIcon: _,
                    errors: s,
                    disabled: T,
                    forcedDivider: N,
                    children: (0, a.jsxs)("div", {
                        className: c.buttonsContainer,
                        children: [(0, a.jsx)(f, {
                            className: i()({
                                [c.buttonHighlighted]: g
                            }),
                            size: l.Button.Sizes.SMALL,
                            onClick: () => (0, r.handleOpenSelectImageModal)(d.UploadTypes.BANNER, S, I, void 0),
                            children: u.default.Messages.CHANGE_BANNER
                        }), t && (0, a.jsx)(l.Button, {
                            className: c.removeButton,
                            color: l.Button.Colors.PRIMARY,
                            look: l.Button.Looks.LINK,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => n(null),
                            children: null != S ? u.default.Messages.USER_SETTINGS_RESET_BANNER : u.default.Messages.USER_SETTINGS_REMOVE_BANNER
                        })]
                    })
                })
            }
        },
        610966: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("866442"),
                i = s("692547"),
                l = s("481060"),
                r = s("220082"),
                o = s("193528"),
                d = s("993413"),
                u = s("689938");

            function c(e) {
                var t;
                let {
                    user: s,
                    savedUserColor: c,
                    pendingColor: S,
                    setPendingAccentColor: E
                } = e, T = s.getAvatarURL(null, 80), _ = (0, l.useToken)(i.default.unsafe_rawColors.PRIMARY_530).hex(), I = (0, r.useAvatarColors)(T, _, !1), N = (0, n.hex2int)(I[0]);
                return (0, a.jsx)(d.default, {
                    title: u.default.Messages.USER_SETTINGS_BANNER_COLOR_TITLE,
                    children: (0, a.jsx)(o.default, {
                        onChange: e => E(e),
                        color: null !== (t = null != S ? S : c) && void 0 !== t ? t : N,
                        suggestedColors: I,
                        showEyeDropper: !0
                    })
                })
            }
        },
        513901: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("906732"),
                d = s("642619"),
                u = s("626135"),
                c = s("74538"),
                S = s("150039"),
                E = s("993413"),
                T = s("504983"),
                _ = s("981631"),
                I = s("474936"),
                N = s("689938"),
                g = s("484589");

            function f(e) {
                let {
                    user: t,
                    guild: s,
                    className: i,
                    sectionTitle: f,
                    forcedDivider: m = !1,
                    withTutorial: A = !1,
                    showBorder: C = !1,
                    isTryItOutFlow: O = !1,
                    initialSelectedEffectId: h
                } = e, R = (0, S.useGlobalOrGuildIdentityProfileEffect)(t, s), p = c.default.canUsePremiumProfileCustomization(t), {
                    analyticsLocations: M
                } = (0, o.default)(), {
                    pendingProfileEffectId: D,
                    errors: x
                } = (0, S.useGlobalOrGuildIdentityPendingProfileEffect)(s), L = n.useCallback(() => (0, d.openProfileEffectModal)({
                    analyticsLocations: M,
                    initialSelectedEffectId: h,
                    guild: s
                }), [M, h, s]);
                n.useEffect(() => {
                    p && u.default.track(_.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: I.PremiumUpsellTypes.PROFILE_EFFECTS_INLINE_SETTINGS,
                        location_stack: M
                    })
                }, [p, M]);
                let P = null != s,
                    b = O || void 0 !== D ? null != D : null != R,
                    v = A ? r.ShinyButton : r.Button;
                return (0, a.jsx)(E.default, {
                    forcedDivider: m,
                    borderType: T.FeatureBorderTypes.PREMIUM,
                    hasBackground: !0,
                    title: f,
                    showBorder: C,
                    errors: x,
                    className: i,
                    children: (0, a.jsxs)("div", {
                        className: g.buttonsContainer,
                        children: [(0, a.jsx)(v, {
                            size: r.Button.Sizes.SMALL,
                            onClick: L,
                            className: l()({
                                [g.buttonHighlighted]: A
                            }),
                            children: N.default.Messages.USER_SETTINGS_CHANGE_PROFILE_EFFECT
                        }), b && (0, a.jsx)(r.Button, {
                            className: g.removeButton,
                            color: r.Button.Colors.PRIMARY,
                            look: r.Button.Looks.LINK,
                            size: r.Button.Sizes.SMALL,
                            onClick: function() {
                                (0, S.setNewPendingProfileEffectId)(null, R, s)
                            },
                            children: P ? N.default.Messages.USER_SETTINGS_USE_DEFAULT_PROFILE_EFFECT : N.default.Messages.USER_SETTINGS_REMOVE_PROFILE_EFFECT
                        })]
                    })
                })
            }
        },
        451392: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("498607"),
                r = s.n(l),
                o = s("692547"),
                d = s("481060"),
                u = s("220082"),
                c = s("318661"),
                S = s("721987"),
                E = s("74538"),
                T = s("193528"),
                _ = s("993413"),
                I = s("689938"),
                N = s("452240");

            function g(e) {
                let {
                    user: t,
                    pendingAvatar: s,
                    pendingColors: n,
                    onThemeColorsChange: l,
                    preventDisabled: g,
                    guildId: f,
                    className: m,
                    showPremiumIcon: A = !0,
                    showResetThemeButton: C = !1,
                    forcedDivider: O
                } = e, h = (0, c.default)(t.id, f), {
                    primaryColor: R,
                    secondaryColor: p
                } = (0, S.default)({
                    user: t,
                    displayProfile: h,
                    pendingThemeColors: n,
                    isPreview: !0
                }), M = E.default.canUsePremiumProfileCustomization(t), D = null != s ? s : t.getAvatarURL(f, 80), x = (0, d.useToken)(o.default.unsafe_rawColors.PRIMARY_530).hex(), L = (0, u.useAvatarColors)(D, x, !1);
                if (null == R || null == p) return null;
                let P = e => {
                    l(r()(e, null == h ? void 0 : h.themeColors) ? void 0 : e)
                };
                return (0, a.jsx)(_.default, {
                    title: I.default.Messages.USER_SETTINGS_PROFILE_THEME,
                    disabled: !M && !g,
                    className: i()(N.__invalid_profileThemesSection, m),
                    showPremiumIcon: A,
                    forcedDivider: O,
                    children: (0, a.jsxs)("div", {
                        className: N.sectionContainer,
                        children: [(0, a.jsx)("div", {
                            className: N.sparkleContainer,
                            children: (0, a.jsx)(T.default, {
                                onChange: e => P([e, p]),
                                color: R,
                                suggestedColors: L,
                                showEyeDropper: !0,
                                label: (0, a.jsx)(d.Text, {
                                    className: N.colorSwatchLabel,
                                    color: "header-secondary",
                                    variant: "text-xs/normal",
                                    "aria-hidden": !0,
                                    children: I.default.Messages.USER_SETTINGS_PROFILE_THEME_PRIMARY
                                })
                            })
                        }), (0, a.jsx)("div", {
                            className: N.sparkleContainer,
                            children: (0, a.jsx)(T.default, {
                                onChange: e => P([R, e]),
                                color: p,
                                suggestedColors: L,
                                showEyeDropper: !0,
                                label: (0, a.jsx)(d.Text, {
                                    className: N.colorSwatchLabel,
                                    color: "header-secondary",
                                    variant: "text-xs/normal",
                                    "aria-hidden": !0,
                                    children: I.default.Messages.USER_SETTINGS_PROFILE_THEME_ACCENT
                                })
                            })
                        }), C && null != f && (0, a.jsx)(d.Button, {
                            className: N.resetButton,
                            color: d.Button.Colors.PRIMARY,
                            look: d.Button.Looks.LINK,
                            size: d.Button.Sizes.SMALL,
                            onClick: () => P([null, null]),
                            children: I.default.Messages.USER_SETTINGS_RESET_PROFILE_THEME
                        })]
                    })
                })
            }
        },
        906364: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("993413"),
                l = s("689938");

            function r(e) {
                let {
                    sectionTitle: t,
                    errors: s,
                    onPronounsChange: r,
                    pendingPronouns: o,
                    placeholder: d,
                    currentPronouns: u,
                    disabled: c = !1
                } = e;
                return (0, a.jsx)(i.default, {
                    title: t,
                    errors: s,
                    disabled: c,
                    children: (0, a.jsx)(n.TextInput, {
                        placeholder: null != d ? d : l.default.Messages.PROFILE_CUSTOMIZATION_PRONOUNS_PLACEHOLDER,
                        maxLength: 40,
                        value: null != o ? o : u,
                        onChange: function(e) {
                            r(e === u ? void 0 : e)
                        },
                        disabled: c
                    })
                })
            }
        },
        935147: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return F
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("809206"),
                o = s("634894"),
                d = s("100527"),
                u = s("906732"),
                c = s("588126"),
                S = s("175756"),
                E = s("104494"),
                T = s("639119"),
                _ = s("165583"),
                I = s("197115"),
                N = s("350327"),
                g = s("318661"),
                f = s("996073"),
                m = s("25990"),
                A = s("466111"),
                C = s("626135"),
                O = s("74538"),
                h = s("589266"),
                R = s("296810"),
                p = s("433411"),
                M = s("532432"),
                D = s("504983"),
                x = s("134795"),
                L = s("513901"),
                P = s("451392"),
                b = s("981631"),
                v = s("474936"),
                U = s("526761"),
                j = s("689938"),
                G = s("764277");

            function F(e) {
                var t, F, B;
                let {
                    user: y
                } = e, {
                    reducedMotion: V
                } = n.useContext(l.AccessibilityPreferencesContext), H = O.default.isPremium(y), {
                    pendingAvatar: Y,
                    pendingBanner: k,
                    pendingThemeColors: w,
                    pendingPronouns: W,
                    pendingBio: K,
                    tryItOutThemeColors: Q,
                    tryItOutAvatar: z,
                    tryItOutBanner: X,
                    tryItOutAvatarDecoration: q,
                    tryItOutProfileEffectId: Z
                } = (0, i.useStateFromStoresObject)([m.default], () => {
                    let e = m.default.getAllPending(),
                        t = m.default.getErrors(),
                        s = m.default.getAllTryItOut();
                    return {
                        ...e,
                        ...s,
                        errors: t
                    }
                }), J = (0, c.default)(q), $ = (0, S.default)(Z), ee = n.useRef(null);
                (0, f.default)(ee, U.ProfileCustomizationScrollPositions.TRY_IT_OUT);
                let et = (0, g.default)(y.id),
                    es = null == et ? void 0 : et.getPreviewBio(K),
                    {
                        analyticsLocations: ea,
                        sourceAnalyticsLocations: en
                    } = (0, u.default)(d.default.USER_SETTINGS_TRY_OUT_PREMIUM);
                n.useEffect(() => {
                    C.default.track(b.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: v.PremiumUpsellTypes.PREMIUM_PROFILE_TRY_IT_OUT,
                        location: {
                            page: b.AnalyticsPages.USER_SETTINGS
                        },
                        location_stack: en
                    })
                }, [en, y]);
                let ei = (null === (F = (0, T.usePremiumTrialOffer)()) || void 0 === F ? void 0 : null === (t = F.subscription_trial) || void 0 === t ? void 0 : t.sku_id) === v.PremiumSubscriptionSKUs.TIER_2,
                    el = (0, E.usePremiumDiscountOffer)(),
                    er = (0, E.discountOfferHasTier)(el, v.PremiumSubscriptionSKUs.TIER_2),
                    eo = "TryOutPremiumSection";
                return (0, o.useTriggerDebuggingAA)({
                    location: eo + " auto on",
                    autoTrackExposure: !0
                }), (0, o.useTriggerDebuggingAA)({
                    location: eo + " auto off",
                    autoTrackExposure: !1
                }), (0, a.jsx)(u.AnalyticsLocationProvider, {
                    value: ea,
                    children: (0, a.jsxs)(D.default, {
                        ref: ee,
                        className: G.tryItOutSection,
                        type: D.FeatureBorderTypes.PREMIUM,
                        isShown: !0,
                        hasBackground: !0,
                        children: [(0, a.jsx)(R.default, {
                            layoutClassName: G.tryItOutLayout,
                            previewTitle: (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)(A.default, {
                                    className: G.premiumIcon
                                }), j.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_PREVIEW]
                            }),
                            profilePreview: (0, a.jsx)(h.default, {
                                location: "TryOutPremiumSection",
                                user: y,
                                onAvatarChange: N.setTryItOutAvatar,
                                onBannerChange: N.setTryItOutBanner,
                                pendingPronouns: W,
                                pendingBio: K,
                                pendingBanner: null !== (B = null != X ? X : k) && void 0 !== B ? B : s("466045"),
                                pendingAvatar: null != z ? z : Y,
                                pendingThemeColors: null != Q ? Q : w,
                                pendingAvatarDecoration: J,
                                pendingProfileEffectId: $,
                                avatarClassName: null != z || null != Y || V.enabled ? void 0 : G.spinningAvatar,
                                canUsePremiumCustomization: !0,
                                isTryItOutFlow: !0,
                                hideExampleButton: !0,
                                hideFakeActivity: !!(null == es ? void 0 : es.value)
                            }),
                            children: (0, a.jsxs)("div", {
                                className: G.editor,
                                children: [(0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(l.Heading, {
                                        variant: "heading-xl/extrabold",
                                        children: j.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_HEADER
                                    }), (0, a.jsx)(l.Text, {
                                        className: G.description,
                                        variant: "text-sm/normal",
                                        children: j.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_DESCRIPTION
                                    })]
                                }), (0, a.jsx)(P.default, {
                                    className: G.customizationSection,
                                    user: y,
                                    pendingAvatar: null != z ? z : Y,
                                    pendingColors: null != Q ? Q : w,
                                    onThemeColorsChange: N.setTryItOutThemeColors,
                                    showPremiumIcon: !1,
                                    preventDisabled: !0
                                }), (0, a.jsx)(x.default, {
                                    className: G.customizationSection,
                                    isTryItOutFlow: !0,
                                    showRemoveBannerButton: null != X,
                                    onBannerChange: N.setTryItOutBanner,
                                    showPremiumIcon: !1
                                }), (0, a.jsx)(M.default, {
                                    className: G.customizationSection,
                                    isTryItOutFlow: !0,
                                    onAvatarChange: N.setTryItOutAvatar,
                                    showRemoveAvatarButton: !1,
                                    changeAvatarButtonText: j.default.Messages.USER_SETTINGS_ADD_ANIMATED_AVATAR,
                                    sectionTitle: j.default.Messages.PREMIUM_TIER_0_FEATURE_AVATAR
                                }), (0, a.jsx)(p.default, {
                                    isTryItOutFlow: !0,
                                    className: G.customizationSection,
                                    user: y,
                                    sectionTitle: j.default.Messages.USER_SETTINGS_AVATAR_DECORATION
                                }, "decoration"), (0, a.jsx)(L.default, {
                                    className: G.customizationSection,
                                    isTryItOutFlow: !0,
                                    initialSelectedEffectId: $,
                                    user: y,
                                    sectionTitle: j.default.Messages.USER_SETTINGS_PROFILE_EFFECT
                                }, "effect"), !ei && (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)(l.Text, {
                                        variant: "text-sm/normal",
                                        className: G.premiumPerksListTitle,
                                        children: j.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_ALSO_INCLUDES
                                    }), (0, a.jsx)(I.default, {
                                        onSubscribeModalClose: e => {
                                            e && ((0, r.setPendingAvatar)(z), (0, N.setPendingBanner)(X), (0, N.setPendingThemeColors)(Q))
                                        },
                                        subscriptionTier: v.PremiumSubscriptionSKUs.TIER_2,
                                        className: G.premiumSubscribeButton,
                                        size: l.Button.Sizes.MEDIUM,
                                        buttonText: H ? j.default.Messages.USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE : er ? j.default.Messages.PREMIUM_DISCOUNT_CTA.format({
                                            percent: null == el ? void 0 : el.discount.amount
                                        }) : j.default.Messages.PREMIUM_UPSELL_GET_NITRO
                                    })]
                                })]
                            })
                        }), ei && (0, a.jsxs)("div", {
                            children: [(0, a.jsx)("div", {
                                className: G.premiumTier2Divider
                            }), (0, a.jsx)(_.default, {
                                type: v.PremiumUpsellTypes.CUSTOM_PROFILE_TRY_OUT_UPSELL,
                                subscriptionTier: v.PremiumSubscriptionSKUs.TIER_2
                            })]
                        })]
                    })
                })
            }
        },
        785145: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("470079"),
                n = s("399606"),
                i = s("230711"),
                l = s("663389"),
                r = s("981631"),
                o = s("526761");
            let d = new Set(Object.values(o.ProfileCustomizationSubsection)),
                u = e => null != e && d.has(e);
            t.default = () => {
                let e = (0, n.useStateFromStores)([l.default], () => {
                        let e = l.default.getSubsection();
                        return u(e) ? e : o.ProfileCustomizationSubsection.USER_PROFILE
                    }),
                    t = a.useCallback(t => {
                        e !== t && i.default.setSection(r.UserSettingsSections.PROFILE_CUSTOMIZATION, t)
                    }, [e]);
                return {
                    subsection: e,
                    setSubsection: t
                }
            }
        },
        478977: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("866442"),
                i = s("481060"),
                l = s("214623"),
                r = s("975266");
            t.default = function(e) {
                let {
                    colorKey: t,
                    value: s,
                    onChange: o,
                    title: d
                } = e;
                return (0, a.jsxs)(i.FormItem, {
                    children: [(0, a.jsx)(i.FormTitle, {
                        tag: i.FormTitleTags.H5,
                        children: d
                    }), (0, a.jsx)(i.Popout, {
                        renderPopout: e => (0, a.jsx)(i.CustomColorPicker, {
                            ...e,
                            value: s,
                            onChange: e => o(t, (0, n.int2hex)(e))
                        }),
                        children: e => (0, a.jsx)(i.Clickable, {
                            ...e,
                            tag: "span",
                            "aria-label": "Select a color",
                            className: r.swatchContainer,
                            style: {
                                backgroundColor: s
                            },
                            children: (0, a.jsx)(l.default, {
                                width: 16,
                                height: 16,
                                className: r.swatchIcon
                            })
                        })
                    })]
                })
            }
        },
        456799: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("481060"),
                r = s("975266");
            t.default = function(e) {
                let {
                    children: t,
                    withBorder: s = !1
                } = e;
                return (0, a.jsx)(l.FocusBlock, {
                    children: (0, a.jsx)(l.Card, {
                        className: i()(r.componentPreviewWrapper, {
                            [r.componentPreviewWrapperBordered]: s
                        }),
                        outline: s,
                        children: (0, a.jsx)("div", {
                            className: r.componentPreview,
                            onClickCapture: function(e) {
                                e.stopPropagation()
                            },
                            children: t
                        })
                    })
                })
            }
        },
        210851: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("882485"),
                l = s("481060"),
                r = s("763610"),
                o = s("975266");
            t.default = function(e) {
                var t, s;
                let {
                    assetKey: d,
                    filters: u,
                    initialValue: c,
                    onFileChange: S,
                    title: E
                } = e, [T, _] = n.useState(null), [I, N] = n.useState(!1);
                return (0, a.jsxs)(l.FormItem, {
                    children: [(0, a.jsx)(l.FormTitle, {
                        tag: l.FormTitleTags.H5,
                        children: (0, a.jsxs)("div", {
                            className: o.headingWithTooltip,
                            children: [E, (0, a.jsx)(l.Tooltip, {
                                text: "Supported asset formats: ".concat(u.join(", ")),
                                children: e => (0, a.jsx)(i.CircleInformationIcon, {
                                    ...e,
                                    height: 16,
                                    width: 16
                                })
                            })]
                        })
                    }), (0, a.jsx)(r.default, {
                        filename: null !== (s = null !== (t = null == T ? void 0 : T.name) && void 0 !== t ? t : c) && void 0 !== s ? s : "",
                        filters: [{
                            name: E,
                            extensions: u
                        }],
                        buttonText: "Browse",
                        placeholder: "Select an asset",
                        onFileSelect: function(e) {
                            if (_(null != e ? e : null), null == e) return;
                            N(!0);
                            let t = new FileReader;
                            t.onload = function() {
                                "string" == typeof t.result && (S(d, t.result), N(!1))
                            }, t.onerror = function(e) {
                                console.error(e)
                            }, t.readAsDataURL(e)
                        }
                    })]
                })
            }
        },
        602683: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("481060");
            t.default = function(e) {
                let {
                    assetKey: t,
                    initialValue: s,
                    onMessageChange: l,
                    title: r
                } = e, [o, d] = n.useState("");
                return n.useEffect(() => {
                    d(null != s ? s : "")
                }, [s]), (0, a.jsxs)(i.FormItem, {
                    children: [(0, a.jsx)(i.FormTitle, {
                        tag: i.FormTitleTags.H5,
                        children: r
                    }), (0, a.jsx)(i.FormText, {
                        children: (0, a.jsx)(i.TextInput, {
                            value: o,
                            onChange: function(e) {
                                d(e), l(t, e)
                            }
                        })
                    })]
                })
            }
        },
        916028: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("113434");
            t.default = function(e) {
                let {
                    onSelect: t,
                    quest: s
                } = e, {
                    quests: l
                } = (0, i.useQuests)({
                    fetchPolicy: "cache-and-network"
                }), r = [{
                    label: "NONE",
                    value: null
                }, ...l.map(e => ({
                    label: e.config.messages.questName,
                    value: e
                }))];
                return (0, a.jsxs)(n.FormItem, {
                    children: [(0, a.jsx)(n.FormTitle, {
                        tag: n.FormTitleTags.H5,
                        children: "Prefill with Quest"
                    }), (0, a.jsx)(n.FormText, {
                        children: (0, a.jsx)(n.Select, {
                            "aria-label": "Prefill Quest",
                            options: r,
                            isSelected: e => (null == e ? void 0 : e.id) === (null == s ? void 0 : s.id),
                            select: t,
                            serialize: String
                        })
                    })]
                })
            }
        },
        652380: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("627341");
            var a = s("735250"),
                n = s("470079"),
                i = s("278074"),
                l = s("774867"),
                r = s("481060"),
                o = s("70956"),
                d = s("497505"),
                u = s("210724"),
                c = s("78826"),
                S = s("37303"),
                E = s("134483"),
                T = s("478977"),
                _ = s("456799"),
                I = s("210851"),
                N = s("602683"),
                g = s("916028"),
                f = s("15033"),
                m = s("899457"),
                A = s("975266");

            function C(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let O = ["svg", "png", "gif", "webp"],
                h = [...O, "jpg", "jpeg"],
                R = Array.from(new Set([...h, "gif", "mp4", "webm"]));

            function p() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    {
                        streamProgressSeconds: t = 0,
                        completedAt: s = null,
                        enrolledAt: a = null,
                        claimedAt: n = null
                    } = e;
                return {
                    userId: "123",
                    questId: "1193992107035983872",
                    enrolledAt: a,
                    completedAt: s,
                    claimedAt: n,
                    claimedTier: null,
                    lastStreamHeartbeatAt: null,
                    streamProgressSeconds: t,
                    dismissedQuestContent: 0,
                    progress: {}
                }
            }
            let M = {
                id: "1193992107035983872",
                preview: !0,
                config: {
                    configVersion: 1,
                    expiresAt: "2030-06-01T00:00:00+00:00",
                    streamDurationRequirementMinutes: 10,
                    getGameLink: "https://discord.com/",
                    applicationId: "123",
                    applicationName: "Sky Runners",
                    gameTitle: "Sky Runners",
                    messages: {
                        questName: "Sky Runners",
                        rewardName: "Orange Buddy Jetpack",
                        rewardNameWithArticle: "an Orange Buddy Jetpack",
                        rewardRedemptionInstructionsByPlatform: {
                            0: "This code can be used on any platform!",
                            1: "Redeem your code on your Xbox.",
                            2: "Redeem your code on your Playstation.",
                            3: "Redeem your code on your Switch.",
                            4: "Redeem your code on your PC."
                        },
                        gameTitle: "Sky Runners",
                        gamePublisher: "Discord"
                    },
                    colors: {
                        primary: "#B377F3",
                        secondary: "#5865F2"
                    },
                    rewardsConfig: {
                        assignmentMethod: 1,
                        rewards: []
                    },
                    rewardCodeExpiresAt: "2030-07-01T00:00:00+00:00",
                    rewardCodePlatforms: [0, 4, 2, 3, 1],
                    assets: {
                        rewardTile: "reward.png",
                        hero: "hero.png",
                        questBarHero: "quests_bar_hero.webm",
                        gameTile: "game_tile.png",
                        logotype: "game_logotype.png"
                    },
                    inGameQuestConfig: null,
                    variants: [],
                    supplementaryApplicationIds: []
                },
                userStatus: null,
                targetedContent: []
            };

            function D() {
                var e, t, s;
                let [l, C] = n.useState(M), [D, x] = n.useState(m.UserState.UNENROLLED), [L, P] = n.useState([]), [b, v] = n.useState(!1), [U, j] = n.useState(null);
                let G = (s = l.config, (0, i.match)(s).with({
                    configVersion: 1
                }, e => ({
                    name: e.messages.rewardName,
                    nameWithArticle: e.messages.rewardNameWithArticle,
                    redemptionInstructionsByPlatform: e.messages.rewardRedemptionInstructionsByPlatform,
                    rewardTile: e.assets.rewardTile
                })).with({
                    configVersion: 2
                }, e => {
                    let t = e.rewardsConfig.rewards[0];
                    return {
                        ...t.messages,
                        rewardTile: t.asset
                    }
                }).exhaustive());
                n.useEffect(() => {
                    var e;
                    P((e = l.config, (0, i.match)(e).with({
                        configVersion: 1
                    }, e => e.variants).with({
                        configVersion: 2
                    }, e => e.features).exhaustive()))
                }, [l]);

                function F(e, t) {
                    if ("hero" === e || "questBarHero" === e || "gameTile" === e || "logotype" === e) {
                        var s, a;
                        C({
                            ...l,
                            config: (s = l.config, a = {
                                [e]: t
                            }, (0, i.match)(s).with({
                                configVersion: 1
                            }, e => ({
                                ...e,
                                assets: {
                                    ...e.assets,
                                    ...a
                                }
                            })).with({
                                configVersion: 2
                            }, e => ({
                                ...e,
                                assets: {
                                    ...e.assets,
                                    ...a
                                }
                            })).exhaustive())
                        })
                    }
                }

                function B(e, t) {
                    if ("questName" === e || "gameTitle" === e || "gamePublisher" === e) {
                        var s, a;
                        C({
                            ...l,
                            config: (s = l.config, a = {
                                [e]: t
                            }, (0, i.match)(s).with({
                                configVersion: 1
                            }, e => ({
                                ...e,
                                messages: {
                                    ...e.messages,
                                    ...a
                                }
                            })).with({
                                configVersion: 2
                            }, e => ({
                                ...e,
                                messages: {
                                    ...e.messages,
                                    ...a
                                }
                            })).exhaustive())
                        })
                    }
                }

                function y(e, t) {
                    if ("rewardName" === e || "rewardNameWithArticle" === e) {
                        var s, a;
                        C({
                            ...l,
                            config: (s = l.config, a = {
                                [e]: t
                            }, (0, i.match)(s).with({
                                configVersion: 1
                            }, e => ({
                                ...e,
                                messages: {
                                    ...e.messages,
                                    ...a
                                }
                            })).with({
                                configVersion: 2
                            }, e => ({
                                ...e,
                                rewardsConfig: {
                                    ...e.rewardsConfig,
                                    rewards: e.rewardsConfig.rewards.map((e, t) => 0 === t ? {
                                        ...e,
                                        messages: {
                                            ...e.messages,
                                            ...a
                                        }
                                    } : e)
                                }
                            })).exhaustive())
                        })
                    }
                }

                function V(e, t) {
                    C({
                        ...l,
                        config: {
                            ...l.config,
                            colors: {
                                ...l.config.colors,
                                [e]: t
                            }
                        }
                    })
                }
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(r.Heading, {
                        variant: "heading-lg/bold",
                        className: A.heading,
                        children: "Quest Preview Tool"
                    }), (0, a.jsx)("div", {
                        className: A.fields,
                        children: (0, a.jsx)(g.default, {
                            onSelect: function(e) {
                                j(e), null != e && C(e)
                            },
                            quest: U
                        })
                    }), (0, a.jsx)(r.Heading, {
                        variant: "heading-md/semibold",
                        className: A.subheading,
                        children: "Messages"
                    }), (0, a.jsxs)("div", {
                        className: A.fields,
                        children: [(0, a.jsx)(N.default, {
                            title: "Quest Name",
                            assetKey: "questName",
                            onMessageChange: B,
                            initialValue: l.config.messages.questName
                        }), (0, a.jsx)(N.default, {
                            title: "Game Title",
                            assetKey: "gameTitle",
                            onMessageChange: B,
                            initialValue: l.config.messages.gameTitle
                        }), (0, a.jsx)(N.default, {
                            title: "Reward Name",
                            assetKey: "rewardName",
                            onMessageChange: y,
                            initialValue: G.name
                        }), (0, a.jsx)(N.default, {
                            title: "Reward Name With Article",
                            assetKey: "rewardNameWithArticle",
                            onMessageChange: y,
                            initialValue: G.nameWithArticle
                        })]
                    }), (0, a.jsx)(r.Heading, {
                        variant: "heading-md/semibold",
                        className: A.subheading,
                        children: "Assets"
                    }), (0, a.jsxs)("div", {
                        className: A.fields,
                        children: [(0, a.jsx)(I.default, {
                            title: "Game Tile Asset",
                            assetKey: "gameTile",
                            onFileChange: F,
                            filters: h,
                            initialValue: l.config.assets.gameTile
                        }), (0, a.jsx)(I.default, {
                            title: "Logotype",
                            assetKey: "logotype",
                            onFileChange: F,
                            filters: O,
                            initialValue: l.config.assets.logotype
                        }), (0, a.jsx)(I.default, {
                            title: "Quest Bar Hero Asset",
                            assetKey: "questBarHero",
                            onFileChange: F,
                            filters: R,
                            initialValue: l.config.assets.questBarHero
                        }), (0, a.jsx)(I.default, {
                            title: "Reward Tile Asset",
                            assetKey: "rewardTile",
                            onFileChange: function(e, t) {
                                if ("rewardTile" === e) {
                                    var s, a;
                                    C({
                                        ...l,
                                        config: (s = l.config, a = {
                                            [e]: t
                                        }, (0, i.match)(s).with({
                                            configVersion: 1
                                        }, e => ({
                                            ...e,
                                            assets: {
                                                ...e.assets,
                                                ...a
                                            }
                                        })).with({
                                            configVersion: 2
                                        }, e => ({
                                            ...e,
                                            assets: {
                                                ...e.assets,
                                                ...a
                                            },
                                            rewardsConfig: {
                                                ...e.rewardsConfig,
                                                rewards: e.rewardsConfig.rewards.map((e, t) => 0 === t ? {
                                                    ...e,
                                                    asset: a.rewardTile
                                                } : e)
                                            }
                                        })).exhaustive())
                                    })
                                }
                            },
                            filters: R,
                            initialValue: G.rewardTile
                        }), (0, a.jsx)(I.default, {
                            title: "Gift Inventory Hero",
                            assetKey: "hero",
                            onFileChange: F,
                            filters: R,
                            initialValue: l.config.assets.hero
                        })]
                    }), (0, a.jsx)("div", {
                        className: A.fields,
                        children: (0, a.jsx)("div", {
                            className: A.fullWidthField,
                            children: (0, a.jsx)(f.default, {
                                onChange: function(e) {
                                    var t, s;
                                    C({
                                        ...l,
                                        config: (t = l.config, s = e, (0, i.match)(t).with({
                                            configVersion: 1
                                        }, e => ({
                                            ...e,
                                            variants: s
                                        })).with({
                                            configVersion: 2
                                        }, e => ({
                                            ...e,
                                            features: s
                                        })).exhaustive())
                                    }), P(e)
                                },
                                values: L
                            })
                        })
                    }), (0, a.jsx)(r.Heading, {
                        variant: "heading-md/semibold",
                        className: A.subheading,
                        children: "Colors & Quest States"
                    }), (0, a.jsxs)("div", {
                        className: A.fields,
                        children: [(0, a.jsxs)("div", {
                            className: A.fields,
                            style: {
                                marginBottom: 0
                            },
                            children: [(0, a.jsx)(T.default, {
                                title: "Primary",
                                colorKey: "primary",
                                onChange: V,
                                value: l.config.colors.primary
                            }), (0, a.jsx)(T.default, {
                                title: "Secondary",
                                colorKey: "secondary",
                                onChange: V,
                                value: l.config.colors.secondary
                            })]
                        }), (0, a.jsx)(m.default, {
                            onChange: function(e) {
                                switch (x(e), e) {
                                    case m.UserState.UNENROLLED:
                                        C({
                                            ...l,
                                            userStatus: null
                                        });
                                        break;
                                    case m.UserState.ENROLLED:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                enrolledAt: new Date().toISOString()
                                            })
                                        });
                                        break;
                                    case m.UserState.COMPLETED_25:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                enrolledAt: new Date().toISOString(),
                                                streamProgressSeconds: 10 * o.default.Seconds.MINUTE * .25
                                            })
                                        });
                                        break;
                                    case m.UserState.COMPLETED_50:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                enrolledAt: new Date().toISOString(),
                                                streamProgressSeconds: 10 * o.default.Seconds.MINUTE * .5
                                            })
                                        });
                                        break;
                                    case m.UserState.COMPLETED_75:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                enrolledAt: new Date().toISOString(),
                                                streamProgressSeconds: 10 * o.default.Seconds.MINUTE * .75
                                            })
                                        });
                                        break;
                                    case m.UserState.COMPLETED_100:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                completedAt: new Date().toISOString(),
                                                enrolledAt: new Date().toISOString(),
                                                streamProgressSeconds: 10 * o.default.Seconds.MINUTE
                                            })
                                        });
                                        break;
                                    case m.UserState.CLAIMED:
                                        C({
                                            ...l,
                                            userStatus: p({
                                                claimedAt: new Date().toISOString(),
                                                completedAt: new Date().toISOString(),
                                                enrolledAt: new Date().toISOString(),
                                                streamProgressSeconds: 10 * o.default.Seconds.MINUTE
                                            })
                                        })
                                }
                            },
                            value: D
                        })]
                    }), (0, a.jsx)(r.Heading, {
                        variant: "heading-lg/bold",
                        className: A.heading,
                        children: "Component Previews"
                    }), (0, a.jsxs)("div", {
                        className: A.componentPreviews,
                        children: [(0, a.jsxs)(_.default, {
                            withBorder: !0,
                            children: [(0, a.jsx)(r.FormTitle, {
                                children: "Quest Bar"
                            }), (0, a.jsxs)("div", {
                                className: A.questBarPreviewWrapper,
                                children: [(null === (e = l.userStatus) || void 0 === e ? void 0 : e.claimedAt) != null && (0, a.jsx)(r.Text, {
                                    color: "text-secondary",
                                    variant: "text-sm/normal",
                                    children: "The Quest Bar is hidden when the user has claimed the reward."
                                }), (0, a.jsx)("div", {
                                    className: A.questBarPreview,
                                    children: (0, a.jsx)(c.QuestsAssetContextProvider, {
                                        isPreview: !0,
                                        children: (0, a.jsx)(u.QuestBar, {
                                            quest: l
                                        })
                                    })
                                })]
                            })]
                        }), (0, a.jsxs)(_.default, {
                            children: [(0, a.jsx)(r.FormTitle, {
                                children: "Gift Inventory"
                            }), (0, a.jsx)(c.QuestsAssetContextProvider, {
                                isPreview: !0,
                                children: (0, a.jsx)(S.QuestsCard, {
                                    quest: l,
                                    location: d.QuestContent.GIFT_INVENTORY_FOR_YOU
                                })
                            })]
                        }), (0, a.jsxs)(_.default, {
                            withBorder: !0,
                            children: [(0, a.jsx)(r.FormTitle, {
                                children: "Channel Call Header"
                            }), (null === (t = l.userStatus) || void 0 === t ? void 0 : t.claimedAt) != null && (0, a.jsx)(r.Text, {
                                color: "text-secondary",
                                variant: "text-sm/normal",
                                children: "The Quest Channel Call Header is hidden when the user has claimed the reward."
                            }), (0, a.jsx)("div", {
                                className: A.questBarPreviewWrapper,
                                children: (0, a.jsx)(c.QuestsAssetContextProvider, {
                                    isPreview: !0,
                                    children: (0, a.jsx)("div", {
                                        className: A.questChannelCallHeaderPreview,
                                        children: (0, a.jsx)(E.default, {
                                            channelId: "123",
                                            previewQuest: l,
                                            isParticipatingOverride: b
                                        })
                                    })
                                })
                            })]
                        }), (0, a.jsx)("div", {
                            className: A.channelCallParticipationToggle,
                            children: (0, a.jsx)(r.FormItem, {
                                children: (0, a.jsx)(r.FormSwitch, {
                                    value: b,
                                    onChange: function(e) {
                                        v(e)
                                    },
                                    hideBorder: !0,
                                    children: "Is Participating:"
                                })
                            })
                        })]
                    })]
                })
            }
            class x extends n.Component {
                componentDidCatch(e) {
                    this.setState({
                        error: e
                    })
                }
                render() {
                    let {
                        error: e,
                        renderKey: t
                    } = this.state;
                    return null != e ? (0, a.jsxs)("div", {
                        className: A.errorBoundary,
                        children: [(0, a.jsx)(l.CircleExclamationPointIcon, {
                            className: A.errorBoundaryIcon
                        }), (0, a.jsx)(r.Heading, {
                            variant: "heading-lg/semibold",
                            children: "Something broke in the Quest preview tool :("
                        }), (0, a.jsx)(r.Button, {
                            color: r.ButtonColors.PRIMARY,
                            onClick: this.handleResetState,
                            children: "Reset"
                        }), null != e.message && (0, a.jsx)(r.Card, {
                            className: A.errorMessageWrapper,
                            children: (0, a.jsx)("code", {
                                className: A.errorMessage,
                                children: e.message
                            })
                        })]
                    }) : (0, a.jsx)(D, {}, t)
                }
                constructor(...e) {
                    super(...e), C(this, "state", {
                        error: null,
                        renderKey: 0
                    }), C(this, "handleResetState", () => {
                        this.setState(e => ({
                            error: null,
                            renderKey: e.renderKey + 1
                        }))
                    })
                }
            }
            t.default = x
        },
        15033: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("128034"),
                i = s("481060"),
                l = s("46140");
            t.default = function(e) {
                let {
                    onChange: t,
                    values: s
                } = e, r = [{
                    label: "Playtime Task",
                    value: l.QuestVariants.PLAYTIME_TASK
                }, {
                    label: "Post Enrollment CTA",
                    value: l.QuestVariants.POST_ENROLLMENT_CTA
                }, {
                    label: "Quest Bar V2",
                    value: l.QuestVariants.QUEST_BAR_V2
                }];
                return (0, a.jsxs)(i.FormItem, {
                    children: [(0, a.jsx)(i.FormTitle, {
                        tag: i.FormTitleTags.H5,
                        children: (0, a.jsxs)("div", {
                            style: {
                                display: "flex",
                                gap: "4px",
                                placeItems: "center"
                            },
                            children: ["Variants", (0, a.jsx)(i.Tooltip, {
                                text: "Heads up: Some variants are still in the works. Test with care!",
                                children: e => (0, a.jsx)(n.CircleInformationIcon, {
                                    ...e,
                                    height: 16,
                                    width: 16
                                })
                            })]
                        })
                    }), (0, a.jsx)(i.FormText, {
                        children: (0, a.jsx)(i.SearchableSelect, {
                            "aria-label": "Variants",
                            options: r,
                            onChange: t,
                            value: s,
                            multi: !0
                        })
                    })]
                })
            }
        },
        899457: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                UserState: function() {
                    return n
                }
            });
            var a, n, i = s("735250");
            s("470079");
            var l = s("481060");
            (a = n || (n = {}))[a.UNENROLLED = 0] = "UNENROLLED", a[a.ENROLLED = 1] = "ENROLLED", a[a.COMPLETED_25 = 2] = "COMPLETED_25", a[a.COMPLETED_50 = 3] = "COMPLETED_50", a[a.COMPLETED_75 = 4] = "COMPLETED_75", a[a.COMPLETED_100 = 5] = "COMPLETED_100", a[a.CLAIMED = 6] = "CLAIMED";
            t.default = function(e) {
                let {
                    onChange: t,
                    value: s
                } = e;
                return (0, i.jsxs)(l.FormItem, {
                    children: [(0, i.jsx)(l.FormTitle, {
                        tag: l.FormTitleTags.H5,
                        children: "User State"
                    }), (0, i.jsx)(l.FormText, {
                        children: (0, i.jsx)(l.Select, {
                            "aria-label": "User State",
                            options: [{
                                label: "Unenrolled",
                                value: 0
                            }, {
                                label: "Enrolled",
                                value: 1
                            }, {
                                label: "25% Complete",
                                value: 2
                            }, {
                                label: "50% Complete",
                                value: 3
                            }, {
                                label: "75% Complete",
                                value: 4
                            }, {
                                label: "100% Complete",
                                value: 5
                            }, {
                                label: "Claimed",
                                value: 6
                            }],
                            isSelected: e => e === s,
                            select: t,
                            serialize: String
                        })
                    })]
                })
            }
        },
        97926: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("724458");
            var a = s("735250"),
                n = s("470079"),
                i = s("844099"),
                l = s("481060"),
                r = s("63063"),
                o = s("686777"),
                d = s("113434"),
                u = s("497505"),
                c = s("918701"),
                S = s("37303"),
                E = s("46140"),
                T = s("981631"),
                _ = s("689938"),
                I = s("201403");

            function N(e) {
                if (null == e) return !1;
                let {
                    userStatus: t
                } = e, s = (null == t ? void 0 : t.completedAt) != null && (null == t ? void 0 : t.claimedAt) == null, a = (null == t ? void 0 : t.enrolledAt) != null && (null == t ? void 0 : t.completedAt) == null;
                return s || a || (0, c.isTargetedForContent)(e, u.QuestContent.GIFT_INVENTORY_FOR_YOU)
            }
            t.default = () => {
                (0, d.useDismissNewQuestBadge)();
                let {
                    quests: e,
                    isFetchingCurrentQuests: t
                } = (0, d.useQuests)({
                    fetchPolicy: "cache-and-network"
                }), s = (0, d.useExpiredQuestsMap)(), g = (0, o.useIsEligibleForConcurrentQuests)({
                    location: E.QuestsExperimentLocations.USER_SETTINGS_GIFT_INVENTORY
                }), [f, m] = n.useState(!0), [A, C] = n.useState([]), [O, h] = n.useState([]), R = n.useMemo(() => f ? t ? "unsorted" : "pending_sort" : "sorted", [f, t]);
                n.useEffect(() => {
                    m(!0)
                }, [t, s]), n.useEffect(() => {
                    if ("pending_sort" === R) {
                        let {
                            sortedQuestIds: t,
                            sections: a
                        } = function(e) {
                            let t = new Map(e.map(e => [e.id, e])),
                                s = e.sort((e, t) => {
                                    var s, a, n, i, l, r;
                                    let o = (null === (s = e.userStatus) || void 0 === s ? void 0 : s.completedAt) != null,
                                        d = (null === (a = e.userStatus) || void 0 === a ? void 0 : a.claimedAt) != null,
                                        S = (null === (n = t.userStatus) || void 0 === n ? void 0 : n.completedAt) != null,
                                        T = (null === (i = t.userStatus) || void 0 === i ? void 0 : i.claimedAt) != null;
                                    if (o && !d && S && !T) return 0;
                                    if (o && !d) return -1;
                                    if (S && !T) return 1;
                                    let _ = (null === (l = e.userStatus) || void 0 === l ? void 0 : l.enrolledAt) != null,
                                        I = (null === (r = t.userStatus) || void 0 === r ? void 0 : r.enrolledAt) != null;
                                    if (_ && !o && I && !S) {
                                        let {
                                            percentComplete: s
                                        } = (0, c.getQuestTaskDetails)({
                                            quest: e,
                                            location: E.QuestsExperimentLocations.USER_SETTINGS_GIFT_INVENTORY
                                        }), {
                                            percentComplete: a
                                        } = (0, c.getQuestTaskDetails)({
                                            quest: t,
                                            location: E.QuestsExperimentLocations.USER_SETTINGS_GIFT_INVENTORY
                                        });
                                        return a - s
                                    }
                                    if (_ && !o) return -1;
                                    if (I && !S) return 1;
                                    let N = (0, c.isTargetedForContent)(e, u.QuestContent.QUEST_BAR),
                                        g = (0, c.isTargetedForContent)(t, u.QuestContent.QUEST_BAR);
                                    if (N && g) return 0;
                                    if (N) return -1;
                                    if (g) return 1;
                                    let f = (0, c.isTargetedForContent)(e, u.QuestContent.GIFT_INVENTORY_FOR_YOU),
                                        m = (0, c.isTargetedForContent)(t, u.QuestContent.GIFT_INVENTORY_FOR_YOU);
                                    if (f && !_ && !o && m && !I && !S) return 0;
                                    if (f && !_ && !o) return -1;
                                    if (m && !I && !S) return 1;
                                    let A = o && d,
                                        C = S && T;
                                    return A && !C ? 1 : !A && C ? -1 : 0
                                }).map(e => e.id),
                                a = [{
                                    location: u.QuestContent.GIFT_INVENTORY_FOR_YOU,
                                    title: _.default.Messages.QUESTS_FOR_YOU,
                                    questIds: s.filter(e => N(t.get(e)))
                                }, {
                                    location: u.QuestContent.GIFT_INVENTORY_OTHER,
                                    title: _.default.Messages.QUESTS_OTHER,
                                    questIds: s.filter(e => !N(t.get(e)))
                                }];
                            return {
                                sortedQuestIds: s,
                                sections: a
                            }
                        }(e.filter(e => {
                            var t, a;
                            let n = (null === (t = e.userStatus) || void 0 === t ? void 0 : t.completedAt) != null;
                            return !(null !== (a = s.get(e.id)) && void 0 !== a && a) || n
                        }));
                        C(t), h(a), m(!1)
                    }
                }, [e, s, R]);
                let p = O.every(e => {
                    let {
                        questIds: t
                    } = e;
                    return t.length > 0
                });
                return t || "sorted" !== R ? (0, a.jsx)(l.Spinner, {
                    className: I.spinner
                }) : 0 === A.length ? null : (0, a.jsx)(l.FormSection, {
                    className: I.questsContainer,
                    children: (0, a.jsxs)(l.HeadingLevel, {
                        component: (0, a.jsxs)("div", {
                            className: I.questsHeading,
                            children: [g && (0, a.jsx)(i.QuestsIcon, {
                                className: I.questsIcon
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-md/semibold",
                                className: I.questsHeading,
                                children: _.default.Messages.QUESTS
                            }), (0, a.jsx)(l.Text, {
                                variant: "text-xs/normal",
                                className: I.questsHeadingLearnMore,
                                children: _.default.Messages.QUESTS_LEARN_MORE_LINK.format({
                                    questsLearnMoreLink: r.default.getArticleURL(T.HelpdeskArticles.QUESTS_LEARN_MORE)
                                })
                            })]
                        }),
                        children: [(0, a.jsx)(l.FormDivider, {
                            className: I.divider
                        }), g ? O.map((e, t, s) => {
                            let {
                                location: n,
                                questIds: i,
                                title: r
                            } = e;
                            if (0 === i.length) return null;
                            let o = 0 === t ? 0 : s.slice(0, t).reduce((e, t) => {
                                let {
                                    questIds: s
                                } = t;
                                return e + s.length
                            }, 0);
                            return (0, a.jsxs)("section", {
                                className: I.questsListContainer,
                                children: [p && (0, a.jsx)(l.Text, {
                                    variant: "text-xs/semibold",
                                    color: "header-secondary",
                                    className: I.sectionHeader,
                                    children: r
                                }), i.map((e, t) => (0, a.jsx)(S.QuestsCardWrapper, {
                                    questId: e,
                                    location: n,
                                    contentPosition: t + o,
                                    initiallyExpanded: !p
                                }, e))]
                            }, n)
                        }) : A.map((e, t) => (0, a.jsx)(S.QuestsCardWrapper, {
                            questId: e,
                            location: u.QuestContent.GIFT_INVENTORY_FOR_YOU,
                            contentPosition: t
                        }, e))]
                    })
                })
            }
        },
        622414: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("570140");
            t.default = {
                startSpeedTest() {
                    a.default.dispatch({
                        type: "RTC_SPEED_TEST_START_TEST"
                    })
                },
                stopSpeedTest() {
                    a.default.dispatch({
                        type: "RTC_SPEED_TEST_STOP_TEST"
                    })
                }
            }
        },
        369541: function(e, t, s) {
            "use strict";
            var a, n, i, l, r, o, d, u;
            s.r(t), s.d(t, {
                SpeedTestDirections: function() {
                    return n
                },
                SpeedTestLifecycles: function() {
                    return i
                },
                SpeedTestOpcodes: function() {
                    return l
                },
                SpeedTestStates: function() {
                    return a
                }
            }), (r = a || (a = {})).STARTING_RECEIVER = "STARTING_RECEIVER", r.SENDING = "SENDING", r.AWAITING_RESULTS = "AWAITING_RESULTS", r.COMPLETED = "COMPLETED", (o = n || (n = {})).CLIENT_TO_SERVER = "CLIENT_TO_SERVER", o.SERVER_TO_CLIENT = "SERVER_TO_CLIENT", (d = i || (i = {}))[d.INACTIVE = 0] = "INACTIVE", d[d.CANCELLED = 1] = "CANCELLED", d[d.AWAITING_ENDPOINT = 2] = "AWAITING_ENDPOINT", d[d.CONNECTING = 3] = "CONNECTING", d[d.PINGING = 4] = "PINGING", d[d.TESTING = 5] = "TESTING", d[d.UPLOADING = 6] = "UPLOADING", d[d.COMPLETED = 7] = "COMPLETED", (u = l || (l = {}))[u.CLIENT_TO_SERVER_START = 0] = "CLIENT_TO_SERVER_START", u[u.CLIENT_TO_SERVER_END = 1] = "CLIENT_TO_SERVER_END", u[u.SERVER_TO_CLIENT_START = 2] = "SERVER_TO_CLIENT_START", u[u.SERVER_TO_CLIENT_END = 3] = "SERVER_TO_CLIENT_END"
        },
        42955: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("411104"), s("757143");
            var a, n = s("654861"),
                i = s.n(n),
                l = s("836560"),
                r = s("729594"),
                o = s("153832"),
                d = s("261470"),
                u = s("46973"),
                c = s("685756"),
                S = s("710845"),
                E = s("131951"),
                T = s("70956"),
                _ = s("358085"),
                I = s("399002"),
                N = s("369541"),
                g = s("981631"),
                f = s("65154");

            function m(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let A = /^https/.test((a = "https:", "https:")) ? "wss:" : "ws:";
            class C extends l.EventEmitter {
                connect() {
                    this._backoff.cancel();
                    let e = this._socket = new c.default(this._endpoint);
                    e.on(c.SocketEvent.Connecting, this._handleConnecting.bind(this, e)), e.on(c.SocketEvent.Connect, this._handleConnect.bind(this, e)), e.on(c.SocketEvent.Disconnect, this._handleDisconnect.bind(this, e)), e.on(c.SocketEvent.Resuming, this._handleResuming.bind(this, e)), e.on(c.SocketEvent.Ready, this._handleReady.bind(this, e)), e.on(c.SocketEvent.Speaking, this._handleSpeaking.bind(this, e)), e.on(c.SocketEvent.Video, this._handleVideo.bind(this, e)), e.on(c.SocketEvent.Ping, this._handleControlPing.bind(this)), e.on(c.SocketEvent.ClientDisconnect, this._handleClientDisconnect.bind(this)), e.on(c.SocketEvent.Codecs, this._handleCodecs.bind(this)), e.on(c.SocketEvent.MediaSessionId, this._handleMediaSessionId.bind(this)), e.on(c.SocketEvent.MediaSinkWants, this._handleMediaSinkWants.bind(this)), e.on(c.SocketEvent.VoiceBackendVersion, this._handleCodeVersion.bind(this)), e.on(c.SocketEvent.KeyframeInterval, this._handleKeyframeInterval.bind(this)), e.on(c.SocketEvent.SpeedTest, this._handleSpeedTest.bind(this)), e.setHeartbeatIntervalModifier(2), e.connect()
                }
                destroy() {
                    if (this._backoff.cancel(), this._cleanupSocket(), null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.removeAllListeners(), this._destroyed = !0
                }
                _cleanupSocket() {
                    let e = this._socket;
                    null != e && (e.close(), e.removeAllListeners(), this._socket = null)
                }
                setState(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    this.logger.info("RTC connection state: ".concat(this.state, " => ").concat(e)), this.state = e, this.emit("state", e, {
                        hostname: this.hostname,
                        channelId: i()(this.rtcServerId).prev().toString()
                    }, t)
                }
                startClientToServerSpeedTest(e) {
                    this.state === g.RTCConnectionStates.RTC_CONNECTED && (this._speedTestParams = e, this._speedTestDirection = N.SpeedTestDirections.CLIENT_TO_SERVER, this._setSpeedTestState(N.SpeedTestStates.STARTING_RECEIVER), this._speedTest(N.SpeedTestOpcodes.CLIENT_TO_SERVER_START, {}))
                }
                startServerToClientSpeedTest(e) {
                    let t = this._connection;
                    this.state === g.RTCConnectionStates.RTC_CONNECTED && null != t && (this._speedTestParams = e, this._speedTestDirection = N.SpeedTestDirections.SERVER_TO_CLIENT, this._setSpeedTestState(N.SpeedTestStates.STARTING_RECEIVER), t.startSpeedTestReceiver(() => {
                        var e, t, s;
                        this._setSpeedTestState(N.SpeedTestStates.SENDING), this._speedTest(N.SpeedTestOpcodes.SERVER_TO_CLIENT_START, {
                            cluster_size: null === (e = this._speedTestParams) || void 0 === e ? void 0 : e.clusterSize,
                            cluster_interval_ms: null === (t = this._speedTestParams) || void 0 === t ? void 0 : t.clusterIntervalMs,
                            num_clusters: null === (s = this._speedTestParams) || void 0 === s ? void 0 : s.numClusters
                        })
                    }, -1))
                }
                stopClientToServerSpeedTest() {
                    this._speedTest(N.SpeedTestOpcodes.CLIENT_TO_SERVER_END, {}), null != this._connection && this._connection.stopSpeedTestSender()
                }
                stopServerToClientSpeedTest() {
                    this._speedTest(N.SpeedTestOpcodes.SERVER_TO_CLIENT_END, {}), null != this._connection && this._connection.stopSpeedTestReceiver(() => {})
                }
                getNetworkOverhead() {
                    return this._networkOverhead
                }
                setPingInterval(e) {
                    null != this._connection && this._connection.setPingInterval(e)
                }
                _setSpeedTestState(e) {
                    this._speedTestState = e, this.emit("speed-test-state", e)
                }
                _completeSpeedTests(e, t) {
                    this._speedTestState = N.SpeedTestStates.COMPLETED, this.emit("speed-test-completed", e, t)
                }
                _speedTest(e, t) {
                    let s = this._socket;
                    null != s && s.speedTest(e, t)
                }
                _handleConnecting(e) {
                    null != this._endpoint && this.logger.info("Connecting to RTC server ".concat(this._endpoint, ", rtc-connection-id: ").concat(this._rtcConnectionId)), this.setState(g.RTCConnectionStates.CONNECTING)
                }
                _handleConnect(e) {
                    let t = this.token;
                    if (null == t) throw Error("RTCConnection._handleConnect(...): Token is missing.");
                    {
                        this.logger.info("Connected to RTC server.");
                        let s = [{
                            rid: "100",
                            type: f.MediaTypes.TEST,
                            quality: 100
                        }];
                        e.identify({
                            serverId: this.rtcServerId,
                            userId: this.userId,
                            sessionId: this.sessionId,
                            token: t,
                            maxSecureFramesVersion: E.default.getSupportedSecureFramesProtocolVersion(this.rtcServerId),
                            video: !1,
                            streamParameters: s
                        }), this.setState(g.RTCConnectionStates.AUTHENTICATING)
                    }
                }
                _handleDisconnect(e, t, s, a) {
                    this.logger.info("Disconnected from RTC server, clean: ".concat(t, ", code: ").concat(s, ", reason: ").concat(a, ", state: ").concat(this.state));
                    let n = "Force Close" !== a;
                    if (n) {
                        let e = this._backoff.fail(this.reconnect);
                        this.logger.warn("Disconnect was not clean! reason=".concat(a, ". Reconnecting in ").concat((e / 1e3).toFixed(2), " seconds."))
                    }
                    if (null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.setState(g.RTCConnectionStates.DISCONNECTED, {
                        willReconnect: n
                    })
                }
                _handleResuming(e) {
                    this.emit("resuming")
                }
                _handleReady(e, t, s, a, n, i, l) {
                    this.setState(g.RTCConnectionStates.RTC_CONNECTING), this.mediaEnginePort = s, this.mediaEngineAddress = t;
                    let r = E.default.getMediaEngine().speedTester(this.userId, {
                        ssrc: n,
                        address: t,
                        port: s,
                        modes: a,
                        experiments: [],
                        streamParameters: i,
                        qosEnabled: E.default.getQoS()
                    });
                    r.on(u.BaseSpeedTesterEvent.Connected, this._handleMediaEngineConnected.bind(this, e, r)), r.on(u.BaseSpeedTesterEvent.Error, this._handleMediaEngineError.bind(this, e, r)), r.on(u.BaseSpeedTesterEvent.ConnectionStateChange, this._handleMediaEngineConnectionStateChange.bind(this, e, r)), r.on(u.BaseSpeedTesterEvent.Ping, this._handleMediaEnginePing.bind(this, e)), r.on(u.BaseSpeedTesterEvent.PingTimeout, this._handleMediaEnginePingTimeout.bind(this, e)), this._connection = r
                }
                _handleSpeaking(e, t, s, a) {}
                _handleVideo(e, t, s, a, n) {}
                _handleControlPing(e) {}
                _handleClientDisconnect(e) {}
                _handleCodecs(e, t) {
                    let s = this._connection;
                    null != s && null != this.protocol ? (s.setCodecs(null != e && "" !== e ? e : f.Codecs.OPUS, "TEST"), this.emit("ready")) : this.logger.warn("Cannot set codecs on connection with protocol:", this.protocol)
                }
                _handleSpeedTest(e, t) {
                    let s = this._connection;
                    if (null != s && null != e) {
                        if (this._speedTestState === N.SpeedTestStates.STARTING_RECEIVER && this._speedTestDirection === N.SpeedTestDirections.CLIENT_TO_SERVER && e === N.SpeedTestOpcodes.CLIENT_TO_SERVER_START) {
                            var a;
                            this._setSpeedTestState(N.SpeedTestStates.SENDING), s.startSpeedTestSender((e, t) => {
                                this._speedTest(N.SpeedTestOpcodes.CLIENT_TO_SERVER_END, {}), this._setSpeedTestState(N.SpeedTestStates.AWAITING_RESULTS)
                            }, this._speedTestParams.clusterSize, this._speedTestParams.clusterIntervalMs, this._speedTestParams.numClusters)
                        }
                        if (this._speedTestState === N.SpeedTestStates.AWAITING_RESULTS && this._speedTestDirection === N.SpeedTestDirections.CLIENT_TO_SERVER && e === N.SpeedTestOpcodes.CLIENT_TO_SERVER_END) {
                            let e = t.results,
                                s = (0, I.speedTestSummary)(e, this._speedTestParams, null !== (a = this._networkOverhead) && void 0 !== a ? a : 0);
                            this._speedTestDirection = null, this._speedTestParams = null, this._completeSpeedTests(e, s)
                        }
                        this._speedTestState === N.SpeedTestStates.SENDING && this._speedTestDirection === N.SpeedTestDirections.SERVER_TO_CLIENT && e === N.SpeedTestOpcodes.SERVER_TO_CLIENT_END && (this._setSpeedTestState(N.SpeedTestStates.AWAITING_RESULTS), s.stopSpeedTestReceiver((e, t) => {
                            var s;
                            let a = (0, I.speedTestSummary)(t, this._speedTestParams, null !== (s = this._networkOverhead) && void 0 !== s ? s : 0);
                            this._speedTestDirection = null, this._speedTestParams = null, this._completeSpeedTests(t, a)
                        }))
                    }
                }
                _handleMediaSessionId(e) {}
                _handleMediaSinkWants(e) {}
                _handleCodeVersion(e, t) {}
                _handleKeyframeInterval(e) {}
                _handleMediaEngineConnected(e, t, s, a) {
                    if (this.logger.info("RTC connected to media server: ".concat(this.mediaEngineAddress, ":").concat(this.mediaEnginePort)), e !== this._socket) {
                        this.logger.warn("Socket mismatch, disconnecting");
                        return
                    }
                    switch (this.protocol = s, s) {
                        case "udp":
                            this.logger.info("Sending UDP info to RTC server.", a, []), e.once(c.SocketEvent.Encryption, (e, s) => {
                                t === this._connection && (t.setEncryption(e, s), t.getNetworkOverhead(e => this._networkOverhead = e))
                            }), e.selectProtocol(s, this._rtcConnectionId, a, []);
                            break;
                        case "webrtc":
                            this.logger.info("Sending local SDP to RTC server."), e.once(c.SocketEvent.SDP, this._handleSDP.bind(this)), e.selectProtocol(s, this._rtcConnectionId, a);
                            break;
                        default:
                            this.logger.error("Unable to determine protocol.");
                            return
                    }
                    this._backoff.succeed()
                }
                _handleMediaEngineError(e, t, s) {
                    e === this._socket && this.logger.error("Error occurred while connecting to RTC server: ".concat(s))
                }
                _handleMediaEngineConnectionStateChange(e, t, s) {
                    if (this.logger.info("RTC media connection state change: ".concat(this.state, " => ").concat(s)), e !== this._socket) return;
                    let a = this.state;
                    switch (s) {
                        case f.ConnectionStates.DISCONNECTED:
                            this.setState(g.RTCConnectionStates.RTC_DISCONNECTED);
                            break;
                        case f.ConnectionStates.CONNECTING:
                            this.setState(g.RTCConnectionStates.RTC_CONNECTING);
                            break;
                        case f.ConnectionStates.CONNECTED:
                            this.setState(g.RTCConnectionStates.RTC_CONNECTED);
                            break;
                        case f.ConnectionStates.NO_ROUTE:
                            this.setState(g.RTCConnectionStates.NO_ROUTE);
                            break;
                        case f.ConnectionStates.ICE_CHECKING:
                            this.setState(g.RTCConnectionStates.ICE_CHECKING);
                            break;
                        case f.ConnectionStates.DTLS_CONNECTING:
                            this.setState(g.RTCConnectionStates.DTLS_CONNECTING)
                    }
                    a === g.RTCConnectionStates.RTC_CONNECTING && this.state === g.RTCConnectionStates.RTC_DISCONNECTED ? this.reconnect() : this.state === g.RTCConnectionStates.NO_ROUTE && this._backoff.fail(this.reconnect)
                }
                _handleMediaEnginePing(e, t) {
                    this.emit("ping", t)
                }
                _handleMediaEnginePingTimeout(e, t, s) {
                    this.emit("ping-timeout", s)
                }
                _handleSDP(e) {
                    let t = this._connection;
                    null != t && null != this.protocol ? t.setSDP(e) : this.logger.warn("Cannot set SDP on connection with protocol:", this.protocol)
                }
                constructor({
                    userId: e,
                    sessionId: t,
                    rtcServerId: s,
                    endpoint: a,
                    token: n
                }) {
                    super(), m(this, "userId", void 0), m(this, "sessionId", void 0), m(this, "rtcServerId", void 0), m(this, "_endpoint", void 0), m(this, "hostname", void 0), m(this, "mediaEnginePort", void 0), m(this, "mediaEngineAddress", void 0), m(this, "token", void 0), m(this, "protocol", void 0), m(this, "state", void 0), m(this, "_socket", void 0), m(this, "_connection", void 0), m(this, "_destroyed", void 0), m(this, "_speedTestState", void 0), m(this, "_speedTestDirection", void 0), m(this, "_speedTestParams", void 0), m(this, "_rtcConnectionId", void 0), m(this, "_backoff", void 0), m(this, "logger", void 0), m(this, "_networkOverhead", void 0), m(this, "reconnect", () => {
                        let e = this._socket;
                        null != e && (e.close(), e.connect())
                    }), this._rtcConnectionId = (0, o.v4)(), this.logger = new S.default("RTCSpeedTestRTCConnection(".concat(s, ")")), this.userId = e, this.sessionId = t, this.rtcServerId = s, this.mediaEnginePort = null, this.mediaEngineAddress = null, this._speedTestState = null, this._speedTestDirection = null, this._speedTestParams = null, this.state = g.RTCConnectionStates.AWAITING_ENDPOINT, this._socket = null, this.token = n, this._destroyed = !1, this._connection = null, this._backoff = new d.default(1 * T.default.Millis.SECOND, 10 * T.default.Millis.SECOND), a = "".concat(A, "//").concat(a), (0, _.isAndroid)() && (a = (a = a.replace(".gg", ".media")).replace(":80", ":443"));
                    let {
                        hostname: i,
                        port: l
                    } = r.parse(a), u = null != l ? parseInt(l) : NaN;
                    null != i && (80 === u || 443 === u) && (a = "".concat(A, "//").concat(i)), this._endpoint = a + "/", this.hostname = i, this._networkOverhead = null
                }
            }
        },
        171156: function(e, t, s) {
            "use strict";
            s.r(t), s("653041"), s("47120");
            var a, n, i, l, r = s("442837"),
                o = s("544891"),
                d = s("570140"),
                u = s("710845"),
                c = s("314897"),
                S = s("131951"),
                E = s("866960"),
                T = s("936349"),
                _ = s("979651"),
                I = s("622414"),
                N = s("42955"),
                g = s("399002"),
                f = s("369541"),
                m = s("981631"),
                A = s("65154");
            new u.default("RTCSpeedTestStore");
            let C = [{
                    clusterSize: 40,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: f.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 40,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: f.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 160,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: f.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 160,
                    clusterIntervalMs: 20,
                    numClusters: 1500,
                    direction: f.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 4125,
                    clusterIntervalMs: 33,
                    numClusters: 455,
                    direction: f.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 4125,
                    clusterIntervalMs: 33,
                    numClusters: 455,
                    direction: f.SpeedTestDirections.SERVER_TO_CLIENT
                }, {
                    clusterSize: 17e3,
                    clusterIntervalMs: 17,
                    numClusters: 295,
                    direction: f.SpeedTestDirections.CLIENT_TO_SERVER
                }, {
                    clusterSize: 17e3,
                    clusterIntervalMs: 17,
                    numClusters: 295,
                    direction: f.SpeedTestDirections.SERVER_TO_CLIENT
                }],
                O = C.length,
                h = {
                    running: !1,
                    region: null,
                    endpoint: null,
                    connection: null,
                    rtcServerId: null,
                    connected: !1,
                    currentTest: null,
                    failed: !1,
                    lifecycle: f.SpeedTestLifecycles.INACTIVE,
                    results: [],
                    pings: [],
                    notes: ""
                };

            function R(e, t, s) {
                e === m.RTCConnectionStates.RTC_CONNECTED ? h.connected = !0 : (e === m.RTCConnectionStates.DISCONNECTED || e === m.RTCConnectionStates.RTC_DISCONNECTED) && (h.lifecycle === f.SpeedTestLifecycles.TESTING && (h.failed = !0, U(), j()), h.connected = !1)
            }

            function p() {
                h.lifecycle === f.SpeedTestLifecycles.TESTING && (h.failed = !0, U(), j())
            }

            function M() {
                if (h.lifecycle === f.SpeedTestLifecycles.CONNECTING) {
                    var e;
                    b(f.SpeedTestLifecycles.PINGING), null === (e = h.connection) || void 0 === e || e.setPingInterval(500), L()
                }
            }

            function D(e, t) {
                if (null != h.currentTest) !0 !== h.failed && (h.currentTest = h.currentTest + 1, h.results.push({
                    payload: e,
                    summary: t
                }), h.currentTest === O ? (b(f.SpeedTestLifecycles.UPLOADING), j()) : v())
            }

            function x(e) {
                void 0 !== e && h.pings.length < 10 && (h.pings.push(e), h.pings.length < 10 && b(f.SpeedTestLifecycles.PINGING), L())
            }

            function L() {
                if (h.lifecycle === f.SpeedTestLifecycles.PINGING && 10 === h.pings.length) {
                    var e;
                    null === (e = h.connection) || void 0 === e || e.setPingInterval(5e3), h.currentTest = 0, v()
                }
            }

            function P() {
                if (null == h.connection) return !1;
                h.connection.destroy(), h.connection = null
            }

            function b(e) {
                h.lifecycle = e, d.default.dispatch({
                    type: "RTC_SPEED_TEST_STATE_UPDATE",
                    lifecycle: e
                })
            }

            function v() {
                var e, t;
                null !== h.currentTest && (C[h.currentTest].direction === f.SpeedTestDirections.CLIENT_TO_SERVER ? null === (e = h.connection) || void 0 === e || e.startClientToServerSpeedTest(C[h.currentTest]) : C[h.currentTest].direction === f.SpeedTestDirections.SERVER_TO_CLIENT && (null === (t = h.connection) || void 0 === t || t.startServerToClientSpeedTest(C[h.currentTest])), b(f.SpeedTestLifecycles.TESTING))
            }

            function U() {
                if (h.lifecycle === f.SpeedTestLifecycles.TESTING && null != h.currentTest) {
                    var e, t;
                    C[h.currentTest].direction === f.SpeedTestDirections.CLIENT_TO_SERVER ? null === (e = h.connection) || void 0 === e || e.stopClientToServerSpeedTest() : null === (t = h.connection) || void 0 === t || t.stopServerToClientSpeedTest()
                }
            }
            async function j() {
                var e, t;
                let s = new Date().toISOString(),
                    a = {
                        date: s,
                        endpoint: h.endpoint,
                        networkOverhead: null === (e = h.connection) || void 0 === e ? void 0 : e.getNetworkOverhead(),
                        networkType: E.default.getType(),
                        networkEffectiveConnectionSpeed: E.default.getEffectiveConnectionSpeed(),
                        networkServiceProvider: null !== (t = E.default.getServiceProvider()) && void 0 !== t ? t : "unknown",
                        notes: h.notes
                    },
                    n = {
                        info: a,
                        ping: (0, g.speedTestPingInfo)(h.pings),
                        tests: []
                    },
                    i = {
                        info: a,
                        pings: h.pings,
                        tests: []
                    };
                for (let e = 0; e < C.length; e++) {
                    let t = {
                            params: null,
                            results: null
                        },
                        s = {
                            params: null,
                            results: null
                        };
                    t.params = C[e], s.params = C[e], e < h.results.length && (t.results = h.results[e].summary, s.results = h.results[e].payload), n.tests.push(t), i.tests.push(s)
                }
                await Promise.all([o.HTTP.post({
                    url: m.Endpoints.DEBUG_LOG(m.DebugLogCategory.SPEED_TEST, "speed_test_summary_".concat(s, ".json")),
                    body: JSON.stringify(n, void 0, 2),
                    retries: 3,
                    headers: {
                        "Content-Type": "text/plain"
                    }
                }), o.HTTP.post({
                    url: m.Endpoints.DEBUG_LOG(m.DebugLogCategory.SPEED_TEST, "speed_test_results_".concat(s, ".json")),
                    body: JSON.stringify(i, void 0, 2),
                    retries: 3,
                    headers: {
                        "Content-Type": "text/plain"
                    }
                })]), b(f.SpeedTestLifecycles.COMPLETED), P(), I.default.stopSpeedTest(), h.running = !1, h.notes = ""
            }
            class G extends(a = r.default.Store) {
                initialize() {
                    this.waitFor(c.default, S.default, T.default, _.default)
                }
                getAvailable() {
                    return !_.default.isCurrentClientInVoiceChannel()
                }
                getActive() {
                    return h.running
                }
                getEndpoint() {
                    return h.endpoint
                }
                getConnected() {
                    var e;
                    return null !== (e = h.connected) && void 0 !== e && e
                }
                getLifecycle() {
                    return h.lifecycle
                }
                getFailed() {
                    return h.failed
                }
                getCurrentTest() {
                    return h.currentTest
                }
                getTestCases() {
                    return C
                }
                getTestResults() {
                    return h.results
                }
                getPings() {
                    return h.pings
                }
                getNotes() {
                    return h.notes
                }
                setNotes(e) {
                    h.notes = e
                }
                isSupported() {
                    return S.default.supports(A.Features.SPEED_TEST)
                }
            }
            l = "RTCSpeedTestStore", (i = "displayName") in(n = G) ? Object.defineProperty(n, i, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : n[i] = l, t.default = new G(d.default, {
                RTC_SPEED_TEST_START_TEST: function(e) {
                    !h.running && (b(f.SpeedTestLifecycles.AWAITING_ENDPOINT), h.running = !0, h.currentTest = null, h.results = [], h.failed = !1, h.pings = [], h.connected = !1, P())
                },
                RTC_SPEED_TEST_STOP_TEST: function(e) {
                    h.running = !1, P(), h.lifecycle !== f.SpeedTestLifecycles.COMPLETED && b(f.SpeedTestLifecycles.CANCELLED)
                },
                SPEED_TEST_CREATE: function(e) {
                    if (!h.running) {
                        I.default.stopSpeedTest();
                        return
                    }
                    h.rtcServerId = e.rtcServerId
                },
                SPEED_TEST_DELETE: function(e) {
                    P(), h.running = !1, h.lifecycle !== f.SpeedTestLifecycles.COMPLETED && b(f.SpeedTestLifecycles.INACTIVE)
                },
                SPEED_TEST_SERVER_UPDATE: function(e) {
                    var t;
                    P(), h.endpoint = null !== (t = e.endpoint) && void 0 !== t ? t : null, h.connection = new N.default({
                        userId: c.default.getId(),
                        sessionId: c.default.getSessionId(),
                        rtcServerId: h.rtcServerId,
                        endpoint: e.endpoint,
                        token: e.token
                    }), h.connection.on("state", R), h.connection.on("resuming", p), h.connection.on("ready", M), h.connection.on("speed-test-completed", D), h.connection.on("ping", x), h.connection.on("ping-timeout", x), h.connection.connect(), b(f.SpeedTestLifecycles.CONNECTING)
                }
            })
        },
        399002: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                speedTestDirection: function() {
                    return o
                },
                speedTestDuration: function() {
                    return r
                },
                speedTestFps: function() {
                    return d
                },
                speedTestPingInfo: function() {
                    return u
                },
                speedTestRate: function() {
                    return l
                },
                speedTestSummary: function() {
                    return c
                }
            }), s("47120"), s("518263"), s("970173"), s("520712"), s("268111"), s("941497"), s("32026"), s("480839"), s("744285"), s("492257"), s("873817"), s("863942");
            var a = s("250683"),
                n = s("909766"),
                i = s("369541");

            function l(e) {
                return 8 * e.clusterSize * 1e3 / e.clusterIntervalMs
            }

            function r(e) {
                return e.clusterIntervalMs * e.numClusters / 1e3
            }

            function o(e) {
                return e.direction === i.SpeedTestDirections.CLIENT_TO_SERVER ? "Client -> Server" : e.direction === i.SpeedTestDirections.SERVER_TO_CLIENT ? "Server -> Client" : e.direction
            }

            function d(e) {
                return 1e3 / e.clusterIntervalMs
            }

            function u(e) {
                let t = [...e];
                t.sort((e, t) => e - t);
                let s = t.length;
                return {
                    count: s,
                    min: t[0],
                    p50: t[Math.floor(s / 2)],
                    max: t[s - 1]
                }
            }

            function c(e, t, s) {
                let i = Uint8Array.from(a.toByteArray(e)),
                    l = new DataView(i.buffer),
                    r = 16,
                    o = Math.ceil(t.clusterSize / 1200),
                    d = t.numClusters * o,
                    u = 0,
                    c = 0,
                    S = 0,
                    E = null,
                    T = null,
                    _ = null,
                    I = null,
                    N = null;
                for (let e = 0; e < l.byteLength / r; e++) {
                    let t = l.getUint32(4 * (4 * e + 0)),
                        a = l.getUint32(4 * (4 * e + 1)),
                        n = l.getUint32(4 * (4 * e + 2)),
                        i = l.getUint32(4 * (4 * e + 3));
                    u++, c += a, S += a + s, null == T && (T = i), _ = i, null == E && (E = n), null == I && (I = t);
                    let r = i - (n - E);
                    null == N && (N = r), r < N && (N = r)
                }
                let g = new n.Histogram,
                    f = null;
                for (let e = 0; e < l.byteLength / r; e++) {
                    let t = l.getUint32(4 * (4 * e + 2)),
                        s = (l.getUint32(4 * (4 * e + 3)) - (t - E) - N) / 1e3;
                    g.addSample(s), null == f && (f = s), s > f && (f = s)
                }
                let m = null != T && null != _ ? (_ - T) / 1e3 : 0,
                    A = 1 - u / d,
                    C = 8 * c / m,
                    O = 8 * S / m,
                    h = g.getReport([50, 95, 99]);
                return {
                    payloadBandwidth: C,
                    networkBandwidth: O,
                    loss: A,
                    iatP50: h.percentiles[50],
                    iatP95: h.percentiles[95],
                    iatP99: h.percentiles[99],
                    iatMax: null != f ? f : 0
                }
            }
        },
        278828: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                updateDmSafetyAlertsSetting: function() {
                    return i
                }
            });
            var a = s("381499"),
                n = s("675478");
            let i = e => n.PreloadedUserSettingsActionCreators.updateAsync("privacy", t => {
                t.inappropriateConversationWarnings = a.BoolValue.create({
                    value: e
                })
            }, n.UserSettingsDelay.INFREQUENT_USER_ACTION)
        },
        440849: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            });
            var a = s("969943"),
                n = s("689938");

            function i(e) {
                switch (e) {
                    case a.SettingsOverrideReasonKeys.REDUCED_MOTION:
                        return n.default.Messages.ACCESSIBILITY_REDUCED_MOTION_SETTINGS_OVERRIDE.format();
                    case a.SettingsOverrideReasonKeys.REDUCED_MOTION_STICKERS:
                        return n.default.Messages.STICKERS_AUTO_PLAY_HELP_DISABLED;
                    default:
                        return
                }
            }
        },
        921801: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                Subsetting: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("394644"),
                i = s("295545");
            let l = e => {
                let {
                    setting: t,
                    children: s
                } = e, l = (0, i.useIsEligibleForUserSettingsSearchDesktop)({
                    location: "subsettings"
                }), r = (0, n.useViewableSettingsFilterFromSearch)(t);
                return l ? r.size > 0 && !r.has(t) ? null : (0, a.jsx)(a.Fragment, {
                    children: s
                }) : (0, a.jsx)(a.Fragment, {
                    children: s
                })
            }
        },
        331642: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("692547"),
                r = s("481060"),
                o = s("596454"),
                d = s("594174"),
                u = s("586791"),
                c = s("632184"),
                S = s("740727"),
                E = s("74538"),
                T = s("242291"),
                _ = s("706667"),
                I = s("792165"),
                N = s("409673"),
                g = s("603074"),
                f = s("689938"),
                m = s("152951");

            function A(e) {
                let {
                    onSelect: t
                } = e, [s, l] = n.useState(!1), o = (0, i.useStateFromStores)([d.default], () => d.default.getCurrentUser()), c = E.default.canUseCustomCallSounds(o);

                function S(e) {
                    c && (l(!1), null == t || t(e))
                }
                return (0, a.jsx)(r.Popout, {
                    shouldShow: s,
                    position: "left",
                    onRequestClose: () => l(!1),
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(r.Dialog, {
                            children: (0, a.jsx)(g.default, {
                                suppressPlaySound: !0,
                                shouldShowUpsell: !1,
                                guildId: null,
                                channel: null,
                                onClose: t,
                                onSelect: S,
                                gridNotice: c ? null : (0, a.jsx)(I.CustomCallSoundUpsell, {}),
                                analyticsSource: "call sounds edit setting"
                            })
                        })
                    },
                    children: e => (0, a.jsx)(N.SecondaryActionButton, {
                        ...e,
                        onClick: () => {
                            l(!s)
                        },
                        text: f.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND_CHANGE,
                        children: (0, a.jsx)(u.default, {
                            className: m.secondaryIcon
                        })
                    })
                })
            }

            function C(e) {
                let {
                    sound: t
                } = e, {
                    previewSound: s
                } = (0, _.default)(t, null), n = 0 === (0, T.getAmplitudinalSoundboardVolume)() ? f.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND_LOW_VOLUME : f.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND.format({
                    emojiName: t.emojiName,
                    soundName: t.name
                });
                return (0, a.jsx)(N.SecondaryActionButton, {
                    onClick: s,
                    text: n,
                    children: (0, a.jsx)(c.default, {
                        className: m.secondaryIconActive
                    })
                })
            }

            function O(e) {
                let {
                    sound: t,
                    isGlobal: s,
                    onSelect: n
                } = e, i = null != t, d = null == t ? void 0 : t.emojiId, u = null == t ? void 0 : t.emojiName, E = i && (null != u || null != d), T = e => (0, a.jsx)(r.Text, {
                    variant: "text-xs/medium",
                    color: "header-secondary",
                    tag: "span",
                    children: e
                });
                return (0, a.jsxs)("div", {
                    className: m.soundButtonSettingContainer,
                    children: [(0, a.jsxs)("div", {
                        className: m.container,
                        children: [E && (0, a.jsx)(o.default, {
                            emojiId: d,
                            emojiName: u,
                            className: m.emoji
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-xs/medium",
                            color: "header-primary",
                            className: m.soundText,
                            children: null == t ? f.default.Messages.NONE : s ? f.default.Messages.CALL_SOUNDS_SETTINGS_ALL_SERVERS.format({
                                soundName: t.name,
                                subtextHook: T
                            }) : t.name
                        }), i ? (0, a.jsx)(C, {
                            sound: t
                        }) : (0, a.jsx)(c.default, {
                            className: m.secondaryIconDisabled
                        })]
                    }), (0, a.jsxs)("div", {
                        className: m.container,
                        children: [(0, a.jsx)(A, {
                            onSelect: n
                        }), i && !s && (0, a.jsx)(N.SecondaryActionButton, {
                            onClick: () => n(null),
                            text: f.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND_REMOVE,
                            children: (0, a.jsx)(S.default, {
                                color: l.default.unsafe_rawColors.RED_400.css,
                                className: m.secondaryIcon
                            })
                        })]
                    })]
                })
            }
        },
        716364: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                setSoundpack: function() {
                    return r
                }
            });
            var a = s("570140"),
                n = s("626135"),
                i = s("474873"),
                l = s("981631");

            function r(e) {
                n.default.track(l.AnalyticEvents.SOUNDPACK_UPDATED, {
                    soundpack: e,
                    previous_soundpack: i.default.getSoundpack()
                }), a.default.dispatch({
                    type: "SET_SOUNDPACK",
                    soundpack: e
                })
            }
        },
        470647: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("657254"),
                r = s("716364"),
                o = s("474873"),
                d = s("871465");

            function u(e) {
                let {
                    className: t
                } = e, s = (0, n.useStateFromStores)([o.default], () => o.default.getSoundpack()), {
                    allowAprilFoolsSoundpack: u
                } = l.default.useExperiment({
                    location: "a96548_1"
                }, {
                    autoTrackExposure: !1
                });
                if (!u) return null;
                let c = u ? (0, d.getSoundpackOptionsAprilFools2023)() : [];
                return (0, a.jsx)(i.SingleSelect, {
                    className: t,
                    onChange: e => (0, r.setSoundpack)(e),
                    value: s,
                    options: c
                })
            }
        },
        392735: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("818083");
            t.default = (0, a.createExperiment)({
                kind: "user",
                id: "2022-06_auth_sessions_user_settings",
                label: "Auth Sessions User Settings",
                defaultConfig: {
                    showSettings: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show settings",
                    config: {
                        showSettings: !0
                    }
                }]
            })
        },
        263399: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useServerPrivacySettingsInUserSettingsEnabled: function() {
                    return n
                }
            });
            let a = (0, s("818083").createExperiment)({
                    kind: "user",
                    id: "2024-05_server_settings_in_user_settings",
                    label: "Server privacy settings in user settings menu",
                    defaultConfig: {
                        enabled: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enable Server Settings in user settings",
                        config: {
                            enabled: !0
                        }
                    }]
                }),
                n = e => {
                    let {
                        location: t
                    } = e;
                    return a.useExperiment({
                        location: t
                    }).enabled
                }
        },
        714565: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getSMSBackupDisabledMessage: function() {
                    return i
                }
            }), s("399606"), s("430824"), s("496675"), s("594174");
            var a = s("981631"),
                n = s("689938");

            function i(e) {
                return e.hasAnyStaffLevel() || e.hasFlag(a.UserFlags.PARTNER) ? n.default.Messages.MFA_SMS_DISABLED_PARTNER : null == e.email ? n.default.Messages.MFA_SMS_DISABLED_NO_EMAIL : null
            }
        },
        61160: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("818083");
            t.default = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_speed_test",
                label: "Speed Test User Setting",
                defaultConfig: {
                    showSettings: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show speed test",
                    config: {
                        showSettings: !0
                    }
                }]
            })
        },
        703115: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                UserGuildPrivacySettingsAction: function() {
                    return a
                }
            }), (n = a || (a = {})).VIEW_SETTINGS_PAGE = "view_settings_page", n.SELECT_GUILD = "select_guild", n.DIRECT_MESSAGES_TOGGLE = "direct_messages_toggle", n.RESTRICT_GUILD_ACTIVITY_STATUS_TOGGLE = "restrict_guild_activity_status_toggle", n.RESTRICT_GUILD_MESSAGE_REQUEST_TOGGLE = "restrict_guild_message_request_toggle", n.RESTRICT_GUILD_ACTIVITY_JOIN_TOGGLE = "restrict_guild_activity_join_toggle"
        },
        170401: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            }), s("47120"), s("653041");
            var a = s("658722"),
                n = s.n(a);

            function i(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class l {
                search(e) {
                    return new Promise(t => {
                        t(this.getMatchingSettings(e))
                    })
                }
                getMatchingSettings(e) {
                    let t = this.cache[e];
                    if (null != t) return t;
                    {
                        let t = [];
                        return this.terms.forEach(s => {
                            let [a, i] = s;
                            n()(e.toLowerCase(), i.toLowerCase()) && t.push(a)
                        }), this.cache[e] = t, t
                    }
                }
                constructor(e) {
                    i(this, "terms", void 0), i(this, "cache", void 0), this.terms = e, this.cache = {}
                }
            }
        },
        128277: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                setIsSettingSearchActive: function() {
                    return i
                },
                setSettingSearchQuery: function() {
                    return n
                },
                useSettingSearchQuery: function() {
                    return l
                }
            });
            let a = (0, s("652874").default)(() => ({
                query: "",
                isActive: !1,
                selected: null
            }));

            function n(e) {
                a.setState({
                    query: e
                })
            }

            function i(e) {
                a.setState({
                    isActive: e
                })
            }

            function l() {
                return a().query
            }
        },
        878209: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getBestMatches: function() {
                    return d
                },
                getEntries: function() {
                    return r
                },
                sortEntries: function() {
                    return o
                }
            }), s("47120"), s("653041");
            var a = s("952639"),
                n = s.n(a);
            let i = /^(\d{4}-\d{1,2})/;

            function l(e) {
                let t = i.exec(e);
                return null != t ? t[1] : null
            }

            function r(e) {
                return Array.from(Object.entries(e)).map(e => {
                    let [t, s] = e;
                    return {
                        id: t,
                        experiment: s
                    }
                })
            }

            function o(e, t) {
                return e.slice().sort((e, s) => {
                    if (null != t[null == e ? void 0 : e.id] && null == t[null == s ? void 0 : s.id]) return -1;
                    if (null == t[null == e ? void 0 : e.id] && null != t[null == s ? void 0 : s.id]) return 1;
                    let a = l(e.id),
                        n = l(s.id);
                    if (null != a && null != n) {
                        let e = n.localeCompare(a);
                        if (0 !== e) return e
                    }
                    return e.experiment.title.localeCompare(s.experiment.title)
                })
            }

            function d(e, t) {
                let s = t.split(/\s+/g).filter(e => "" !== e);
                if (0 === s.length) return e;
                let a = [];
                for (let t of e) {
                    let e = 0;
                    for (let a of s)(function e(t, s) {
                        if (Array.isArray(t)) {
                            for (let a of t)
                                if (e(a, s)) return !0
                        } else if ("object" == typeof t && null !== t) {
                            for (let a of Object.values(t))
                                if (e(a, s)) return !0
                        } else if ("string" == typeof t && t.toLowerCase().includes(s.toLowerCase())) return !0;
                        return !1
                    })(t, a) && (e += 1);
                    0 !== e && (null == a[e] && (a[e] = []), a[e].push(t))
                }
                return n()(a.filter(e => void 0 !== e).reverse())
            }
        },
        3957: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useScrollToSetting: function() {
                    return l
                }
            });
            var a = s("470079"),
                n = s("996073");
            let i = {
                block: "center"
            };

            function l(e) {
                let t = a.useRef(null);
                return (0, n.default)(t, e, i, 400), t
            }
        },
        436267: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return n
                },
                useShouldWarnAuthorizedAppTwoWay: function() {
                    return i
                }
            });
            var a = s("159277");

            function n(e) {
                return a.ConsoleOAuthApplications.XBOX_APPLICATION_ID === e || a.ConsoleOAuthApplicationsSets.PLAYSTATION_APPLICATION_IDS.has(e)
            }

            function i(e) {
                return n(e)
            }
        },
        349728: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            }), s("47120");
            var a = s("981631");
            let n = new Set([a.PlatformTypes.XBOX, a.PlatformTypes.PLAYSTATION, a.PlatformTypes.PLAYSTATION_STAGING, a.PlatformTypes.CRUNCHYROLL]);

            function i(e) {
                return n.has(e.type) && e.twoWayLink
            }
        },
        461877: function(e, t, s) {
            "use strict";

            function a(e) {
                return "".concat("*".repeat(e.length - 4)).concat(e.slice(-4))
            }

            function n(e) {
                let [t, s] = e.split("@");
                return "".concat("*".repeat(t.length), "@").concat(s)
            }
            s.r(t), s.d(t, {
                censorEmail: function() {
                    return n
                },
                censorPhone: function() {
                    return a
                }
            }), s("47120")
        },
        604227: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("47120"), s("757143"), s("653041");
            var a = s("735250");
            s("470079");
            var n = s("525654"),
                i = s.n(n),
                l = s("481060"),
                r = s("579806"),
                o = s("304761"),
                d = s("969832"),
                u = s("689938"),
                c = s("107287");

            function S() {
                var e, t, s, n, S, E;
                let T = window.GLOBAL_ENV.RELEASE_CHANNEL,
                    _ = "301034",
                    I = (e = "1680915c0f4685865ab3efa6432b8ebf1bda627f", e.substring(0, 7)),
                    N = null === r.default || void 0 === r.default ? void 0 : r.default.remoteApp.getVersion(),
                    g = null === r.default || void 0 === r.default ? void 0 : null === (t = (s = r.default.remoteApp).getBuildNumber) || void 0 === t ? void 0 : t.call(s),
                    f = null === r.default || void 0 === r.default ? void 0 : null === (n = (S = r.default.remoteApp).getAppArch) || void 0 === n ? void 0 : n.call(S),
                    m = null === (E = o.default.getCurrentBuildOverride().overrides) || void 0 === E ? void 0 : E.discord_web,
                    A = function() {
                        var e;
                        let t = null === i() || void 0 === i() ? void 0 : null === (e = i().os) || void 0 === e ? void 0 : e.toString();
                        if (null == t || null == r.default) return null;
                        let s = r.default.os.release,
                            [a, n, l] = s.split(".").map(e => parseInt(e, 10));
                        return t.includes("Windows 10") && void 0 !== l && l >= 22e3 && (t = t.replace("Windows 10", "Windows 11")), t.includes("OS X 10.15.7") && void 0 !== a && a >= 20 && (t = "macOS ".concat(a - 9)), "".concat(t, " (").concat(s, ")")
                    }(),
                    C = [T, _, "(".concat(I, ")")];
                return null != N && (C.push("Host ".concat(N)), null != f && C.push(f.toLowerCase()), null != g && C.push("(".concat(g, ")"))), C.push("Build Override: ".concat(null != m ? m.id : "N/A")), null != A && C.push(A), (0, a.jsx)(d.CopiableField, {
                    copyValue: C.join(" "),
                    disableCopy: !1,
                    copyTooltip: u.default.Messages.COPY_VERSION,
                    showCopyIcon: !1,
                    children: (0, a.jsxs)("div", {
                        className: c.info,
                        children: [(0, a.jsxs)(l.Text, {
                            tag: "span",
                            className: c.line,
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: [T, " ", _, " ", (0, a.jsxs)("span", {
                                className: c.versionHash,
                                children: ["(", I, ")"]
                            })]
                        }), " ", null != N ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsxs)(l.Text, {
                                tag: "span",
                                className: c.line,
                                variant: "text-xs/normal",
                                color: "text-muted",
                                children: ["Host ", N, " ", null != f ? (0, a.jsxs)("span", {
                                    className: c.appArch,
                                    children: [f.toLowerCase(), " "]
                                }) : null, null != g ? (0, a.jsxs)("span", {
                                    children: ["(", g, ")"]
                                }) : null]
                            }), " "]
                        }) : null, null != A ? (0, a.jsx)(l.Text, {
                            tag: "span",
                            className: c.line,
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: A
                        }) : null]
                    })
                })
            }
        },
        541540: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120"), s("411104");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("533307"),
                o = s("930114"),
                d = s("246946"),
                u = s("285952"),
                c = s("626135"),
                S = s("669079"),
                E = s("981631"),
                T = s("689938"),
                _ = s("314664");

            function I(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class N extends n.Component {
                get analyticsLocation() {
                    let {
                        analyticsContext: {
                            location: e
                        }
                    } = this.props;
                    return {
                        ...e,
                        object: E.AnalyticsObjects.BUTTON_CTA
                    }
                }
                render() {
                    let {
                        obscureInput: e
                    } = this.props, {
                        codeInput: t,
                        submitting: s,
                        hasError: n,
                        isPromoCode: i
                    } = this.state;
                    return (0, a.jsxs)(l.FormSection, {
                        tag: l.FormTitleTags.H1,
                        title: T.default.Messages.GIFT_INVENTORY_REDEEM_CODES,
                        children: [(0, a.jsx)(l.FormTitle, {
                            children: T.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMPT
                        }), (0, a.jsx)("form", {
                            onSubmit: this.handleSubmit,
                            children: (0, a.jsxs)(u.default, {
                                children: [(0, a.jsx)(l.TextInput, {
                                    type: e ? "password" : "text",
                                    value: t,
                                    onChange: this.handleChange,
                                    placeholder: "WUMP-AAAAA-BBBBB-CCCCC",
                                    error: !i && n ? T.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_INVALID : null,
                                    className: _.codeRedemptionInput
                                }), (0, a.jsx)(l.Button, {
                                    type: "submit",
                                    submitting: s,
                                    children: T.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_REDEEM
                                })]
                            })
                        }), i ? (0, a.jsx)(l.Text, {
                            className: _.errorMessage,
                            variant: "text-sm/normal",
                            children: T.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMOTION.format({
                                promoLink: () => {
                                    window.open("https://discord.com/billing/promotions/".concat(t))
                                }
                            })
                        }) : null]
                    })
                }
                constructor(...e) {
                    super(...e), I(this, "state", {
                        codeInput: "",
                        submitting: !1,
                        hasError: !1,
                        isPromoCode: !1
                    }), I(this, "handleChange", e => {
                        this.setState({
                            codeInput: e,
                            hasError: !1
                        })
                    }), I(this, "handleSubmit", async e => {
                        e.preventDefault();
                        let {
                            codeInput: t
                        } = this.state;
                        if ("" === t) return;
                        let s = (0, S.processGiftCodeInput)(t);
                        if (null == s) {
                            this.setState({
                                hasError: !0
                            });
                            return
                        }
                        this.setState({
                            submitting: !0
                        });
                        try {
                            let e = await r.default.resolveGiftCode(s);
                            if (null != e && null != e.giftCode.promotion) throw this.setState({
                                isPromoCode: !0
                            }), Error("Cannnot redeem promotion code as gift");
                            c.default.track(E.AnalyticEvents.OPEN_MODAL, {
                                type: "gift_accept",
                                location: {
                                    ...this.analyticsLocation,
                                    object: E.AnalyticsObjects.BUTTON_CTA
                                }
                            }), (0, o.openGiftCodeAcceptModal)({
                                processedCode: s
                            }), this.setState({
                                codeInput: ""
                            })
                        } catch (e) {
                            this.setState({
                                hasError: !0
                            })
                        } finally {
                            this.setState({
                                submitting: !1
                            })
                        }
                    })
                }
            }

            function g() {
                let e = n.useContext(c.AnalyticsContext),
                    t = (0, i.useStateFromStores)([d.default], () => d.default.enabled);
                return (0, a.jsx)(N, {
                    analyticsContext: e,
                    obscureInput: t
                })
            }
        },
        843200: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("512722"),
                o = s.n(r),
                d = s("442837"),
                u = s("481060"),
                c = s("594174"),
                S = s("285952"),
                E = s("418632"),
                T = s("689938"),
                _ = s("70983");
            class I extends n.Component {
                renderNotice() {
                    let {
                        isClaimed: e,
                        unclaimedNotice: t,
                        unverifiedNotice: s
                    } = this.props;
                    return e ? null != s ? s : T.default.Messages.NOTICE_UNVERIFIED_ACCOUNT : null != t ? t : T.default.Messages.NOTICE_UNCLAIMED_ACCOUNT
                }
                renderPrimaryAction() {
                    return this.props.isClaimed ? this.props.hasEmail ? (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(E.default, {})
                    }) : (0, a.jsx)(u.Button, {
                        size: u.Button.Sizes.MEDIUM,
                        color: u.Button.Colors.BRAND,
                        onClick: this.openChangeEmailModal,
                        children: T.default.Messages.ADD_EMAIL_SHORT
                    }) : (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(u.Button, {
                            size: u.Button.Sizes.MEDIUM,
                            color: u.Button.Colors.BRAND,
                            onClick: this.openClaimAccountModal,
                            children: T.default.Messages.CLAIM_ACCOUNT
                        })
                    })
                }
                renderSecondaryAction() {
                    return this.props.isClaimed && this.props.hasEmail ? (0, a.jsx)(S.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(u.Button, {
                            color: u.Button.Colors.PRIMARY,
                            look: u.Button.Looks.LINK,
                            onClick: this.openChangeEmailModal,
                            children: T.default.Messages.CHANGE_EMAIL_SHORT
                        })
                    }) : null
                }
                openClaimAccountModal() {
                    (0, u.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([s.e("99387"), s.e("69495")]).then(s.bind(s, "324239"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }
                openChangeEmailModal() {
                    (0, u.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([s.e("99387"), s.e("9343")]).then(s.bind(s, "642298"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }
                render() {
                    let {
                        className: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    return t && s ? null : (0, a.jsx)(u.Card, {
                        className: l()(_.wrapper, e),
                        children: (0, a.jsxs)(S.default, {
                            align: S.default.Align.CENTER,
                            children: [(0, a.jsx)(S.default.Child, {
                                className: _.image,
                                grow: 0,
                                shrink: 0
                            }), (0, a.jsxs)(S.default.Child, {
                                children: [(0, a.jsx)(u.Text, {
                                    variant: "text-sm/normal",
                                    children: this.renderNotice()
                                }), (0, a.jsxs)(S.default, {
                                    justify: S.default.Justify.CENTER,
                                    className: _.content,
                                    children: [this.renderPrimaryAction(), this.renderSecondaryAction()]
                                })]
                            })]
                        })
                    })
                }
            }
            t.default = d.default.connectStores([c.default], () => {
                let e = c.default.getCurrentUser();
                return o()(null != e, "EmailNotice: currentUser cannot be undefined"), {
                    isClaimed: e.isClaimed(),
                    isVerified: e.verified,
                    hasEmail: null != e.email
                }
            })(I)
        },
        317941: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("411104");
            var a = s("735250"),
                n = s("470079"),
                i = s("913527"),
                l = s.n(i),
                r = s("442837"),
                o = s("846519"),
                d = s("481060"),
                u = s("533307"),
                c = s("812206"),
                S = s("981632"),
                E = s("314897"),
                T = s("82142"),
                _ = s("246946"),
                I = s("509545"),
                N = s("55563"),
                g = s("15887"),
                f = s("285952"),
                m = s("366695"),
                A = s("259580"),
                C = s("572004"),
                O = s("669079"),
                h = s("296848"),
                R = s("474936"),
                p = s("689938"),
                M = s("449256");

            function D(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class x extends n.PureComponent {
                componentWillUnmount() {
                    this._copyModeTimeout.stop()
                }
                get copyButtonText() {
                    switch (this.state.copyMode) {
                        case d.CopyInputModes.SUCCESS:
                            return p.default.Messages.BILLING_GIFT_COPIED;
                        case d.CopyInputModes.ERROR:
                            return p.default.Messages.FAILED;
                        default:
                            return p.default.Messages.COPY
                    }
                }
                handleRevoke(e) {
                    u.default.revokeGiftCode(e)
                }
                render() {
                    let {
                        hideCode: e,
                        giftCode: t
                    } = this.props, {
                        copyMode: s
                    } = this.state;
                    return (0, a.jsxs)(f.default, {
                        direction: f.default.Direction.VERTICAL,
                        className: M.giftCodeRow,
                        children: [(0, a.jsx)(d.CopyInput, {
                            className: M.codeText,
                            value: (0, O.getGiftCodeURL)(t.code),
                            text: this.copyButtonText,
                            mode: s,
                            supportsCopy: C.SUPPORTS_COPY,
                            hideMessage: e ? p.default.Messages.GIFT_INVENTORY_HIDDEN : null,
                            onCopy: this.handleCopy,
                            buttonColor: d.ButtonColors.BRAND,
                            buttonLook: d.ButtonLooks.FILLED
                        }), (0, a.jsxs)("div", {
                            className: M.subTextRow,
                            children: [null != t.expiresAt ? (0, a.jsxs)(n.Fragment, {
                                children: [p.default.Messages.GIFT_INVENTORY_EXPIRES_IN.format({
                                    hours: t.expiresAt.diff(l()(), "h")
                                }), " ", "—\xa0"]
                            }) : null, (0, a.jsx)(d.Clickable, {
                                tag: "a",
                                onClick: () => this.handleRevoke(t.code),
                                children: p.default.Messages.REVOKE
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), D(this, "_copyModeTimeout", new o.Timeout), D(this, "state", {
                        copyMode: d.CopyInputModes.DEFAULT
                    }), D(this, "handleCopy", e => {
                        let {
                            giftCode: t,
                            sku: s
                        } = this.props;
                        (0, O.trackGiftCodeCopy)(t, s);
                        try {
                            (0, C.copy)(e), this.setState({
                                copyMode: d.CopyInputModes.SUCCESS
                            })
                        } catch (e) {
                            this.setState({
                                copyMode: d.CopyInputModes.ERROR
                            })
                        }
                        this._copyModeTimeout.start(1e3, () => {
                            this.setState({
                                copyMode: d.CopyInputModes.DEFAULT
                            })
                        })
                    })
                }
            }
            class L extends n.PureComponent {
                componentDidMount() {
                    this._loadedAt = Date.now()
                }
                renderTitle() {
                    let e;
                    let {
                        sku: t,
                        subscriptionPlan: s,
                        giftCodeBatchId: n
                    } = this.props;
                    return e = n === R.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID ? p.default.Messages.BLACK_FRIDAY_PROMOTION_GIFT_INVENTORY_TITLE : n === R.STICKERS_GIFT_CODE_BATCH_ID && null != s ? (s.interval === R.SubscriptionIntervalTypes.MONTH ? p.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_MONTH : p.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_YEAR).format({
                        skuName: t.name,
                        intervalCount: s.intervalCount
                    }) : null == s ? t.name : (s.interval === R.SubscriptionIntervalTypes.MONTH ? p.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_MONTHS : p.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_YEARS).format({
                        skuName: t.name,
                        intervalCount: s.intervalCount
                    }), (0, a.jsx)("div", {
                        className: M.gameName,
                        children: e
                    })
                }
                renderGenerateGiftCodeRow() {
                    return (0, a.jsxs)(f.default, {
                        justify: f.default.Justify.BETWEEN,
                        align: f.default.Align.CENTER,
                        className: M.generateCodeRow,
                        children: [(0, a.jsx)("div", {
                            className: M.codeText,
                            children: p.default.Messages.GIFT_INVENTORY_GENERATE_HELP
                        }), (0, a.jsx)(d.Button, {
                            submitting: this.state.isCreating,
                            size: d.Button.Sizes.SMALL,
                            color: d.Button.Colors.BRAND,
                            onClick: this.handleGenerateGiftCode,
                            children: p.default.Messages.GIFT_INVENTORY_GENERATE_LINK
                        })]
                    })
                }
                setIsHovered(e) {
                    this.setState({
                        isHovered: e
                    })
                }
                render() {
                    let {
                        entitlements: e,
                        application: t,
                        giftCodes: s,
                        className: i,
                        sku: l,
                        isFetching: r,
                        hideCodes: o,
                        giftStyle: u
                    } = this.props, {
                        isOpen: c
                    } = this.state;
                    return (0, a.jsxs)(g.default, {
                        className: i,
                        children: [(0, a.jsx)(d.Clickable, {
                            onClick: this.handleToggleOpen,
                            className: M.card,
                            onMouseEnter: () => this.setIsHovered(!0),
                            onMouseLeave: () => this.setIsHovered(!1),
                            children: (0, a.jsx)(g.default.Header, {
                                splashArtURL: t.getSplashURL(512),
                                children: (0, a.jsxs)("div", {
                                    className: M.cardHeader,
                                    children: [(0, a.jsxs)(f.default, {
                                        align: f.default.Align.CENTER,
                                        children: [null != u ? (0, a.jsx)(S.default, {
                                            giftStyle: u,
                                            className: M.seasonalGiftBox,
                                            shouldAnimate: this.state.isHovered
                                        }) : (0, a.jsx)(m.default, {
                                            game: t,
                                            size: m.default.Sizes.MEDIUM,
                                            skuId: l.id
                                        }), (0, a.jsxs)("div", {
                                            className: M.headerText,
                                            children: [this.renderTitle(), (0, a.jsx)("div", {
                                                className: M.subTextHeader,
                                                children: p.default.Messages.GIFT_INVENTORY_COPIES.format({
                                                    copies: e.length
                                                })
                                            })]
                                        })]
                                    }), (0, a.jsx)(A.default, {
                                        direction: c ? A.default.Directions.UP : A.default.Directions.DOWN,
                                        className: M.expandIcon
                                    })]
                                })
                            })
                        }), c ? (0, a.jsx)(g.default.Body, {
                            children: r ? (0, a.jsx)(d.Spinner, {
                                className: M.spinner
                            }) : (0, a.jsxs)(n.Fragment, {
                                children: [s.length < e.length ? this.renderGenerateGiftCodeRow() : null, s.map(e => (0, a.jsx)(x, {
                                    giftCode: e,
                                    sku: l,
                                    hideCode: o
                                }, e.code))]
                            })
                        }) : null]
                    })
                }
                constructor(...e) {
                    super(...e), D(this, "_loadedAt", null), D(this, "state", {
                        isOpen: !1,
                        isCreating: !1,
                        isHovered: !1
                    }), D(this, "handleGenerateGiftCode", async e => {
                        e.stopPropagation();
                        let {
                            skuId: t,
                            subscriptionPlanId: s,
                            giftStyle: a
                        } = this.props;
                        this.setState({
                            isCreating: !0
                        }), await u.default.createGiftCode(t, s, a), this.setState({
                            isCreating: !1,
                            isOpen: !0
                        })
                    }), D(this, "handleToggleOpen", () => {
                        let {
                            skuId: e,
                            subscriptionPlanId: t,
                            loadedAt: s
                        } = this.props, a = !this.state.isOpen;
                        (null == s || null == this._loadedAt || s < this._loadedAt) && a && u.default.fetchUserGiftCodesForSKU(e, t), this.setState({
                            isOpen: !this.state.isOpen
                        })
                    })
                }
            }
            t.default = r.default.connectStores([N.default, _.default, T.default, c.default, I.default, E.default], e => {
                let {
                    skuId: t,
                    subscriptionPlanId: s,
                    giftStyle: a
                } = e, n = N.default.get(t);
                if (null == n) throw Error("SKU was unavailable while rendering gift.");
                let i = T.default.getForGifterSKUAndPlan(E.default.getId(), t, s).filter(e => !e.isClaimed).filter(e => e.giftStyle === a);
                return {
                    sku: n,
                    hideCodes: _.default.enabled,
                    isFetching: T.default.getUserGiftCodesFetchingForSKUAndPlan(t, s),
                    loadedAt: T.default.getUserGiftCodesLoadedAtForSKUAndPlan(t, s),
                    application: c.default.getApplication(n.applicationId),
                    subscriptionPlan: null != s ? (0, h.getOrFetchSubscriptionPlan)(s) : null,
                    giftCodes: i
                }
            })(L)
        },
        206339: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("392711"),
                o = s.n(r),
                d = s("442837"),
                u = s("481060"),
                c = s("570140"),
                S = s("496929"),
                E = s("37234"),
                T = s("230711"),
                _ = s("410030"),
                I = s("960359"),
                N = s("730417"),
                g = s("524347"),
                f = s("454585"),
                m = s("163684"),
                A = s("178100"),
                C = s("518638"),
                O = s("725727"),
                h = s("454982"),
                R = s("197115"),
                p = s("504983"),
                M = s("703656"),
                D = s("594174"),
                x = s("580130"),
                L = s("669079"),
                P = s("74538"),
                b = s("695346"),
                v = s("317941"),
                U = s("622474"),
                j = s("981631"),
                G = s("474936"),
                F = s("689938"),
                B = s("193225");

            function y(e) {
                let t, {
                        outboundPromotion: s,
                        code: i,
                        addClaimedOutboundPromotionCode: r,
                        disabled: o
                    } = e,
                    [d, c] = n.useState(!1),
                    [S, E] = n.useState(!1),
                    T = () => c(e => !e),
                    I = (0, _.default)(),
                    N = (0, C.getPromotionImageURL)(s.id, I),
                    g = null != i,
                    m = (0, A.default)(s, g);
                g && d ? t = F.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_EXPANDED_BODY.format({
                    endDate: m,
                    onClickDetails: T
                }) : g && !d ? t = F.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_UNEXPANDED_BODY.format({
                    endDate: m,
                    onClickDetails: T
                }) : !g && d ? t = F.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_EXPANDED_BODY.format({
                    endDate: m,
                    onClickDetails: T
                }) : !g && !d && (t = F.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_UNEXPANDED_BODY.format({
                    endDate: m,
                    onClickDetails: T
                }));
                let O = g ? F.default.Messages.OUTBOUND_PROMOTION_SEE_CODE : F.default.Messages.PROMOTION_CARD_ACTION_CLAIM,
                    R = n.useCallback(() => E(!1), []),
                    {
                        outboundTitle: p,
                        outboundTermsAndConditions: M
                    } = s;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: l()(B.skuCard, B.promotionCard),
                        children: [(0, a.jsxs)("div", {
                            className: B.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: B.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: B.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: N,
                                        className: B.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(u.Heading, {
                                        variant: "heading-md/semibold",
                                        children: p
                                    }), (0, a.jsx)(u.Text, {
                                        variant: "text-sm/normal",
                                        color: "text-normal",
                                        className: B.__invalid_promotionText,
                                        children: t
                                    })]
                                })]
                            }), (0, a.jsx)(u.Button, {
                                className: B.promotionCardButton,
                                color: u.Button.Colors.BRAND,
                                size: u.Button.Sizes.SMALL,
                                onClick: () => E(!0),
                                disabled: !0 === o,
                                children: O
                            })]
                        }), d && (0, a.jsx)(u.Text, {
                            className: B.promotionLegalese,
                            variant: "text-xs/normal",
                            color: "header-secondary",
                            children: f.default.parse(M, !1, {
                                allowLinks: !0
                            })
                        })]
                    }), S && (0, a.jsx)(u.Modal, {
                        renderModal: e => (0, a.jsx)(h.default, {
                            ...e,
                            onClose: R,
                            onClaim: r,
                            code: i,
                            outboundPromotion: s
                        }),
                        onCloseRequest: R
                    })]
                })
            }
            t.default = function() {
                let e = (0, d.useStateFromStoresArray)([x.default], () => x.default.getGiftable()),
                    [t, s] = o().partition(e, e => {
                        let {
                            giftCodeBatchId: t
                        } = e;
                        return null == t
                    }),
                    i = (0, d.useStateFromStores)([D.default], () => P.default.isPremium(D.default.getCurrentUser())),
                    r = o().groupBy(t, e => (0, L.makeComboId)(e.skuId, e.subscriptionPlanId, e.giftStyle)),
                    [_, f] = n.useState(!1),
                    A = (0, d.useStateFromStores)([g.default], () => g.default.userStatus);
                n.useEffect(() => {
                    c.default.wait(() => {
                        (0, S.fetchGiftableEntitlements)().then(() => f(!0))
                    })
                }, []);
                let C = (0, N.useAnyDropsEnabled)();
                n.useEffect(() => {
                    C && c.default.wait(async () => {
                        await (0, I.fetchDropsUserStatus)()
                    })
                }, [C]);
                let h = b.DropsOptedOut.useSetting(),
                    V = null != A || !C,
                    {
                        promotionsLoaded: H,
                        activeOutboundPromotions: Y,
                        claimedEndedOutboundPromotions: k,
                        claimedOutboundPromotionCodeMap: w,
                        addClaimedOutboundPromotionCode: W
                    } = (0, O.useOutboundPromotions)(),
                    K = Y.length + k.length > 0,
                    Q = m.OutboundPromoDesktopUpsellExperiment.useExperiment({
                        location: "EntitlementGifts"
                    }, {
                        autoTrackExposure: !0
                    }).enabled && !i && K;

                function z() {
                    T.default.open(j.UserSettingsSections.PREMIUM)
                }
                return _ && H && V ? (0, a.jsxs)(a.Fragment, {
                    children: [C ? (0, a.jsx)(U.default, {
                        dropsOptedOut: h,
                        dropsStatuses: A
                    }) : null, function() {
                        var e;
                        let t = s.find(e => e.giftCodeBatchId === G.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID && !e.consumed),
                            n = null !== (e = s.filter(e => e.giftCodeBatchId === G.STICKERS_GIFT_CODE_BATCH_ID && !e.consumed)) && void 0 !== e ? e : [],
                            [r, d] = o().partition(n, e => {
                                let {
                                    subscriptionPlanId: t
                                } = e;
                                return t === G.SubscriptionPlans.PREMIUM_YEAR_TIER_2
                            }),
                            c = Q ? (0, a.jsxs)("div", {
                                className: B.promoHeaderContainer,
                                children: [(0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(u.Heading, {
                                        variant: "heading-md/semibold",
                                        children: K ? F.default.Messages.GIFT_INVENTORY_YOUR_GIFTS : void 0
                                    }), (0, a.jsx)(u.Heading, {
                                        variant: "text-sm/normal",
                                        className: B.promoDescription,
                                        children: F.default.Messages.OUTBOUND_PROMO_UPSELL_EXPERIMENT_GIFTS_DESCRIPTION.format({
                                            onClick: () => {
                                                (0, E.popLayer)(), (0, M.transitionTo)(j.Routes.APPLICATION_STORE)
                                            }
                                        })
                                    })]
                                }), (0, a.jsx)(R.default, {
                                    showGradient: !0,
                                    className: B.promoNitroButton,
                                    subscriptionTier: G.PremiumSubscriptionSKUs.TIER_2,
                                    buttonText: F.default.Messages.USER_SETTINGS_CUSTOMIZATION_UPSELL
                                })]
                            }) : (0, a.jsx)(u.Heading, {
                                variant: "heading-md/semibold",
                                children: K ? F.default.Messages.GIFT_INVENTORY_YOUR_GIFTS : void 0
                            });
                        return (0, a.jsx)(p.default, {
                            className: B.containerWithMargin,
                            isShown: Q,
                            type: p.FeatureBorderTypes.PREMIUM,
                            hasBackground: !0,
                            children: (0, a.jsxs)(u.FormSection, {
                                className: l()({
                                    [B.containerWithMargin]: !Q
                                }),
                                children: [c, K ? (0, a.jsx)(u.FormDivider, {
                                    className: B.divider
                                }) : null, k.map(e => {
                                    let {
                                        code: t,
                                        promotion: s
                                    } = e;
                                    return (0, a.jsx)(y, {
                                        outboundPromotion: s,
                                        code: t,
                                        addClaimedOutboundPromotionCode: W,
                                        disabled: !i
                                    }, s.id)
                                }), Y.map(e => (0, a.jsx)(y, {
                                    outboundPromotion: e,
                                    code: w[e.id],
                                    addClaimedOutboundPromotionCode: W,
                                    disabled: !i
                                }, e.id)), null != t ? (0, a.jsx)(v.default, {
                                    className: B.skuCard,
                                    skuId: t.skuId,
                                    subscriptionPlanId: t.subscriptionPlanId,
                                    entitlements: [t],
                                    giftCodeBatchId: G.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID
                                }, (0, L.makeComboId)(t.skuId, t.subscriptionPlanId)) : null, r.length > 0 ? (0, a.jsx)(v.default, {
                                    className: B.skuCard,
                                    skuId: r[0].skuId,
                                    subscriptionPlanId: r[0].subscriptionPlanId,
                                    entitlements: r,
                                    giftCodeBatchId: G.STICKERS_GIFT_CODE_BATCH_ID
                                }, (0, L.makeComboId)(r[0].skuId, r[0].subscriptionPlanId)) : null, d.length > 0 ? (0, a.jsx)(v.default, {
                                    className: B.skuCard,
                                    skuId: d[0].skuId,
                                    subscriptionPlanId: d[0].subscriptionPlanId,
                                    entitlements: d,
                                    giftCodeBatchId: G.STICKERS_GIFT_CODE_BATCH_ID
                                }, (0, L.makeComboId)(d[0].skuId, d[0].subscriptionPlanId)) : null]
                            })
                        })
                    }(), (0, a.jsx)(u.FormSection, {
                        className: B.containerWithMargin,
                        children: (0, a.jsxs)(u.HeadingLevel, {
                            component: (0, a.jsx)(u.Heading, {
                                variant: "heading-md/semibold",
                                children: F.default.Messages.GIFT_INVENTORY_GIFTS_YOU_PURCHASED
                            }),
                            children: [(0, a.jsx)(u.FormDivider, {
                                className: B.divider
                            }), 0 === Object.keys(r).length ? (0, a.jsxs)("div", {
                                className: B.emptyState,
                                children: [(0, a.jsx)("div", {
                                    className: B.emptyStateImage
                                }), (0, a.jsx)(u.H, {
                                    className: B.emptyStateHeader,
                                    children: F.default.Messages.GIFT_INVENTORY_NO_GIFTS
                                }), (0, a.jsx)("p", {
                                    className: B.emptyStateSubtext,
                                    children: F.default.Messages.GIFT_INVENTORY_NO_GIFTS_SUBTEXT.format({
                                        onClick: z
                                    })
                                })]
                            }) : o().keys(r).map(e => {
                                let {
                                    skuId: t,
                                    subscriptionPlanId: s,
                                    giftStyle: n
                                } = (0, L.parseComboId)(e);
                                return (0, a.jsx)(v.default, {
                                    className: B.skuCard,
                                    skuId: t,
                                    subscriptionPlanId: s,
                                    entitlements: r[e],
                                    giftStyle: n
                                }, e)
                            })]
                        })
                    })]
                }) : (0, a.jsx)(u.Spinner, {
                    className: B.loading
                })
            }
        },
        38915: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            }), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("536442"),
                r = s("263704"),
                o = s("465670"),
                d = s("524393");

            function u(e) {
                let {
                    hotspotLocation: t
                } = e, [s, u] = (0, n.useStateFromStoresArray)([l.HotspotStore], () => [l.HotspotStore.hasHotspot(t, !0), l.HotspotStore.getHotspotOverride(t)]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(i.FormItem, {
                        title: t,
                        className: d.hotspotSwitch,
                        children: [s ? (0, a.jsx)(i.TooltipContainer, {
                            className: d.iconContainer,
                            element: "span",
                            text: "Active",
                            children: (0, a.jsx)(r.default, {
                                className: d.checkmark
                            })
                        }) : (0, a.jsx)(i.TooltipContainer, {
                            className: d.iconContainer,
                            element: "span",
                            text: "Inactive",
                            children: (0, a.jsx)(o.default, {
                                className: d.xmark
                            })
                        }), (0, a.jsx)(i.SingleSelect, {
                            className: d.overrideSelect,
                            value: u,
                            options: [{
                                value: void 0,
                                label: "No Override"
                            }, {
                                value: !0,
                                label: "Force Active"
                            }, {
                                value: !1,
                                label: "Force Inactive"
                            }],
                            onChange: e => null != e ? (0, l.setHotspotOverride)(t, e) : (0, l.clearHotspotOverride)(t)
                        })]
                    }), (0, a.jsx)(i.FormDivider, {})]
                })
            }

            function c(e) {
                let {
                    className: t
                } = e;
                return (0, a.jsxs)(i.FormSection, {
                    title: "Hotspots",
                    tag: i.FormTitleTags.H1,
                    className: t,
                    children: [(0, a.jsx)(i.Text, {
                        className: d.helpText,
                        tag: "p",
                        variant: "text-sm/normal",
                        children: 'All the "hotspots" in app, and their current status. Use the select menu to override them on or off.'
                    }), Object.keys(l.HotspotLocations).sort((e, t) => e.localeCompare(t)).map(e => (0, a.jsx)(u, {
                        hotspotLocation: e
                    }, e))]
                })
            }
        },
        494620: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InfoBoxLooks: function() {
                    return n
                },
                default: function() {
                    return T
                }
            });
            var a, n, i = s("735250");
            s("470079");
            var l = s("120356"),
                r = s.n(l),
                o = s("481060"),
                d = s("507893"),
                u = s("759231"),
                c = s("239260");
            (a = n || (n = {})).INFO = "info", a.WARNING = "warning";
            let S = {
                    info: c.info,
                    warning: c.warning
                },
                E = {
                    info: d.default,
                    warning: u.default
                };

            function T(e) {
                let {
                    children: t,
                    className: s,
                    look: a = "info"
                } = e, n = E[a];
                return (0, i.jsxs)("div", {
                    className: r()(c.root, s, S[a]),
                    children: [(0, i.jsx)(n, {
                        className: c.icon
                    }), (0, i.jsx)(o.Text, {
                        className: c.text,
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children: t
                    })]
                })
            }
        },
        601948: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                OverridePremiumTypeDropDown: function() {
                    return T
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("246992"),
                r = s("535664"),
                o = s("502087"),
                d = s("921801"),
                u = s("594174"),
                c = s("726985"),
                S = s("474936"),
                E = s("7811");
            let T = e => {
                let {
                    isDevTools: t = !1
                } = e, s = (0, n.useStateFromStores)([u.default], () => u.default.getCurrentUser()), T = (0, n.useStateFromStores)([o.default], () => {
                    let e = o.default.getCreatedAtOverride();
                    return null != e ? e.toISOString().substring(0, 10) : ""
                }), _ = (0, n.useStateFromStores)([o.default], () => o.default.getPremiumTypeOverride()), I = e => {
                    (0, r.updateClientCreatedAtOverride)(new Date(e))
                };
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsxs)(d.Subsetting, {
                        setting: c.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_PREMIUM_TYPE,
                        children: [(0, a.jsx)(i.FormSection, {
                            title: "Override Client-Side Premium Type",
                            tag: i.FormTitleTags.H3,
                            children: (0, a.jsx)(i.SingleSelect, {
                                options: S.PREMIUM_TYPE_OVERRIDE_OPTIONS,
                                value: _,
                                onChange: e => {
                                    (0, r.updateClientPremiumTypeOverride)(e, s)
                                },
                                popoutLayerContext: t ? l.devToolsLayerContext : void 0
                            })
                        }), (0, a.jsx)(i.Button, {
                            look: i.Button.Looks.LINK,
                            style: {
                                padding: "0"
                            },
                            onClick: () => {
                                (0, r.updateClientPremiumTypeOverride)(S.UNSELECTED_PREMIUM_TYPE_OVERRIDE, s)
                            },
                            children: "Reset premium type override"
                        })]
                    }), (0, a.jsxs)(d.Subsetting, {
                        setting: c.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_ACCOUNT_CREATED_DATA,
                        children: [(0, a.jsx)(i.FormSection, {
                            title: "Override Client-Side Account Created At Date",
                            tag: i.FormTitleTags.H3,
                            children: (0, a.jsx)("input", {
                                type: "date",
                                value: T,
                                onChange: e => I(e.target.value),
                                className: E.datePicker
                            })
                        }), (0, a.jsx)(i.Button, {
                            look: i.Button.Looks.LINK,
                            style: {
                                padding: "0"
                            },
                            type: "submit",
                            onClick: () => (0, r.updateClientCreatedAtOverride)(void 0),
                            children: "Reset account created at override"
                        })]
                    })]
                })
            }
        },
        498639: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("664751"),
                l = s("442837"),
                r = s("481060"),
                o = s("355467"),
                d = s("821849"),
                u = s("72924"),
                c = s("100527"),
                S = s("906732"),
                E = s("883904"),
                T = s("678558"),
                _ = s("730647"),
                I = s("584825"),
                N = s("305342"),
                g = s("333867"),
                f = s("963249"),
                m = s("87484"),
                A = s("197115"),
                C = s("911367"),
                O = s("430824"),
                h = s("78839"),
                R = s("981631"),
                p = s("474936"),
                M = s("913754");

            function D(e) {
                let {
                    selectedGuildForGuildSub: t
                } = e, s = (0, I.useGroupListingsForGuild)(null == t ? void 0 : t.id)[0];
                return (0, a.jsx)(a.Fragment, {
                    children: null != t && null != s ? (0, a.jsx)("div", {
                        className: M.formItem,
                        children: s.subscription_listings_ids.map(e => (0, a.jsx)(N.default, {
                            guildId: t.id,
                            groupListingId: e,
                            listingId: e
                        }, e))
                    }) : null
                })
            }
            t.default = function() {
                let [e, t] = n.useState(p.PremiumSubscriptionSKUs.TIER_2), [s, I] = n.useState(null), [N] = (0, l.useStateFromStoresArray)([O.default], () => [O.default.getGuilds()]), [x] = (0, l.useStateFromStoresArray)([h.default], () => [h.default.getPremiumSubscription()]);
                (0, C.useFetchProfileEffects)();
                let L = Object.values(N).map(e => ({
                        value: e,
                        label: e.name
                    })),
                    [P, b] = n.useState(L.length > 0 ? L[0].value : null),
                    [v, U] = n.useState(""),
                    [j, G] = n.useState({
                        plan_id: p.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
                        gift: "true"
                    }),
                    F = "true" !== j.gift && null != x,
                    [B, y] = n.useState(L.length > 0 ? L[0].value : null),
                    {
                        analyticsLocations: V
                    } = (0, S.default)(c.default.PAYMENT_FLOW_TEST_PAGE),
                    [H, Y] = n.useState(""),
                    [k, w] = n.useState(R.EMPTY_STRING_SNOWFLAKE_ID),
                    [W, K] = n.useState(""),
                    [Q, z] = n.useState(R.EMPTY_STRING_SNOWFLAKE_ID),
                    [X, q] = n.useState(R.EMPTY_STRING_SNOWFLAKE_ID);
                return (0, a.jsx)(S.AnalyticsLocationProvider, {
                    value: V,
                    children: (0, a.jsxs)(r.FormSection, {
                        title: "Payment Flow Modals",
                        tag: r.FormTitleTags.H1,
                        children: [(0, a.jsx)(r.FormTitle, {
                            children: "Gift"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: e,
                                options: [{
                                    value: p.PremiumSubscriptionSKUs.TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: p.PremiumSubscriptionSKUs.TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: p.PremiumSubscriptionSKUs.TIER_0,
                                    label: "Nitro Basic"
                                }, {
                                    value: null,
                                    label: "None"
                                }],
                                onChange: e => t(e)
                            }), (0, a.jsx)(A.default, {
                                subscriptionTier: e,
                                isGift: !0,
                                premiumModalAnalyticsLocation: {}
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Premium Select Plan"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: s,
                                options: [{
                                    value: p.PremiumSubscriptionSKUs.TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: p.PremiumSubscriptionSKUs.TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: p.PremiumSubscriptionSKUs.TIER_0,
                                    label: "Nitro Basic"
                                }, {
                                    value: null,
                                    label: "None"
                                }],
                                onChange: e => I(e)
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, f.default)({
                                    subscriptionTier: s,
                                    analyticsLocations: V
                                }),
                                children: "Select Plan"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Boost"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: P,
                                options: L,
                                onChange: e => b(e)
                            }), null != P ? (0, a.jsx)(T.default, {
                                guild: P,
                                analyticsLocation: {}
                            }) : (0, a.jsx)("div", {
                                children: "No Guild to boost"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsxs)(r.FormTitle, {
                            children: [(0, a.jsx)("div", {
                                children: "Standalone: Trial Promotion Redemption"
                            }), (0, a.jsx)(r.Anchor, {
                                href: "https://i.dis.gd/createPromo",
                                children: "How to create promotion"
                            })]
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Promotion Code",
                                value: v,
                                onChange: e => U(e)
                            }), (0, a.jsx)(r.Tooltip, {
                                text: "Need Promotion Code",
                                shouldShow: v.length < 1,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: s
                                    } = e;
                                    return (0, a.jsx)(r.Button, {
                                        disabled: v.length < 1,
                                        onMouseEnter: t,
                                        onMouseLeave: s,
                                        onClick: () => {
                                            window.open(R.Routes.BILLING_PROMOTION_REDEMPTION(v))
                                        },
                                        children: "Open Link"
                                    })
                                }
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Standalone: Gift/Subscription Purchase"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.SingleSelect, {
                                value: j.plan_id,
                                options: [{
                                    value: p.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
                                    label: "Nitro"
                                }, {
                                    value: p.SubscriptionPlans.PREMIUM_MONTH_TIER_1,
                                    label: "Nitro Classic"
                                }, {
                                    value: p.SubscriptionPlans.PREMIUM_MONTH_TIER_0,
                                    label: "Nitro Basic"
                                }],
                                onChange: e => G(t => ({
                                    ...t,
                                    plan_id: e
                                }))
                            }), (0, a.jsx)(r.SingleSelect, {
                                value: j.gift,
                                options: [{
                                    value: "true",
                                    label: "Gift"
                                }, {
                                    value: "false",
                                    label: "Not Gift"
                                }],
                                onChange: e => G(t => ({
                                    ...t,
                                    gift: e
                                }))
                            }), (0, a.jsx)(r.Tooltip, {
                                text: "Already subscribed",
                                shouldShow: F,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: s
                                    } = e;
                                    return (0, a.jsx)(r.Button, {
                                        onMouseLeave: s,
                                        onMouseEnter: t,
                                        disabled: F,
                                        onClick: () => {
                                            window.open(R.Routes.BILLING_PREMIUM_SUBSCRIBE + "?" + i.stringify({
                                                ...j
                                            }))
                                        },
                                        children: "Open Link"
                                    })
                                }
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Creator Revenue"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.Text, {
                                className: M.guildServerDescription,
                                variant: "text-sm/normal",
                                children: "Premium Server Subscription For"
                            }), (0, a.jsx)(r.SingleSelect, {
                                value: B,
                                options: L,
                                onChange: e => y(e)
                            })]
                        }), (0, a.jsx)(_.GroupListingsFetchContextProvider, {
                            guildId: null == B ? void 0 : B.id,
                            children: (0, a.jsx)(D, {
                                selectedGuildForGuildSub: B
                            })
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Activities & Application Payment Modals"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Application Id",
                                value: H,
                                onChange: Y
                            }), (0, a.jsx)(r.TextInput, {
                                placeholder: "Sku Id",
                                value: k,
                                onChange: e => w(e)
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, u.openIAPPurchaseModal)({
                                    applicationId: H,
                                    skuId: k,
                                    openPremiumPaymentModal: () => !0,
                                    analyticsLocations: [],
                                    analyticsLocationObject: {
                                        page: R.AnalyticsPages.IN_APP
                                    },
                                    context: R.AppContext.APP
                                }),
                                children: "Open App Subs Modal for Activity"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Standard Payment Modal Test"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "Application Id",
                                value: W,
                                onChange: K
                            }), (0, a.jsx)(r.TextInput, {
                                placeholder: "SKU ID",
                                value: Q,
                                onChange: e => z(e)
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, m.default)({
                                    applicationId: W,
                                    skuId: Q,
                                    analyticsLocations: V
                                }),
                                children: "Open Standard Payment Modal for SKU"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Collectibles Payment Modal Test"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.TextInput, {
                                placeholder: "SKU ID",
                                value: X,
                                onChange: e => q(e)
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, g.default)({
                                    skuId: X,
                                    analyticsLocations: V
                                }),
                                children: "Open Collectibles Payment Modal for SKU"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Helpers"
                        }), (0, a.jsxs)(r.FormItem, {
                            className: M.formItem,
                            children: [(0, a.jsx)(r.Button, {
                                onClick: () => (0, d.resetSubscriptionPlanData)(),
                                children: "Reset SubscriptionPlanStore"
                            }), (0, a.jsx)(r.Button, {
                                onClick: () => (0, o.resetSubscriptionStore)(),
                                children: "Reset SubscriptionStore"
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: M.formDivider
                        }), (0, a.jsx)(r.FormTitle, {
                            children: "Dismissible Content Framework"
                        }), (0, a.jsx)(r.FormItem, {
                            className: M.formItem,
                            children: (0, a.jsx)(r.Button, {
                                onClick: () => (0, E.resetDismissibleContentFrameworkStore)(),
                                children: "Reset DismissibleContentFrameworkStore"
                            })
                        })]
                    })
                })
            }
        },
        748717: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("218390"),
                l = s("299657"),
                r = s("594174"),
                o = s("74538"),
                d = s("474936");

            function u() {
                let e = (0, n.useStateFromStores)([r.default], () => r.default.getCurrentUser());
                return (0, o.isPremiumExactly)(e, d.PremiumTypes.TIER_2) ? (0, a.jsx)(i.default, {}) : (0, a.jsx)(l.default, {})
            }
        },
        394644: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getSearchableSettingsTitles: function() {
                    return j
                },
                useDefaultUserSettingsSections: function() {
                    return b
                },
                useGenerateUserSettingsSections: function() {
                    return x
                },
                useSearchUserSettingsSections: function() {
                    return v
                },
                useViewableSettingsFilterFromSearch: function() {
                    return L
                }
            }), s("639576"), s("536091"), s("47120"), s("653041");
            var a = s("470079"),
                n = s("442837"),
                i = s("704215"),
                l = s("493544"),
                r = s("634894"),
                o = s("211242"),
                d = s("924557"),
                u = s("706140"),
                c = s("592204"),
                S = s("631885"),
                E = s("223639"),
                T = s("160913"),
                _ = s("725727"),
                I = s("977156"),
                N = s("237292"),
                g = s("663389"),
                f = s("594174"),
                m = s("202527"),
                A = s("620163"),
                C = s("295545"),
                O = s("168308"),
                h = s("839469"),
                R = s("726985"),
                p = s("46140"),
                M = s("689938");

            function D(e) {
                let t = [{
                        header: M.default.Messages.USER_SETTINGS,
                        settings: [R.WebSetting.SEARCH_BAR, R.WebSetting.ACCOUNT, R.WebSetting.GAMES, R.WebSetting.PROFILE_CUSTOMIZATION, R.WebSetting.PRIVACY_AND_SAFETY, R.WebSetting.PRIVACY_FAMILY_CENTER, R.WebSetting.AUTHORIZED_APPS, R.WebSetting.SESSIONS, R.WebSetting.CONNECTIONS, R.WebSetting.CLIPS, R.WebSetting.FRIEND_REQUESTS]
                    }, {
                        header: M.default.Messages.BILLING_SETTINGS,
                        divider: !0,
                        settings: [R.WebSetting.PREMIUM, R.WebSetting.GUILD_BOOSTING, R.WebSetting.SUBSCRIPTIONS, R.WebSetting.GIFT_INVENTORY, R.WebSetting.BILLING]
                    }, {
                        header: M.default.Messages.APP_SETTINGS,
                        divider: !0,
                        settings: [R.WebSetting.APPEARANCE, R.WebSetting.ACCESSIBILITY, R.WebSetting.VOICE_AND_VIDEO, R.WebSetting.POGGERMODE, R.WebSetting.CHAT, R.WebSetting.NOTIFICATIONS, R.WebSetting.KEYBINDS, R.WebSetting.LANGUAGE, R.WebSetting.WINDOW_SETTINGS, R.WebSetting.LINUX_SETTINGS, R.WebSetting.STREAMER_MODE, R.WebSetting.SPEED_TEST, R.WebSetting.SETTINGS_ADVANCED]
                    }, {
                        divider: !0,
                        settings: [R.WebSetting.CHANGELOG, R.WebSetting.MERCHANDISE, R.WebSetting.HYPESQUAD, R.WebSetting.EXPERIMENTS, R.WebSetting.DEVELOPER_OPTIONS, R.WebSetting.HOTSPOT_OPTIONS, R.WebSetting.DISMISSIBLE_CONTENT_OPTIONS, R.WebSetting.PAYMENT_FLOW_MODALS, R.WebSetting.DESIGN_SYSTEMS, R.WebSetting.TEXT_PLAYGROUND, R.WebSetting.TEXT_COMPONENTS, R.WebSetting.PROFILE_EFFECTS_PREVIEW_TOOL, R.WebSetting.QUEST_PREVIEW_TOOL]
                    }, {
                        divider: !0,
                        settings: [R.WebSetting.LOGOUT]
                    }, {
                        divider: !0,
                        settings: [R.WebSetting.SOCIAL_LINKS, R.WebSetting.CLIENT_DEBUG_INFO]
                    }],
                    s = {
                        header: M.default.Messages.ACTIVITY_SETTINGS,
                        divider: !0,
                        settings: [R.WebSetting.ACTIVITY_PRIVACY, R.WebSetting.REGISTERED_GAMES, R.WebSetting.OVERLAY]
                    };
                return e ? t : t.toSpliced(3, 0, s)
            }

            function x() {
                var e, t;
                let s = (0, _.useUnseenOutboundPromotions)().length,
                    a = (0, T.useIsPrepaidPaymentPastDue)(),
                    l = (0, n.useStateFromStores)([g.default], () => g.default.getProps().impressionSource),
                    h = (0, S.usePendingRequestCount)(),
                    R = (0, O.useShouldShowOverlaySettings)(),
                    M = (0, d.useEnableClips)(),
                    [D] = (0, u.useGetDismissibleContent)(M ? [i.DismissibleContent.CLIPS_SETTINGS_BETA_TAG] : []),
                    x = "useGenerateUserSettingsSections";
                (0, r.useTriggerDebuggingAA)({
                    location: x + " auto on",
                    autoTrackExposure: !0
                }), (0, r.useTriggerDebuggingAA)({
                    location: x + " auto off",
                    autoTrackExposure: !1
                });
                let {
                    shouldMergeGameSettings: L
                } = m.GameSettingsMergeExperiment.useExperiment({
                    location: "settings"
                }), P = (0, C.useIsEligibleForUserSettingsSearchDesktop)({
                    location: "settings"
                }), b = (0, c.useIsEligibleForKeywordFiltering)({
                    location: "settings"
                }), v = null !== (t = null === (e = f.default.getCurrentUser()) || void 0 === e ? void 0 : e.isStaff()) && void 0 !== t && t, U = (0, N.useIsEligibleForInappropriateConversationWarning)({
                    location: "settings"
                }), j = (0, o.useBlockedPaymentsConfig)(), G = (0, I.useIsEligibleForQuests)({
                    location: p.QuestsExperimentLocations.USER_SETTINGS_SEARCH_GIFT_INVENTORY
                }), {
                    enabled: F
                } = E.default.useExperiment({
                    location: "UserSettingsInventory"
                }, {
                    autoTrackExposure: !0
                });
                return (0, A.getConfig)({
                    unseenGiftCount: s,
                    showPrepaidPaymentPastDueWarning: a,
                    impressionSource: l,
                    numOfPendingFamilyRequests: h,
                    isOverlaySupported: R,
                    isClipsBetaTagShowing: D === i.DismissibleContent.CLIPS_SETTINGS_BETA_TAG,
                    shouldMergeGameSettings: L,
                    isUserSettingsSearchEnabled: P,
                    isKeywordFilteringEnabled: b,
                    isStaff: v,
                    isInappropriateConversationWarningEnabled: U,
                    paymentsBlocked: j,
                    isEligibleForQuests: G,
                    showGiftNitro: F
                })
            }

            function L(e) {
                let {
                    searchResults: t
                } = (0, h.useSettingSearchResults)(), s = x();
                if (!(0, C.useIsEligibleForUserSettingsSearchDesktop)({
                        location: "settings"
                    })) return new Set;
                let a = s[e],
                    n = Object.fromEntries(Object.entries(s).filter(e => {
                        let [t, s] = e;
                        return s.section === a.section
                    })),
                    i = Object.fromEntries(Object.entries(n).filter(e => {
                        let [t, {
                            parent: s,
                            section: n
                        }] = e;
                        return null != s && n === a.section
                    }).map(e => {
                        let [t, {
                            parent: s
                        }] = e;
                        return [t, s]
                    })),
                    l = new Set,
                    r = e => {
                        let t = n[e];
                        if (null == t) return;
                        l.add(e);
                        let s = t.parent;
                        null != s && r(s)
                    },
                    o = e => {
                        for (let t of (l.add(e), Object.entries(i).filter(t => {
                                let [s, a] = t;
                                return a === e
                            }).map(e => {
                                let [t] = e;
                                return t
                            }))) o(t)
                    };
                for (let e of t.filter(e => e in n))
                    if (!l.has(e)) {
                        if (null != n[e].element && null == n[e].parent) {
                            l.clear();
                            break
                        }
                        Object.values(i).includes(e) && o(e), r(e)
                    } return l
            }

            function P(e, t) {
                let s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    a = arguments.length > 3 ? arguments[3] : void 0,
                    n = [],
                    i = U(t),
                    r = function(e, t) {
                        let s = new Map;
                        return null != t && t.forEach(t => {
                            let a = e[t].parent;
                            for (; null != a && null != e[a].parent;) a = e[a].parent;
                            if (null != a) {
                                var n;
                                let e = null !== (n = s.get(a)) && void 0 !== n ? n : 0;
                                s.set(a, e + 1)
                            }
                        }), s
                    }(t, new Set(Array.from(null != a ? a : []).filter(e => i.has(e))));
                return e.forEach(e => {
                    0 !== e.settings.length && (!0 === e.divider && n.push({
                        section: l.SectionTypes.DIVIDER
                    }), null != e.header && n.push({
                        section: l.SectionTypes.HEADER,
                        label: e.header
                    }), e.settings.forEach(e => {
                        n.push({
                            ...t[e],
                            tabPredicate: () => {
                                var t, s, n;
                                return null == a || (t = e, s = a, n = r, t === R.WebSetting.SEARCH_BAR || t === R.WebSetting.SEARCH_NO_RESULTS && 0 === s.size || n.has(t) || s.has(t))
                            },
                            searchFilterCount: !s || (null == a ? void 0 : a.has(e)) ? void 0 : r.get(e)
                        })
                    }))
                }), n
            }

            function b() {
                let e = x(),
                    {
                        shouldMergeGameSettings: t
                    } = m.GameSettingsMergeExperiment.useExperiment({
                        location: "settings"
                    }),
                    s = a.useMemo(() => D(t), [t]);
                return a.useMemo(() => P(s, e), [s, e])
            }

            function v(e) {
                let t = x(),
                    s = function() {
                        let {
                            shouldMergeGameSettings: e
                        } = m.GameSettingsMergeExperiment.useExperiment({
                            location: "settings"
                        }), t = D(e);
                        return a.useMemo(() => [{
                            header: M.default.Messages.USER_SETTINGS,
                            settings: [...t.map(e => {
                                let {
                                    settings: t
                                } = e;
                                return t
                            }).flat(1), R.WebSetting.SEARCH_NO_RESULTS]
                        }], [t])
                    }(),
                    n = (0, C.useIsEligibleForUserSettingsSearchDesktopWithCount)({
                        location: "settings"
                    });
                return a.useMemo(() => P(s, t, n, new Set(e)), [s, t, n, e])
            }

            function U(e) {
                return new Map(Object.entries(e).filter(e => {
                    let [t, s] = e;
                    return s.section !== l.SectionTypes.CUSTOM && null != s.searchableTitle && (null == s.predicate || s.predicate())
                }))
            }

            function j(e) {
                return Array.from(U(e).entries()).map(e => {
                    let [t, s] = e;
                    return [t, s.searchableTitle]
                })
            }
        },
        726985: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                EMPTY_SETTINGS_LIST: function() {
                    return l
                },
                NON_SEARCHABLE_SETTING: function() {
                    return i
                },
                WebSetting: function() {
                    return a
                }
            }), (n = a || (a = {})).SEARCH_BAR = "SEARCH_BAR", n.SEARCH_NO_RESULTS = "SEARCH_NO_RESULTS", n.ACCOUNT = "ACCOUNT", n.ACCOUNT_PROFILE = "ACCOUNT_PROFILE", n.ACCOUNT_DISPLAY_NAME = "ACCOUNT_DISPLAY_NAME", n.ACCOUNT_PHONE_NUMBER = "ACCOUNT_PHONE_NUMBER", n.ACCOUNT_USERNAME = "ACCOUNT_USERNAME", n.ACCOUNT_EMAIL = "ACCOUNT_EMAIL", n.ACCOUNT_PASSWORD_AND_AUTHENTICATION = "ACCOUNT_PASSWORD_AND_AUTHENTICATION", n.ACCOUNT_MULTI_FACTOR_AUTHENTICATION = "ACCOUNT_MULTI_FACTOR_AUTHENTICATION", n.ACCOUNT_CHANGE_PASSWORD = "ACCOUNT_CHANGE_PASSWORD", n.ACCOUNT_CONFIRM_PASSWORD = "ACCOUNT_CONFIRM_PASSWORD", n.ACCOUNT_ENABLE_2FA = "ACCOUNT_ENABLE_2FA", n.ACCOUNT_REMOVE_2FA = "ACCOUNT_REMOVE_2FA", n.ACCOUNT_VIEW_BACKUP_CODES = "ACCOUNT_VIEW_BACKUP_CODES", n.ACCOUNT_SMS_BACKUP = "ACCOUNT_SMS_BACKUP", n.ACCOUNT_SECURITY_KEYS = "ACCOUNT_SECURITY_KEYS", n.ACCOUNT_REMOVAL = "ACCOUNT_REMOVAL", n.ACCOUNT_DELETE_ACCOUNT = "ACCOUNT_DELETE_ACCOUNT", n.ACCOUNT_DISABLE_ACCOUNT = "ACCOUNT_DISABLE_ACCOUNT", n.GAMES = "GAMES", n.GAMES_MY_GAMES = "GAMES_MY_GAMES", n.GAMES_CLIPS = "GAMES_CLIPS", n.GAMES_OVERLAY = "GAMES_OVERLAY", n.GAMES_ACTIVITY_PRIVACY = "GAMES_ACTIVITY_PRIVACY", n.PROFILE_CUSTOMIZATION = "PROFILE_CUSTOMIZATION", n.PROFILE_DISPLAY_NAME = "PROFILE_DISPLAY_NAME", n.PROFILE_USER_PROFILE = "PROFILE_USER_PROFILE", n.PROFILE_SERVER_PROFILES = "PROFILE_SERVER_PROFILES", n.PRIVACY_AND_SAFETY = "PRIVACY_AND_SAFETY", n.PRIVACY_USER_SETTINGS = "PRIVACY_USER_SETTINGS", n.PRIVACY_SENSITIVE_MEDIA = "PRIVACY_SENSITIVE_MEDIA", n.PRIVACY_DIRECT_MESSAGE_SPAM_FILTER = "PRIVACY_DIRECT_MESSAGE_SPAM_FILTER", n.PRIVACY_KEYWORD_FILTER = "PRIVACY_KEYWORD_FILTER", n.PRIVACY_KEYWORD_FILTER_PROFANITY = "PRIVACY_KEYWORD_FILTER_PROFANITY", n.PRIVACY_KEYWORD_FILTER_INSULTS_SLURS = "PRIVACY_KEYWORD_FILTER_INSULTS_SLURS", n.PRIVACY_KEYWORD_FILTER_SEXUAL_CONTENT = "PRIVACY_KEYWORD_FILTER_SEXUAL_CONTENT", n.PRIVACY_SERVER_PRIVACY_DEFAULTS = "PRIVACY_SERVER_PRIVACY_DEFAULTS", n.PRIVACY_SERVER_PRIVACY_DEFAULTS_DMS = "PRIVACY_SERVER_PRIVACY_DEFAULTS_DMS", n.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_IOS = "PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_IOS", n.PRIVACY_SERVER_PRIVACY_DEFAULTS_MESSAGE_REQUESTS = "PRIVACY_SERVER_PRIVACY_DEFAULTS_MESSAGE_REQUESTS", n.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_APPS = "PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_APPS", n.PRIVACY_DATA_PRIVACY = "PRIVACY_DATA_PRIVACY", n.PRIVACY_DATA_IMPROVE_DISCORD = "PRIVACY_DATA_IMPROVE_DISCORD", n.PRIVACY_DATA_PERSONALIZE = "PRIVACY_DATA_PERSONALIZE", n.PRIVACY_DATA_QUESTS = "PRIVACY_DATA_QUESTS", n.PRIVACY_DATA_BASIC_SERVICE = "PRIVACY_DATA_BASIC_SERVICE", n.PRIVACY_DATA_REQUEST = "PRIVACY_DATA_REQUEST", n.PRIVACY_TERMS_POLICY = "PRIVACY_TERMS_POLICY", n.PRIVACY_STAFF_ONLY = "PRIVACY_STAFF_ONLY", n.PRIVACY_ACCOUNT_STANDING = "PRIVACY_ACCOUNT_STANDING", n.PRIVACY_FAMILY_CENTER = "PRIVACY_FAMILY_CENTER", n.PRIVACY_SAFETY_ALERTS = "PRIVACY_SAFETY_ALERTS", n.AUTHORIZED_APPS = "AUTHORIZED_APPS", n.SESSIONS = "SESSION", n.CONNECTIONS = "CONNECTIONS", n.CONNECTIONS_CONNECTED_ACCOUNTS = "CONNECTIONS_CONNECTED_ACCOUNTS", n.CLIPS = "CLIPS", n.FRIEND_REQUESTS = "FRIEND_REQUESTS", n.PREMIUM = "PREMIUM", n.GUILD_BOOSTING = "GUILD_BOOSTING", n.SUBSCRIPTIONS = "SUBSCRIPTIONS", n.SUBSCRIPTIONS_CREDITS = "SUBSCRIPTIONS_CREDITS", n.GIFT_INVENTORY = "GIFT_INVENTORY", n.GIFT_NITRO = "GIFT_NITRO", n.GIFT_CODE_REDEMPTION = "GIFT_CODE_REDEMPTION", n.GIFT_INVENTORY_QUESTS = "GIFT_INVENTORY_QUESTS", n.GIFT_INVENTORY_LIST = "GIFT_INVENTORY_LIST", n.GIFT_BLOCKED_PAYMENTS = "GIFT_BLOCKED_PAYMENTS", n.BILLING = "BILLING", n.BILLING_PAYMENT_METHODS = "BILLING_PAYMENT_METHODS", n.BILLING_TRANSACTION_HISTORY = "BILLING_TRANSACTION_HISTORY", n.APPEARANCE = "APPEARANCE", n.APPEARANCE_THEME = "APPEARANCE_THEME", n.APPEARANCE_COLOR = "APPEARANCE_COLOR", n.APPEARANCE_ICON = "APPEARANCE_ICON", n.APPEARANCE_MESSAGE_DISPLAY_COMPACT = "APPEARANCE_MESSAGE_DISPLAY_COMPACT", n.APPEARANCE_SCALING_SPACING = "APPEARANCE_SCALING_SPACING", n.ACCESSIBILITY = "ACCESSIBILITY", n.ACCESSIBILITY_SATURATION = "ACCESSIBILITY_SATURATION", n.ACCESSIBILITY_LINK_DECORATIONS = "ACCESSIBILITY_LINK_DECORATIONS", n.ACCESSIBILITY_ROLE_STYLE = "ACCESSIBILITY_ROLE_STYLE", n.ACCESSIBILITY_TAGS = "ACCESSIBILITY_TAGS", n.ACCESSIBILITY_SYNC_PROFILE_THEME = "ACCESSIBILITY_SYNC_PROFILE_THEME", n.ACCESSIBILITY_CONTRAST = "ACCESSIBILITY_CONTRAST", n.ACCESSIBILITY_REDUCED_MOTION = "ACCESSIBILITY_REDUCED_MOTION", n.ACCESSIBILITY_STICKERS = "ACCESSIBILITY_STICKERS", n.ACCESSIBILITY_MESSAGES = "ACCESSIBILITY_MESSAGES", n.ACCESSIBILITY_TEXT_TO_SPEECH = "ACCESSIBILITY_TEXT_TO_SPEECH", n.VOICE_AND_VIDEO = "VOICE_AND_VIDEO", n.VOICE_AND_VIDEO_DEVICES = "VOICE_AND_VIDEO_DEVICES", n.VOICE_AND_VIDEO_VOLUME_CONTROLS = "VOICE_AND_VIDEO_VOLUME_CONTROLS", n.VOICE_AND_VIDEO_MIC_TEST = "VOICE_AND_VIDEO_MIC_TEST", n.VOICE_AND_VIDEO_TROUBLESHOOTING = "VOICE_AND_VIDEO_TROUBLESHOOTING", n.VOICE_AND_VIDEO_INPUT_MODE = "VOICE_AND_VIDEO_INPUT_MODE", n.VOICE_AND_VIDEO_SENSITIVITY = "VOICE_AND_VIDEO_SENSITIVITY", n.VOICE_AND_VIDEO_SOUNDBOARD = "VOICE_AND_VIDEO_SOUNDBOARD", n.VOICE_AND_VIDEO_SOUNDS = "VOICE_AND_VIDEO_SOUNDS", n.VOICE_AND_VIDEO_ENTRANCE_SOUNDS = "VOICE_AND_VIDEO_ENTRANCE_SOUNDS", n.VOICE_AND_VIDEO_VIDEO = "VOICE_AND_VIDEO_VIDEO", n.VOICE_AND_VIDEO_VIDEO_CAMERA = "VOICE_AND_VIDEO_VIDEO_CAMERA", n.VOICE_AND_VIDEO_ADVANCED = "VOICE_AND_VIDEO_ADVANCED", n.VOICE_AND_VIDEO_ADVANCED_CODECS = "VOICE_AND_VIDEO_ADVANCED_CODECS", n.VOICE_AND_VIDEO_ADVANCED_PROCESSING = "VOICE_AND_VIDEO_ADVANCED_PROCESSING", n.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ECHO_CANCELLATION = "VOICE_AND_VIDEO_ADVANCED_PROCESSING_ECHO_CANCELLATION", n.VOICE_AND_VIDEO_ADVANCED_PROCESSING_NOISE_SUPPRESSION = "VOICE_AND_VIDEO_ADVANCED_PROCESSING_NOISE_SUPPRESSION", n.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ADVANCED_VOICE_ACTIVITY = "VOICE_AND_VIDEO_ADVANCED_PROCESSING_ADVANCED_VOICE_ACTIVITY", n.VOICE_AND_VIDEO_ADVANCED_PROCESSING_AUTOMATIC_GAIN_CONTROL = "VOICE_AND_VIDEO_ADVANCED_PROCESSING_AUTOMATIC_GAIN_CONTROL", n.VOICE_AND_VIDEO_ADVANCED_QOS = "VOICE_AND_VIDEO_ADVANCED_QOS", n.VOICE_AND_VIDEO_ADVANCED_ATTENUATION = "VOICE_AND_VIDEO_ADVANCED_ATTENUATION", n.VOICE_AND_VIDEO_ADVANCED_SUBSYSTEM = "VOICE_AND_VIDEO_ADVANCED_SUBSYSTEM", n.VOICE_AND_VIDEO_RESET_VOICE_SETTINGS = "VOICE_AND_VIDEO_RESET_VOICE_SETTINGS", n.POGGERMODE = "POGGERMODE", n.CHAT = "CHAT", n.CHAT_INLINE_MEDIA = "CHAT_INLINE_MEDIA", n.CHAT_INLINE_MEDIA_LINKS = "CHAT_INLINE_MEDIA_LINKS", n.CHAT_INLINE_MEDIA_UPLOADS = "CHAT_INLINE_MEDIA_UPLOADS", n.CHAT_INLINE_MEDIA_IMAGE_DESCRIPTIONS = "CHAT_INLINE_MEDIA_IMAGE_DESCRIPTIONS", n.CHAT_EMBEDS = "CHAT_EMBEDS", n.CHAT_EMBEDS_LINK_PREVIEWS = "CHAT_EMBEDS_LINK_PREVIEWS", n.CHAT_EMOJI = "CHAT_EMOJI", n.CHAT_EMOJI_REACTIONS = "CHAT_EMOJI_REACTIONS", n.CHAT_EMOJI_EMOTICONS = "CHAT_EMOJI_EMOTICONS", n.CHAT_STICKERS = "CHAT_STICKERS", n.CHAT_STICKERS_SUGGESTIONS = "CHAT_STICKERS_SUGGESTIONS", n.CHAT_STICKERS_AUTOCOMPLETE = "CHAT_STICKERS_AUTOCOMPLETE", n.CHAT_TEXT_BOX = "CHAT_TEXT_BOX", n.CHAT_TEXT_BOX_PREVIEW = "CHAT_TEXT_BOX_PREVIEW", n.CHAT_THREADS = "CHAT_THREADS", n.CHAT_THREADS_SPLIT_VIEW = "CHAT_THREADS_SPLIT_VIEW", n.CHAT_SPOILERS = "CHAT_SPOILERS", n.NOTIFICATIONS = "NOTIFICATIONS", n.NOTIFICATIONS_ENABLE_DESKTOP = "NOTIFICATIONS_ENABLE_DESKTOP", n.NOTIFICATIONS_MENTION_ON_ALL_MESSAGES = "NOTIFICATIONS_MENTION_ON_ALL_MESSAGES", n.NOTIFICATIONS_UNREAD_MESSAGE_BADGE = "NOTIFICATIONS_UNREAD_MESSAGE_BADGE", n.NOTIFICATIONS_ENABLE_TASKBAR_FLASHING = "NOTIFICATIONS_ENABLE_TASKBAR_FLASHING", n.NOTIFICATIONS_UNREAD_SETTINGS = "NOTIFICATIONS_UNREAD_SETTINGS", n.NOTIFICATIONS_NEW_SETTINGS = "NOTIFICATIONS_NEW_SETTINGS", n.NOTIFICATIONS_RESTORE_MOST_RECENT_SNAPSHOT = "NOTIFICATIONS_RESTORE_MOST_RECENT_SNAPSHOT", n.NOTIFICATIONS_LAUNCH_MIGRATION = "NOTIFICATIONS_LAUNCH_MIGRATION", n.NOTIFICATIONS_TOGGLE_NEW_SYSTEM = "NOTIFICATIONS_TOGGLE_NEW_SYSTEM", n.NOTIFICATIONS_PUSH_INACTIVE_TIMEOUT = "NOTIFICATIONS_PUSH_INACTIVE_TIMEOUT", n.NOTIFICATIONS_TEXT_TO_SPEECH = "NOTIFICATIONS_TEXT_TO_SPEECH", n.NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS = "NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS", n.NOTIFICATIONS_COMMUNITY_IN_APP_ALERTS = "NOTIFICATIONS_COMMUNITY_IN_APP_ALERTS", n.NOTIFICATIONS_COMMUNITY_PUSH_NOTIFICATIONS = "NOTIFICATIONS_COMMUNITY_PUSH_NOTIFICATIONS", n.NOTIFICATIONS_SOUNDS = "NOTIFICATIONS_SOUNDS", n.NOTIFICATIONS_EMAILS = "NOTIFICATION_EMAILS", n.NOTIFICATIONS_EMAILS_COMMUNICATION = "NOTIFICATIONS_EMAILS_COMMUNICATION", n.NOTIFICATIONS_EMAILS_SOCIAL = "NOTIFICATIONS_EMAILS_SOCIAL", n.NOTIFICATIONS_EMAILS_ANNOUNCEMENTS_AND_UPDATES = "NOTIFICATIONS_EMAILS_ANNOUNCEMENTS_AND_UPDATES", n.NOTIFICATIONS_EMAILS_TIPS = "NOTIFICATIONS_EMAILS_TIPS", n.NOTIFICATIONS_EMAILS_RECOMMENDATIONS_AND_EVENTS = "NOTIFICATIONS_EMAILS_RECOMMENDATIONS_AND_EVENTS", n.NOTIFICATIONS_EMAILS_UNSUBSCRIBE_FROM_ALL_MARKETING_EMAILS = "NOTIFICATIONS_EMAILS_UNSUBSCRIBE_FROM_ALL_MARKETING_EMAILS", n.KEYBINDS = "KEYBINDS", n.LANGUAGE = "LANGUAGE", n.WINDOW_SETTINGS = "WINDOW_SETTINGS", n.LINUX_SETTINGS = "LINUX_SETTINGS", n.STREAMER_MODE = "STREAMER_MODE", n.STREAMER_MODE_ENABLE = "STREAMER_MODE_ENABLE", n.STREAMER_MODE_HIDE_PERSONAL_INFORMATION = "STREAMER_MODE_HIDE_PERSONAL_INFORMATION", n.STREAMER_MODE_HIDE_INVITE_LINKS = "STREAMER_MODE_HIDE_INVITE_LINKS", n.STREAMER_MODE_DISABLE_SOUNDS = "STREAMER_MODE_DISABLE_SOUNDS", n.STREAMER_MODE_DISABLE_NOTIFICATIONS = "STREAMER_MODE_DISABLE_NOTIFICATIONS", n.STREAMER_MODE_HIDE_DISCORD_WINDOW_FROM_SCREEN_CAPTURE = "STREAMER_MODE_HIDE_DISCORD_WINDOW_FROM_SCREEN_CAPTURE", n.STREAMER_MODE_INTEGRATIONS = "STREAMER_MODE_INTEGRATIONS", n.SPEED_TEST = "SPEED_TEST", n.SETTINGS_ADVANCED = "SETTINGS_ADVANCED", n.SETTINGS_ADVANCED_DEVELOPER_MODE = "SETTINGS_ADVANCED_DEVELOPER_MODE", n.SETTINGS_ADVANCED_HARDWARE_ACCELERATION = "SETTINGS_ADVANCED_HARDWARE_ACCELERATION", n.SETTINGS_ADVANCED_SHOW_GAME_LIBRARY = "SETTINGS_ADVANCED_SHOW_GAME_LIBRARY", n.SETTINGS_ADVANCED_APPLICATION_TEST_MODE = "SETTINGS_ADVANCED_APPLICATION_TEST_MODE", n.SETTINGS_ADVANCED_AUTO_NAVIGATE_TO_HOME = "SETTINGS_ADVANCED_AUTO_NAVIGATE_TO_HOME", n.ACTIVITY_PRIVACY = "ACTIVITY_PRIVACY", n.ACTIVITY_PRIVACY_STATUS = "ACTIVITY_PRIVACY_STATUS", n.ACTIVITY_PRIVACY_RICH_PRESENCE = "ACTIVITY_PRIVACY_RICH_PRESENCE", n.REGISTERED_GAMES = "REGISTERED_GAMES", n.OVERLAY = "OVERLAY", n.CHANGELOG = "CHANGELOG", n.MERCHANDISE = "MERCHANDISE", n.HYPESQUAD = "HYPESQUAD", n.EXPERIMENTS = "EXPERIMENTS", n.DEVELOPER_OPTIONS = "DEVELOPER_OPTIONS", n.DEVELOPER_OPTIONS_FLAGS = "DEVELOPER_OPTIONS_FLAGS", n.DEVELOPER_OPTIONS_TRACING_REQUESTS = "DEVELOPER_OPTIONS_TRACING_REQUESTS", n.DEVELOPER_OPTIONS_FORCED_CANARY = "DEVELOPER_OPTIONS_FORCED_CANARY", n.DEVELOPER_OPTIONS_GATEWAY_EVENTS_TO_CONSOLE = "DEVELOPER_OPTIONS_GATEWAY_EVENTS_TO_CONSOLE", n.DEVELOPER_OPTIONS_OVERLAY_RPC_EVENTS_COMMANDS = "DEVELOPER_OPTIONS_OVERLAY_RPC_EVENTS_COMMANDS", n.DEVELOPER_OPTIONS_ANALYTICS_EVENTS_LOGGING = "DEVELOPER_OPTIONS_ANALYTICS_EVENTS_LOGGING", n.DEVELOPER_OPTIONS_SOURCE_MAPS = "DEVELOPER_OPTIONS_SOURCE_MAPS", n.DEVELOPER_OPTIONS_ANALYTICS_DEBUGGER_VIEW = "DEVELOPER_OPTIONS_ANALYTICS_DEBUGGER_VIEW", n.DEVELOPER_OPTIONS_IDLE_STATUS_INDICATOR = "DEVELOPER_OPTIONS_IDLE_STATUS_INDICATOR", n.DEVELOPER_OPTIONS_ACCESSIBILITY_AUDITING = "DEVELOPER_OPTIONS_ACCESSIBILITY_AUDITING", n.DEVELOPER_OPTIONS_PREVIEW_UNPUBLISHED_COLLECTIONS = "DEVELOPER_OPTIONS_PREVIEW_UNPUBLISHED_COLLECTIONS", n.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE = "DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE", n.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_PREMIUM_TYPE = "DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_PREMIUM_TYPE", n.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_ACCOUNT_CREATED_DATA = "DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_ACCOUNT_CREATED_DATA", n.DEVELOPER_OPTIONS_OVERRIDE_OPEN_OVERLAY = "DEVELOPER_OPTIONS_OVERRIDE_OPEN_OVERLAY", n.DEVELOPER_OPTIONS_RESET_SOCKET = "DEVELOPER_OPTIONS_RESET_SOCKET", n.DEVELOPER_OPTIONS_CLEAR_CACHES = "DEVELOPER_OPTIONS_CLEAR_CACHES", n.DEVELOPER_OPTIONS_CRASHES = "DEVELOPER_OPTIONS_CRASHES", n.DEVELOPER_OPTIONS_SURVEY_OVERRIDE = "DEVELOPER_OPTIONS_SURVEY_OVERRIDE", n.DEVELOPER_OPTIONS_CHANGELOG_OVERRIDE = "DEVELOPER_OPTIONS_CHANGELOG_OVERRIDE", n.DEVELOPER_OPTIONS_BUILD_OVERRIDE = "DEVELOPER_OPTIONS_BUILD_OVERRIDE", n.HOTSPOT_OPTIONS = "HOTSPOT_OPTIONS", n.DISMISSIBLE_CONTENT_OPTIONS = "DISMISSIBLE_CONTENT_OPTIONS", n.PAYMENT_FLOW_MODALS = "PAYMENT_FLOW_MODALS", n.TEXT_PLAYGROUND = "TEXT_PLAYGROUND", n.DESIGN_SYSTEMS = "DESIGN_SYSTEMS", n.TEXT_COMPONENTS = "TEXT_COMPONENTS", n.PROFILE_EFFECTS_PREVIEW_TOOL = "PROFILE_EFFECTS_PREVIEW_TOOL", n.QUEST_PREVIEW_TOOL = "QUEST_PREVIEW_TOOL", n.LOGOUT = "LOGOUT", n.SOCIAL_LINKS = "SOCIAL_LINKS", n.CLIENT_DEBUG_INFO = "CLIENT_DEBUG_INFO";
            let i = "",
                l = []
        },
        279743: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("920906"),
                o = s("748780"),
                d = s("481060"),
                u = s("442837"),
                c = s("607070"),
                S = s("663389"),
                E = s("107757");

            function T(e) {
                let {
                    children: t,
                    className: s,
                    onFlashEnd: i,
                    animationDelay: S = 500
                } = e, T = d.tokens.colors.TEXT_LINK, _ = (0, u.useStateFromStores)([c.default], () => c.default.useReducedMotion), I = (0, d.useToken)(T).spring({
                    opacity: 0
                }), N = (0, d.useToken)(T).spring({
                    opacity: .1
                }), g = (0, d.useToken)(T).spring({
                    opacity: 0
                }), f = (0, d.useToken)(T).spring({
                    opacity: 1
                }), m = e => {
                    e.finished && (null == i || i())
                }, [A, C] = (0, r.useSpring)(() => ({
                    immediate: !0,
                    from: {
                        backgroundColor: I,
                        borderColor: I
                    }
                })), O = S + 200 + 200, h = _ ? 0 : 200;
                return n.useEffect(() => {
                    C({
                        reset: !0,
                        immediate: !1,
                        to: {
                            backgroundColor: I,
                            borderColor: I
                        },
                        config: {
                            duration: h,
                            easing: o.default.Easing.ease
                        }
                    }), C({
                        delay: S,
                        immediate: _,
                        to: [{
                            backgroundColor: N,
                            borderColor: f
                        }],
                        config: {
                            duration: h,
                            easing: o.default.Easing.ease
                        }
                    }), C({
                        delay: O,
                        immediate: _,
                        to: [{
                            backgroundColor: g,
                            borderColor: g
                        }],
                        config: {
                            duration: h,
                            easing: o.default.Easing.ease
                        },
                        onRest: m
                    })
                }, [C]), (0, a.jsx)(r.animated.div, {
                    style: A,
                    className: l()(E.settingsItemHighlight, s),
                    children: t
                })
            }

            function _(e) {
                let {
                    children: t,
                    scrollPosition: s,
                    animationDelay: i
                } = e, l = (0, u.useStateFromStores)([S.default], () => S.default.getScrollPosition() === s), [r, o] = n.useState(!1);
                return (n.useEffect(() => {
                    l && o(!0)
                }, [l]), r) ? (0, a.jsx)(T, {
                    animationDelay: i,
                    onFlashEnd: () => o(!1),
                    children: t
                }) : (0, a.jsx)(a.Fragment, {
                    children: t
                })
            }
        },
        620163: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getConfig: function() {
                    return eF
                }
            }), s("653041");
            var a = s("735250");
            s("470079");
            var n = s("990547"),
                i = s("704215"),
                l = s("692547"),
                r = s("481060"),
                o = s("570140"),
                d = s("893776"),
                u = s("809206"),
                c = s("230711"),
                S = s("493544"),
                E = s("579806"),
                T = s("782568"),
                _ = s("163379"),
                I = s("703288"),
                N = s("574755"),
                g = s("425799"),
                f = s("377171"),
                m = s("621628"),
                A = s("18438"),
                C = s("778825"),
                O = s("351780"),
                h = s("231765"),
                R = s("837741"),
                p = s("804545"),
                M = s("813732"),
                D = s("398140"),
                x = s("564344"),
                L = s("977156"),
                P = s("652380"),
                b = s("171156"),
                v = s("906467"),
                U = s("131951"),
                j = s("25990"),
                G = s("87086"),
                F = s("759231"),
                B = s("626135"),
                y = s("49012"),
                V = s("358085"),
                H = s("392735"),
                Y = s("61160"),
                k = s("604227"),
                w = s("38915"),
                W = s("498639"),
                K = s("748717"),
                Q = s("419636"),
                z = s("35426"),
                X = s("799071"),
                q = s("601433"),
                Z = s("154022"),
                J = s("393681"),
                $ = s("309739"),
                ee = s("64914"),
                et = s("501348"),
                es = s("795594"),
                ea = s("443702"),
                en = s("920914"),
                ei = s("177508"),
                el = s("956699"),
                er = s("54942"),
                eo = s("15780"),
                ed = s("293389"),
                eu = s("88624"),
                ec = s("387747"),
                eS = s("389650"),
                eE = s("649157"),
                eT = s("593648"),
                e_ = s("327885"),
                eI = s("595242"),
                eN = s("301121"),
                eg = s("207874"),
                ef = s("463153"),
                em = s("36192"),
                eA = s("338345"),
                eC = s("400287"),
                eO = s("554042"),
                eh = s("200645"),
                eR = s("287490"),
                ep = s("168308"),
                eM = s("277329"),
                eD = s("674116"),
                ex = s("726985"),
                eL = s("981631"),
                eP = s("46140"),
                eb = s("65154"),
                ev = s("689938"),
                eU = s("442691");
            let ej = () => {
                    let e = "Settings list view",
                        t = [i.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE, i.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE];
                    return R.BrandRefreshPerksExperiment.getCurrentConfig({
                        location: e
                    }).enabled && t.push(i.DismissibleContent.BRAND_REFRESH_NEW_BADGE), p.PrideMonthPerksExperiment.getCurrentConfig({
                        location: e
                    }).enabled && t.push(i.DismissibleContent.PRIDE_ICONS_APPEARANCE_BADGE), t
                },
                eG = eh.default,
                eF = e => {
                    let {
                        unseenGiftCount: t,
                        showPrepaidPaymentPastDueWarning: R,
                        impressionSource: p,
                        numOfPendingFamilyRequests: eF,
                        isOverlaySupported: eB,
                        isClipsBetaTagShowing: ey = !1,
                        shouldMergeGameSettings: eV,
                        isUserSettingsSearchEnabled: eH,
                        isKeywordFilteringEnabled: eY,
                        isStaff: ek,
                        isInappropriateConversationWarningEnabled: ew,
                        paymentsBlocked: eW,
                        isEligibleForQuests: eK,
                        showGiftNitro: eQ
                    } = e;
                    return Object.freeze({
                        [ex.WebSetting.SEARCH_BAR]: {
                            section: S.SectionTypes.CUSTOM,
                            element: eg.default,
                            predicate: () => eH
                        },
                        [ex.WebSetting.SEARCH_NO_RESULTS]: {
                            section: S.SectionTypes.CUSTOM,
                            element: ef.default,
                            predicate: () => eH
                        },
                        [ex.WebSetting.ACCOUNT]: {
                            section: eL.UserSettingsSections.ACCOUNT,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                            label: ev.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                            ariaLabel: ev.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                            element: J.default
                        },
                        [ex.WebSetting.ACCOUNT_PROFILE]: {
                            searchableTitle: ev.default.Messages.PROFILE,
                            parent: ex.WebSetting.ACCOUNT,
                            section: eL.UserSettingsSections.ACCOUNT
                        },
                        [ex.WebSetting.ACCOUNT_DISPLAY_NAME]: {
                            searchableTitle: ev.default.Messages.DISPLAY_NAME,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PROFILE
                        },
                        [ex.WebSetting.ACCOUNT_PHONE_NUMBER]: {
                            searchableTitle: ev.default.Messages.CHANGE_PHONE_NUMBER,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PROFILE
                        },
                        [ex.WebSetting.ACCOUNT_USERNAME]: {
                            searchableTitle: ev.default.Messages.USER_SETTINGS_ACCOUNT_CHANGE_USERNAME_TITLE,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PROFILE
                        },
                        [ex.WebSetting.ACCOUNT_EMAIL]: {
                            searchableTitle: ev.default.Messages.CHANGE_EMAIL,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PROFILE
                        },
                        [ex.WebSetting.ACCOUNT_PASSWORD_AND_AUTHENTICATION]: {
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_ACCOUNT_PASSWORD_AND_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_CHANGE_PASSWORD]: {
                            searchableTitle: ev.default.Messages.CHANGE_PASSWORD,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PASSWORD_AND_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_CONFIRM_PASSWORD]: {
                            searchableTitle: ev.default.Messages.FORM_LABEL_CONFIRM_PASSWORD,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PASSWORD_AND_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION]: {
                            searchableTitle: ev.default.Messages.SETTINGS_TWO_FA,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_PASSWORD_AND_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_ENABLE_2FA]: {
                            searchableTitle: ev.default.Messages.TWO_FA_ENABLE,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_REMOVE_2FA]: {
                            searchableTitle: ev.default.Messages.TWO_FA_REMOVE,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_VIEW_BACKUP_CODES]: {
                            searchableTitle: ev.default.Messages.TWO_FA_BACKUP_CODE,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_SMS_BACKUP]: {
                            searchableTitle: ev.default.Messages.MFA_SMS_AUTH,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_SECURITY_KEYS]: {
                            searchableTitle: ev.default.Messages.TWO_FA_WEBAUTHN_REGISTER,
                            section: eL.UserSettingsSections.ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION
                        },
                        [ex.WebSetting.ACCOUNT_REMOVAL]: {
                            section: eL.UserSettingsSections.ACCOUNT,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_SECTION,
                            parent: ex.WebSetting.ACCOUNT
                        },
                        [ex.WebSetting.ACCOUNT_DISABLE_ACCOUNT]: {
                            section: eL.UserSettingsSections.ACCOUNT,
                            searchableTitle: ev.default.Messages.DISABLE_ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_REMOVAL
                        },
                        [ex.WebSetting.ACCOUNT_DELETE_ACCOUNT]: {
                            section: eL.UserSettingsSections.ACCOUNT,
                            searchableTitle: ev.default.Messages.DELETE_ACCOUNT,
                            parent: ex.WebSetting.ACCOUNT_DISABLE_ACCOUNT
                        },
                        [ex.WebSetting.GAMES]: {
                            section: eL.UserSettingsSections.GAMES,
                            searchableTitle: ev.default.Messages.GAMES,
                            label: ev.default.Messages.GAMES,
                            ariaLabel: ev.default.Messages.GAMES,
                            element: eM.default,
                            predicate: () => eV
                        },
                        [ex.WebSetting.GAMES_MY_GAMES]: {
                            section: eL.UserSettingsSections.GAMES,
                            searchableTitle: ev.default.Messages.MY_GAMES,
                            parent: ex.WebSetting.GAMES
                        },
                        [ex.WebSetting.GAMES_CLIPS]: {
                            section: eL.UserSettingsSections.GAMES,
                            searchableTitle: ev.default.Messages.CLIPS,
                            parent: ex.WebSetting.GAMES
                        },
                        [ex.WebSetting.GAMES_OVERLAY]: {
                            section: eL.UserSettingsSections.GAMES,
                            searchableTitle: ev.default.Messages.OVERLAY,
                            parent: ex.WebSetting.GAMES
                        },
                        [ex.WebSetting.GAMES_ACTIVITY_PRIVACY]: {
                            section: eL.UserSettingsSections.GAMES,
                            searchableTitle: ev.default.Messages.ACTIVITY_PRIVACY,
                            parent: ex.WebSetting.GAMES
                        },
                        [ex.WebSetting.PROFILE_CUSTOMIZATION]: {
                            section: eL.UserSettingsSections.PROFILE_CUSTOMIZATION,
                            type: S.ContentTypes.WIDE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_PROFILES,
                            label: ev.default.Messages.USER_SETTINGS_PROFILES,
                            ariaLabel: ev.default.Messages.USER_SETTINGS_PROFILES,
                            element: x.default,
                            newIndicator: (0, a.jsx)(r.PremiumBadge, {
                                text: ev.default.Messages.NEW
                            }),
                            notice: {
                                stores: [j.default, C.default],
                                element: D.default
                            },
                            onSettingsClose: () => {
                                o.default.wait(() => {
                                    (0, A.resetAndCloseGuildIdentityForm)(), (0, u.resetAndCloseUserProfileForm)(), c.default.clearSubsection(eL.UserSettingsSections.PROFILE_CUSTOMIZATION)
                                })
                            }
                        },
                        [ex.WebSetting.PROFILE_DISPLAY_NAME]: {
                            section: eL.UserSettingsSections.PROFILE_CUSTOMIZATION,
                            searchableTitle: ev.default.Messages.DISPLAY_NAME,
                            parent: ex.WebSetting.PROFILE_CUSTOMIZATION
                        },
                        [ex.WebSetting.PROFILE_USER_PROFILE]: {
                            section: eL.UserSettingsSections.PROFILE_CUSTOMIZATION,
                            searchableTitle: ev.default.Messages.EDIT_PROFILE_CATEGORY_USER_PROFILE,
                            parent: ex.WebSetting.PROFILE_CUSTOMIZATION
                        },
                        [ex.WebSetting.PROFILE_SERVER_PROFILES]: {
                            section: eL.UserSettingsSections.PROFILE_CUSTOMIZATION,
                            searchableTitle: ev.default.Messages.EDIT_PROFILE_CATEGORY_GUILD_IDENTITY,
                            parent: ex.WebSetting.PROFILE_CUSTOMIZATION
                        },
                        [ex.WebSetting.PRIVACY_AND_SAFETY]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            label: ev.default.Messages.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.PRIVACY_AND_SAFETY,
                            ariaLabel: ev.default.Messages.PRIVACY_AND_SAFETY,
                            element: eN.default
                        },
                        [ex.WebSetting.PRIVACY_USER_SETTINGS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.PRIVACY_AND_SAFETY,
                            parent: ex.WebSetting.PRIVACY_AND_SAFETY
                        },
                        [ex.WebSetting.PRIVACY_SENSITIVE_MEDIA]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.OBSCURED_CONTENT_SETTINGS_HEADER,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS
                        },
                        [ex.WebSetting.PRIVACY_DIRECT_MESSAGE_SPAM_FILTER]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.SETTINGS_DM_SPAM_FILTER,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS
                        },
                        [ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_DM_SETTINGS,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS
                        },
                        [ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_DMS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.NEW_GUILDS_DM_ALLOWED,
                            parent: ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS
                        },
                        [ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_IOS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.NSFW_GUILDS_TOGGLE_HEADER,
                            parent: ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS
                        },
                        [ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_MESSAGE_REQUESTS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_HEADER,
                            parent: ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS
                        },
                        [ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_APPS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.NSFW_DM_COMMANDS_HEADER,
                            parent: ex.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS
                        },
                        [ex.WebSetting.PRIVACY_DATA_PRIVACY]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.SETTINGS_DATA_PRIVACY_CONTROLS,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS
                        },
                        [ex.WebSetting.PRIVACY_DATA_IMPROVE_DISCORD]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_TITLE,
                            parent: ex.WebSetting.PRIVACY_DATA_PRIVACY
                        },
                        [ex.WebSetting.PRIVACY_DATA_PERSONALIZE]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_TITLE,
                            parent: ex.WebSetting.PRIVACY_DATA_PRIVACY
                        },
                        [ex.WebSetting.PRIVACY_DATA_QUESTS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT,
                            parent: ex.WebSetting.PRIVACY_DATA_PRIVACY
                        },
                        [ex.WebSetting.PRIVACY_DATA_BASIC_SERVICE]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            parent: ex.WebSetting.PRIVACY_DATA_PRIVACY,
                            searchableTitle: ex.NON_SEARCHABLE_SETTING
                        },
                        [ex.WebSetting.PRIVACY_DATA_REQUEST]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_DOWNLOAD,
                            parent: ex.WebSetting.PRIVACY_DATA_PRIVACY
                        },
                        [ex.WebSetting.PRIVACY_STAFF_ONLY]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_HEADER,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS,
                            predicate: () => ek
                        },
                        [ex.WebSetting.PRIVACY_KEYWORD_FILTER]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_KEYWORD_FILTERS_DESCRIPTION,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS,
                            predicate: () => eY
                        },
                        [ex.WebSetting.PRIVACY_KEYWORD_FILTER_PROFANITY]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_KEYWORD_FILTERS_PROFANITY_TITLE,
                            parent: ex.WebSetting.PRIVACY_KEYWORD_FILTER,
                            predicate: () => eY
                        },
                        [ex.WebSetting.PRIVACY_KEYWORD_FILTER_INSULTS_SLURS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_KEYWORD_FILTERS_SLURS_TITLE,
                            parent: ex.WebSetting.PRIVACY_KEYWORD_FILTER,
                            predicate: () => eY
                        },
                        [ex.WebSetting.PRIVACY_KEYWORD_FILTER_SEXUAL_CONTENT]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.USER_KEYWORD_FILTERS_SEXUAL_CONTENT_TITLE,
                            parent: ex.WebSetting.PRIVACY_KEYWORD_FILTER,
                            predicate: () => eY
                        },
                        [ex.WebSetting.PRIVACY_TERMS_POLICY]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS,
                            searchableTitle: ex.NON_SEARCHABLE_SETTING
                        },
                        [ex.WebSetting.PRIVACY_SAFETY_ALERTS]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.SAFETY_ALERTS_SETTING_TITLE,
                            parent: ex.WebSetting.PRIVACY_USER_SETTINGS,
                            predicate: () => ew
                        },
                        [ex.WebSetting.PRIVACY_ACCOUNT_STANDING]: {
                            section: eL.UserSettingsSections.PRIVACY_AND_SAFETY,
                            searchableTitle: ev.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT_V2,
                            parent: ex.WebSetting.PRIVACY_AND_SAFETY
                        },
                        [ex.WebSetting.PRIVACY_FAMILY_CENTER]: {
                            section: eL.UserSettingsSections.FAMILY_CENTER,
                            searchableTitle: ev.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
                            label: ev.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
                            ariaLabel: ev.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
                            element: er.default,
                            badgeCount: eF,
                            newIndicator: (0, a.jsx)(r.TextBadge, {
                                text: ev.default.Messages.NEW,
                                color: f.default.BG_BRAND
                            }),
                            newIndicatorDismissibleContentTypes: [i.DismissibleContent.FAMILY_CENTER_NEW_BADGE]
                        },
                        [ex.WebSetting.AUTHORIZED_APPS]: {
                            section: eL.UserSettingsSections.AUTHORIZED_APPS,
                            searchableTitle: ev.default.Messages.AUTHORIZED_APPS,
                            label: ev.default.Messages.AUTHORIZED_APPS,
                            element: es.default
                        },
                        [ex.WebSetting.SESSIONS]: {
                            section: eL.UserSettingsSections.SESSIONS,
                            searchableTitle: ev.default.Messages.AUTH_SESSIONS,
                            label: ev.default.Messages.AUTH_SESSIONS,
                            ariaLabel: ev.default.Messages.AUTH_SESSIONS,
                            element: em.default,
                            newIndicatorDismissibleContentTypes: [i.DismissibleContent.AUTH_SESSIONS_NEW],
                            predicate: () => H.default.getCurrentConfig({
                                location: "9f7d84_1"
                            }, {
                                autoTrackExposure: !1
                            }).showSettings
                        },
                        [ex.WebSetting.CONNECTIONS]: {
                            section: eL.UserSettingsSections.CONNECTIONS,
                            searchableTitle: ev.default.Messages.CONNECTIONS,
                            label: ev.default.Messages.CONNECTIONS,
                            ariaLabel: ev.default.Messages.CONNECTIONS,
                            element: en.default,
                            impressionName: n.ImpressionNames.USER_SETTINGS_CONNECTIONS,
                            impressionProperties: {
                                source: p
                            },
                            newIndicatorDismissibleContentTypes: [i.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION]
                        },
                        [ex.WebSetting.CONNECTIONS_CONNECTED_ACCOUNTS]: {
                            section: eL.UserSettingsSections.CONNECTIONS,
                            searchableTitle: ev.default.Messages.CONNECTED_ACCOUNTS,
                            parent: ex.WebSetting.CONNECTIONS,
                            element: en.default
                        },
                        [ex.WebSetting.CLIPS]: {
                            section: eL.UserSettingsSections.CLIPS,
                            searchableTitle: ev.default.Messages.CLIPS,
                            label: ev.default.Messages.CLIPS,
                            ariaLabel: ev.default.Messages.CLIPS,
                            icon: ey ? (0, a.jsx)(I.default, {}) : void 0,
                            element: N.default,
                            predicate: () => !eV
                        },
                        [ex.WebSetting.FRIEND_REQUESTS]: {
                            section: eL.UserSettingsSections.FRIEND_REQUESTS,
                            searchableTitle: ev.default.Messages.FRIEND_REQUESTS,
                            label: ev.default.Messages.FRIEND_REQUESTS,
                            element: eo.default
                        },
                        [ex.WebSetting.PREMIUM]: {
                            section: eL.UserSettingsSections.PREMIUM,
                            ariaLabel: ev.default.Messages.PREMIUM,
                            searchableTitle: ev.default.Messages.PREMIUM,
                            label: ev.default.Messages.PREMIUM,
                            element: K.default,
                            className: eU.premiumTab
                        },
                        [ex.WebSetting.GUILD_BOOSTING]: {
                            section: eL.UserSettingsSections.GUILD_BOOSTING,
                            searchableTitle: ev.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TITLE,
                            label: ev.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TITLE,
                            element: eI.default
                        },
                        [ex.WebSetting.SUBSCRIPTIONS]: {
                            section: eL.UserSettingsSections.SUBSCRIPTIONS,
                            ariaLabel: ev.default.Messages.SUBSCRIPTIONS_TITLE,
                            searchableTitle: ev.default.Messages.SUBSCRIPTIONS_TITLE,
                            label: ev.default.Messages.SUBSCRIPTIONS_TITLE,
                            element: M.default,
                            icon: R ? (0, a.jsx)(F.default, {
                                width: 16,
                                height: 16,
                                color: l.default.unsafe_rawColors.YELLOW_300.css
                            }) : null
                        },
                        [ex.WebSetting.SUBSCRIPTIONS_CREDITS]: {
                            section: eL.UserSettingsSections.SUBSCRIPTIONS,
                            searchableTitle: ev.default.Messages.BILLING_SUBSCRIPTION_CREDIT,
                            parent: ex.WebSetting.SUBSCRIPTIONS
                        },
                        [ex.WebSetting.GIFT_INVENTORY]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.GIFT_INVENTORY,
                            label: ev.default.Messages.GIFT_INVENTORY,
                            element: ec.default,
                            ariaLabel: ev.default.Messages.GIFT_INVENTORY,
                            badgeCount: t
                        },
                        [ex.WebSetting.GIFT_NITRO]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.GIFT_NITRO,
                            parent: ex.WebSetting.GIFT_INVENTORY,
                            predicate: () => !eW && eQ
                        },
                        [ex.WebSetting.GIFT_CODE_REDEMPTION]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.GIFT_INVENTORY_REDEEM_CODES,
                            parent: ex.WebSetting.GIFT_INVENTORY,
                            predicate: () => !eW
                        },
                        [ex.WebSetting.GIFT_INVENTORY_QUESTS]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.QUESTS,
                            parent: ex.WebSetting.GIFT_INVENTORY,
                            predicate: () => eK
                        },
                        [ex.WebSetting.GIFT_INVENTORY_LIST]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.GIFT_INVENTORY_GIFTS_YOU_PURCHASED,
                            parent: ex.WebSetting.GIFT_INVENTORY,
                            predicate: () => !eW
                        },
                        [ex.WebSetting.GIFT_BLOCKED_PAYMENTS]: {
                            section: eL.UserSettingsSections.INVENTORY,
                            searchableTitle: ev.default.Messages.REGION_BLOCKED_PAYMENTS_HEADER,
                            parent: ex.WebSetting.GIFT_INVENTORY,
                            predicate: () => eW
                        },
                        [ex.WebSetting.BILLING]: {
                            section: eL.UserSettingsSections.BILLING,
                            searchableTitle: ev.default.Messages.BILLING,
                            label: ev.default.Messages.BILLING,
                            ariaLabel: ev.default.Messages.BILLING,
                            element: ea.default
                        },
                        [ex.WebSetting.BILLING_PAYMENT_METHODS]: {
                            section: eL.UserSettingsSections.BILLING,
                            searchableTitle: ev.default.Messages.BILLING_PAYMENT_SOURCES,
                            parent: ex.WebSetting.BILLING
                        },
                        [ex.WebSetting.BILLING_TRANSACTION_HISTORY]: {
                            section: eL.UserSettingsSections.BILLING,
                            searchableTitle: ev.default.Messages.BILLING_PAYMENT_HISTORY,
                            parent: ex.WebSetting.BILLING
                        },
                        [ex.WebSetting.APPEARANCE]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.APPEARANCE,
                            label: ev.default.Messages.APPEARANCE,
                            ariaLabel: ev.default.Messages.APPEARANCE,
                            element: et.default,
                            newIndicator: (0, a.jsx)(r.PremiumBadge, {
                                text: ev.default.Messages.NEW
                            }),
                            newIndicatorDismissibleContentTypes: ej()
                        },
                        [ex.WebSetting.APPEARANCE_THEME]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.THEME,
                            parent: ex.WebSetting.APPEARANCE
                        },
                        [ex.WebSetting.APPEARANCE_COLOR]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_APPEARANCE_GRADIENT_THEME_TITLE,
                            parent: ex.WebSetting.APPEARANCE_THEME
                        },
                        [ex.WebSetting.APPEARANCE_ICON]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_APPEARANCE_IN_APP_ICON_TITLE,
                            parent: ex.WebSetting.APPEARANCE_THEME
                        },
                        [ex.WebSetting.APPEARANCE_MESSAGE_DISPLAY_COMPACT]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.MESSAGE_DISPLAY_MODE_LABEL,
                            parent: ex.WebSetting.APPEARANCE
                        },
                        [ex.WebSetting.APPEARANCE_SCALING_SPACING]: {
                            section: eL.UserSettingsSections.APPEARANCE,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_FONT_SCALING_LABEL,
                            parent: ex.WebSetting.APPEARANCE
                        },
                        [ex.WebSetting.ACCESSIBILITY]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY,
                            label: ev.default.Messages.ACCESSIBILITY,
                            ariaLabel: ev.default.Messages.ACCESSIBILITY,
                            element: Z.default
                        },
                        [ex.WebSetting.ACCESSIBILITY_SATURATION]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_TITLE,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_LINK_DECORATIONS]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_LABEL,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_ROLE_STYLE]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_TITLE,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_TAGS]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_TAGS_TITLE,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_SYNC_PROFILE_THEME]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_COLORS_TITLE,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_CONTRAST]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_SETTINGS_CONTRAST,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_REDUCED_MOTION]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_STICKERS]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.STICKERS_AUTO_PLAY_HEADING,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_MESSAGES]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.FORM_LABEL_ACCESSIBILITY_CHAT_INPUT,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.ACCESSIBILITY_TEXT_TO_SPEECH]: {
                            section: eL.UserSettingsSections.ACCESSIBILITY,
                            searchableTitle: ev.default.Messages.FORM_LABEL_TTS,
                            parent: ex.WebSetting.ACCESSIBILITY
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.VOICE_AND_VIDEO,
                            label: ev.default.Messages.VOICE_AND_VIDEO,
                            ariaLabel: ev.default.Messages.VOICE_AND_VIDEO,
                            element: eD.default,
                            predicate: () => U.default.isSupported()
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_DEVICES]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: "".concat(ev.default.Messages.FORM_LABEL_INPUT_DEVICE, " ").concat(ev.default.Messages.FORM_LABEL_OUTPUT_DEVICE),
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_VOLUME_CONTROLS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: "".concat(ev.default.Messages.FORM_LABEL_INPUT_VOLUME, " ").concat(ev.default.Messages.FORM_LABEL_OUTPUT_VOLUME),
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_MIC_TEST]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_TITLE,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_TROUBLESHOOTING]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_HELP_VOICE_VIDEO_TROUBLESHOOTING_SEARCHABLE,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_INPUT_MODE]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_INPUT_MODE,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_SENSITIVITY]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_INPUT_SENSITIVTY,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_SOUNDS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.CALL_SOUNDS_SETTINGS,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_SOUNDBOARD]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.SOUNDBOARD,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_SOUNDS
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ENTRANCE_SOUNDS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.CALL_SOUNDS_SETTINGS,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_SOUNDS
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_VIDEO]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.VIDEO_SETTINGS,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_VIDEO_CAMERA]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_VIDEO_DEVICE,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_VIDEO,
                            predicate: () => U.default.supports(eb.Features.VIDEO)
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.SETTINGS_ADVANCED,
                            parent: ex.WebSetting.VOICE_AND_VIDEO
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_CODECS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_VOICE_VIDEO_CODEC_TITLE,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_VOICE_PROCESSING,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ECHO_CANCELLATION]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.ECHO_CANCELLATION,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING,
                            predicate: () => U.default.getEchoCancellation()
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_NOISE_SUPPRESSION]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.NOISE_SUPPRESSION,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING,
                            predicate: () => U.default.isNoiseSuppressionSupported()
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ADVANCED_VOICE_ACTIVITY]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.ADVANCED_VOICE_ACTIVITY,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING,
                            predicate: () => U.default.isAdvancedVoiceActivitySupported()
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_AUTOMATIC_GAIN_CONTROL]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.AUTOMATIC_GAIN_CONTROL,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING,
                            predicate: () => U.default.isAutomaticGainControlSupported()
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_QOS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_QOS,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED,
                            predicate: () => U.default.supports(eb.Features.QOS)
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_ATTENUATION]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_ATTENUATION,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED,
                            predicate: () => U.default.supports(eb.Features.ATTENUATION)
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_ADVANCED_SUBSYSTEM]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_SUBSYSTEM,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED,
                            predicate: () => U.default.supports(eb.Features.LEGACY_AUDIO_SUBSYSTEM) || U.default.supports(eb.Features.EXPERIMENTAL_AUDIO_SUBSYSTEM)
                        },
                        [ex.WebSetting.VOICE_AND_VIDEO_RESET_VOICE_SETTINGS]: {
                            section: eL.UserSettingsSections.VOICE,
                            searchableTitle: ev.default.Messages.RESET_VOICE_SETTINGS,
                            parent: ex.WebSetting.VOICE_AND_VIDEO_ADVANCED
                        },
                        [ex.WebSetting.POGGERMODE]: {
                            section: eL.UserSettingsSections.POGGERMODE,
                            searchableTitle: ev.default.Messages.POGGERMODE,
                            label: ev.default.Messages.POGGERMODE,
                            ariaLabel: ev.default.Messages.POGGERMODE,
                            element: h.default,
                            predicate: () => O.default.settingsVisible,
                            icon: (0, a.jsx)("img", {
                                alt: "",
                                src: s("542156"),
                                className: eU.poggermodeIcon
                            })
                        },
                        [ex.WebSetting.CHAT]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.CHAT,
                            label: ev.default.Messages.CHAT,
                            ariaLabel: ev.default.Messages.CHAT,
                            element: eC.default
                        },
                        [ex.WebSetting.CHAT_INLINE_MEDIA]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.INLINE_MEDIA_LABEL,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_INLINE_MEDIA_LINKS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.INLINE_EMBED_MEDIA,
                            parent: ex.WebSetting.CHAT_INLINE_MEDIA
                        },
                        [ex.WebSetting.CHAT_INLINE_MEDIA_UPLOADS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.INLINE_ATTACHMENT_MEDIA,
                            parent: ex.WebSetting.CHAT_INLINE_MEDIA
                        },
                        [ex.WebSetting.CHAT_INLINE_MEDIA_IMAGE_DESCRIPTIONS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.IMAGE_DESCRIPTION,
                            parent: ex.WebSetting.CHAT_INLINE_MEDIA
                        },
                        [ex.WebSetting.CHAT_EMBEDS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.RENDER_EMBEDS_LABEL,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_EMBEDS_LINK_PREVIEWS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.RENDER_EMBEDS,
                            parent: ex.WebSetting.CHAT_EMBEDS
                        },
                        [ex.WebSetting.CHAT_EMOJI]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.EMOJI,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_EMOJI_REACTIONS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.RENDER_REACTIONS,
                            parent: ex.WebSetting.CHAT_EMOJI
                        },
                        [ex.WebSetting.CHAT_EMOJI_EMOTICONS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.CONVERT_EMOTICONS,
                            parent: ex.WebSetting.CHAT_EMOJI
                        },
                        [ex.WebSetting.CHAT_STICKERS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.STICKERS_AUTO_PLAY_HEADING,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_STICKERS_SUGGESTIONS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.AUTO_SUGGEST_STICKERS,
                            parent: ex.WebSetting.CHAT_STICKERS
                        },
                        [ex.WebSetting.CHAT_STICKERS_AUTOCOMPLETE]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.STICKERS_IN_AUTOCOMPLETE,
                            parent: ex.WebSetting.CHAT_STICKERS
                        },
                        [ex.WebSetting.CHAT_TEXT_BOX]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.FORM_LABEL_USE_RICH_CHAT_BOX,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_TEXT_BOX_PREVIEW]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.PREVIEW_MARKDOWN_DESCRIPTION,
                            parent: ex.WebSetting.CHAT_TEXT_BOX
                        },
                        [ex.WebSetting.CHAT_THREADS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.THREADS,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.CHAT_THREADS_SPLIT_VIEW]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.USE_THREADS_SIDEBAR_DESCRIPTION,
                            parent: ex.WebSetting.CHAT_THREADS
                        },
                        [ex.WebSetting.CHAT_SPOILERS]: {
                            section: eL.UserSettingsSections.TEXT,
                            searchableTitle: ev.default.Messages.SHOW_SPOILER_CONTENT,
                            parent: ex.WebSetting.CHAT
                        },
                        [ex.WebSetting.NOTIFICATIONS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.NOTIFICATIONS,
                            label: ev.default.Messages.NOTIFICATIONS,
                            ariaLabel: ev.default.Messages.NOTIFICATIONS,
                            element: eT.default
                        },
                        [ex.WebSetting.NOTIFICATIONS_ENABLE_DESKTOP]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_MENTION_ON_ALL_MESSAGES]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: "Mention on all messages",
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_UNREAD_MESSAGE_BADGE]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_LABEL,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_ENABLE_TASKBAR_FLASHING]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_LABEL,
                            parent: ex.WebSetting.NOTIFICATIONS,
                            predicate: () => V.isPlatformEmbedded && (0, V.isWindows)()
                        },
                        [ex.WebSetting.NOTIFICATIONS_UNREAD_SETTINGS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_NEW_SETTINGS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: "New Notification Settings (Advancd, Staff Only)",
                            parent: ex.WebSetting.NOTIFICATIONS,
                            predicate: () => !1
                        },
                        [ex.WebSetting.NOTIFICATIONS_RESTORE_MOST_RECENT_SNAPSHOT]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: "Restore most recent snapshot",
                            parent: ex.WebSetting.NOTIFICATIONS_NEW_SETTINGS,
                            predicate: () => !1
                        },
                        [ex.WebSetting.NOTIFICATIONS_LAUNCH_MIGRATION]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: "Launch Migration",
                            parent: ex.WebSetting.NOTIFICATIONS_NEW_SETTINGS,
                            predicate: () => !1
                        },
                        [ex.WebSetting.NOTIFICATIONS_TOGGLE_NEW_SYSTEM]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: "Toggle new system on/off",
                            parent: ex.WebSetting.NOTIFICATIONS_NEW_SETTINGS,
                            predicate: () => !1
                        },
                        [ex.WebSetting.NOTIFICATIONS_PUSH_INACTIVE_TIMEOUT]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.FORM_LABEL_PUSH_AFK_TIMEOUT,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_TEXT_TO_SPEECH]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.FORM_LABEL_TTS,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.GUILD_COMMUNITY_ALERTS_HEADER,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_COMMUNITY_IN_APP_ALERTS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.GUILD_COMMUNITY_ALERTS_NAG_HEADER,
                            parent: ex.WebSetting.NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS
                        },
                        [ex.WebSetting.NOTIFICATIONS_COMMUNITY_PUSH_NOTIFICATIONS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.GUILD_COMMUNITY_ALERTS_PUSH_HEADER,
                            parent: ex.WebSetting.NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS
                        },
                        [ex.WebSetting.NOTIFICATIONS_SOUNDS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.SOUNDS,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS,
                            parent: ex.WebSetting.NOTIFICATIONS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_COMMUNICATION]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_SOCIAL]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_ANNOUNCEMENTS_AND_UPDATES]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_TIPS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_RECOMMENDATIONS_AND_EVENTS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.NOTIFICATIONS_EMAILS_UNSUBSCRIBE_FROM_ALL_MARKETING_EMAILS]: {
                            section: eL.UserSettingsSections.NOTIFICATIONS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING,
                            parent: ex.WebSetting.NOTIFICATIONS_EMAILS
                        },
                        [ex.WebSetting.KEYBINDS]: {
                            section: eL.UserSettingsSections.KEYBINDS,
                            searchableTitle: ev.default.Messages.KEYBINDS,
                            label: ev.default.Messages.KEYBINDS,
                            element: eS.default
                        },
                        [ex.WebSetting.LANGUAGE]: {
                            section: eL.UserSettingsSections.LOCALE,
                            searchableTitle: ev.default.Messages.LANGUAGE,
                            label: ev.default.Messages.LANGUAGE,
                            element: eE.default
                        },
                        [ex.WebSetting.WINDOW_SETTINGS]: {
                            section: eL.UserSettingsSections.WINDOWS,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS,
                            label: ev.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS,
                            element: eh.default,
                            predicate: () => V.isPlatformEmbedded && (0, V.isWindows)()
                        },
                        [ex.WebSetting.LINUX_SETTINGS]: {
                            section: eL.UserSettingsSections.LINUX,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_LINUX_SETTINGS,
                            label: ev.default.Messages.USER_SETTINGS_LINUX_SETTINGS,
                            element: eG,
                            predicate: () => V.isPlatformEmbedded && (0, V.isLinux)()
                        },
                        [ex.WebSetting.STREAMER_MODE]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.STREAMER_MODE,
                            label: ev.default.Messages.STREAMER_MODE,
                            ariaLabel: ev.default.Messages.STREAMER_MODE,
                            element: eA.default
                        },
                        [ex.WebSetting.STREAMER_MODE_INTEGRATIONS]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_STREAMER_NOTICE_TITLE,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_ENABLE]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.ENABLE_STREAMER_MODE_LABEL,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_HIDE_PERSONAL_INFORMATION]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.HIDE_PERSONAL_INFORMATION_LABEL,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_HIDE_INVITE_LINKS]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.HIDE_INSTANT_INVITES_LABEL,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_DISABLE_SOUNDS]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.FORM_LABEL_MOBILE_NOTIFICATIONS_SOUND_DISABLE,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_DISABLE_NOTIFICATIONS]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.DISABLE_NOTIFICATIONS_LABEL,
                            parent: ex.WebSetting.STREAMER_MODE
                        },
                        [ex.WebSetting.STREAMER_MODE_HIDE_DISCORD_WINDOW_FROM_SCREEN_CAPTURE]: {
                            section: eL.UserSettingsSections.STREAMER_MODE,
                            searchableTitle: ev.default.Messages.HIDE_WINDOW_FROM_STREAM_LABEL,
                            parent: ex.WebSetting.STREAMER_MODE,
                            predicate: () => {
                                var e, t, s;
                                return null !== (s = null === E.default || void 0 === E.default ? void 0 : null === (t = E.default.window) || void 0 === t ? void 0 : null === (e = t.supportsContentProtection) || void 0 === e ? void 0 : e.call(t)) && void 0 !== s && s
                            }
                        },
                        [ex.WebSetting.SPEED_TEST]: {
                            section: eL.UserSettingsSections.SPEED_TEST,
                            searchableTitle: "Speed Test",
                            label: "Speed Test",
                            element: z.default,
                            predicate: () => b.default.isSupported() && Y.default.getCurrentConfig({
                                location: "9f7d84_2"
                            }).showSettings
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.SETTINGS_ADVANCED,
                            label: ev.default.Messages.SETTINGS_ADVANCED,
                            ariaLabel: ev.default.Messages.SETTINGS_ADVANCED,
                            element: ee.default
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED_DEVELOPER_MODE]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.DEVELOPER_MODE,
                            parent: ex.WebSetting.SETTINGS_ADVANCED
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED_HARDWARE_ACCELERATION]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.HARDWARE_ACCELERATION,
                            parent: ex.WebSetting.SETTINGS_ADVANCED
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED_SHOW_GAME_LIBRARY]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_SHOW_LIBRARY,
                            parent: ex.WebSetting.SETTINGS_ADVANCED
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED_APPLICATION_TEST_MODE]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.DEVELOPER_APPLICATION_TEST_MODE,
                            parent: ex.WebSetting.SETTINGS_ADVANCED,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.SETTINGS_ADVANCED_AUTO_NAVIGATE_TO_HOME]: {
                            section: eL.UserSettingsSections.ADVANCED,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_HOME_AUTO_NAV,
                            parent: ex.WebSetting.SETTINGS_ADVANCED
                        },
                        [ex.WebSetting.ACTIVITY_PRIVACY]: {
                            section: eL.UserSettingsSections.ACTIVITY_PRIVACY,
                            searchableTitle: ev.default.Messages.ACTIVITY_PRIVACY,
                            label: ev.default.Messages.ACTIVITY_PRIVACY,
                            ariaLabel: ev.default.Messages.ACTIVITY_PRIVACY,
                            element: $.default,
                            predicate: () => !eV
                        },
                        [ex.WebSetting.ACTIVITY_PRIVACY_STATUS]: {
                            section: eV ? eL.UserSettingsSections.GAMES : eL.UserSettingsSections.ACTIVITY_PRIVACY,
                            searchableTitle: ev.default.Messages.ACTIVITY_STATUS,
                            parent: eV ? ex.WebSetting.GAMES : ex.WebSetting.ACTIVITY_PRIVACY
                        },
                        [ex.WebSetting.ACTIVITY_PRIVACY_RICH_PRESENCE]: {
                            section: eV ? eL.UserSettingsSections.GAMES : eL.UserSettingsSections.ACTIVITY_PRIVACY,
                            searchableTitle: ev.default.Messages.ACTIVITY_PARTY_PRIVACY,
                            parent: eV ? ex.WebSetting.GAMES : ex.WebSetting.ACTIVITY_PRIVACY
                        },
                        [ex.WebSetting.REGISTERED_GAMES]: {
                            section: eL.UserSettingsSections.REGISTERED_GAMES,
                            searchableTitle: ev.default.Messages.REGISTERED_GAMES,
                            label: ev.default.Messages.REGISTERED_GAMES,
                            element: ed.default,
                            predicate: () => !eV && (0, ep.shouldShowRegisteredGamesSettings)()
                        },
                        [ex.WebSetting.OVERLAY]: {
                            section: eL.UserSettingsSections.OVERLAY,
                            searchableTitle: ev.default.Messages.OVERLAY,
                            label: ev.default.Messages.OVERLAY,
                            element: e_.default,
                            predicate: () => !eV && eB
                        },
                        [ex.WebSetting.CHANGELOG]: {
                            section: "changelog",
                            onClick: () => (0, _.openChangelog)(!0),
                            searchableTitle: ev.default.Messages.WHATS_NEW,
                            label: ev.default.Messages.WHATS_NEW
                        },
                        [ex.WebSetting.MERCHANDISE]: {
                            section: "merchandise",
                            onClick: () => {
                                let e = "https://discordmerch.com/Dsktopprm";
                                B.default.track(eL.AnalyticEvents.USER_SETTINGS_MERCH_LINK_CLICKED), (0, y.handleClick)({
                                    href: e,
                                    shouldConfirm: !0,
                                    onConfirm: () => {
                                        B.default.track(eL.AnalyticEvents.USER_SETTINGS_MERCH_LINK_CONFIRMED), (0, T.default)(e)
                                    }
                                })
                            },
                            searchableTitle: ev.default.Messages.MERCHANDISE,
                            label: ev.default.Messages.MERCHANDISE,
                            ariaLabel: ev.default.Messages.MERCHANDISE
                        },
                        [ex.WebSetting.HYPESQUAD]: {
                            section: eL.UserSettingsSections.HYPESQUAD_ONLINE,
                            searchableTitle: ev.default.Messages.USER_SETTINGS_HYPESQUAD,
                            label: ev.default.Messages.USER_SETTINGS_HYPESQUAD,
                            element: eu.default
                        },
                        [ex.WebSetting.EXPERIMENTS]: {
                            section: eL.UserSettingsSections.EXPERIMENTS,
                            searchableTitle: "Experiments",
                            label: "Experiments",
                            element: eR.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Developer Options",
                            label: "Developer Options",
                            ariaLabel: "Developer Options",
                            element: el.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_FLAGS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Developer Options Flags",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_TRACING_REQUESTS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Tracing Requests",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_FORCED_CANARY]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Forced Canary",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_GATEWAY_EVENTS_TO_CONSOLE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Gateway Events To Console",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_OVERLAY_RPC_EVENTS_COMMANDS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Rpc Events Commands",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_ANALYTICS_EVENTS_LOGGING]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Analytics Events Logging",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_SOURCE_MAPS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Source Maps",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_ANALYTICS_DEBUGGER_VIEW]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Analytics Debugger View",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_IDLE_STATUS_INDICATOR]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Idle Status Indicator",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_ACCESSIBILITY_AUDITING]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Accessibility Auditing",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_PREVIEW_UNPUBLISHED_COLLECTIONS]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Preview Unpublished Collections",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Override Client Side",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_PREMIUM_TYPE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Override Client Side Premium Type",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE_ACCOUNT_CREATED_DATA]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Override Client Side Account Created Data",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_OPEN_OVERLAY]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Open Overlay",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_RESET_SOCKET]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Reset Socket",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_CLEAR_CACHES]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Clear Caches",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_CRASHES]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Crashes",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_SURVEY_OVERRIDE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Survey Override",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_CHANGELOG_OVERRIDE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Changelog Override",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DEVELOPER_OPTIONS_BUILD_OVERRIDE]: {
                            section: eL.UserSettingsSections.DEVELOPER_OPTIONS,
                            searchableTitle: "Build Override",
                            parent: ex.WebSetting.DEVELOPER_OPTIONS,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.HOTSPOT_OPTIONS]: {
                            section: eL.UserSettingsSections.HOTSPOT_OPTIONS,
                            searchableTitle: "Hotspot Options",
                            label: "Hotspot Options",
                            element: w.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.DISMISSIBLE_CONTENT_OPTIONS]: {
                            section: eL.UserSettingsSections.DISMISSIBLE_CONTENT_OPTIONS,
                            searchableTitle: "Dismissible Contents",
                            label: "Dismissible Contents",
                            element: m.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.PAYMENT_FLOW_MODALS]: {
                            section: eL.UserSettingsSections.PAYMENT_FLOW_MODAL_TEST_PAGE,
                            searchableTitle: "Payment Flow Modals",
                            label: "Payment Flow Modals",
                            element: W.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.TEXT_PLAYGROUND]: {
                            section: eL.UserSettingsSections.TEXT_PLAYGROUND,
                            searchableTitle: "Text Playground",
                            label: "Text Playground",
                            element: eO.default,
                            predicate: () => (0, q.shouldShowTextPlayground)() || v.default.isDeveloper
                        },
                        [ex.WebSetting.DESIGN_SYSTEMS]: {
                            section: eL.UserSettingsSections.DESIGN_SYSTEMS,
                            searchableTitle: "Design Systems",
                            label: "Design Systems",
                            element: ei.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.TEXT_COMPONENTS]: {
                            section: eL.UserSettingsSections.TEXT_COMPONENT,
                            searchableTitle: "Text Components",
                            label: "Text Components",
                            element: X.default,
                            predicate: () => (0, q.shouldShowTextPlayground)() || v.default.isDeveloper
                        },
                        [ex.WebSetting.PROFILE_EFFECTS_PREVIEW_TOOL]: {
                            section: eL.UserSettingsSections.PROFILE_EFFECTS_PREVIEW_TOOL,
                            searchableTitle: "Profile Effects Preview Tool",
                            label: "Profile Effects Preview Tool",
                            element: g.default,
                            predicate: () => v.default.isDeveloper
                        },
                        [ex.WebSetting.QUEST_PREVIEW_TOOL]: {
                            section: eL.UserSettingsSections.QUEST_PREVIEW_TOOL,
                            searchableTitle: "Quest Preview Tool",
                            label: "Quest Preview Tool",
                            element: P.default,
                            predicate: () => (0, L.isQuestPreviewToolEnabled)({
                                location: eP.QuestsExperimentLocations.QUEST_PREVIEW_TOOL
                            })
                        },
                        [ex.WebSetting.LOGOUT]: {
                            section: "logout",
                            onClick: () => {
                                (0, r.openModal)(e => (0, a.jsx)(r.ConfirmModal, {
                                    header: ev.default.Messages.LOGOUT,
                                    confirmText: ev.default.Messages.LOGOUT,
                                    cancelText: ev.default.Messages.CANCEL,
                                    onCancel: e.onClose,
                                    onConfirm: () => d.default.logout(),
                                    ...e,
                                    children: (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        children: ev.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT
                                    })
                                }))
                            },
                            label: ev.default.Messages.LOGOUT,
                            ariaLabel: ev.default.Messages.LOGOUT,
                            icon: (0, a.jsx)(G.default, {
                                width: 16,
                                height: 16
                            })
                        },
                        [ex.WebSetting.SOCIAL_LINKS]: {
                            section: S.SectionTypes.CUSTOM,
                            element: Q.default
                        },
                        [ex.WebSetting.CLIENT_DEBUG_INFO]: {
                            section: S.SectionTypes.CUSTOM,
                            element: k.default
                        }
                    })
                }
        },
        419636: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("299379"),
                l = s("662435"),
                r = s("464198"),
                o = s("447293"),
                d = s("985806"),
                u = s("58839"),
                c = s("981631"),
                S = s("172821");
            let E = {
                offset: {
                    top: -8
                }
            };

            function T() {
                return (0, a.jsxs)("div", {
                    className: S.socialLinks,
                    children: [(0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        tabIndex: -1,
                        rel: "author",
                        title: "Twitter",
                        href: (0, i.default)(c.LocalizedLinks.TWITTER),
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(d.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "Instagram",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.INSTAGRAM_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "Facebook",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.FACEBOOK_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(l.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "YouTube",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.YOUTUBE_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(u.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    }), (0, a.jsx)(n.Anchor, {
                        target: "_blank",
                        rel: "author",
                        title: "TikTok",
                        tabIndex: -1,
                        href: c.SOCIAL_LINKS.TIKTOK_URL,
                        className: S.link,
                        focusProps: E,
                        children: (0, a.jsx)(o.default, {
                            width: 16,
                            height: 16,
                            foreground: S.foreground,
                            "aria-hidden": !0
                        })
                    })]
                })
            }
        },
        35426: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            }), s("47120"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("622414"),
                c = s("171156"),
                S = s("399002"),
                E = s("369541"),
                T = s("611273");
            class _ extends n.Component {
                renderTestCase(e, t, s, n, i) {
                    let r = null == t ? void 0 : t.summary;
                    return (0, a.jsxs)(o.FormText, {
                        className: T.marginBottom20,
                        children: [!0 === n ? "✅" : !0 === i ? "❌" : !0 === s ? "\uD83C\uDFCE️" : "", "speed test, bitrate = ", ((0, S.speedTestRate)(e) / 1e3).toFixed(0), " kbps, framerate =", " ", (0, S.speedTestFps)(e).toFixed(0), " fps, duration = ", (0, S.speedTestDuration)(e).toFixed(1), "s, direction =", " ", (0, S.speedTestDirection)(e), void 0 !== r && (0, a.jsxs)("div", {
                            children: [(0, a.jsxs)("div", {
                                className: l()(T.marginTop8, T.marginBottom8),
                                children: ["Loss ", 100 * r.loss.toFixed(2), "%, Payload Bandwidth ", r.payloadBandwidth.toFixed(0), " kbps, Network Bandwidth ", r.networkBandwidth.toFixed(0), " kbps"]
                            }), (0, a.jsxs)("div", {
                                className: l()(T.marginTop8, T.marginBottom8),
                                children: ["IAT p50=", r.iatP50.toFixed(2), "ms, p95=", r.iatP95.toFixed(2), "ms, max=", r.iatMax.toFixed(2), "ms"]
                            })]
                        }), !1 === n && !0 === s && !1 === i && (0, a.jsx)("div", {
                            children: (0, a.jsx)("div", {
                                className: l()(T.marginTop8, T.marginBottom8),
                                children: "Test in progress. Results will appear when test completes."
                            })
                        }), !1 === n && !0 === i && (0, a.jsx)("div", {
                            children: (0, a.jsx)("div", {
                                className: l()(T.marginTop8, T.marginBottom8),
                                children: "Test skipped."
                            })
                        })]
                    })
                }
                renderTestCases(e, t, s, a, n) {
                    if (!1 === e) return;
                    let i = [];
                    for (let [e, l] of s.entries()) {
                        let s = e === n,
                            r = null != n && e < n;
                        i.push(this.renderTestCase(l, a[e], s, r, t))
                    }
                    return i
                }
                renderPing(e, t, s) {
                    if (!1 === e) return;
                    let n = s.length > 0 ? (0, S.speedTestPingInfo)(s) : null;
                    return (0, a.jsxs)(o.FormText, {
                        className: T.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.PINGING ? "✅" : t === E.SpeedTestLifecycles.PINGING ? "\uD83C\uDFCE️" : "", "Ping endpoint", null !== n && (0, a.jsxs)("div", {
                            className: l()(T.marginTop8, T.marginBottom8),
                            children: ["Pinged ", n.count, " time(s), min=", n.min, "ms, p50=", n.p50, "ms, max=", n.max, "ms"]
                        })]
                    })
                }
                renderConnect(e, t, s) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: T.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.CONNECTING ? "✅" : t === E.SpeedTestLifecycles.CONNECTING ? "\uD83C\uDFCE️" : "", "Connect to ", null != s ? s : "endpoint"]
                    })
                }
                renderNotes() {
                    return (0, a.jsx)(o.TextArea, {
                        className: T.marginBottom20,
                        value: this.state.notes,
                        onChange: e => {
                            c.default.setNotes(e), this.setState({
                                notes: e
                            })
                        },
                        placeholder: "Anything we should know about this test? Enter any relevant information about location, connection strength, or recent call quality here."
                    })
                }
                renderAwaitingEndpoint(e, t) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: T.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.AWAITING_ENDPOINT ? "✅" : t === E.SpeedTestLifecycles.AWAITING_ENDPOINT ? "\uD83C\uDFCE️" : "", "Select endpoint"]
                    })
                }
                renderUpload(e, t) {
                    if (!1 !== e) return (0, a.jsxs)(o.FormText, {
                        className: T.marginBottom20,
                        children: [t > E.SpeedTestLifecycles.UPLOADING ? "✅" : t === E.SpeedTestLifecycles.UPLOADING ? "\uD83C\uDFCE️" : "", "Upload results"]
                    })
                }
                renderComplete(e, t) {
                    if (!1 !== e) {
                        if (t === E.SpeedTestLifecycles.COMPLETED) return (0, a.jsx)(o.FormText, {
                            className: T.marginBottom20,
                            children: "Your Speed Test is completed and the results have been uploaded. You may safely close this page."
                        })
                    }
                }
                render() {
                    let e = this.props.available,
                        t = this.props.active,
                        s = this.props.failed,
                        n = this.props.endpoint,
                        i = this.props.lifecycle,
                        l = this.props.testCases,
                        r = this.props.currentTest,
                        d = this.props.testResults,
                        c = this.props.pings,
                        S = t ? u.default.stopSpeedTest : u.default.startSpeedTest,
                        _ = i >= E.SpeedTestLifecycles.AWAITING_ENDPOINT;
                    return !1 === e ? (0, a.jsx)(o.FormSection, {
                        tag: o.FormTitleTags.H1,
                        title: "Speed Test",
                        children: (0, a.jsx)(o.FormText, {
                            className: T.marginBottom20,
                            children: "Sorry! The Speed Test is not currently available. Disconnect from any existing calls and try again."
                        })
                    }) : (0, a.jsxs)(o.FormSection, {
                        tag: o.FormTitleTags.H1,
                        title: "Speed Test",
                        children: [this.renderNotes(), (0, a.jsx)(o.FormItem, {
                            className: T.marginBottom20,
                            children: (0, a.jsx)("div", {
                                children: (0, a.jsx)(o.Button, {
                                    onClick: () => S(),
                                    children: t ? "Stop Speed Test" : "Start Speed Test"
                                })
                            })
                        }), this.renderAwaitingEndpoint(_, i), this.renderConnect(_, i, n), this.renderPing(_, i, c), this.renderTestCases(_, s, l, d, r), this.renderUpload(_, i), this.renderComplete(_, i)]
                    })
                }
                constructor(...e) {
                    var t, s, a;
                    super(...e), t = this, s = "state", a = {
                        notes: this.props.notes
                    }, s in t ? Object.defineProperty(t, s, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[s] = a
                }
            }

            function I() {
                let e = (0, r.useStateFromStoresObject)([c.default], () => ({
                        available: c.default.getAvailable(),
                        active: c.default.getActive(),
                        failed: c.default.getFailed(),
                        endpoint: c.default.getEndpoint(),
                        lifecycle: c.default.getLifecycle(),
                        testCases: c.default.getTestCases(),
                        testResults: c.default.getTestResults(),
                        currentTest: c.default.getCurrentTest(),
                        pings: c.default.getPings(),
                        notes: c.default.getNotes()
                    })),
                    [t, s] = n.useState(0),
                    i = n.useCallback(e => {
                        let {} = e;
                        s(t + 1)
                    }, [t]);
                return n.useEffect(() => (d.default.subscribe("RTC_SPEED_TEST_STATE_UPDATE", i), () => {
                    d.default.unsubscribe("RTC_SPEED_TEST_STATE_UPDATE", i)
                }), [i]), (0, a.jsx)(_, {
                    ...e
                })
            }
        },
        659947: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            }), s("653041"), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("660216"),
                o = s("40908"),
                d = s("592125"),
                u = s("984933"),
                c = s("430824"),
                S = s("914010"),
                E = s("285952"),
                T = s("107828"),
                _ = s("727785"),
                I = s("689938"),
                N = s("158200");

            function g() {}
            let f = [_.AutocompleterResultTypes.VOICE_CHANNEL];

            function m(e) {
                e.setOptions({
                    voiceChannelGuildFilter: null
                }), e.setLimit(1 / 0)
            }

            function A(e) {
                let {
                    height: t
                } = e;
                return (0, a.jsx)("div", {
                    style: {
                        height: t
                    }
                })
            }

            function C() {
                return (0, a.jsx)(A, {
                    height: 16
                }, "footer")
            }

            function O() {
                return (0, a.jsx)(A, {
                    height: 8
                }, "header")
            }

            function h() {
                return (0, a.jsx)("div", {
                    className: N.voiceListSearchEmpty,
                    children: (0, a.jsx)(l.Text, {
                        variant: "text-md/medium",
                        color: "text-muted",
                        className: N.noVoiceChannelSelected,
                        children: I.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_NO_RESULTS_FOUND
                    })
                })
            }

            function R(e) {
                var t, s;
                let {
                    keybind: i
                } = e, o = n.useRef(i);
                n.useEffect(() => void(o.current = i));
                let [d, u] = n.useState(null !== (s = null === (t = i.params) || void 0 === t ? void 0 : t.channelId) && void 0 !== s ? s : void 0), c = n.useCallback(() => {
                    (0, l.openModalLazy)(async () => e => (0, a.jsx)(p, {
                        ...e,
                        onSelect: e => {
                            u(e), r.default.setKeybind({
                                ...o.current,
                                params: {
                                    channelId: e
                                }
                            })
                        }
                    }))
                }, []);
                return (0, a.jsx)(l.FormSection, {
                    title: I.default.Messages.USER_SETTINGS_KEYBIND_SWITCH_SERVER_SETTINGS_SECTION,
                    className: N.channelIdSection,
                    children: (0, a.jsxs)(E.default, {
                        align: E.default.Align.STRETCH,
                        children: [(0, a.jsx)("div", {
                            className: N.selectedVoiceChannel,
                            children: (0, a.jsx)(M, {
                                channelId: d
                            })
                        }), (0, a.jsx)(E.default.Child, {
                            grow: 0,
                            shrink: 0,
                            children: (0, a.jsx)(l.Button, {
                                onClick: c,
                                children: I.default.Messages.USER_SETTINGS_KEYBINDS_SELECT_VOICE_CHANNEL
                            })
                        })]
                    })
                })
            }

            function p(e) {
                let {
                    transitionState: t,
                    onClose: s,
                    onSelect: r
                } = e, E = n.useId(), g = n.useRef(null), {
                    mouseFocusEnabled: A,
                    enableMouseFocus: R,
                    disableMouseFocus: p
                } = function() {
                    let e = n.useRef(!1),
                        t = n.useCallback(() => {
                            e.current = !0
                        }, []),
                        s = n.useCallback(() => {
                            e.current = !1
                        }, []);
                    return {
                        mouseFocusEnabled: e,
                        enableMouseFocus: t,
                        disableMouseFocus: s
                    }
                }(), {
                    query: M,
                    updateQuery: D,
                    queryResults: x
                } = (0, o.default)({
                    visible: !0,
                    autocompleterResultTypes: f,
                    autocompleterBeforeCreateSearchContext: m
                }), L = function(e) {
                    let t = "" !== e,
                        s = (0, i.useStateFromStoresArray)([u.default, d.default, S.default], () => {
                            let e = S.default.getGuildId();
                            if (t || null == e) return [];
                            let s = [];
                            for (let t of u.default.getVocalChannelIds(e)) {
                                let e = d.default.getChannel(t);
                                null != e && s.push(e)
                            }
                            return s
                        }, [t]);
                    return t ? null : s
                }(M), {
                    focusedIndex: P,
                    setFocusedIndex: b
                } = function(e) {
                    let [t, s] = n.useState(0), a = n.useRef(e);
                    return e !== a.current && 0 !== t && s(0), n.useEffect(() => void(a.current = e)), {
                        focusedIndex: t,
                        setFocusedIndex: s
                    }
                }(M);
                n.useEffect(() => {
                    let {
                        current: e
                    } = g;
                    !(null == e || e.isItemVisible(0, P, !0)) && e.scrollToIndex({
                        section: 0,
                        row: P
                    })
                }, [P]);
                let v = null != L ? L.length : x.length,
                    U = (() => {
                        if (null != L) {
                            var e;
                            return null === (e = L[P]) || void 0 === e ? void 0 : e.id
                        }
                        let t = x[P];
                        if ((null == t ? void 0 : t.type) === _.AutocompleterResultTypes.VOICE_CHANNEL) return t.record.id
                    })();
                return (0, a.jsx)("div", {
                    className: N.voiceModalContainer,
                    onMouseMove: R,
                    children: (0, a.jsxs)(l.ModalRoot, {
                        transitionState: t,
                        size: l.ModalSize.MEDIUM,
                        className: N.voiceModalRootContainer,
                        children: [(0, a.jsx)("div", {
                            className: N.inputWrapper,
                            children: (0, a.jsx)(l.TextInput, {
                                value: M,
                                onChange: D,
                                onKeyDown: function(e) {
                                    p();
                                    let t = e.key.toLowerCase();
                                    if ("arrowdown" === t || "arrowup" === t || "enter" === t || "escape" === t) switch (e.preventDefault(), t) {
                                        case "escape":
                                            s();
                                            break;
                                        case "enter": {
                                            let e = (() => {
                                                if (null != L) return L[P];
                                                let e = x[P];
                                                if ((null == e ? void 0 : e.type) === _.AutocompleterResultTypes.VOICE_CHANNEL) return e.record
                                            })();
                                            null == e ? r(void 0) : r(e.id), s();
                                            break
                                        }
                                        case "arrowup":
                                            0 === P ? b(v - 1) : b(P - 1);
                                            break;
                                        case "arrowdown":
                                            P >= v - 1 ? b(0) : b(P + 1)
                                    }
                                },
                                placeholder: I.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_VOICE,
                                role: "combobox",
                                "aria-controls": E,
                                "aria-expanded": v > 0,
                                "aria-activedescendant": v > 0 && null != U ? U : void 0,
                                "aria-autocomplete": "list",
                                spellCheck: !1
                            })
                        }), 0 === v && "" !== M && (0, a.jsx)(h, {}), (v > 0 || "" === M) && (0, a.jsx)(l.ListThin, {
                            innerId: E,
                            innerRole: "listbox",
                            "aria-label": I.default.Messages.USER_SETTINGS_KEYBIND_VOICE_CHANNEL_RESULTS,
                            ref: g,
                            sections: [v],
                            renderRow: function(e) {
                                let {
                                    row: t
                                } = e, n = (() => {
                                    if (null != L) return L[t];
                                    let e = x[t];
                                    if ((null == e ? void 0 : e.type) === _.AutocompleterResultTypes.VOICE_CHANNEL) return e.record
                                })();
                                if (null == n) return null;
                                let i = null != n.parent_id ? d.default.getChannel(n.parent_id) : void 0,
                                    l = c.default.getGuild(n.guild_id);
                                return (0, a.jsx)(T.Channel, {
                                    id: n.id,
                                    channel: n,
                                    category: i,
                                    focused: P === t,
                                    onMouseEnter: () => A.current && b(t),
                                    onClick: () => {
                                        r(n.id), s()
                                    },
                                    onFocus: () => b(t),
                                    children: null != l ? (0, a.jsx)("div", {
                                        className: N.guildName,
                                        children: l.name
                                    }) : null
                                }, n.id)
                            },
                            renderListHeader: O,
                            renderFooter: C,
                            sectionHeight: 0,
                            rowHeight: 34,
                            className: N.voiceChannelList,
                            listHeaderHeight: 8,
                            footerHeight: 16
                        })]
                    })
                })
            }

            function M(e) {
                let {
                    channelId: t
                } = e, {
                    channel: s,
                    category: n,
                    guild: r
                } = (0, i.useStateFromStoresObject)([d.default, c.default], () => {
                    let e = null != t ? d.default.getChannel(t) : void 0;
                    return null != e ? {
                        channel: e,
                        category: null != e.parent_id ? d.default.getChannel(e.parent_id) : void 0,
                        guild: null != e.guild_id ? c.default.getGuild(e.guild_id) : void 0
                    } : {
                        channel: void 0,
                        category: void 0,
                        guild: void 0
                    }
                });
                return null == s ? (0, a.jsx)(l.Text, {
                    variant: "text-md/medium",
                    color: "text-muted",
                    className: N.noVoiceChannelSelected,
                    children: I.default.Messages.USER_SETTINGS_KEYBINDS_NO_VOICE_CHANNEL_SELECTED
                }) : (0, a.jsx)(T.Channel, {
                    channel: s,
                    id: s.id,
                    category: n,
                    onClick: g,
                    onFocus: g,
                    onMouseEnter: g,
                    focused: !1,
                    children: null != r ? (0, a.jsx)("div", {
                        className: N.guildName,
                        children: r.name
                    }) : null
                })
            }
        },
        399970: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("47120");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("401430"),
                c = s("155268"),
                S = s("695103"),
                E = s("285952"),
                T = s("153124"),
                _ = s("689938"),
                I = s("737646"),
                N = s("611273");
            let g = /^\d+$|^$/;
            (n = a || (a = {})).LOCALHOST = "localhost", n.PROXY = "proxy";

            function f(e) {
                let {
                    onClose: t,
                    transitionState: s
                } = e, {
                    authorizedApplicationId: a,
                    authorizationError: n,
                    authorizing: f
                } = (0, r.useStateFromStoresObject)([S.default], () => ({
                    authorizedApplicationId: S.default.testModeApplicationId,
                    authorizationError: S.default.error,
                    authorizing: S.default.isFetchingAuthorization
                })), [m, A] = l.useState(null != a ? a : ""), [C, O] = l.useState("8080"), [h, R] = l.useState("localhost"), p = (0, T.useUID)(), M = g.test(m);
                async function D() {
                    u.resetError();
                    let e = function(e, t, s) {
                        if (null == e) return null;
                        switch (e) {
                            case "localhost":
                                return "https://localhost:".concat(t);
                            case "proxy":
                                return (0, c.default)(s)
                        }
                    }(h, C, m);
                    null != await u.authorizeAndSetTestModeApplication(m, e) && t()
                }
                l.useEffect(() => () => d.default.wait(() => u.resetError()), []);
                let x = null != a && a === m,
                    L = x ? function() {
                        u.reset(), A(""), R(null)
                    } : D;
                return (0, i.jsxs)(o.ModalRoot, {
                    "aria-labelledby": p,
                    transitionState: s,
                    children: [(0, i.jsxs)(o.ModalHeader, {
                        justify: E.default.Justify.BETWEEN,
                        separator: !1,
                        children: [(0, i.jsx)(o.FormTitle, {
                            id: p,
                            tag: "h1",
                            className: N.marginReset,
                            children: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_MODAL_HEADER
                        }), (0, i.jsx)(o.ModalCloseButton, {
                            onClick: t
                        })]
                    }), (0, i.jsxs)(o.ModalContent, {
                        className: I.modalContent,
                        children: [(0, i.jsx)(o.FormText, {
                            className: N.marginBottom20,
                            type: o.FormText.Types.DESCRIPTION,
                            children: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_MODAL_BODY
                        }), null == n ? null : (0, i.jsx)(o.FormErrorBlock, {
                            className: N.marginBottom20,
                            children: n
                        }), (0, i.jsx)("form", {
                            onSubmit: e => {
                                e.preventDefault(), L()
                            },
                            children: (0, i.jsxs)(E.default, {
                                direction: E.default.Direction.VERTICAL,
                                align: E.default.Align.START,
                                children: [(0, i.jsx)(o.FormItem, {
                                    className: I.inputWrapper,
                                    title: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PLACEHOLDER,
                                    required: !0,
                                    children: (0, i.jsx)(o.TextInput, {
                                        value: m,
                                        maxLength: 19,
                                        error: M ? null : _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_INVALID,
                                        onChange: function(e) {
                                            A(e)
                                        },
                                        disabled: f
                                    })
                                }), (0, i.jsx)(o.FormItem, {
                                    className: I.inputWrapper,
                                    title: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_ORIGIN_LABEL,
                                    children: (0, i.jsx)(o.SingleSelect, {
                                        isDisabled: !M || "" === m,
                                        value: h,
                                        options: [{
                                            value: "localhost",
                                            label: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_LOCALHOST_OPTION,
                                            key: "localhost"
                                        }, {
                                            value: "proxy",
                                            label: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PROXY_OPTION,
                                            key: "proxy"
                                        }],
                                        onChange: function(e) {
                                            R(e)
                                        },
                                        placeholder: "URL Origin Type"
                                    })
                                }), "localhost" !== h ? null : (0, i.jsx)(o.FormItem, {
                                    className: I.inputWrapper,
                                    title: _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_PORT_NUMBER_LABEL,
                                    required: !0,
                                    children: (0, i.jsx)(o.TextInput, {
                                        value: C,
                                        maxLength: 5,
                                        onChange: e => O(e),
                                        disabled: f
                                    })
                                }), (0, i.jsx)(o.Button, {
                                    submitting: f,
                                    type: "submit",
                                    disabled: !M || 0 === m.length || "localhost" === h && 0 === C.length,
                                    color: x ? o.Button.Colors.RED : o.Button.Colors.GREEN,
                                    children: x ? _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_CLEAR : _.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_ACTIVATE
                                })]
                            })
                        })]
                    })]
                })
            }
        },
        799071: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return r
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("173511"),
                l = s("481060");

            function r() {
                let [e, t] = n.useState("");
                return (0, a.jsxs)(l.FormSection, {
                    title: "Text components",
                    tag: l.FormTitleTags.H1,
                    children: [(0, a.jsx)(l.TextInput, {
                        placeholder: "Enter custom text...",
                        onChange: e => t(e)
                    }), (0, a.jsx)(l.FormDivider, {
                        style: {
                            margin: "10px 0"
                        }
                    }), i.TEXT_VARIANT.map(t => "code" === t ? null : (0, a.jsx)(l.Text, {
                        variant: t,
                        children: "" !== e ? "".concat(e, " (").concat(t, ")") : t
                    }, t))]
                })
            }
        },
        601433: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                shouldShowTextPlayground: function() {
                    return n
                }
            });
            let a = (0, s("818083").createExperiment)({
                kind: "user",
                id: "2023-03_text_playground_settings_pane",
                label: "Text Playground",
                defaultConfig: {
                    showSetting: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable settings pane",
                    config: {
                        showSetting: !0
                    }
                }]
            });

            function n() {
                return a.getCurrentConfig({
                    location: "26c832_1"
                }, {
                    autoTrackExposure: !0
                }).showSetting
            }
        },
        730820: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return j
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("816814"),
                u = s("240872"),
                c = s("23645"),
                S = s("712364"),
                E = s("279837"),
                T = s("144114"),
                _ = s("921801"),
                I = s("607018"),
                N = s("778764"),
                g = s("314897"),
                f = s("325067"),
                m = s("594174"),
                A = s("285952"),
                C = s("572004"),
                O = s("287880"),
                h = s("714565"),
                R = s("202858"),
                p = s("726985"),
                M = s("981631"),
                D = s("815660"),
                x = s("689938"),
                L = s("493087"),
                P = s("611273");

            function b(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }

            function v(e) {
                let {
                    code: {
                        code: t,
                        consumed: s
                    }
                } = e, i = "".concat(t.substr(0, 4), "-").concat(t.substr(4)), l = n.useRef(null), r = n.useCallback(e => {
                    if ("c" === e.key && e.metaKey && C.SUPPORTS_COPY) {
                        var t;
                        e.preventDefault(), e.stopPropagation(), (0, C.copy)(i), null == l || null === (t = l.current) || void 0 === t || t.focus()
                    }
                }, [i]);
                return (0, a.jsx)("li", {
                    className: P.marginBottom20,
                    children: (0, a.jsx)(o.Clickable, {
                        innerRef: l,
                        className: L.backupCode,
                        onKeyDown: r,
                        children: (0, a.jsx)(o.Checkbox, {
                            displayOnly: !0,
                            readOnly: !0,
                            className: L.codeCheckbox,
                            value: s,
                            children: (0, a.jsx)("span", {
                                className: L.code,
                                children: i
                            })
                        })
                    })
                })
            }
            class U extends n.PureComponent {
                maskPhoneNumber(e) {
                    return null == e ? "" : "".concat("*".repeat(e.length - 4)).concat(e.slice(-4))
                }
                renderMFASMS() {
                    let e, t;
                    let {
                        revealed: s
                    } = this.state, {
                        currentUser: n,
                        togglingSMS: i
                    } = this.props, l = null != n.phone, r = n.hasFlag(M.UserFlags.MFA_SMS);
                    if (l || r) {
                        let e = s ? n.phone : this.maskPhoneNumber(n.phone);
                        t = (0, a.jsxs)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: P.marginBottom8,
                            children: [x.default.Messages.MFA_SMS_AUTH_CURRENT_PHONE.format({
                                phoneNumber: e
                            }), (0, a.jsx)(o.Anchor, {
                                onClick: this.togglePhoneNumberVisibility,
                                className: L.phoneRevealer,
                                children: s ? x.default.Messages.MFA_SMS_PHONE_NUMBER_HIDE : x.default.Messages.MFA_SMS_PHONE_NUMBER_REVEAL
                            })]
                        })
                    }
                    if (r) e = (0, a.jsx)(A.default, {
                        className: l ? "" : P.marginTop8,
                        children: (0, a.jsx)(o.Button, {
                            color: o.Button.Colors.RED,
                            look: o.Button.Looks.OUTLINED,
                            size: o.Button.Sizes.SMALL,
                            submitting: i,
                            onClick: this.handleDisableSMS,
                            children: x.default.Messages.MFA_SMS_REMOVE
                        })
                    });
                    else {
                        let t = (0, h.getSMSBackupDisabledMessage)(n);
                        e = (0, a.jsxs)(A.default, {
                            className: l ? "" : P.marginTop8,
                            children: [(0, a.jsx)(o.Button, {
                                onClick: this.handleEnableSMS,
                                size: o.Button.Sizes.SMALL,
                                submitting: i,
                                disabled: null != t,
                                children: null != t ? t : x.default.Messages.MFA_SMS_ENABLE
                            }), l ? (0, a.jsx)(o.Button, {
                                onClick: this.handleChangePhoneNumber,
                                color: o.Button.Colors.PRIMARY,
                                size: o.Button.Sizes.SMALL,
                                look: o.Button.Looks.LINK,
                                children: x.default.Messages.CHANGE_PHONE_NUMBER
                            }) : null]
                        })
                    }
                    return (0, a.jsx)(_.Subsetting, {
                        setting: p.WebSetting.ACCOUNT_SMS_BACKUP,
                        children: (0, a.jsxs)(o.FormSection, {
                            className: P.marginTop40,
                            title: x.default.Messages.MFA_SMS_AUTH,
                            children: [(0, a.jsx)(o.FormText, {
                                type: o.FormText.Types.DESCRIPTION,
                                children: x.default.Messages.MFA_SMS_AUTH_SALES_PITCH
                            }), t, e]
                        })
                    })
                }
                renderEnabled() {
                    let e;
                    let {
                        backupCodes: t
                    } = this.props, s = (0, a.jsx)(_.Subsetting, {
                        setting: p.WebSetting.ACCOUNT_VIEW_BACKUP_CODES,
                        children: (0, a.jsx)(o.Button, {
                            onClick: this.sendMFABackupCodesVerificationKeyEmail,
                            size: o.Button.Sizes.SMALL,
                            children: x.default.Messages.TWO_FA_VIEW_BACKUP_CODES
                        })
                    });
                    if (t.length > 0) {
                        s = (0, a.jsx)(c.default, {
                            fileContents: this.getDownloadFileContents,
                            contentType: "text/plain",
                            fileName: "discord_backup_codes.txt",
                            children: (0, a.jsx)(o.Button, {
                                size: o.Button.Sizes.SMALL,
                                children: x.default.Messages.TWO_FA_DOWNLOAD_CODES
                            })
                        });
                        let n = e => e.map(e => (0, a.jsx)(v, {
                            code: e
                        }, e.code));
                        e = (0, a.jsxs)(o.FormSection, {
                            title: x.default.Messages.TWO_FA_BACKUP_CODES_LABEL,
                            children: [(0, a.jsx)(o.FormText, {
                                type: o.FormText.Types.DESCRIPTION,
                                className: P.marginBottom20,
                                children: x.default.Messages.TWO_FA_BACKUP_CODES_BODY.format()
                            }), (0, a.jsxs)(A.default, {
                                children: [(0, a.jsx)(A.default.Child, {
                                    children: (0, a.jsx)("ul", {
                                        className: L.checkboxGroup,
                                        children: n(t.slice(0, t.length / 2))
                                    })
                                }), (0, a.jsx)(A.default.Child, {
                                    children: (0, a.jsx)("ul", {
                                        className: L.checkboxGroup,
                                        children: n(t.slice(t.length / 2))
                                    })
                                })]
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(o.Button, {
                                    onClick: this.generateBackupCodes,
                                    look: o.ButtonLooks.LINK,
                                    size: o.ButtonSizes.MIN,
                                    children: x.default.Messages.TWO_FA_GENERATE_CODES
                                })
                            }), (0, a.jsx)(o.FormDivider, {
                                className: P.marginTop20
                            })]
                        })
                    }
                    return (0, a.jsxs)(o.FormSection, {
                        children: [(0, a.jsx)(o.FormTitle, {
                            children: x.default.Messages.TWO_FA
                        }), (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: P.marginBottom20,
                            children: x.default.Messages.TWO_FA_DESCRIPTION
                        }), (0, a.jsxs)(A.default, {
                            justify: A.default.Justify.START,
                            className: P.marginBottom20,
                            children: [(0, a.jsx)(A.default.Child, {
                                wrap: !0,
                                grow: 0,
                                children: s
                            }), (0, a.jsx)(A.default.Child, {
                                wrap: !0,
                                children: this.props.hasTOTPEnabled ? (0, a.jsx)(_.Subsetting, {
                                    setting: p.WebSetting.ACCOUNT_REMOVE_2FA,
                                    children: (0, a.jsx)(o.Button, {
                                        onClick: this.handleDisableMFA,
                                        size: o.Button.Sizes.SMALL,
                                        color: o.ButtonColors.RED,
                                        look: o.ButtonLooks.OUTLINED,
                                        children: x.default.Messages.TWO_FA_REMOVE
                                    })
                                }) : (0, a.jsx)(_.Subsetting, {
                                    setting: p.WebSetting.ACCOUNT_ENABLE_2FA,
                                    children: (0, a.jsx)(o.Button, {
                                        onClick: R.default.enableMFA,
                                        size: o.ButtonSizes.SMALL,
                                        children: x.default.Messages.TWO_FA_ENABLE
                                    })
                                })
                            })]
                        }), e, this.renderMFASMS(), (0, a.jsx)(_.Subsetting, {
                            setting: p.WebSetting.ACCOUNT_SECURITY_KEYS,
                            children: (0, a.jsx)(N.default, {})
                        })]
                    })
                }
                renderDisabled() {
                    return (0, a.jsxs)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: [(0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            className: P.marginBottom20,
                            children: x.default.Messages.TWO_FA_SALES_PITCH
                        }), (0, a.jsx)(o.FormItem, {
                            children: (0, a.jsx)(o.Button, {
                                onClick: R.default.enableMFA,
                                size: o.ButtonSizes.SMALL,
                                children: x.default.Messages.TWO_FA_ENABLE
                            })
                        }), (0, a.jsx)(N.default, {})]
                    })
                }
                render() {
                    let {
                        currentUser: e
                    } = this.props;
                    return O.hasCrypto ? e.verified ? e.mfaEnabled ? this.renderEnabled() : this.renderDisabled() : (0, a.jsx)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            children: x.default.Messages.TWO_FA_NOT_VERIFIED
                        })
                    }) : (0, a.jsx)(o.FormSection, {
                        title: x.default.Messages.TWO_FA,
                        children: (0, a.jsx)(o.FormText, {
                            type: o.FormText.Types.DESCRIPTION,
                            children: x.default.Messages.TWO_FA_USE_DESKTOP_APP
                        })
                    })
                }
                openPhoneVerificationModal() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    (0, o.openModal)(t => (0, a.jsx)(I.default, {
                        reason: T.ChangePhoneReason.USER_SETTINGS_UPDATE,
                        ...t,
                        ...e
                    }), {
                        modalKey: D.PHONE_VERIFICATION_MODAL_KEY
                    })
                }
                constructor(...e) {
                    super(...e), b(this, "state", {
                        revealed: !1,
                        password: ""
                    }), b(this, "togglePhoneNumberVisibility", e => {
                        e.preventDefault(), this.setState({
                            revealed: !this.state.revealed
                        })
                    }), b(this, "handleDisableMFA", () => {
                        u.default.show({
                            title: x.default.Messages.TWO_FA_REMOVE,
                            body: x.default.Messages.TWO_FA_REMOVE_CONFIRMATION,
                            cancelText: x.default.Messages.CANCEL,
                            onConfirm: () => d.default.disable()
                        })
                    }), b(this, "generateBackupCodes", async () => {
                        let e = f.default.getVerificationKey();
                        await d.default.confirmViewBackupCodes(e, !0)
                    }), b(this, "sendMFABackupCodesVerificationKeyEmail", () => {
                        (0, o.openModal)(e => (0, a.jsx)(E.default, {
                            ...e,
                            handleSubmit: e => d.default.sendMFABackupCodesVerificationKeyEmail(e).then(() => {
                                this.viewBackupCodes(e)
                            }),
                            title: x.default.Messages.TWO_FA_VIEW_BACKUP_CODES_ENTER_PASSWORD,
                            actionText: x.default.Messages.TWO_FA_BACKUP_CODES_NEXT_ACTION
                        }))
                    }), b(this, "viewBackupCodes", e => {
                        (0, o.openModal)(t => (0, a.jsx)(S.default, {
                            ...t,
                            handleSubmit: e => d.default.confirmViewBackupCodes(e, !1).then(() => t.onClose()),
                            maxLength: 8,
                            title: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_LABEL,
                            label: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_INPUT_LABEL,
                            forceNoPlaceholder: !0,
                            retryPrompt: x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_PROMPT,
                            retrySuccessMessage: x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_SUCCESS,
                            onRetry: () => d.default.sendMFABackupCodesVerificationKeyEmail(e),
                            actionText: x.default.Messages.TWO_FA_VIEW_CODES_SUBMIT,
                            helpMessage: x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_BODY
                        }))
                    }), b(this, "getDownloadFileContents", () => {
                        let e = this.props.backupCodes.map(e => {
                                let {
                                    consumed: t,
                                    code: s
                                } = e;
                                return "* ".concat(s.substr(0, 4), "-").concat(s.substr(4), " ").concat(t ? "(used)" : "")
                            }).join("\r\n"),
                            t = x.default.Messages.TWO_FA_DISCORD_BACKUP_CODES.format({
                                email: this.props.currentUser.email
                            });
                        return "".concat(t, "\r\n\r\n").concat(e)
                    }), b(this, "handleChangePhoneNumber", () => {
                        this.openPhoneVerificationModal()
                    }), b(this, "handleEnableSMS", () => {
                        let {
                            currentUser: e
                        } = this.props, t = () => {
                            (0, o.openModal)(e => (0, a.jsx)(E.default, {
                                ...e,
                                handleSubmit: d.default.enableSMS,
                                title: x.default.Messages.MFA_SMS_ENABLE
                            }))
                        };
                        null == e.phone ? this.openPhoneVerificationModal({
                            onAddedPhone: t
                        }) : t()
                    }), b(this, "handleDisableSMS", () => {
                        (0, o.openModal)(e => (0, a.jsx)(E.default, {
                            ...e,
                            handleSubmit: d.default.disableSMS,
                            title: x.default.Messages.MFA_SMS_REMOVE,
                            children: x.default.Messages._MFA_SMS_CONFIRM_REMOVE_BODY
                        }))
                    })
                }
            }

            function j(e) {
                let t = (0, r.useStateFromStores)([m.default], () => m.default.getCurrentUser());
                l()(null != t, "TwoFactorAuth: currentUser cannot be undefined");
                let s = (0, r.useStateFromStoresObject)([f.default, g.default], () => ({
                    togglingSMS: f.default.togglingSMS,
                    hasTOTPEnabled: g.default.hasTOTPEnabled()
                }));
                return (0, a.jsx)(U, {
                    currentUser: t,
                    ...s,
                    ...e
                })
            }
        },
        154022: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Q
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("392711"),
                o = s.n(r),
                d = s("442837"),
                u = s("481060"),
                c = s("230711"),
                S = s("419363"),
                E = s("857595"),
                T = s("607070"),
                _ = s("627845"),
                I = s("786761"),
                N = s("3148"),
                g = s("739566"),
                f = s("753206"),
                m = s("440849"),
                A = s("921801"),
                C = s("196051"),
                O = s("441729"),
                h = s("285952"),
                R = s("153124"),
                p = s("786048"),
                M = s("897353"),
                D = s("626135"),
                x = s("63063"),
                L = s("695346"),
                P = s("263937"),
                b = s("996073"),
                v = s("526761"),
                U = s("726985"),
                j = s("981631"),
                G = s("611480"),
                F = s("653477"),
                B = s("689938"),
                y = s("572965"),
                V = s("611273"),
                H = s("328756");
            let Y = (0, R.uid)(),
                k = (0, R.uid)(),
                w = (0, R.uid)(),
                W = o().debounce(e => {
                    (0, E.setSaturation)(e)
                }, 250),
                K = o().debounce(e => {
                    (0, C.setSpeechRate)(e)
                }, 250);

            function Q(e) {
                return (0, a.jsxs)(u.FormSection, {
                    tag: u.FormTitleTags.H1,
                    title: B.default.Messages.ACCESSIBILITY,
                    children: [(0, a.jsx)("div", {
                        className: V.marginBottom20,
                        children: (0, a.jsx)(z, {})
                    }), (0, a.jsxs)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_SATURATION,
                        children: [(0, a.jsx)(X, {}), (0, a.jsx)(u.FormDivider, {})]
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_LINK_DECORATIONS,
                        children: (0, a.jsx)(q, {})
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_ROLE_STYLE,
                        children: (0, a.jsx)(Z, {})
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_TAGS,
                        children: (0, a.jsx)(J, {})
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_SYNC_PROFILE_THEME,
                        children: (0, a.jsx)($, {})
                    }), (0, _.canEnableForcedColors)() ? (0, a.jsxs)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_CONTRAST,
                        children: [(0, a.jsx)(ee, {}), " "]
                    }) : null, (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_REDUCED_MOTION,
                        children: (0, a.jsx)(et, {})
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_STICKERS,
                        children: (0, a.jsx)(es, {})
                    }), (0, a.jsx)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_MESSAGES,
                        children: (0, a.jsx)(ea, {})
                    }), (0, a.jsxs)(A.Subsetting, {
                        setting: U.WebSetting.ACCESSIBILITY_TEXT_TO_SPEECH,
                        children: [(0, a.jsx)(en, {}), (0, a.jsx)(u.FormDivider, {})]
                    }), (0, a.jsx)(u.Text, {
                        className: V.marginTop20,
                        variant: "text-md/normal",
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_APPEARANCE_LINK.format({
                            onAppearanceClick() {
                                c.default.open(j.UserSettingsSections.APPEARANCE)
                            }
                        })
                    })]
                })
            }

            function z() {
                let e = L.MessageDisplayCompact.useSetting(),
                    [t] = n.useState(() => {
                        let e = (0, I.createMessageRecord)({
                            ...(0, N.default)({
                                channelId: "1337",
                                content: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_LINK_PREVIEW_MESSAGE.format({
                                    previewLink: "https://discord.com/accessibility"
                                })
                            }),
                            state: j.MessageStates.SENT,
                            id: "".concat(0)
                        });
                        return e.colorString = "green", e
                    });
                return (0, a.jsx)(u.FocusBlock, {
                    children: (0, a.jsxs)(u.Card, {
                        className: y.preview,
                        "aria-hidden": !0,
                        children: [(0, a.jsxs)("div", {
                            className: y.previewHeader,
                            children: [(0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                color: u.Button.Colors.BRAND,
                                children: B.default.Messages.ACCESSIBILITY_EXAMPLE_BUTTON_LABEL
                            }), (0, a.jsx)("div", {
                                className: y.previewAvatars,
                                children: [j.StatusTypes.ONLINE, j.StatusTypes.DND, j.StatusTypes.IDLE].map(e => (0, a.jsx)(u.AnimatedAvatar, {
                                    "aria-label": B.default.Messages.USER_SETTINGS_AVATAR,
                                    src: H,
                                    size: u.AvatarSizes.SIZE_32,
                                    status: e
                                }, e))
                            })]
                        }), (0, a.jsx)("div", {
                            className: y.previewMessage,
                            children: (0, a.jsx)(f.default, {
                                compact: e,
                                author: {
                                    ...(0, g.getMessageAuthor)(t),
                                    colorString: "#DD80F4"
                                },
                                message: t
                            })
                        })]
                    })
                })
            }

            function X() {
                let {
                    saturation: e,
                    desaturateUserColors: t
                } = (0, d.useStateFromStoresObject)([T.default], () => ({
                    saturation: T.default.saturation,
                    desaturateUserColors: T.default.desaturateUserColors
                }));
                return (0, a.jsxs)(u.FormSection, {
                    className: V.marginTop20,
                    children: [(0, a.jsx)(u.FormTitle, {
                        id: Y,
                        className: V.marginBottom8,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_TITLE
                    }), (0, a.jsx)(u.FormText, {
                        id: k,
                        type: u.FormText.Types.DESCRIPTION,
                        className: V.marginBottom20,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_DESCRIPTION
                    }), (0, a.jsx)(u.Slider, {
                        "aria-labelledby": Y,
                        "aria-describedby": k,
                        markers: j.Accessibility.SATURATION_INCREMENTS,
                        equidistant: !0,
                        stickToMarkers: !0,
                        maxValue: 1,
                        minValue: 0,
                        initialValue: e,
                        onValueChange: W,
                        onMarkerRender: e => 100 * e % 2 == 0 ? "".concat(100 * e, "%") : void 0
                    }), (0, a.jsx)(u.FormSwitch, {
                        hideBorder: !0,
                        className: l()(V.marginTop8, V.marginBottom20),
                        value: t,
                        onChange: E.toggleDesaturateUserColors,
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_DESCRIPTION,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_LABEL
                    })]
                })
            }

            function q() {
                let e = (0, d.useStateFromStores)([T.default], () => T.default.alwaysShowLinkDecorations);
                return (0, a.jsx)(u.FormItem, {
                    className: V.marginTop20,
                    children: (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_NOTE,
                        value: e,
                        onChange: function() {
                            (0, E.setAlwaysShowLinkDecorations)(!e)
                        },
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_LABEL
                    })
                })
            }

            function Z() {
                let e = (0, d.useStateFromStores)([T.default], () => T.default.roleStyle);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormItem, {
                        title: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_TITLE,
                        className: V.marginTop20,
                        children: [(0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DESCRIPTION,
                            className: V.marginBottom8,
                            children: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_DESCRIPTION
                        }), (0, a.jsx)(u.RadioGroup, {
                            options: [{
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_USERNAME_LABEL,
                                value: "username"
                            }, {
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_DOT_LABEL,
                                value: "dot"
                            }, {
                                name: B.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_HIDDEN_LABEL,
                                value: "hidden"
                            }],
                            onChange: function(e) {
                                (0, E.setRoleStyle)(e.value)
                            },
                            value: e
                        })]
                    }), (0, a.jsx)(u.FormDivider, {
                        className: V.marginTop20
                    })]
                })
            }

            function J() {
                let e = (0, d.useStateFromStores)([T.default], () => T.default.hideTags);
                return (0, a.jsx)(u.FormItem, {
                    title: B.default.Messages.ACCESSIBILITY_SETTINGS_TAGS_TITLE,
                    className: V.marginTop20,
                    children: (0, a.jsx)(u.FormSwitch, {
                        value: !e,
                        onChange: () => (0, E.setHideTags)(!e),
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_TAGS_LABEL
                    })
                })
            }

            function $() {
                let e = (0, d.useStateFromStores)([T.default], () => T.default.syncProfileThemeWithUserTheme),
                    t = n.useRef(null);
                return (0, b.default)(t, v.AccessibilityScrollPositions.SYNC_PROFILE_THEME_WITH_USER_THEME), (0, a.jsx)(u.FormItem, {
                    ref: t,
                    title: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_COLORS_TITLE,
                    className: l()(V.marginTop20, y.syncProfileThemeWithUserTheme),
                    children: (0, a.jsx)(u.FormSwitch, {
                        note: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_THEMES_NOTE.format({
                            onThemeClick() {
                                c.default.open(j.UserSettingsSections.APPEARANCE)
                            }
                        }),
                        className: V.marginTop20,
                        value: e,
                        onChange: E.toggleSyncProfileThemeWithUserTheme,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_THEMES_DESCRIPTION
                    })
                })
            }

            function ee() {
                let [e] = (0, d.useStateFromStoresArray)([T.default], () => [T.default.syncForcedColors, T.default.systemForcedColors]), [t, s] = n.useState(e);
                n.useEffect(() => {
                    s(e)
                }, [e]);
                let i = n.useRef(null);
                n.useEffect(() => {
                    null != i.current && (clearTimeout(i.current), i.current = null), t !== e && (i.current = setTimeout(() => (0, E.setSyncForcedColors)(t), 150))
                }, [t, e]);
                let l = B.default.Messages.ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_DESCRIPTION.format({
                    learnMoreLink: x.default.getArticleURL(j.HelpdeskArticles.FORCED_COLORS)
                });
                return (0, a.jsx)(u.FormItem, {
                    title: B.default.Messages.ACCESSIBILITY_SETTINGS_CONTRAST,
                    className: V.marginTop20,
                    children: (0, a.jsx)(u.FormSwitch, {
                        value: t,
                        note: l,
                        onChange: s,
                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_LABEL
                    })
                })
            }

            function et() {
                let e = L.GifAutoPlay.useSetting(),
                    t = L.AnimateEmoji.useSetting(),
                    {
                        useReducedMotion: s,
                        rawPrefersReducedMotion: i,
                        systemPrefersReducedMotion: r,
                        gifAutoPlayOverrideReason: o,
                        animateEmojiOverrideReason: c
                    } = (0, d.useStateFromStoresObject)([T.default, P.default], () => ({
                        systemPrefersReducedMotion: T.default.systemPrefersReducedMotion,
                        rawPrefersReducedMotion: T.default.rawPrefersReducedMotion,
                        useReducedMotion: T.default.useReducedMotion,
                        gifAutoPlayOverrideReason: P.default.getAppliedOverrideReasonKey("gifAutoPlay"),
                        animateEmojiOverrideReason: P.default.getAppliedOverrideReasonKey("animateEmoji")
                    })),
                    S = n.useRef(null);
                (0, b.default)(S, v.AccessibilityScrollPositions.REDUCED_MOTION);
                let _ = n.useCallback((e, t) => {
                        (0, E.setPrefersReducedMotion)(t ? "auto" : r)
                    }, [r]),
                    I = n.useCallback(e => {
                        (0, E.setPrefersReducedMotion)(e ? "reduce" : "no-preference")
                    }, []);
                return (0, a.jsxs)(u.FormItem, {
                    ref: S,
                    title: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION,
                    className: l()(V.marginTop20, y.reducedMotion),
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: V.marginBottom8,
                        children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_DESCRIPTION.format({
                            helpdeskArticle: x.default.getArticleURL(j.HelpdeskArticles.REDUCED_MOTION)
                        })
                    }), (0, a.jsx)(u.Checkbox, {
                        className: V.marginTop20,
                        value: "auto" === i,
                        shape: u.Checkbox.Shapes.BOX,
                        type: u.Checkbox.Types.INVERTED,
                        onChange: _,
                        children: (0, a.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_AUTO
                        })
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: V.marginTop20,
                        value: s,
                        onChange: I,
                        children: B.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_ENABLE
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: V.marginBottom40,
                        value: e,
                        note: null != o ? (0, m.default)(o) : void 0,
                        onChange: L.GifAutoPlay.updateSetting,
                        children: B.default.Messages.GIF_AUTO_PLAY_LABEL
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: l()(V.marginTop8, V.marginBottom20),
                        value: t,
                        note: null != c ? (0, m.default)(c) : void 0,
                        onChange: L.AnimateEmoji.updateSetting,
                        children: B.default.Messages.ANIMATE_EMOJI
                    })]
                })
            }

            function es() {
                let e = L.AnimateStickers.useSetting(),
                    t = (0, d.useStateFromStores)([P.default], () => P.default.getAppliedOverrideReasonKey("animateStickers")),
                    s = n.useCallback(e => {
                        L.AnimateStickers.updateSetting(e.value)
                    }, []);
                return (0, a.jsxs)(u.FormItem, {
                    className: V.marginBottom40,
                    title: B.default.Messages.STICKERS_AUTO_PLAY_HEADING,
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: V.marginBottom8,
                        children: null != t ? (0, m.default)(t) : B.default.Messages.STICKERS_AUTO_PLAY_HELP
                    }), (0, a.jsx)(u.RadioGroup, {
                        options: [{
                            name: B.default.Messages.STICKERS_ALWAYS_ANIMATE,
                            value: G.StickerAnimationSettings.ALWAYS_ANIMATE
                        }, {
                            name: B.default.Messages.STICKERS_ANIMATE_ON_INTERACTION,
                            desc: B.default.Messages.STICKERS_ANIMATE_ON_INTERACTION_DESCRIPTION,
                            value: G.StickerAnimationSettings.ANIMATE_ON_INTERACTION
                        }, {
                            name: B.default.Messages.STICKERS_NEVER_ANIMATE,
                            value: G.StickerAnimationSettings.NEVER_ANIMATE
                        }],
                        onChange: s,
                        value: e
                    })]
                })
            }

            function ea() {
                let e = (0, d.useStateFromStores)([T.default], () => T.default.isSubmitButtonEnabled),
                    t = L.UseLegacyChatInput.useSetting(),
                    s = n.useRef(null);
                return (0, b.default)(s, v.AccessibilityScrollPositions.LEGACY_CHAT_INPUT), (0, a.jsxs)(u.FormItem, {
                    ref: s,
                    children: [(0, a.jsx)(u.FormTitle, {
                        className: V.marginBottom8,
                        children: B.default.Messages.FORM_LABEL_ACCESSIBILITY_CHAT_INPUT
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: V.marginTop20,
                        value: e,
                        onChange: E.toggleSubmitButton,
                        children: B.default.Messages.DISPLAY_SUBMIT_BUTTON
                    }), (0, a.jsx)(u.FormSwitch, {
                        className: V.marginTop8,
                        value: t,
                        note: B.default.Messages.LEGACY_CHAT_INPUT_DESCRIPTION,
                        onChange: e => {
                            D.default.track(j.AnalyticEvents.LEGACY_CHAT_INPUT_TOGGLED, {
                                enabled: e,
                                location: {
                                    section: j.AnalyticsSections.SETTINGS_ACCESSIBILITY
                                }
                            }), L.UseLegacyChatInput.updateSetting(e)
                        },
                        children: B.default.Messages.LEGACY_CHAT_INPUT
                    })]
                })
            }

            function en() {
                let e = L.EnableTTSCommand.useSetting(),
                    t = (0, d.useStateFromStores)([O.default], () => O.default.speechRate),
                    [s, i] = n.useState(!1);
                return S.supported ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(u.FormItem, {
                        children: [(0, a.jsx)(u.FormTitle, {
                            className: V.marginBottom8,
                            children: B.default.Messages.FORM_LABEL_TTS
                        }), (0, a.jsx)(u.FormSwitch, {
                            className: V.marginTop20,
                            value: e,
                            onChange: L.EnableTTSCommand.updateSetting,
                            children: B.default.Messages.ALLOW_TTS_COMMAND
                        })]
                    }), (0, a.jsxs)(u.FormItem, {
                        className: V.marginBottom20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: w,
                            className: V.marginBottom20,
                            children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL
                        }), (0, a.jsx)("div", {
                            className: y.ttsPreviewWrapper,
                            children: (0, a.jsx)(u.Button, {
                                color: u.ButtonColors.BRAND,
                                onClick: () => {
                                    if (s) {
                                        (0, C.stopSpeaking)(), i(!1);
                                        return
                                    }(0, C.speakText)(B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_TEST, !0, void 0, () => i(!0), () => i(!1)), i(!0)
                                },
                                children: (0, a.jsxs)(h.default, {
                                    align: h.default.Align.CENTER,
                                    children: [s ? (0, a.jsx)(p.default, {
                                        width: 24,
                                        height: 24
                                    }) : (0, a.jsx)(M.default, {
                                        width: 24,
                                        height: 24
                                    }), (0, a.jsx)("span", {
                                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_PREVIEW
                                    }), (0, a.jsx)(u.HiddenVisually, {
                                        children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL
                                    })]
                                })
                            })
                        }), (0, a.jsx)(u.Slider, {
                            markers: F.SPEECH_RATE_INCREMENTS,
                            initialValue: t,
                            defaultValue: 1,
                            stickToMarkers: !0,
                            onValueChange: K,
                            onValueRender: e => "x".concat(e.toFixed(2)),
                            onMarkerRender: e => 0 === e ? (0, a.jsx)("span", {
                                className: y.ttsSliderMarker,
                                children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_SLOWER
                            }) : 10 === e ? (0, a.jsx)("span", {
                                className: y.ttsSliderMarker,
                                children: B.default.Messages.ACCESSIBILITY_SETTINGS_TTS_RATE_FASTER
                            }) : 1 === e ? (0, a.jsx)("span", {
                                children: "x1.0"
                            }) : e % 1 == 0 ? "" : void 0,
                            "aria-labelledby": w
                        })]
                    })]
                }) : null
            }
        },
        393681: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("512722"),
                o = s.n(r),
                d = s("442837"),
                u = s("780384"),
                c = s("481060"),
                S = s("816814"),
                E = s("809206"),
                T = s("497321"),
                _ = s("279837"),
                I = s("952306"),
                N = s("346585"),
                g = s("347649"),
                f = s("332473"),
                m = s("303172"),
                A = s("921801"),
                C = s("484459"),
                O = s("430824"),
                h = s("325067"),
                R = s("246946"),
                p = s("594174"),
                M = s("285952"),
                D = s("474333"),
                x = s("499150"),
                L = s("709054"),
                P = s("706454"),
                b = s("210887"),
                v = s("418632"),
                U = s("730820"),
                j = s("888256"),
                G = s("2719"),
                F = s("194530"),
                B = s("839469"),
                y = s("726985"),
                V = s("981631"),
                H = s("801461"),
                Y = s("689938"),
                k = s("493087"),
                w = s("611273");
            class W extends n.PureComponent {
                componentDidMount() {
                    let {
                        currentUser: e
                    } = this.props;
                    (0, C.default)(e.id, e.getAvatarURL(void 0, 80))
                }
                componentWillUnmount() {
                    S.default.clearBackupCodes(), (0, E.accountDetailsClose)()
                }
                renderAccountWarning() {
                    let {
                        currentUser: e
                    } = this.props;
                    if (!e.isClaimed()) {
                        let e = (0, a.jsxs)("section", {
                            children: [(0, a.jsx)("div", {
                                className: k.accountWarningBodyText,
                                children: Y.default.Messages.UNCLAIMED_ACCOUNT_BODY_2
                            }), (0, a.jsx)(c.Button, {
                                look: c.ButtonLooks.OUTLINED,
                                size: c.ButtonSizes.SMALL,
                                color: c.Button.Colors.WHITE,
                                onClick: () => I.default.openClaimAccountModal(),
                                children: Y.default.Messages.CLAIM_ACCOUNT_LONG
                            })]
                        });
                        return (0, a.jsx)(c.FormNotice, {
                            type: c.FormNotice.Types.DANGER,
                            className: w.marginBottom20,
                            imageData: {
                                src: s("418558"),
                                width: 60,
                                height: 60
                            },
                            title: Y.default.Messages.UNCLAIMED_ACCOUNT_TITLE,
                            body: e
                        })
                    }
                    if (null == e.email) return null;
                    if (!e.verified) {
                        let e = (0, a.jsxs)("section", {
                            children: [(0, a.jsx)("div", {
                                className: k.accountWarningBodyText,
                                children: Y.default.Messages.USER_SETTINGS_UNVERIFIED_EMAIL_BODY
                            }), (0, a.jsx)(v.default, {
                                size: c.ButtonSizes.SMALL,
                                color: c.Button.Colors.PRIMARY
                            })]
                        });
                        return (0, a.jsx)(c.FormNotice, {
                            type: c.FormNotice.Types.PRIMARY,
                            className: w.marginBottom20,
                            imageData: {
                                src: s("449125"),
                                width: 60,
                                height: 60
                            },
                            title: Y.default.Messages.UNVERIFIED_EMAIL_TITLE,
                            body: e
                        })
                    }
                }
                renderPomeloWarning() {
                    return this.props.shouldRenderPomeloWarning ? (0, a.jsxs)(D.default, {
                        className: k.accountWarningBodyText,
                        messageType: D.HelpMessageTypes.WARNING,
                        children: [this.props.forceMigrationExperiment ? Y.default.Messages.POMELO_ACTION_NEEDED_FORCE.format({
                            date: (0, N.getLocalizedForcedUUDate)(this.props.locale)
                        }) : Y.default.Messages.POMELO_ACTION_NEEDED.format(), " ", "", (0, a.jsx)(x.default, {
                            className: k.noticeTextButton,
                            onClick: () => (0, m.default)(H.PomeloEntrypoints.USER_SETTINGS),
                            children: Y.default.Messages.GET_STARTED
                        })]
                    }) : null
                }
                renderAccountSettings() {
                    return (0, a.jsxs)(c.FormSection, {
                        tag: c.FormTitleTags.H1,
                        title: Y.default.Messages.USER_SETTINGS_MY_ACCOUNT,
                        className: k.__invalid_userSettingsAccount,
                        children: [this.renderPomeloWarning(), this.renderAccountWarning(), (0, a.jsx)(G.default, {})]
                    })
                }
                renderSecuritySettings() {
                    let {
                        backupCodes: e,
                        currentUser: t,
                        theme: n
                    } = this.props, i = (0, u.isThemeDark)(n) ? s("555702") : s("610802");
                    return (0, a.jsxs)(c.FormSection, {
                        className: l()(k.userSettingsSecurity, w.marginTop40),
                        title: Y.default.Messages.USER_SETTINGS_ACCOUNT_PASSWORD_AND_AUTHENTICATION,
                        tag: "h1",
                        children: [t.mfaEnabled ? (0, a.jsx)(c.FormSection, {
                            children: (0, a.jsxs)(c.FormTitle, {
                                className: l()(k.isEnabled, w.marginBottom20),
                                children: [(0, a.jsx)("img", {
                                    alt: "",
                                    className: l()(k.lockIcon),
                                    src: s("511391")
                                }), Y.default.Messages.TWO_FA_ENABLED]
                            })
                        }) : null, (0, a.jsx)(A.Subsetting, {
                            setting: y.WebSetting.ACCOUNT_CHANGE_PASSWORD,
                            children: (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Button, {
                                    size: c.Button.Sizes.SMALL,
                                    className: k.changePasswordButton,
                                    onClick: () => (0, c.openModal)(e => (0, a.jsx)(F.default, {
                                        ...e,
                                        onSuccess: e.onClose
                                    })),
                                    children: Y.default.Messages.CHANGE_PASSWORD
                                })
                            })
                        }), (0, a.jsx)(A.Subsetting, {
                            setting: y.WebSetting.ACCOUNT_MULTI_FACTOR_AUTHENTICATION,
                            children: (0, a.jsxs)(M.default, {
                                align: M.default.Align.STRETCH,
                                children: [(0, a.jsx)(M.default.Child, {
                                    wrap: !0,
                                    children: (0, a.jsx)(U.default, {
                                        backupCodes: e
                                    })
                                }), t.mfaEnabled ? null : (0, a.jsx)(M.default, {
                                    align: M.default.Align.CENTER,
                                    basis: "323px",
                                    grow: 0,
                                    children: (0, a.jsx)("img", {
                                        src: i,
                                        className: k.userSettingsSecurityImage,
                                        alt: ""
                                    })
                                })]
                            })
                        })]
                    })
                }
                renderConfirmModals() {
                    let {
                        shouldRenderOwnedGuildsModal: e,
                        shouldRenderDeleteAccountConfirmModal: t,
                        shouldRenderDisableAccountErrorModal: s,
                        disableAccountErrorMessage: n
                    } = this.state;
                    if (e) {
                        let e = () => this.setState({
                            shouldRenderOwnedGuildsModal: !1
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: Y.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP,
                            confirmText: Y.default.Messages.OKAY,
                            confirmButtonColor: c.ButtonColors.BRAND,
                            onCancel: e,
                            onConfirm: e,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: Y.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP_BODY
                            })
                        })
                    }
                    if (t) {
                        let e = () => this.setState({
                            shouldRenderDeleteAccountConfirmModal: !1
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: Y.default.Messages.DELETE_ACCOUNT,
                            confirmText: Y.default.Messages.DELETE_ACCOUNT,
                            cancelText: Y.default.Messages.CANCEL,
                            onCancel: e,
                            onConfirm: () => (0, E.disableAccount)("", !0).then(e),
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: Y.default.Messages.DELETE_ACCOUNT_BODY
                            })
                        })
                    }
                    if (s) {
                        let e = () => this.setState({
                            shouldRenderDisableAccountErrorModal: !1,
                            disableAccountErrorMessage: null
                        });
                        return (0, a.jsx)(c.DeclarativeConfirmModal, {
                            dismissable: !0,
                            header: Y.default.Messages.DELETE_ACCOUNT_ERROR,
                            confirmText: Y.default.Messages.OKAY,
                            confirmButtonColor: c.ButtonColors.BRAND,
                            onCancel: e,
                            onConfirm: e,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-md/normal",
                                children: n
                            })
                        })
                    }
                    return null
                }
                renderAccountRemovalSettings() {
                    let {
                        currentUser: e
                    } = this.props;
                    return (0, a.jsx)(j.default, {
                        className: w.marginTop40,
                        currentUser: e,
                        handleDisableAccount: () => this.handleDisableAccount(!1),
                        handleDeleteAccount: () => this.handleDisableAccount(!0)
                    })
                }
                render() {
                    return this.props.hide ? (0, a.jsx)(T.default, {}) : (0, a.jsxs)("div", {
                        children: [this.renderConfirmModals(), (0, a.jsx)(A.Subsetting, {
                            setting: y.WebSetting.ACCOUNT_PROFILE,
                            children: this.renderAccountSettings()
                        }), (0, a.jsx)(A.Subsetting, {
                            setting: y.WebSetting.ACCOUNT_PASSWORD_AND_AUTHENTICATION,
                            children: this.renderSecuritySettings()
                        }), (0, a.jsx)(A.Subsetting, {
                            setting: y.WebSetting.ACCOUNT_REMOVAL,
                            children: this.renderAccountRemovalSettings()
                        })]
                    })
                }
                handleDisableAccountError(e) {
                    if (e.body.code === V.AbortCodes.INVALID_PASSWORD) throw e;
                    this.setState({
                        shouldRenderDisableAccountErrorModal: !0,
                        disableAccountErrorMessage: e.body.message
                    })
                }
                handleSubmitDisableAccount(e, t) {
                    return (0, E.disableAccount)(e, t).then(V.NOOP, this.handleDisableAccountError)
                }
                handleDisableAccount() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                        {
                            currentUser: t
                        } = this.props,
                        s = O.default.getGuilds();
                    if (L.default.keys(s).filter(e => s[e].ownerId === t.id).length > 0) {
                        this.setState({
                            shouldRenderOwnedGuildsModal: !0
                        });
                        return
                    }
                    t.isClaimed() ? (0, c.openModal)(t => (0, a.jsx)(_.default, {
                        ...t,
                        handleSubmit: t => this.handleSubmitDisableAccount(t, e),
                        title: e ? Y.default.Messages.DELETE_ACCOUNT : Y.default.Messages.DISABLE_ACCOUNT,
                        actionText: e ? Y.default.Messages.DELETE_ACCOUNT : Y.default.Messages.DISABLE_ACCOUNT,
                        children: e ? Y.default.Messages.DELETE_ACCOUNT_BODY : Y.default.Messages.DISABLE_ACCOUNT_BODY
                    })) : this.setState({
                        shouldRenderDeleteAccountConfirmModal: !0
                    })
                }
                constructor(e) {
                    super(e), this.state = {
                        disableAccountErrorMessage: null,
                        shouldRenderOwnedGuildsModal: !1,
                        shouldRenderDeleteAccountConfirmModal: !1,
                        shouldRenderDisableAccountErrorModal: !1
                    }
                }
            }
            t.default = () => {
                let e = (0, d.useStateFromStores)([p.default], () => {
                        let e = p.default.getCurrentUser();
                        return o()(null != e, "ConnectedUserAccountSettings: currentUser cannot be undefined"), e
                    }),
                    t = (0, d.useStateFromStores)([h.default], () => h.default.getBackupCodes()),
                    s = (0, d.useStateFromStores)([R.default], () => R.default.hidePersonalInformation),
                    {
                        hasSearchResults: n,
                        searchResults: i
                    } = (0, B.useSettingSearchResults)(),
                    l = (0, d.useStateFromStores)([b.default], () => b.default.theme),
                    r = (0, f.useIsEligibleForPomelo)(),
                    u = (0, g.useForceMigration)(),
                    c = (0, d.useStateFromStores)([P.default], () => P.default.locale);
                return (0, a.jsx)(W, {
                    theme: l,
                    currentUser: e,
                    backupCodes: t,
                    hide: s,
                    shouldRenderPomeloWarning: r,
                    forceMigrationExperiment: u,
                    locale: c,
                    searchFilter: n && !i.includes(y.WebSetting.ACCOUNT) ? i : void 0
                })
            }
        },
        309739: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("770471"),
                l = s("787740"),
                r = s("134598"),
                o = s("921801"),
                d = s("430824"),
                u = s("63063"),
                c = s("358085"),
                S = s("709054"),
                E = s("695346"),
                T = s("726985"),
                _ = s("981631"),
                I = s("689938"),
                N = s("471599"),
                g = s("611273");

            function f() {
                let e = E.ShowCurrentGame.useSetting(),
                    t = E.DefaultGuildsActivityRestricted.useSetting(),
                    s = c.isPlatformEmbedded ? I.default.Messages.SHOW_CURRENT_ACTIVITY_DESC_EMBEDDED : I.default.Messages.SHOW_CURRENT_ACTIVITY_DESC,
                    i = e => {
                        E.DefaultGuildsActivityRestricted.updateSetting(e), ! function(e) {
                            let t = () => {
                                E.ActivityRestrictedGuilds.updateSetting(e ? S.default.keys(d.default.getGuilds()) : [])
                            };
                            (0, n.openModal)(e => (0, a.jsx)(n.ConfirmModal, {
                                header: I.default.Messages.USER_DM_SETTINGS_TITLE,
                                confirmText: I.default.Messages.NO_TEXT,
                                cancelText: I.default.Messages.YES_TEXT,
                                onCancel: t,
                                confirmButtonColor: n.Button.Colors.BRAND,
                                ...e,
                                children: (0, a.jsx)(n.Text, {
                                    variant: "text-md/normal",
                                    children: I.default.Messages.ACTIVITY_RESTRICTION_MODAL_DESC
                                })
                            }))
                        }(e)
                    };
                return (0, a.jsx)(o.Subsetting, {
                    setting: T.WebSetting.ACTIVITY_PRIVACY_STATUS,
                    children: (0, a.jsxs)(n.FormSection, {
                        className: g.marginBottom40,
                        children: [(0, a.jsx)(n.FormTitle, {
                            tag: n.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: I.default.Messages.ACTIVITY_STATUS
                        }), (0, a.jsx)(n.FormSwitch, {
                            value: e,
                            onChange: e => E.ShowCurrentGame.updateSetting(e),
                            note: s,
                            children: I.default.Messages.SHOW_CURRENT_ACTIVITY
                        }), (0, a.jsx)(n.FormSwitch, {
                            value: !t,
                            note: I.default.Messages.ACTIVITY_RESTRICTION_DEFAULT_NOTE.format({
                                helpdeskArticle: u.default.getArticleURL(_.HelpdeskArticles.ACTIVITY_STATUS_SETTINGS)
                            }),
                            onChange: e => i(!e),
                            children: I.default.Messages.ACTIVITY_RESTRICTION_DEFAULT
                        })]
                    })
                })
            }

            function m() {
                let e = E.AllowActivityPartyPrivacyFriends.useSetting(),
                    t = E.AllowActivityPartyPrivacyVoiceChannel.useSetting();
                return (0, a.jsx)(o.Subsetting, {
                    setting: T.WebSetting.ACTIVITY_PRIVACY_RICH_PRESENCE,
                    children: (0, a.jsxs)(n.FormSection, {
                        className: g.marginBottom40,
                        children: [(0, a.jsx)(n.FormTitle, {
                            tag: n.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: I.default.Messages.ACTIVITY_PARTY_PRIVACY
                        }), (0, a.jsx)(n.FormSwitch, {
                            value: e,
                            note: I.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS_HELP,
                            onChange: e => E.AllowActivityPartyPrivacyFriends.updateSetting(e),
                            children: I.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS
                        }), (0, a.jsx)(n.FormSwitch, {
                            value: t,
                            note: I.default.Messages.ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL_HELP,
                            onChange: e => E.AllowActivityPartyPrivacyVoiceChannel.updateSetting(e),
                            children: I.default.Messages.ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL
                        })]
                    })
                })
            }

            function A() {
                return (0, a.jsxs)(n.FormSection, {
                    className: g.marginBottom40,
                    children: [(0, a.jsxs)(n.FormTitle, {
                        tag: n.FormTitleTags.H5,
                        className: g.marginBottom8,
                        children: [I.default.Messages.BROADCASTING_SETTINGS, (0, a.jsx)(l.default, {
                            className: N.betaTag
                        })]
                    }), (0, a.jsx)(n.FormText, {
                        type: n.FormText.Types.DESCRIPTION,
                        className: g.marginBottom20,
                        children: I.default.Messages.BROADCASTING_SETTINGS_DESCRIPTION
                    }), (0, a.jsx)(n.FormItem, {
                        children: (0, a.jsx)(n.Button, {
                            onClick: () => (0, r.openBroadcastingPrivacySettingsModal)(),
                            size: n.ButtonSizes.SMALL,
                            children: I.default.Messages.BROADCASTING_SETTINGS_CTA
                        })
                    })]
                })
            }

            function C() {
                return (0, a.jsx)(n.FormSection, {
                    className: g.marginBottom40,
                    children: (0, a.jsx)(n.FormNotice, {
                        type: n.FormNotice.Types.PRIMARY,
                        body: I.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
                            termsLink: _.MarketingURLs.TERMS,
                            privacyLink: _.MarketingURLs.PRIVACY
                        })
                    })
                })
            }

            function O(e) {
                let {
                    className: t,
                    showHeader: s = !0
                } = e, {
                    canBroadcast: l
                } = i.default.useExperiment({
                    location: "user_settings_activity_privacy"
                }, {
                    autoTrackExposure: !0
                });
                return (0, a.jsxs)(n.FormSection, {
                    className: t,
                    tag: n.FormTitleTags.H1,
                    title: s ? I.default.Messages.ACTIVITY_PRIVACY : null,
                    children: [(0, a.jsx)(f, {}), (0, a.jsx)(m, {}), l && (0, a.jsx)(A, {}), (0, a.jsx)(C, {})]
                })
            }
        },
        64914: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return C
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("692547"),
                r = s("481060"),
                o = s("401430"),
                d = s("921801"),
                u = s("283595"),
                c = s("695103"),
                S = s("572004"),
                E = s("63063"),
                T = s("358085"),
                _ = s("998502"),
                I = s("695346"),
                N = s("399970"),
                g = s("726985"),
                f = s("981631"),
                m = s("689938"),
                A = s("485767");

            function C() {
                let [e] = n.useState(() => _.default.getEnableHardwareAcceleration()), t = I.DisableGamesTab.useSetting(), s = I.DeveloperMode.useSetting(), C = I.DisableHomeAutoNav.useSetting(), {
                    hasLibraryApplication: O,
                    testModeApplicationId: h
                } = (0, i.useStateFromStoresObject)([c.default, u.default], () => ({
                    hasLibraryApplication: u.default.hasLibraryApplication(),
                    testModeApplicationId: c.default.testModeApplicationId
                })), R = n.useCallback(e => {
                    I.DisableGamesTab.updateSetting(!e)
                }, []), p = n.useCallback(e => {
                    e ? (0, r.openModal)(e => (0, a.jsx)(N.default, {
                        ...e
                    })) : o.reset()
                }, []), M = n.useCallback(e => {
                    (0, r.openModal)(t => (0, a.jsx)(r.ConfirmModal, {
                        header: m.default.Messages.SWITCH_HARDWARE_ACCELERATION,
                        confirmText: m.default.Messages.OKAY,
                        cancelText: m.default.Messages.CANCEL,
                        onConfirm: () => _.default.setEnableHardwareAcceleration(e),
                        ...t,
                        children: (0, a.jsx)(r.Text, {
                            variant: "text-sm/normal",
                            children: m.default.Messages.SWITCH_HARDWARE_ACCELERATION_BODY
                        })
                    }))
                }, []), D = n.useCallback(e => {
                    I.DisableHomeAutoNav.updateSetting(!e)
                }, []);
                return (0, a.jsxs)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: m.default.Messages.SETTINGS_ADVANCED,
                    children: [S.SUPPORTS_COPY && (0, a.jsx)(d.Subsetting, {
                        setting: g.WebSetting.SETTINGS_ADVANCED_DEVELOPER_MODE,
                        children: (0, a.jsx)(r.FormSwitch, {
                            value: s,
                            onChange: I.DeveloperMode.updateSetting,
                            note: m.default.Messages.DEVELOPER_MODE_HELP_TEXT.format({
                                apiDocsUrl: f.MarketingURLs.API_DOCS
                            }),
                            children: m.default.Messages.DEVELOPER_MODE
                        })
                    }), T.isPlatformEmbedded && (0, a.jsx)(d.Subsetting, {
                        setting: g.WebSetting.SETTINGS_ADVANCED_HARDWARE_ACCELERATION,
                        children: (0, a.jsx)(r.FormSwitch, {
                            value: e,
                            onChange: M,
                            note: m.default.Messages.HARDWARE_ACCELERATION_HELP_TEXT,
                            children: m.default.Messages.HARDWARE_ACCELERATION
                        })
                    }), O && (0, a.jsx)(d.Subsetting, {
                        setting: g.WebSetting.SETTINGS_ADVANCED_SHOW_GAME_LIBRARY,
                        children: (0, a.jsx)(r.FormSwitch, {
                            value: !t,
                            onChange: R,
                            note: m.default.Messages.USER_SETTINGS_SHOW_LIBRARY_NOTE,
                            children: m.default.Messages.USER_SETTINGS_SHOW_LIBRARY
                        })
                    }), s && (0, a.jsx)(d.Subsetting, {
                        setting: g.WebSetting.SETTINGS_ADVANCED_APPLICATION_TEST_MODE,
                        children: (0, a.jsx)(r.FormSwitch, {
                            value: null != h,
                            note: m.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_NOTE,
                            onChange: p,
                            children: m.default.Messages.DEVELOPER_APPLICATION_TEST_MODE
                        })
                    }), (0, a.jsx)(d.Subsetting, {
                        setting: g.WebSetting.SETTINGS_ADVANCED_AUTO_NAVIGATE_TO_HOME,
                        children: (0, a.jsx)(r.FormSwitch, {
                            value: !C,
                            note: m.default.Messages.USER_SETTINGS_HOME_AUTO_NAV_HELP_TEXT.format({
                                helpCenterLink: E.default.getArticleURL(f.HelpdeskArticles.GUILD_HOME)
                            }),
                            onChange: D,
                            children: (0, a.jsxs)("div", {
                                className: A.badgedItem,
                                children: [m.default.Messages.USER_SETTINGS_HOME_AUTO_NAV, (0, a.jsx)(r.TextBadge, {
                                    text: m.default.Messages.BETA,
                                    color: l.default.unsafe_rawColors.BRAND_500.css,
                                    className: A.__invalid_betaTag
                                })]
                            })
                        })
                    })]
                })
            }
        },
        501348: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Z
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("704215"),
                d = s("780384"),
                u = s("481060"),
                c = s("153867"),
                S = s("230711"),
                E = s("714338"),
                T = s("857595"),
                _ = s("607070"),
                I = s("627845"),
                N = s("514361"),
                g = s("605236"),
                f = s("786761"),
                m = s("3148"),
                A = s("739566"),
                C = s("753206"),
                O = s("837741"),
                h = s("804545"),
                R = s("921801"),
                p = s("594174"),
                M = s("285952"),
                D = s("153124"),
                x = s("358085"),
                L = s("210887"),
                P = s("740492"),
                b = s("695346"),
                v = s("329013"),
                U = s("333859"),
                j = s("726985"),
                G = s("981631"),
                F = s("921944"),
                B = s("959517"),
                y = s("689938"),
                V = s("471264"),
                H = s("611273");

            function Y(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let k = {
                    COZY: "cozy",
                    COMPACT: "compact"
                },
                w = (0, D.uid)(),
                W = (0, D.uid)(),
                K = (0, D.uid)(),
                Q = "1337",
                z = e => {
                    let t = 0;
                    return [(0, f.createMessageRecord)({
                        ...(0, m.default)({
                            channelId: Q,
                            content: y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_1
                        }),
                        state: G.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, f.createMessageRecord)({
                        ...(0, m.default)({
                            channelId: Q,
                            content: (0, d.isThemeDark)(e) ? y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_DARK : y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_LIGHT
                        }),
                        state: G.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, f.createMessageRecord)({
                        ...(0, m.default)({
                            channelId: Q,
                            content: y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_3
                        }),
                        state: G.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, f.createMessageRecord)({
                        ...(0, m.default)({
                            channelId: Q,
                            content: y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_4
                        }),
                        state: G.MessageStates.SENT,
                        id: "".concat(t++)
                    }), (0, f.createMessageRecord)({
                        ...(0, m.default)({
                            channelId: Q,
                            content: y.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_5
                        }),
                        state: G.MessageStates.SENT,
                        id: "".concat(t)
                    })]
                };
            class X extends n.Component {
                renderZoomSlider() {
                    return x.isPlatformEmbedded ? (0, a.jsxs)(u.FormItem, {
                        className: H.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: w,
                            tag: u.FormTitleTags.H5,
                            className: H.marginBottom8,
                            children: y.default.Messages.ACCESSIBILITY_ZOOM_LEVEL_LABEL
                        }), (0, a.jsx)(u.Slider, {
                            className: l()(H.marginTop20, H.marginBottom4),
                            initialValue: this.props.zoom,
                            defaultValue: G.Accessibility.ZOOM_DEFAULT,
                            markers: G.Accessibility.ZOOM_SCALES,
                            stickToMarkers: !0,
                            onValueChange: this.handleZoomChange,
                            onValueRender: this.handleSliderRender,
                            "aria-labelledby": w
                        }), (0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DESCRIPTION,
                            children: y.default.Messages.USER_SETTINGS_APPEARANCE_ZOOM_TIP.format({
                                modKey: E.default.modKey
                            })
                        })]
                    }) : null
                }
                renderFontScaleSlider() {
                    return (0, a.jsxs)(u.FormItem, {
                        className: H.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: W,
                            tag: u.FormTitleTags.H5,
                            className: H.marginBottom8,
                            children: y.default.Messages.ACCESSIBILITY_FONT_SCALING_LABEL
                        }), (0, a.jsx)(M.default, {
                            align: M.default.Align.CENTER,
                            children: (0, a.jsx)(u.Slider, {
                                className: l()(H.marginTop20, H.marginBottom4),
                                initialValue: this.props.fontSize,
                                defaultValue: G.Accessibility.FONT_SIZE_DEFAULT,
                                markers: G.Accessibility.FONT_SIZES,
                                stickToMarkers: !0,
                                onValueChange: this.handleFontSizeChange,
                                onValueRender: this.handleSliderRenderPX,
                                onMarkerRender: this.handleSliderRenderPX,
                                getAriaValueText: this.handleSliderValueText,
                                "aria-labelledby": W
                            })
                        })]
                    })
                }
                renderMessageGroupSpacingSlider() {
                    let {
                        messageDisplayCompact: e,
                        messageGroupSpacing: t
                    } = this.props;
                    return (0, a.jsxs)(u.FormItem, {
                        className: H.marginTop20,
                        children: [(0, a.jsx)(u.FormTitle, {
                            id: K,
                            tag: u.FormTitleTags.H5,
                            className: H.marginBottom8,
                            children: y.default.Messages.ACCESSIBILITY_MESSAGE_GROUP_SPACING
                        }), (0, a.jsx)(u.Slider, {
                            className: l()(H.marginTop20, H.marginBottom4),
                            initialValue: t,
                            defaultValue: e ? B.DEFAULT_COMPACT_SPACING : B.DEFAULT_COZY_SPACING,
                            markers: B.MESSAGE_GROUP_SPACING,
                            stickToMarkers: !0,
                            onValueChange: this.handleMessageSpacingChange,
                            onValueRender: this.handleSliderRenderPX,
                            onMarkerRender: this.handleSliderRenderPX,
                            getAriaValueText: this.handleSliderValueText,
                            "aria-labelledby": K
                        })]
                    })
                }
                renderPreview() {
                    let {
                        messageDisplayCompact: e,
                        theme: t,
                        messageGroupSpacing: s,
                        hideSimpleEmbedContent: n
                    } = this.props, i = (0, d.isThemeDark)(t) ? this.darkMessages : this.lightMessages;
                    return (0, a.jsx)(u.FocusBlock, {
                        children: (0, a.jsx)(u.Card, {
                            className: l()(V.preview, H.marginBottom40, e ? V.compactPreview : void 0, "group-spacing-".concat(null != s ? s : e ? B.DEFAULT_COMPACT_SPACING : B.DEFAULT_COZY_SPACING)),
                            outline: !0,
                            "aria-hidden": !0,
                            children: i.map((t, s) => (0, a.jsx)(C.default, {
                                author: (0, A.getMessageAuthor)(t),
                                message: t,
                                compact: e,
                                isGroupStart: s % 2 == 0,
                                className: 0 === s ? V.firstMessage : void 0,
                                hideSimpleEmbedContent: n
                            }, t.id))
                        })
                    })
                }
                renderTheme() {
                    let {
                        theme: e,
                        useForcedColors: t,
                        darkSidebar: s,
                        gradientPreset: n
                    } = this.props;
                    return t ? (0, a.jsx)(u.FormItem, {
                        className: l()(H.marginTop8, H.marginBottom40),
                        title: (0, a.jsx)("div", {
                            className: V.themeTitle,
                            children: (0, a.jsx)("div", {
                                className: V.title,
                                children: y.default.Messages.THEME
                            })
                        }),
                        children: (0, a.jsx)(u.FormText, {
                            type: u.FormText.Types.DEFAULT,
                            className: V.forcedColorsWarning,
                            children: (0, I.canEnableForcedColors)() ? y.default.Messages.THEME_DISABLED_FOR_CONTRAST_SYNC.format({
                                onClick: () => {
                                    S.default.open(G.UserSettingsSections.ACCESSIBILITY)
                                }
                            }) : y.default.Messages.THEME_DISABLED_FOR_FORCED_COLORS
                        })
                    }) : (0, a.jsxs)(u.FormItem, {
                        className: H.marginTop8,
                        title: (0, a.jsxs)("div", {
                            className: V.themeTitle,
                            children: [(0, a.jsx)("div", {
                                className: V.title,
                                children: y.default.Messages.THEME
                            }), (0, a.jsx)(v.ClientThemesSidebarButton, {})]
                        }),
                        children: [(0, a.jsx)(v.UserSettingsAppearanceClientThemes, {}), (0, a.jsx)(R.Subsetting, {
                            setting: j.WebSetting.APPEARANCE_ICON,
                            children: (0, a.jsx)(U.UserSettingsAppearanceInAppIcon, {})
                        }), (0, a.jsx)(u.FormSwitch, {
                            value: s && (0, d.isThemeLight)(e) && !t,
                            disabled: e !== G.ThemeTypes.LIGHT || t || null != n,
                            onChange: this.handleDarkSidebarChecked,
                            className: H.marginTop20,
                            children: y.default.Messages.ACCESSIBILITY_DARK_SIDEBAR
                        })]
                    })
                }
                renderDisplayMode() {
                    return (0, a.jsxs)(u.FormItem, {
                        title: y.default.Messages.MESSAGE_DISPLAY_MODE_LABEL,
                        className: H.marginTop8,
                        children: [(0, a.jsx)(u.RadioGroup, {
                            options: [{
                                name: y.default.Messages.COZY_MODE,
                                value: k.COZY
                            }, {
                                name: y.default.Messages.COMPACT_MODE,
                                value: k.COMPACT
                            }],
                            onChange: this.handleMessageDisplayModeChange,
                            value: this.props.messageDisplayCompact ? k.COMPACT : k.COZY
                        }), (0, a.jsx)(u.FormSwitch, {
                            value: this.props.messageDisplayCompact && this.props.displayCompactAvatars,
                            disabled: !this.props.messageDisplayCompact,
                            onChange: this.handleDisplayCompactAvatarsChanged,
                            className: H.marginTop20,
                            children: y.default.Messages.DISPLAY_COMPACT_AVATARS
                        })]
                    })
                }
                handleDarkSidebarChecked() {
                    (0, T.toggleDarkSidebar)()
                }
                renderScalingAndSpacing() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [this.renderFontScaleSlider(), this.renderMessageGroupSpacingSlider(), this.renderZoomSlider(), (0, a.jsx)(u.FormDivider, {
                            className: H.marginTop20
                        })]
                    })
                }
                render() {
                    return (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H1,
                        title: y.default.Messages.APPEARANCE,
                        children: [(0, a.jsxs)(R.Subsetting, {
                            setting: j.WebSetting.APPEARANCE_THEME,
                            children: [this.renderPreview(), this.renderTheme()]
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: j.WebSetting.APPEARANCE_MESSAGE_DISPLAY_COMPACT,
                            children: this.renderDisplayMode()
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: j.WebSetting.APPEARANCE_SCALING_SPACING,
                            children: this.renderScalingAndSpacing()
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-md/normal",
                            className: H.marginTop20,
                            children: y.default.Messages.APPEARANCE_SETTINGS_ACCESSIBILITY_LINK.format({
                                onAccessibilityClick() {
                                    S.default.open(G.UserSettingsSections.ACCESSIBILITY)
                                }
                            })
                        })]
                    })
                }
                handleSliderRender(e) {
                    return "".concat(e.toFixed(0), "%")
                }
                handleSliderRenderPX(e) {
                    return "".concat(e.toFixed(0), "px")
                }
                handleSliderValueText(e) {
                    return y.default.Messages.PIXEL_VALUE_A11Y_TEXT.format({
                        value: e
                    })
                }
                handleFontSizeChange(e) {
                    (0, T.setFontSize)(e)
                }
                handleMessageSpacingChange(e) {
                    switch (e) {
                        case 0:
                        case 4:
                        case 8:
                        case 16:
                        case 24:
                            (0, T.setMessageGroupSpacing)(e)
                    }
                }
                handleZoomChange(e) {
                    (0, T.setZoom)(e)
                }
                constructor(...e) {
                    super(...e), Y(this, "darkMessages", z(G.ThemeTypes.DARK)), Y(this, "lightMessages", z(G.ThemeTypes.LIGHT)), Y(this, "handleDisplayCompactAvatarsChanged", e => {
                        c.default.updatedUnsyncedSettings({
                            displayCompactAvatars: e
                        })
                    }), Y(this, "handleMessageDisplayModeChange", e => {
                        let {
                            value: t
                        } = e;
                        b.MessageDisplayCompact.updateSetting(t === k.COMPACT), (0, T.setMessageGroupSpacing)()
                    })
                }
            }
            let q = e => {
                !(0, g.isDismissibleContentDismissed)(e) && (0, g.markDismissibleContentAsDismissed)(e, {
                    dismissAction: F.ContentDismissActionType.AUTO,
                    forceTrack: !0
                })
            };

            function Z() {
                let e = b.MessageDisplayCompact.useSetting(),
                    t = b.InlineEmbedMedia.useSetting(),
                    s = b.RenderEmbeds.useSetting(),
                    i = b.ClientThemeSettings.useSetting(),
                    l = "UserSettingsAppearance",
                    {
                        enabled: d
                    } = (0, O.useBrandRefreshPerksExperiment)({
                        location: l
                    }),
                    {
                        enabled: u
                    } = (0, h.usePrideMonthPerksExperiment)({
                        location: l
                    });
                n.useEffect(() => {
                    q(o.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE), q(o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE), q(o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_COACHMARK), d && q(o.DismissibleContent.BRAND_REFRESH_NEW_BADGE), u && q(o.DismissibleContent.PRIDE_ICONS_APPEARANCE_BADGE)
                }, []);
                let c = (0, r.useStateFromStoresObject)([L.default, P.default, _.default, p.default, N.default], () => {
                    var e, t;
                    return {
                        theme: L.default.theme,
                        useForcedColors: _.default.useForcedColors,
                        useSystemTheme: P.default.useSystemTheme,
                        darkSidebar: L.default.darkSidebar,
                        fontSize: _.default.fontSize,
                        zoom: _.default.zoom,
                        messageGroupSpacing: _.default.messageGroupSpacing,
                        displayCompactAvatars: P.default.displayCompactAvatars,
                        isStaff: null !== (t = null === (e = p.default.getCurrentUser()) || void 0 === e ? void 0 : e.isStaff) && void 0 !== t && t,
                        gradientPreset: N.default.gradientPreset
                    }
                });
                return (0, a.jsx)(X, {
                    messageDisplayCompact: e,
                    hideSimpleEmbedContent: t && s,
                    clientTheme: i,
                    ...c
                })
            }
        },
        329013: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                ClientThemesSidebarButton: function() {
                    return x
                },
                UserSettingsAppearanceClientThemes: function() {
                    return D
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("704215"),
                r = s("481060"),
                o = s("37234"),
                d = s("100527"),
                u = s("906732"),
                c = s("238302"),
                S = s("514361"),
                E = s("705262"),
                T = s("605236"),
                _ = s("104494"),
                I = s("639119"),
                N = s("165583"),
                g = s("197115"),
                f = s("504983"),
                m = s("626135"),
                A = s("981631"),
                C = s("921944"),
                O = s("474936"),
                h = s("689938"),
                R = s("922844"),
                p = s("611273");
            let M = () => {
                    (0, T.markDismissibleContentAsDismissed)(l.DismissibleContent.CLIENT_THEMES_SPARKLE_PREVIEW, {
                        dismissAction: C.ContentDismissActionType.PRIMARY,
                        forceTrack: !0
                    }), (0, c.openEditor)(), (0, o.popLayer)()
                },
                D = () => {
                    var e, t;
                    let {
                        analyticsLocations: s
                    } = (0, u.default)(d.default.USER_SETTINGS), l = (0, i.useStateFromStores)([S.default], () => S.default.isPreview), o = (null === (t = (0, I.usePremiumTrialOffer)()) || void 0 === t ? void 0 : null === (e = t.subscription_trial) || void 0 === e ? void 0 : e.sku_id) === O.PremiumSubscriptionSKUs.TIER_2, c = (0, _.usePremiumDiscountOffer)(), T = (0, _.discountOfferHasTier)(c, O.PremiumSubscriptionSKUs.TIER_2);
                    return n.useEffect(() => {
                        l && m.default.track(A.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: O.PremiumUpsellTypes.PREMIUM_CLIENT_THEME_TRY_IT_OUT,
                            location_stack: s
                        })
                    }, [l, s]), (0, a.jsxs)("div", {
                        children: [(0, a.jsxs)(E.default, {
                            type: E.ThemeSelectionGroupType.SETTINGS,
                            children: [(0, a.jsx)(E.default.Basic, {
                                className: R.basicThemeSelectors
                            }), (0, a.jsxs)(f.default, {
                                className: R.featureBorder,
                                isShown: l,
                                type: f.FeatureBorderTypes.PREMIUM,
                                children: [(0, a.jsx)(E.default.Gradient, {
                                    disabled: l,
                                    renderCTAButtons: () => !l || o ? null : (0, a.jsxs)("div", {
                                        className: R.tryItOutButtons,
                                        children: [(0, a.jsx)(r.Button, {
                                            color: r.Button.Colors.PRIMARY,
                                            onClick: () => M(),
                                            children: h.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE
                                        }), (0, a.jsx)(g.default, {
                                            subscriptionTier: O.PremiumSubscriptionSKUs.TIER_2,
                                            buttonText: T ? h.default.Messages.PREMIUM_DISCOUNT_CTA.format({
                                                percent: null == c ? void 0 : c.discount.amount
                                            }) : h.default.Messages.USER_SETTINGS_CUSTOMIZATION_UPSELL,
                                            className: R.premiumCta
                                        })]
                                    })
                                }), o && l && (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(r.Button, {
                                        className: R.previewThemeButtonWide,
                                        color: r.Button.Colors.PRIMARY,
                                        onClick: () => M(),
                                        children: h.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE
                                    }), (0, a.jsx)("div", {
                                        className: R.premiumTier2Divider
                                    }), (0, a.jsx)(N.default, {
                                        type: O.PremiumUpsellTypes.PREMIUM_CLIENT_THEME_SETTINGS_UPSELL,
                                        subscriptionTier: O.PremiumSubscriptionSKUs.TIER_2
                                    })]
                                })]
                            })]
                        }), (0, a.jsx)(r.FormDivider, {
                            className: p.marginTop20
                        })]
                    })
                },
                x = () => (0, i.useStateFromStores)([S.default], () => S.default.isPreview) ? null : (0, a.jsx)(r.Button, {
                    size: r.ButtonSizes.SMALL,
                    onClick: () => M(),
                    children: h.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_THEMES_TITLE
                })
        },
        333859: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                UserSettingsAppearanceInAppIcon: function() {
                    return A
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("570140"),
                o = s("37234"),
                d = s("100527"),
                u = s("906732"),
                c = s("327943"),
                S = s("539873"),
                E = s("197115"),
                T = s("626135"),
                _ = s("981631"),
                I = s("474936"),
                N = s("689938"),
                g = s("772866"),
                f = s("611273");
            let m = () => {
                    r.default.dispatch({
                        type: "APP_ICON_EDITOR_OPEN"
                    }), (0, o.popLayer)()
                },
                A = () => {
                    let {
                        analyticsLocations: e
                    } = (0, u.default)(d.default.USER_SETTINGS), t = (0, i.useStateFromStores)([c.default], () => c.default.isUpsellPreview);
                    return n.useEffect(() => {
                        t && T.default.track(_.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: I.PremiumUpsellTypes.APP_ICON_UPSELL,
                            location_stack: e
                        })
                    }, []), (0, a.jsxs)("div", {
                        className: g.selectionGroup,
                        children: [(0, a.jsx)(S.default, {
                            disabled: t,
                            renderCTAButtons: () => (0, a.jsxs)("div", {
                                className: g.tryItOutButtons,
                                children: [(0, a.jsx)(l.Button, {
                                    color: t ? l.Button.Colors.PRIMARY : l.Button.Colors.BRAND,
                                    onClick: () => m(),
                                    children: N.default.Messages.APP_ICON_PREVIEW_TITLE
                                }), t ? (0, a.jsx)(E.default, {
                                    subscriptionTier: I.PremiumSubscriptionSKUs.TIER_2,
                                    buttonText: N.default.Messages.USER_SETTINGS_CUSTOMIZATION_UPSELL
                                }) : null]
                            })
                        }), (0, a.jsx)(l.FormDivider, {
                            className: f.marginTop20
                        })]
                    })
                }
        },
        795594: function(e, t, s) {
            "use strict";
            s.r(t), s("653041"), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("658722"),
                o = s.n(r),
                d = s("243814"),
                u = s("442837"),
                c = s("921072"),
                S = s("1561"),
                E = s("882485"),
                T = s("389507"),
                _ = s("689773"),
                I = s("481060"),
                N = s("384275"),
                g = s("230711"),
                f = s("497321"),
                m = s("468026"),
                A = s("566620"),
                C = s("317381"),
                O = s("979200"),
                h = s("713938"),
                R = s("881998"),
                p = s("246946"),
                M = s("285952"),
                D = s("950463"),
                x = s("507893"),
                L = s("768581"),
                P = s("49012"),
                b = s("210887"),
                v = s("436267"),
                U = s("494620"),
                j = s("981631"),
                G = s("689938"),
                F = s("338009"),
                B = s("611273");
            let y = u.default.connectStores([b.default], () => ({
                theme: b.default.theme
            }))(I.EmptyState);

            function V(e) {
                let {
                    application: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: F.twoWayWarning,
                    children: [(0, a.jsx)(x.default, {
                        className: F.twoWayWarningIcon
                    }), (0, a.jsx)(I.Text, {
                        color: "text-normal",
                        variant: "text-sm/medium",
                        children: G.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT.format({
                            applicationName: t.name,
                            onConnectionPress: () => g.default.setSection(j.AnalyticsSections.SETTINGS_CONNECTIONS)
                        })
                    })]
                })
            }
            let H = e => {
                    let {
                        disclosure: t
                    } = e;
                    return n.useMemo(() => {
                        switch (t) {
                            case c.ApplicationDisclosureType.IP_LOCATION:
                                return (0, a.jsx)(D.default, {
                                    className: F.disclosureIcon
                                });
                            case c.ApplicationDisclosureType.DISPLAYS_ADVERTISEMENTS:
                                return (0, a.jsx)(T.EmbedIcon, {
                                    className: F.disclosureIcon
                                });
                            default:
                                return (0, a.jsx)(E.CircleInformationIcon, {
                                    className: F.disclosureIcon
                                })
                        }
                    }, [t])
                },
                Y = e => {
                    let {
                        scopes: t,
                        application: s,
                        onDelete: n,
                        disclosures: i
                    } = e, r = () => {
                        let e = G.default.Messages.DELETE_APP_CONFIRM_MSG;
                        return (0, v.default)(s.id) && (e = (0, a.jsxs)(a.Fragment, {
                            children: [e, (0, a.jsx)(U.default, {
                                className: F.infoBox,
                                children: G.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT_DISCONNECT_WARNING.format({
                                    applicationName: s.name
                                })
                            })]
                        })), (0, I.openModal)(t => (0, a.jsx)(m.default, {
                            title: G.default.Messages.DEAUTHORIZE_APP,
                            body: e,
                            confirmText: G.default.Messages.DEAUTHORIZE,
                            cancelText: G.default.Messages.CANCEL,
                            onConfirm: n,
                            ...t
                        }))
                    }, o = () => {
                        null != s.terms_of_service_url && (0, P.handleClick)({
                            href: s.terms_of_service_url,
                            shouldConfirm: !0
                        })
                    }, u = () => {
                        null != s.privacy_policy_url && (0, P.handleClick)({
                            href: s.privacy_policy_url,
                            shouldConfirm: !0
                        })
                    }, c = (0, v.useShouldWarnAuthorizedAppTwoWay)(s.id);
                    return (0, a.jsx)(I.Card, {
                        className: l()(F.authedApp, B.marginBottom8),
                        outline: !0,
                        children: (0, a.jsxs)(I.HeadingLevel, {
                            component: (() => {
                                let e = L.default.getApplicationIconURL({
                                        id: s.id,
                                        icon: s.icon
                                    }),
                                    t = null != e ? (0, a.jsx)(M.default.Child, {
                                        className: F.appAvatar,
                                        grow: 0,
                                        children: (0, a.jsx)("img", {
                                            src: e,
                                            alt: ""
                                        })
                                    }) : null;
                                return (0, a.jsxs)(M.default, {
                                    className: l()(F.__invalid_header, B.marginBottom20),
                                    children: [(0, a.jsxs)(M.default, {
                                        className: F.headerInfo,
                                        children: [t, (0, a.jsx)(M.default.Child, {
                                            children: (0, a.jsx)(I.Heading, {
                                                variant: "text-sm/semibold",
                                                children: s.name
                                            })
                                        })]
                                    }), (0, a.jsx)(M.default.Child, {
                                        wrap: !0,
                                        grow: 0,
                                        children: (0, a.jsx)(I.Button, {
                                            className: F.deleteApp,
                                            color: I.ButtonColors.RED,
                                            look: I.ButtonLooks.OUTLINED,
                                            size: I.ButtonSizes.SMALL,
                                            onClick: r,
                                            children: G.default.Messages.DEAUTHORIZE
                                        })
                                    })]
                                })
                            })(),
                            children: [(() => {
                                if (null != s.description && "" !== s.description) return (0, a.jsx)(I.FormItem, {
                                    faded: !0,
                                    title: G.default.Messages.ABOUT_THIS_APP,
                                    children: (0, a.jsx)(I.FormText, {
                                        children: s.description
                                    })
                                })
                            })(), (() => {
                                if (null != s.terms_of_service_url || null != s.privacy_policy_url) return (0, a.jsxs)("div", {
                                    className: F.tosPrivacy,
                                    children: [null != s.terms_of_service_url ? (0, a.jsxs)(S.Clickable, {
                                        tag: "a",
                                        onClick: o,
                                        className: F.tos,
                                        children: [(0, a.jsx)(I.FormText, {
                                            className: F.link,
                                            children: G.default.Messages.AUTHORIZED_APPS_TERMS_OF_SERVICE
                                        }), (0, a.jsx)(_.LinkExternalSmallIcon, {
                                            className: F.externalLinkIcon,
                                            color: "var(--text-link)"
                                        })]
                                    }) : null, null != s.privacy_policy_url ? (0, a.jsxs)("div", {
                                        className: F.privacy,
                                        children: [null != s.terms_of_service_url ? (0, a.jsx)("div", {
                                            className: F.divider
                                        }) : null, (0, a.jsxs)(S.Clickable, {
                                            tag: "a",
                                            onClick: u,
                                            className: F.privacy,
                                            children: [(0, a.jsx)(I.FormText, {
                                                className: F.link,
                                                children: G.default.Messages.AUTHORIZED_APPS_PRIVACY_POLICY
                                            }), (0, a.jsx)(_.LinkExternalSmallIcon, {
                                                className: F.externalLinkIcon,
                                                color: "var(--text-link)"
                                            })]
                                        })]
                                    }) : null]
                                })
                            })(), (() => {
                                let e = [];
                                for (let s of t) e.push((0, h.getScopeName)(s, t)), s === d.OAuth2Scopes.APPLICATIONS_COMMANDS && e.push(G.default.Messages.SCOPE_DM_YOU);
                                if (e.length > 0 || null != i && i.length > 0) return (0, a.jsx)(I.FormItem, {
                                    faded: !0,
                                    title: G.default.Messages.PERMISSIONS,
                                    className: B.marginTop20,
                                    children: (0, a.jsxs)("ul", {
                                        children: [e.map((e, t) => (0, a.jsxs)("li", {
                                            className: l()(F.permission, B.marginTop8),
                                            children: [(0, a.jsx)("i", {
                                                className: F.permissionCheckmark
                                            }), (0, a.jsx)(I.FormText, {
                                                children: e
                                            })]
                                        }, t)), null == i ? void 0 : i.map((t, s) => {
                                            let n = (0, O.getTextForDisclosure)(t);
                                            return null != n ? (0, a.jsxs)("li", {
                                                className: l()(F.permission, B.marginTop8),
                                                children: [(0, a.jsx)(H, {
                                                    disclosure: t
                                                }), (0, a.jsx)(I.FormText, {
                                                    children: n
                                                })]
                                            }, s + e.length) : null
                                        })]
                                    })
                                })
                            })(), c && (0, a.jsx)(V, {
                                application: s
                            })]
                        })
                    })
                };
            t.default = () => {
                let e = (0, u.useStateFromStores)([p.default], () => p.default.hidePersonalInformation),
                    t = (0, u.useStateFromStores)([R.default], () => R.default.getApps()),
                    i = (0, u.useStateFromStores)([C.default], () => C.default.getSelfEmbeddedActivities());
                n.useEffect(() => {
                    N.default.fetch()
                }, []);
                let l = e => {
                        let {
                            id: t,
                            application: s
                        } = e;
                        N.default.delete(t);
                        let a = i.get(s.id);
                        null != a && (0, A.stopEmbeddedActivity)({
                            channelId: a.channelId,
                            applicationId: s.id
                        })
                    },
                    [r, d] = n.useState(""),
                    c = e => {
                        d(e)
                    },
                    S = () => {
                        d("")
                    },
                    E = () => (0, a.jsx)("div", {
                        className: F.searchContainer,
                        children: (0, a.jsx)(I.SearchBar, {
                            size: I.SearchBar.Sizes.MEDIUM,
                            query: r,
                            onChange: c,
                            onClear: S,
                            placeholder: G.default.Messages.INTEGRATIONS_SEARCH,
                            "aria-label": G.default.Messages.INTEGRATIONS_SEARCH
                        })
                    }),
                    T = (e, t) => (0, a.jsxs)(y, {
                        className: F.__invalid_marginTop20,
                        children: [(0, a.jsx)(I.EmptyStateImage, {
                            darkSrc: s("701972"),
                            lightSrc: s("818658"),
                            width: 380,
                            height: 282
                        }), (0, a.jsx)(I.EmptyStateText, {
                            note: e,
                            children: t
                        })]
                    }),
                    _ = n.useMemo(() => {
                        let e = r.trim().toLowerCase();
                        return "" === e || null == t ? t : t.length < 100 ? t.filter(t => o()(e, t.application.name.toLowerCase())) : t.filter(t => t.application.name.toLowerCase().includes(e))
                    }, [t, r]);
                return e ? (0, a.jsx)(f.default, {}) : (0, a.jsx)(I.FormSection, {
                    tag: I.FormTitleTags.H1,
                    title: G.default.Messages.AUTHORIZED_APPS,
                    children: (0, a.jsx)(I.HeadingLevel, {
                        component: (0, a.jsx)(I.FormNotice, {
                            className: B.marginBottom40,
                            type: I.CardTypes.PRIMARY,
                            title: G.default.Messages.APPLICATIONS_AND_CONNECTIONS,
                            body: G.default.Messages.APPLICATIONS_AND_CONNECTIONS_BODY
                        }),
                        children: null == t || null == _ ? (0, a.jsx)(I.Spinner, {
                            className: B.marginTop20,
                            type: I.Spinner.Type.SPINNING_CIRCLE
                        }) : 0 === t.length ? T(G.default.Messages.NO_AUTHORIZED_APPS_NOTE, G.default.Messages.NO_AUTHORIZED_APPS) : 0 === _.length ? (0, a.jsxs)(a.Fragment, {
                            children: [E(), T(null, G.default.Messages.INTEGRATIONS_SEARCH_NO_MATCH)]
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [E(), _.sort((e, t) => e.application.name.localeCompare(t.application.name)).map(e => (0, a.jsx)(Y, {
                                onDelete: () => l(e),
                                ...e
                            }, e.id))]
                        })
                    })
                })
            }
        },
        443702: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return D
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("355467"),
                c = s("230711"),
                S = s("497321"),
                E = s("231428"),
                T = s("390954"),
                _ = s("89057"),
                I = s("921801"),
                N = s("246946"),
                g = s("594174"),
                f = s("351402"),
                m = s("853872"),
                A = s("78839"),
                C = s("706454"),
                O = s("726985"),
                h = s("981631"),
                R = s("689938"),
                p = s("499937");
            class M extends n.PureComponent {
                componentDidMount() {
                    d.default.wait(() => {
                        u.fetchPaymentSources(), u.fetchSubscriptions()
                    })
                }
                handleRedemptionRedirect() {
                    c.default.setSection(h.UserSettingsSections.INVENTORY)
                }
                render() {
                    let {
                        syncing: e,
                        hide: t,
                        paymentSources: s,
                        defaultPaymentSourceId: n,
                        locale: i,
                        premiumSubscription: l,
                        isRemovingPaymentSource: r,
                        isUpdatingPaymentSource: d
                    } = this.props;
                    return t ? (0, a.jsx)(S.default, {}) : (0, a.jsxs)("div", {
                        className: p.__invalid_userSettingsBilling,
                        children: [e && 0 === Object.keys(s).length ? (0, a.jsx)("div", {
                            className: p.syncing,
                            children: (0, a.jsx)(o.Spinner, {})
                        }) : (0, a.jsx)(I.Subsetting, {
                            setting: O.WebSetting.BILLING_PAYMENT_METHODS,
                            children: (0, a.jsx)(T.default, {
                                paymentSources: s,
                                defaultPaymentSourceId: n,
                                premiumSubscriptionPaymentSourceId: null != l && l.status !== h.SubscriptionStatusTypes.CANCELED ? l.paymentSourceId : null,
                                locale: i,
                                removing: r,
                                submitting: d
                            })
                        }), (0, a.jsx)(I.Subsetting, {
                            setting: O.WebSetting.BILLING_TRANSACTION_HISTORY,
                            children: (0, a.jsx)("div", {
                                className: p.paymentHistory,
                                children: (0, a.jsxs)(o.HeadingLevel, {
                                    component: (0, a.jsx)(o.FormTitle, {
                                        tag: "h1",
                                        children: R.default.Messages.BILLING_PAYMENT_HISTORY
                                    }),
                                    children: [(0, a.jsx)(_.BlockedPaymentsWarning, {}), (0, a.jsx)(E.default, {
                                        locale: i
                                    })]
                                })
                            })
                        }), (0, a.jsx)(o.Card, {
                            className: p.codeRedemptionRedirect,
                            type: o.Card.Types.CUSTOM,
                            children: R.default.Messages.BILLING_CODE_REDEMPTION_REDIRECT.format({
                                onClick: this.handleRedemptionRedirect
                            })
                        })]
                    })
                }
            }

            function D() {
                let e = (0, r.useStateFromStoresObject)([C.default, f.default, m.default, g.default, N.default, A.default], () => {
                    let e = A.default.getPremiumTypeSubscription(),
                        t = g.default.getCurrentUser();
                    return l()(null != t, "UserSettingsBilling: currentUser cannot be undefined"), {
                        locale: C.default.locale,
                        hide: N.default.enabled,
                        isClaimed: t.isClaimed(),
                        isVerified: t.verified,
                        premiumSubscription: e,
                        defaultPaymentSourceId: m.default.defaultPaymentSourceId,
                        paymentSources: m.default.paymentSources,
                        syncing: f.default.isSyncing,
                        isRemovingPaymentSource: f.default.isRemovingPaymentSource,
                        isUpdatingPaymentSource: f.default.isUpdatingPaymentSource
                    }
                });
                return (0, a.jsx)(M, {
                    ...e
                })
            }
        },
        920914: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("653041"), s("773603");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("704215"),
                d = s("692547"),
                u = s("780384"),
                c = s("481060"),
                S = s("570140"),
                E = s("457330"),
                T = s("497321"),
                _ = s("23551"),
                I = s("468026"),
                N = s("410030"),
                g = s("726542"),
                f = s("122021"),
                m = s("275759"),
                A = s("231757"),
                C = s("323588"),
                O = s("605236"),
                h = s("553795"),
                R = s("430824"),
                p = s("771845"),
                M = s("246946"),
                D = s("797717"),
                x = s("346656"),
                L = s("465670"),
                P = s("692437"),
                b = s("507957"),
                v = s("626135"),
                U = s("63063"),
                j = s("706454"),
                G = s("349728"),
                F = s("494620"),
                B = s("205266"),
                y = s("216153"),
                V = s("981631"),
                H = s("856651"),
                Y = s("921944"),
                k = s("689938"),
                w = s("220301"),
                W = s("611273");
            let K = e => {
                var t, s;
                let n, {
                        integration: i
                    } = e,
                    {
                        isJoining: l,
                        joinErrorMessage: o,
                        showJoinErrorMessage: d
                    } = (0, r.useStateFromStoresObject)([h.default], () => ({
                        isJoining: h.default.isJoining(i.id),
                        joinErrorMessage: "" === h.default.joinErrorMessage(i.id) ? k.default.Messages.ERROR : h.default.joinErrorMessage(i.id),
                        showJoinErrorMessage: void 0 !== h.default.joinErrorMessage(i.id)
                    }), [i.id]),
                    u = null != (0, r.useStateFromStores)([R.default], () => R.default.getGuild(i.guild.id), [i.guild.id]);
                return !u && (n = (0, a.jsx)(c.Button, {
                    size: c.ButtonSizes.SMALL,
                    onClick: function() {
                        E.default.joinServer(i.id, () => {})
                    },
                    disabled: l,
                    children: (0, a.jsx)("span", {
                        children: l ? k.default.Messages.JOINING_GUILD : k.default.Messages.JOIN_GUILD
                    })
                })), (0, a.jsxs)("div", {
                    className: w.integrationWrapper,
                    children: [(0, a.jsxs)("div", {
                        className: w.integration,
                        children: [(0, a.jsx)(x.default, {
                            size: x.default.Sizes.SMALL,
                            guild: i.guild,
                            className: w.guildIcon
                        }), (0, a.jsxs)("div", {
                            className: w.integrationInner,
                            children: [(0, a.jsx)(c.Text, {
                                variant: "text-md/semibold",
                                color: "header-primary",
                                children: i.guild.toString()
                            }), (0, a.jsx)(c.Anchor, {
                                href: null === (s = g.default.get(i.type)) || void 0 === s ? void 0 : null === (t = s.getPlatformUserUrl) || void 0 === t ? void 0 : t.call(s, i.account),
                                children: (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    children: i.account.name
                                })
                            })]
                        }), n]
                    }), d && (0, a.jsx)(c.Text, {
                        variant: "text-xs/normal",
                        color: "text-danger",
                        className: w.integrationError,
                        children: o
                    })]
                })
            };

            function Q(e) {
                var t, s, i;
                let l, r, o, {
                        onDisconnect: S,
                        account: T,
                        theme: _,
                        locale: N
                    } = e,
                    [O, h] = n.useState(T.friendSync),
                    [R, p] = n.useState(T.visibility),
                    [M, x] = n.useState(T.metadataVisibility),
                    [P, v] = n.useState(T.showActivity),
                    [j, Y] = n.useState(null),
                    [W, Q] = n.useState(null),
                    [z, X] = n.useState(!1),
                    [q, Z] = n.useState([]),
                    J = (0, f.useLegacyPlatformType)(T.type),
                    $ = g.default.get(J);
                n.useEffect(() => {
                    h(T.friendSync), p(T.visibility), x(T.metadataVisibility), v(T.showActivity)
                }, [T]), n.useEffect(() => {
                    !1 !== T.verified && (null != j && (p(j), E.default.setVisibility(T.type, T.id, j), Y(null)), null != W && (x(W), E.default.setMetadataVisibility(T.type, T.id, W), Q(null)))
                }, [T]);

                function ee() {
                    (0, A.default)({
                        platformType: T.type,
                        location: "User Settings"
                    })
                }

                function et() {
                    let e = g.default.get(T.type),
                        t = k.default.Messages.DISCONNECT_ACCOUNT_BODY;
                    (0, G.default)(T) && (t = (0, a.jsxs)(a.Fragment, {
                        children: [t, (0, a.jsx)(F.default, {
                            className: w.infoBox,
                            children: k.default.Messages.CONNECTED_ACCOUNT_IS_AUTHORIZED_APP_DISCONNECT_WARNING.format({
                                platformName: e.name
                            })
                        })]
                    })), (0, c.openModal)(s => (0, a.jsx)(I.default, {
                        title: k.default.Messages.DISCONNECT_ACCOUNT_TITLE.format({
                            name: e.name
                        }),
                        body: t,
                        confirmText: k.default.Messages.DISCONNECT_ACCOUNT,
                        cancelText: k.default.Messages.CANCEL,
                        onConfirm: S,
                        ...s
                    }))
                }

                function es(e) {
                    let {
                        verified: t
                    } = T, s = e ? 1 : 0;
                    if (e && !t) {
                        Y(s), (0, A.default)({
                            platformType: T.type,
                            location: "User Settings"
                        });
                        return
                    }
                    p(s), E.default.setVisibility(T.type, T.id, s)
                }

                function ea(e) {
                    let {
                        verified: t
                    } = T, s = e ? 1 : 0;
                    if (e && !t) {
                        Q(s), (0, A.default)({
                            platformType: T.type,
                            location: "User Settings"
                        });
                        return
                    }
                    x(s), E.default.setMetadataVisibility(T.type, T.id, s)
                }

                function en(e) {
                    h(e), E.default.setFriendSync(T.type, T.id, e)
                }

                function ei(e) {
                    v(e), E.default.setShowActivity(T.type, T.id, e)
                }
                return (0, a.jsxs)("div", {
                    className: w.connection,
                    children: [function(e) {
                        var t;
                        let s = g.default.get(e.type),
                            n = g.default.get(J),
                            i = "1" === (null !== (t = e.metadata) && void 0 !== t ? t : {})[H.MetadataFields.TWITTER_VERIFIED],
                            l = null;
                        return s.type === V.PlatformTypes.TWITTER && i && (l = (0, a.jsx)(c.Tooltip, {
                            text: k.default.Messages.CONNECTION_VERIFIED_ON_TWITTER,
                            children: e => (0, a.jsx)(D.default, {
                                ...e,
                                className: w.connectionAccountLabelVerified,
                                color: d.default.unsafe_rawColors.TWITTER.css,
                                children: (0, a.jsx)(b.default, {
                                    color: d.default.unsafe_rawColors.WHITE_500.css
                                })
                            })
                        })), (0, a.jsxs)("div", {
                            className: w.connectionHeader,
                            children: [(0, a.jsx)("img", {
                                alt: n.name,
                                className: w.connectionIcon,
                                src: (0, u.isThemeDark)(_) ? n.icon.darkSVG : n.icon.lightSVG
                            }), (0, a.jsxs)("div", {
                                children: [(0, a.jsx)(c.Text, {
                                    color: "header-primary",
                                    variant: "text-md/semibold",
                                    className: w.connectionAccountValue,
                                    children: (0, a.jsxs)("div", {
                                        className: w.connectionAccountLabelContainer,
                                        children: [e.name, l]
                                    })
                                }), (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    className: w.connectionAccountLabel,
                                    children: n.name
                                })]
                            }), (0, a.jsx)(c.Clickable, {
                                className: w.connectionDelete,
                                onClick: et,
                                "aria-label": k.default.Messages.SERVICE_CONNECTIONS_DISCONNECT,
                                focusProps: {
                                    offset: {
                                        top: -4,
                                        left: -4,
                                        right: -4
                                    }
                                },
                                children: (0, a.jsx)(L.default, {
                                    width: 16,
                                    height: 16
                                })
                            })]
                        })
                    }(T), (t = T).twoWayLink ? null : t.type === V.PlatformTypes.XBOX ? (0, a.jsx)("div", {
                        className: w.upsellWrapper,
                        children: (0, a.jsx)(y.XboxTwoWayLinkUpsell, {})
                    }) : t.type === V.PlatformTypes.PLAYSTATION ? (0, a.jsx)("div", {
                        className: w.upsellWrapper,
                        children: (0, a.jsx)(B.PlayStationTwoWayLinkUpsell, {})
                    }) : null, function(e) {
                        var t;
                        let s = null !== (t = e.metadata) && void 0 !== t ? t : {},
                            n = null,
                            i = (0, m.getCreatedAtDate)(s[H.MetadataFields.CREATED_AT], N);
                        switch (e.type) {
                            case V.PlatformTypes.REDDIT:
                                n = (0, C.generateRedditMetadataItems)(s, w.metadataItem);
                                break;
                            case V.PlatformTypes.STEAM:
                                n = (0, C.generateSteamMetadataItems)(s, w.metadataItem);
                                break;
                            case V.PlatformTypes.TWITTER:
                                n = (0, C.generateTwitterMetadataItems)(s, w.metadataItem);
                                break;
                            case V.PlatformTypes.EBAY:
                                n = (0, C.generateEbayMetadataItems)(s, w.metadataItem);
                                break;
                            case V.PlatformTypes.PAYPAL:
                                n = (0, C.generatePaypalMetadataItems)(s, w.metadataItem);
                                break;
                            case V.PlatformTypes.TIKTOK:
                                n = (0, C.generateTikTokMetadataItems)(s, w.metadataItem)
                        }
                        null !== i && (null == n && (n = []), null == n || n.push((0, a.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "interactive-active",
                            className: w.connectedAccountVanityMetadataCreatedAt,
                            children: k.default.Messages.CONNECTIONS_PROFILE_MEMBER_SINCE.format({
                                date: i
                            })
                        }, "member-since")));
                        let l = q.includes(e.id),
                            r = k.default.Messages.REFRESH;
                        if (null == n || 0 === n.length) {
                            if (!0 !== g.default.get(e.type).hasMetadata) return null;
                            n = [(0, a.jsx)(c.TextBadge, {
                                className: w.connectionMetadataUpsellTag,
                                text: k.default.Messages.NEW
                            }, "badge"), (0, a.jsx)(c.Text, {
                                variant: "text-xs/normal",
                                className: w.connectionMetadataUpsellDescription,
                                children: k.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS_DESCRIPTION.format({
                                    helpdeskUrl: U.default.getArticleURL(V.HelpdeskArticles.CONNECTION_DETAILS)
                                })
                            }, "label")], r = k.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS
                        }
                        return l && (r = k.default.Messages.DONE), n.push((0, a.jsx)(c.Button, {
                            className: w.metadataRefreshButton,
                            color: l ? c.Button.Colors.GREEN : c.Button.Colors.BRAND,
                            size: c.Button.Sizes.SMALL,
                            submitting: z,
                            disabled: l,
                            onClick: l ? void 0 : () => {
                                X(!0), E.default.refresh(e.type, e.id).finally(() => {
                                    setTimeout(() => {
                                        q.push(e.id), Z(q), X(!1)
                                    }, 2e3)
                                })
                            },
                            children: r
                        }, "refresh-button")), (0, a.jsx)("div", {
                            className: w.metadataContainer,
                            children: n
                        })
                    }(T), (s = $, V.FRIEND_SYNC_PLATFORM_TYPES.has(T.type) && (l = (0, a.jsx)(c.FormSwitch, {
                        className: w.connectionOptionSwitch,
                        hideBorder: !0,
                        value: O,
                        onChange: en,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: k.default.Messages.SYNC_FRIENDS
                        })
                    })), V.ACTIVITY_PLATFORM_TYPES.has(T.type) && (r = (0, a.jsx)(c.FormSwitch, {
                        className: w.connectionOptionSwitch,
                        hideBorder: !0,
                        value: P,
                        onChange: ei,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: k.default.Messages.DISPLAY_ACTIVITY.format({
                                platform: s.name
                            })
                        })
                    })), (null === (i = g.default.get(T.type)) || void 0 === i ? void 0 : i.hasMetadata) === !0 && (o = (0, a.jsx)(c.FormSwitch, {
                        className: w.connectionOptionSwitch,
                        hideBorder: !0,
                        value: 1 === M,
                        onChange: ea,
                        disabled: 1 !== R || null == T.metadata,
                        children: (0, a.jsx)(c.Text, {
                            variant: "text-sm/semibold",
                            children: k.default.Messages.DISPLAY_DETAILS_ON_PROFILE
                        })
                    })), (0, a.jsx)("div", {
                        className: w.connectionOptionsWrapper,
                        children: (0, a.jsxs)("div", {
                            className: w.connectionOptions,
                            children: [(0, a.jsx)(c.FormSwitch, {
                                className: w.connectionOptionSwitch,
                                hideBorder: !0,
                                value: 1 === R,
                                onChange: es,
                                children: (0, a.jsx)(c.Text, {
                                    variant: "text-sm/semibold",
                                    children: k.default.Messages.DISPLAY_ON_PROFILE
                                })
                            }), o, r, l]
                        })
                    })), function() {
                        if (T.revoked || T.integrations.length > 0) return (0, a.jsx)(c.FormDivider, {
                            className: w.connectedAccountSeparator
                        })
                    }(), T.revoked ? (0, a.jsx)(c.FormItem, {
                        className: w.integrationsWrapper,
                        children: (0, a.jsx)(c.FormText, {
                            className: w.integrationRevoked,
                            children: k.default.Messages.CONNECTED_ACCOUNT_REVOKED.format({
                                onReconnect: ee
                            })
                        })
                    }) : T.integrations.length > 0 ? (0, a.jsxs)(c.FormItem, {
                        className: w.integrationsWrapper,
                        children: [(0, a.jsx)(c.FormTitle, {
                            tag: c.FormTitleTags.H5,
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-xs/semibold",
                                children: k.default.Messages.SUB_ENABLED_SERVERS
                            })
                        }), (0, a.jsx)("div", {
                            children: T.integrations.map(e => (0, a.jsx)(K, {
                                integration: e
                            }, e.id))
                        })]
                    }) : void 0]
                })
            }

            function z() {
                return n.useEffect(() => () => {
                    (0, O.markDismissibleContentAsDismissed)(o.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION, {
                        dismissAction: Y.ContentDismissActionType.AUTO
                    })
                }, []), (0, a.jsxs)("div", {
                    className: w.connectContainer,
                    children: [(0, a.jsx)(c.Heading, {
                        variant: "heading-md/bold",
                        color: "interactive-active",
                        className: w.connectHeader,
                        children: k.default.Messages.CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_HEADER
                    }), (0, a.jsx)(c.Text, {
                        variant: "text-xs/normal",
                        color: "header-secondary",
                        children: k.default.Messages.CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_DESCRIPTION.format({
                            privacyPolicyUrl: V.MarketingURLs.PRIVACY
                        })
                    }), (0, a.jsx)(X, {})]
                })
            }

            function X() {
                function e(e) {
                    let t = g.default.get(e);
                    (0, A.default)({
                        platformType: t.type
                    }), v.default.track(V.AnalyticEvents.ACCOUNT_LINK_STEP, {
                        previous_step: "desktop connections",
                        current_step: "desktop oauth",
                        platform_type: t.type
                    })
                }

                function t() {
                    S.default.dispatch({
                        type: "CONNECTIONS_GRID_MODAL_SHOW",
                        onComplete: e
                    })
                }
                let s = (0, f.usePlatforms)(),
                    n = (0, c.useRedesignIconContext)().enabled ? 24 : 18;
                return (0, a.jsxs)("div", {
                    className: w.connectionsContainer,
                    children: [s.slice(0, 10).map(e => (0, a.jsx)(_.default, {
                        type: e.type,
                        className: w.__invalid_accountButton,
                        innerClassName: w.accountButtonInner
                    }, e.type)), (0, a.jsx)(c.Tooltip, {
                        text: k.default.Messages.CONNECTIONS_VIEW_MORE,
                        children: e => {
                            let {
                                onMouseEnter: s,
                                onMouseLeave: i
                            } = e;
                            return (0, a.jsx)("div", {
                                className: l()(w.accountAddWrapper, w.__invalid_accountButton),
                                children: (0, a.jsx)(c.FocusRing, {
                                    children: (0, a.jsx)("button", {
                                        onMouseEnter: s,
                                        onMouseLeave: i,
                                        className: l()(w.accountAddInner, w.accountButtonInner),
                                        type: "button",
                                        onClick: t,
                                        "aria-label": k.default.Messages.ADD_NEW_CONNECTION,
                                        children: (0, a.jsx)(P.default, {
                                            height: n,
                                            width: n,
                                            "aria-label": k.default.Messages.CONNECTIONS_VIEW_MORE
                                        })
                                    })
                                })
                            })
                        }
                    })]
                })
            }

            function q(e) {
                let t, {
                    fetching: n,
                    accounts: i,
                    theme: l,
                    locale: r
                } = e;
                return t = n ? (0, a.jsx)(c.Spinner, {
                    className: W.marginTop20,
                    type: c.Spinner.Type.SPINNING_CIRCLE
                }) : 0 === i.length ? (0, a.jsxs)(c.EmptyState, {
                    className: W.marginTop40,
                    theme: l,
                    children: [(0, a.jsx)(c.EmptyStateImage, {
                        darkSrc: s("703152"),
                        lightSrc: s("548617"),
                        width: 230,
                        height: 220
                    }), (0, a.jsx)(c.EmptyStateText, {
                        note: k.default.Messages.CONNECTED_ACCOUNTS_NONE,
                        children: k.default.Messages.CONNECTED_ACCOUNTS_NONE_TITLE
                    })]
                }) : i.filter(e => g.default.isSupported(e.type)).map((e, t) => (0, a.jsx)(Q, {
                    theme: l,
                    account: e,
                    locale: r,
                    onDisconnect: () => (function(e) {
                        let {
                            type: t,
                            id: s
                        } = e;
                        E.default.disconnect(t, s)
                    })(e)
                }, t)), (0, a.jsx)(c.FormItem, {
                    className: w.connectionList,
                    children: t
                })
            }
            t.default = () => {
                let e = (0, r.useStateFromStores)([M.default], () => M.default.hidePersonalInformation),
                    t = (0, r.useStateFromStores)([h.default], () => h.default.isFetching()),
                    s = (0, r.useStateFromStores)([h.default], () => h.default.getAccounts()),
                    i = (0, N.default)();
                (0, r.useStateFromStores)([p.default], () => p.default.getFlattenedGuildIds());
                let l = (0, r.useStateFromStores)([j.default], () => j.default.locale);
                return (n.useEffect(() => {
                    E.default.fetch()
                }, []), e) ? (0, a.jsx)(T.default, {}) : (0, a.jsxs)(c.FormSection, {
                    className: w.__invalid_connections,
                    tag: c.FormTitleTags.H1,
                    title: k.default.Messages.CONNECTIONS,
                    children: [(0, a.jsx)(z, {}), (0, a.jsx)(q, {
                        fetching: t,
                        accounts: s,
                        theme: i,
                        locale: l
                    })]
                })
            }
        },
        177508: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return S
                }
            }), s("390547"), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("971809"),
                o = s("481060"),
                d = s("359420");
            let u = Object.keys(o.Button.Colors).filter(e => "CUSTOM" !== e),
                c = Object.keys(o.Button.Looks).filter(e => "BLANK" !== e);

            function S() {
                let e = u.flatMap(e => [...c.map(t => (0, a.jsxs)(o.Button, {
                    color: o.Button.Colors[e],
                    look: o.Button.Looks[t],
                    children: [e, " - ", t]
                }, e + t)), (0, a.jsx)("hr", {
                    className: d.sectionDivider
                }, e + "divider")]);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-xl/semibold",
                        children: "Buttons"
                    }), (0, a.jsxs)("div", {
                        className: d.buttons,
                        children: [(0, a.jsx)("div", {
                            className: l()("theme-dark", d.section),
                            children: e
                        }), (0, a.jsx)("div", {
                            className: l()("theme-light", d.section),
                            children: e
                        })]
                    }), (0, a.jsx)(E, {})]
                })
            }

            function E() {
                let [e, t] = n.useState(null), [s, i] = n.useState(null), [l, u] = n.useState([]), [c, S] = n.useState([]), [E, T] = n.useState([]);
                return (0, a.jsxs)("div", {
                    className: d.searchableSelectExamples,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-xl/semibold",
                        children: "SearchableSelect"
                    }), (0, a.jsx)(o.SearchableSelect, {
                        placeholder: "Single select",
                        value: e,
                        onChange: e => t(e),
                        options: r.States
                    }), (0, a.jsx)(o.SearchableSelect, {
                        placeholder: "Single select (clearable)",
                        clearable: !0,
                        value: s,
                        onChange: e => i(e),
                        options: r.States
                    }), (0, a.jsx)(o.SearchableSelect, {
                        placeholder: "Multi select",
                        multi: !0,
                        value: l,
                        onChange: e => u(e),
                        options: r.States
                    }), (0, a.jsx)(o.SearchableSelect, {
                        placeholder: "Multi select (clearable)",
                        multi: !0,
                        clearable: !0,
                        value: E,
                        onChange: e => T(e),
                        options: r.States
                    }), (0, a.jsx)(o.SearchableSelect, {
                        placeholder: "Multi select (custom pills)",
                        multi: !0,
                        value: c,
                        onChange: e => S(e),
                        options: r.States,
                        hidePills: !0,
                        customPillContainerClassName: d.customPillContainer,
                        renderCustomPill: e => (0, a.jsx)("div", {
                            style: {
                                padding: 8,
                                border: "1px solid var(--bg-brand)",
                                borderRadius: 8
                            },
                            children: (0, a.jsx)(o.Text, {
                                variant: "text-md/bold",
                                children: e.label
                            })
                        })
                    })]
                })
            }
        },
        956699: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("411104");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("392711"),
                o = s.n(r),
                d = s("268146"),
                u = s("442837"),
                c = s("692547"),
                S = s("481060"),
                E = s("570140"),
                T = s("661111"),
                _ = s("179658"),
                I = s("491428"),
                N = s("225433"),
                g = s("484614"),
                f = s("386506"),
                m = s("865427"),
                A = s("758182"),
                C = s("802098"),
                O = s("663993"),
                h = s("38618"),
                R = s("921801"),
                p = s("906467"),
                M = s("857192"),
                D = s("558724"),
                x = s("594174"),
                L = s("808506"),
                P = s("285952"),
                b = s("154921"),
                v = s("998502"),
                U = s("210887"),
                j = s("601948"),
                G = s("726985"),
                F = s("981631"),
                B = s("908442"),
                y = s("724510"),
                V = s("164149"),
                H = s("611273"),
                Y = s("842648");

            function k(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            let w = ["discord_web", "discord_marketing", "discord_developers", "discord_ios", "discord_android"],
                W = [{
                    value: "branch",
                    label: "Branch Name"
                }, {
                    value: "id",
                    label: "Build ID"
                }];

            function K(e) {
                return "discord_ios" in e || "discord_android" in e
            }
            class Q extends n.Component {
                render() {
                    let {
                        project: e,
                        overrideType: t,
                        overrideId: s,
                        disabled: n,
                        error: i
                    } = this.props;
                    return (0, a.jsxs)(P.default, {
                        direction: P.default.Direction.VERTICAL,
                        className: l()(y.buildOverrideGroup, H.marginBottom20, V.card, y.row),
                        children: [(0, a.jsx)(N.default, {
                            className: l()(y.removeBuildOverride, {
                                [y.removeBuildOverrideDisabled]: n
                            }),
                            onClick: n ? void 0 : this.handleRemoveBuildOverride
                        }), (0, a.jsxs)(P.default, {
                            className: H.marginBottom8,
                            children: [(0, a.jsx)(P.default.Child, {
                                basis: "50%",
                                children: (0, a.jsx)(S.FormItem, {
                                    title: "Override Type",
                                    className: y.item,
                                    children: (0, a.jsx)(S.SingleSelect, {
                                        options: W,
                                        onChange: this.handleOverrideTypeChanged,
                                        value: t,
                                        isDisabled: n
                                    })
                                })
                            }), (0, a.jsx)(P.default.Child, {
                                basis: "50%",
                                children: (0, a.jsx)(S.FormItem, {
                                    title: "branch" === t ? "Branch Name" : "Build ID",
                                    className: y.item,
                                    children: (0, a.jsx)(S.TextInput, {
                                        value: s,
                                        onChange: this.handleOverrideIdChanged,
                                        disabled: n
                                    })
                                })
                            })]
                        }), (0, a.jsxs)(P.default.Child, {
                            children: [null != i && "" !== i && (0, a.jsx)(S.FormText, {
                                className: y.item,
                                style: {
                                    color: c.default.unsafe_rawColors.RED_400.css
                                },
                                type: S.FormText.Types.DESCRIPTION,
                                children: i
                            }), (0, a.jsxs)(S.FormText, {
                                className: y.item,
                                type: S.FormText.Types.DESCRIPTION,
                                children: ["This controls the build that will be served for the ", (0, a.jsx)("code", {
                                    children: e
                                }), " project."]
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), k(this, "handleRemoveBuildOverride", () => {
                        this.props.onBuildOverrideRemoved(this.props.project)
                    }), k(this, "handleOverrideIdChanged", e => {
                        this.props.onBuildOverrideUpdated(this.props.project, {
                            id: e
                        })
                    }), k(this, "handleOverrideTypeChanged", e => {
                        this.props.onBuildOverrideUpdated(this.props.project, {
                            type: e,
                            id: ""
                        })
                    })
                }
            }
            class z extends n.Component {
                async refreshBuildOverrides() {
                    this.setState({
                        loading: !0
                    });
                    let e = await (0, m.getBuildOverride)();
                    this.setState({
                        loading: !1,
                        buildOverrides: e,
                        loadedBuildOverrides: o().cloneDeep(e),
                        errors: {}
                    })
                }
                isDirty() {
                    let {
                        buildOverrides: e,
                        loadedBuildOverrides: t
                    } = this.state;
                    return !o().isEqual(e, t)
                }
                componentDidMount() {
                    this.refreshBuildOverrides()
                }
                getAvailableProjects() {
                    let {
                        buildOverrides: e
                    } = this.state;
                    if (null == e) return [];
                    let t = Object.keys(e);
                    return o().without(w, ...t)
                }
                renderEmpty() {
                    return (0, a.jsxs)(S.EmptyState, {
                        theme: U.default.theme,
                        className: l()(H.marginTop40, H.marginBottom20),
                        children: [(0, a.jsx)(S.EmptyStateImage, {
                            darkSrc: s("770227"),
                            lightSrc: s("398684"),
                            width: 294,
                            height: 192
                        }), (0, a.jsx)(S.EmptyStateText, {
                            children: "You have no build overrides configured."
                        })]
                    })
                }
                renderItems() {
                    let {
                        buildOverrides: e,
                        saving: t,
                        errors: s
                    } = this.state;
                    return null == e ? null : o().map(e, (e, n) => (0, a.jsx)(Q, {
                        project: n,
                        overrideType: e.type,
                        overrideId: e.id,
                        disabled: t,
                        error: s[n],
                        onBuildOverrideUpdated: this.handleBuildOverrideUpdated,
                        onBuildOverrideRemoved: this.handleBuildOverrideRemoved
                    }, n))
                }
                renderRefreshButton() {
                    return !this.state.didSave || this.isDirty() ? null : (0, a.jsx)(P.default, {
                        grow: 0,
                        direction: P.default.Direction.HORIZONTAL_REVERSE,
                        children: (0, a.jsx)(P.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: () => location.reload(),
                                color: S.Button.Colors.PRIMARY,
                                children: "Reload App"
                            })
                        })
                    })
                }
                renderLinkButton() {
                    let {
                        buildOverrides: e
                    } = this.state;
                    return null == e || 0 === Object.keys(e).length ? null : (0, a.jsx)(P.default, {
                        grow: 0,
                        direction: P.default.Direction.HORIZONTAL_REVERSE,
                        children: (0, a.jsx)(P.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: this.handleLinkGeneration,
                                color: S.Button.Colors.BRAND,
                                children: "Generate Public Link"
                            })
                        })
                    })
                }
                renderSaveButton() {
                    if (!this.isDirty()) return null;
                    let {
                        saving: e,
                        buildOverrides: t
                    } = this.state;
                    return (0, a.jsxs)(P.default, {
                        grow: 0,
                        direction: P.default.Direction.HORIZONTAL_REVERSE,
                        children: [(0, a.jsx)(P.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                disabled: K(null != t ? t : {}),
                                onClick: this.handleSaveChanges,
                                submitting: e,
                                color: S.Button.Colors.GREEN,
                                children: "Save Build Overrides"
                            })
                        }), (0, a.jsx)(P.default.Child, {
                            grow: 0,
                            children: (0, a.jsx)(S.Button, {
                                onClick: this.handleDiscardChanges,
                                disabled: e,
                                color: S.Button.Colors.RED,
                                children: "Discard Changes"
                            })
                        })]
                    })
                }
                render() {
                    let e;
                    let {
                        loading: t,
                        saving: s,
                        buildOverrides: n
                    } = this.state;
                    e = t ? (0, a.jsx)(S.Spinner, {
                        className: H.marginTop20
                    }) : null != n && 0 === Object.keys(n).length ? this.renderEmpty() : this.renderItems();
                    let i = !s && !t && this.getAvailableProjects().length > 0,
                        l = K(null != n ? n : {}) && "stable" !== window.GLOBAL_ENV.RELEASE_CHANNEL ? (0, a.jsx)(S.Text, {
                            color: "text-danger",
                            variant: "text-md/normal",
                            children: "Mobile build overrides must be generated using the desktop/web stable client for now!"
                        }) : null;
                    return (0, a.jsx)(R.Subsetting, {
                        setting: G.WebSetting.DEVELOPER_OPTIONS_BUILD_OVERRIDE,
                        children: (0, a.jsxs)(S.FormSection, {
                            className: H.marginTop60,
                            children: [(0, a.jsxs)(P.default, {
                                className: H.marginBottom20,
                                children: [(0, a.jsx)(P.default.Child, {
                                    children: (0, a.jsx)(S.FormTitle, {
                                        tag: S.FormTitleTags.H1,
                                        children: "Build Overrides"
                                    })
                                }), (0, a.jsx)(P.default.Child, {
                                    grow: 0,
                                    children: (0, a.jsx)(S.Button, {
                                        size: S.ButtonSizes.SMALL,
                                        onClick: this.handleAddBuildOverride,
                                        disabled: !i,
                                        children: "Add Build Override"
                                    })
                                })]
                            }), (0, a.jsx)(S.FormDivider, {}), (0, a.jsxs)(P.default, {
                                direction: P.default.Direction.VERTICAL,
                                children: [l, e, (0, a.jsxs)(P.default, {
                                    grow: 0,
                                    direction: P.default.Direction.HORIZONTAL_REVERSE,
                                    children: [this.renderRefreshButton(), this.renderSaveButton(), this.renderLinkButton()]
                                })]
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), k(this, "state", {
                        loading: !0,
                        buildOverrides: {},
                        loadedBuildOverrides: {},
                        errors: {},
                        saving: !1,
                        didSave: !1
                    }), k(this, "handleAddBuildOverride", async () => {
                        var e;
                        let t = await (e = this.getAvailableProjects(), new Promise(t => {
                            (0, S.openModal)(s => {
                                let n = e => {
                                    s.onClose(), t(e)
                                };
                                return (0, a.jsxs)(S.ModalRoot, {
                                    ...s,
                                    "aria-label": "Choose A Project to Override",
                                    children: [(0, a.jsx)(S.ModalHeader, {
                                        separator: !1,
                                        children: (0, a.jsx)(S.Heading, {
                                            variant: "heading-lg/semibold",
                                            children: "Choose A Project to Override"
                                        })
                                    }), (0, a.jsx)(S.ModalContent, {
                                        children: (0, a.jsx)("div", {
                                            className: y.buildOverrideList,
                                            children: e.map(e => (0, a.jsx)(S.Button, {
                                                value: e,
                                                color: S.Button.Colors.GREEN,
                                                onClick: () => n(e),
                                                children: e
                                            }, e))
                                        })
                                    }), (0, a.jsx)(S.ModalFooter, {
                                        children: (0, a.jsx)(S.Button, {
                                            color: S.Button.Colors.PRIMARY,
                                            look: S.Button.Looks.LINK,
                                            onClick: () => n(null),
                                            children: "Nevermind"
                                        })
                                    })]
                                })
                            })
                        }));
                        if (null == t) return;
                        let s = {
                            ...this.state.buildOverrides,
                            [t]: {
                                type: "branch",
                                id: ""
                            }
                        };
                        this.setState({
                            buildOverrides: s
                        })
                    }), k(this, "handleBuildOverrideUpdated", (e, t) => {
                        let {
                            buildOverrides: s
                        } = this.state, a = {
                            ...null != s ? s[e] : {},
                            ...t
                        }, n = {
                            ...this.state.buildOverrides,
                            [e]: a
                        };
                        this.setState({
                            buildOverrides: n
                        })
                    }), k(this, "handleBuildOverrideRemoved", e => {
                        let t = {
                            ...this.state.buildOverrides
                        };
                        delete t[e], this.setState({
                            buildOverrides: t
                        })
                    }), k(this, "handleDiscardChanges", () => {
                        this.setState({
                            buildOverrides: o().cloneDeep(this.state.loadedBuildOverrides),
                            errors: {},
                            didSave: !1
                        })
                    }), k(this, "handleSaveChanges", async () => {
                        let {
                            buildOverrides: e
                        } = this.state;
                        if (null == e) return;
                        this.setState({
                            saving: !0
                        });
                        let t = await (0, f.applyStaffBuildOverride)(e);
                        if (200 === t.status) {
                            let e = t.body;
                            this.setState({
                                buildOverrides: e,
                                loadedBuildOverrides: o().cloneDeep(e),
                                errors: {},
                                didSave: !0,
                                saving: !1
                            })
                        } else if (400 === t.status) {
                            let e = t.body;
                            this.setState({
                                errors: e,
                                saving: !1,
                                didSave: !1
                            })
                        } else this.setState({
                            saving: !1,
                            didSave: !1
                        })
                    }), k(this, "handleLinkGeneration", () => {
                        let {
                            buildOverrides: e
                        } = this.state;
                        (0, S.openModal)(t => (0, a.jsx)(X, {
                            ...t,
                            buildOverrides: e
                        }))
                    })
                }
            }
            class X extends n.Component {
                isMobile() {
                    var e;
                    return K(null !== (e = this.props.buildOverrides) && void 0 !== e ? e : {})
                }
                renderSettingsForm() {
                    let {
                        ttlSeconds: e,
                        releaseChannel: t,
                        userIdEntry: s,
                        userIdEntryError: n,
                        allowedVersions: i,
                        allowedVersionEntry: l,
                        allowedVersionEntryError: r,
                        allowLoggedOut: o,
                        experiments: d,
                        experimentsError: u
                    } = this.state, c = B.BUILD_OVERRIDE_EXPIRATION_OPTIONS.find(t => t.value === e), E = i.map(e => ({
                        label: e,
                        value: e
                    }));
                    return (0, a.jsxs)(P.default.Child, {
                        basis: "70%",
                        children: [(0, a.jsx)(S.FormItem, {
                            title: "Expire After",
                            className: H.marginBottom20,
                            children: (0, a.jsx)(S.SingleSelect, {
                                value: null != c ? c.value : null,
                                options: B.BUILD_OVERRIDE_EXPIRATION_OPTIONS,
                                onChange: this.handleExpirationChange
                            })
                        }), this.isMobile() ? null : (0, a.jsx)(S.FormItem, {
                            title: "Release Channel",
                            className: H.marginBottom20,
                            children: (0, a.jsx)(S.SingleSelect, {
                                value: t,
                                options: B.BUILD_OVERRIDE_RELEASE_CHANNEL_OPTIONS,
                                onChange: this.handleReleaseChannelChange
                            })
                        }), this.isMobile() ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(S.FormItem, {
                                title: "Add allowed app version (required)",
                                className: H.marginBottom20,
                                children: (0, a.jsxs)(P.default, {
                                    direction: P.default.Direction.HORIZONTAL,
                                    children: [(0, a.jsx)(P.default.Child, {
                                        wrap: !0,
                                        basis: "90%",
                                        children: (0, a.jsx)(S.TextInput, {
                                            autoFocus: !0,
                                            value: l,
                                            onKeyPress: this.handleAllowedVersionEnter,
                                            error: r,
                                            onChange: this.handleAllowedVersionEntry,
                                            placeholder: "Example: 34"
                                        })
                                    }), (0, a.jsx)(S.Button, {
                                        onClick: this.handleAddAllowedVersion,
                                        children: "Add"
                                    })]
                                })
                            }), (0, a.jsx)(S.FormItem, {
                                title: "Remove allowed app version",
                                className: H.marginBottom20,
                                children: (0, a.jsx)(S.SingleSelect, {
                                    value: null,
                                    options: E,
                                    onChange: this.handleRemoveAllowedVersion,
                                    isDisabled: 0 === i.length
                                })
                            })]
                        }) : null, this.isMobile() ? null : (0, a.jsx)(a.Fragment, {
                            children: (0, a.jsxs)(S.FormItem, {
                                title: "Limit to User IDs (optional)",
                                className: H.marginBottom20,
                                children: [(0, a.jsx)(P.default, {
                                    direction: P.default.Direction.HORIZONTAL,
                                    children: (0, a.jsx)(P.default.Child, {
                                        wrap: !0,
                                        basis: "90%",
                                        children: (0, a.jsx)(S.TextArea, {
                                            value: s,
                                            error: n,
                                            onBlur: () => this.setUserEntryError(""),
                                            onChange: this.handleUserIDEntry
                                        })
                                    })
                                }), (0, a.jsx)(S.Text, {
                                    variant: "text-sm/normal",
                                    color: "text-muted",
                                    className: H.marginTop8,
                                    children: "User IDs can be separated by whitespace or commas."
                                })]
                            })
                        }), (0, a.jsxs)(S.FormItem, {
                            title: "Client Experiment Override",
                            className: H.marginBottom20,
                            children: [(0, a.jsx)(P.default, {
                                direction: P.default.Direction.HORIZONTAL,
                                children: (0, a.jsx)(P.default.Child, {
                                    wrap: !0,
                                    basis: "90%",
                                    children: (0, a.jsx)(S.TextArea, {
                                        value: d,
                                        error: u,
                                        onChange: this.handleExperiments,
                                        placeholder: '{"2022-01_threads":1}'
                                    })
                                })
                            }), (0, a.jsx)(S.Text, {
                                variant: "text-sm/normal",
                                color: "text-muted",
                                className: H.marginTop8,
                                children: "Locally override the given experiments to the given bucket. This ONLY applies locally and WILL NOT affect the server. When the user clears build override, the experiment override is removed as well."
                            })]
                        }), (0, a.jsx)(S.FormSwitch, {
                            onChange: this.handleAllowLoggedOut,
                            value: o,
                            children: "Allow logged out users"
                        })]
                    })
                }
                renderPayloadBlock() {
                    let e = JSON.stringify(this.generatePayload(), null, 2),
                        t = () => e,
                        n = (0, a.jsx)(O.LazyLibrary, {
                            createPromise: () => Promise.resolve().then(s.bind(s, "364964")),
                            webpackId: "364964",
                            renderFallback: t,
                            render: s => {
                                let n = s.highlight("json", e, !0);
                                return null == n ? t() : (0, a.jsx)("code", {
                                    className: "hljs scroller ".concat(n.language, " ").concat(Y.scrollbarGhost, " ").concat(y.codebox),
                                    dangerouslySetInnerHTML: {
                                        __html: n.value
                                    }
                                })
                            }
                        });
                    return (0, a.jsx)(P.default.Child, {
                        children: (0, a.jsx)(S.Card, {
                            children: (0, a.jsx)("pre", {
                                children: n
                            })
                        })
                    })
                }
                renderLinkForm() {
                    let {
                        statusTextColor: e,
                        statusText: t,
                        publicLink: s
                    } = this.state;
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(S.FormItem, {
                            title: "Signed Link",
                            children: (0, a.jsxs)(P.default, {
                                children: [(0, a.jsx)(P.default.Child, {
                                    wrap: !0,
                                    basis: "75%",
                                    children: (0, a.jsx)(g.default, {
                                        value: s
                                    })
                                }), (0, a.jsx)(S.Button, {
                                    onClick: this.handleGenerateLink,
                                    children: "Generate Link"
                                })]
                            })
                        }), (0, a.jsx)(b.default, {
                            color: e,
                            className: "".concat(H.marginBottom8, " ").concat(H.marginTop8),
                            children: t
                        })]
                    })
                }
                render() {
                    let {
                        onClose: e,
                        transitionState: t
                    } = this.props;
                    return (0, a.jsxs)(S.ModalRoot, {
                        size: S.ModalSize.LARGE,
                        transitionState: t,
                        "aria-label": "Generate Public Build Override Link",
                        children: [(0, a.jsxs)(S.ModalHeader, {
                            justify: P.default.Justify.BETWEEN,
                            separator: !1,
                            children: [(0, a.jsx)(S.Heading, {
                                variant: "heading-lg/semibold",
                                children: "Generate Public Build Override Link"
                            }), (0, a.jsx)(S.ModalCloseButton, {
                                onClick: e
                            })]
                        }), (0, a.jsxs)(S.ModalContent, {
                            children: [(0, a.jsxs)(P.default, {
                                children: [this.renderSettingsForm(), this.renderPayloadBlock()]
                            }), this.renderLinkForm()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), k(this, "state", {
                        ttlSeconds: 3600,
                        releaseChannel: "all",
                        userIds: new Set,
                        userIdEntry: "",
                        userIdEntryError: null,
                        allowedVersions: [],
                        allowedVersionEntry: "",
                        allowedVersionEntryError: null,
                        publicLink: " ",
                        statusText: null,
                        statusTextColor: b.default.Colors.STATUS_RED,
                        allowLoggedOut: !1
                    }), k(this, "setUserEntryError", e => {
                        this.setState({
                            userIdEntryError: e
                        })
                    }), k(this, "setStatusMessage", (e, t) => {
                        this.setState({
                            statusText: e,
                            statusTextColor: null != t ? t : b.default.Colors.STATUS_RED
                        })
                    }), k(this, "handleUserIDEntry", e => {
                        if (!/^[\d\s,]*$/.test(e)) return this.setUserEntryError("User IDs are numbers!");
                        let t = new Set(e.split(/[,\s]+/).filter(Boolean));
                        this.setState({
                            userIdEntry: e,
                            userIds: t
                        })
                    }), k(this, "setAllowedVersionError", e => {
                        this.setState({
                            allowedVersionEntryError: e
                        })
                    }), k(this, "handleAllowedVersionEntry", e => {
                        this.setState({
                            allowedVersionEntry: e
                        })
                    }), k(this, "handleAllowedVersionEnter", e => {
                        e.charCode === F.KeyboardKeys.ENTER && this.handleAddAllowedVersion()
                    }), k(this, "handleAddAllowedVersion", () => {
                        let {
                            allowedVersions: e,
                            allowedVersionEntry: t
                        } = this.state;
                        return 0 === (t = t.trim()).length ? this.setAllowedVersionError("Enter a valid version number!") : e.indexOf(t) >= 0 ? this.setAllowedVersionError("You already added that version!") : void this.setState({
                            allowedVersions: [...e, t],
                            allowedVersionEntry: "",
                            allowedVersionEntryError: ""
                        })
                    }), k(this, "handleRemoveAllowedVersion", e => {
                        let {
                            allowedVersions: t
                        } = this.state;
                        t = t.filter(t => t !== e), this.setState({
                            allowedVersions: t
                        })
                    }), k(this, "handleAllowLoggedOut", e => {
                        this.setState({
                            allowLoggedOut: e
                        })
                    }), k(this, "handleExpirationChange", e => {
                        this.setState({
                            ttlSeconds: e
                        })
                    }), k(this, "handleReleaseChannelChange", e => {
                        this.setState({
                            releaseChannel: e
                        })
                    }), k(this, "handleExperiments", e => {
                        if (0 === e.trim().length) {
                            this.setState({
                                experimentsError: void 0
                            });
                            return
                        }
                        try {
                            let t = JSON.parse(e);
                            for (let e in t) {
                                if (null == e.match(/^[0-9]{4}\-[0-9]{2}_[a-z0-9_]+$/)) {
                                    this.setState({
                                        experimentsError: "".concat(e, " is an invalid experiment name")
                                    });
                                    return
                                }
                                if ("number" != typeof t[e]) {
                                    this.setState({
                                        experimentsError: "".concat(e, " has an invalid bucket override")
                                    });
                                    return
                                }
                            }
                        } catch (e) {
                            this.setState({
                                experimentsError: "Unable to parse experiments ".concat(e.message)
                            });
                            return
                        }
                        this.setState({
                            experiments: e,
                            experimentsError: void 0
                        })
                    }), k(this, "generatePayload", () => ({
                        overrides: this.props.buildOverrides,
                        meta: {
                            release_channel: "all" === this.state.releaseChannel ? null : this.state.releaseChannel,
                            ttl_seconds: this.state.ttlSeconds,
                            user_ids: Array.from(this.state.userIds),
                            allowed_versions: this.isMobile() ? this.state.allowedVersions : void 0,
                            allow_logged_out: this.state.allowLoggedOut,
                            experiments: null == this.state.experiments ? null : JSON.parse(this.state.experiments)
                        }
                    })), k(this, "handleGenerateLink", async () => {
                        if (this.isMobile() && 0 === this.state.allowedVersions.length) {
                            this.setAllowedVersionError("You must add at least one allowed version for iOS");
                            return
                        }
                        this.setStatusMessage(null);
                        let e = this.generatePayload(),
                            t = await (0, f.getPublicBuildOverrideLink)(e);
                        !1 !== t.error ? this.setStatusMessage(JSON.stringify(t.error), b.default.Colors.STATUS_RED) : (this.setState({
                            publicLink: t.url.toString()
                        }), 0 === e.meta.user_ids.length && this.setStatusMessage("Warning! No users added to the whitelist! This link could be used by anyone to override their build.", b.default.Colors.STATUS_YELLOW))
                    })
                }
            }

            function q() {
                throw Error("Send help")
            }

            function Z() {
                let [e, t] = n.useState(!1), [s, i] = n.useState("");
                return (n.useEffect(() => {
                    (async () => {
                        i(await (0, L.getOverlayURL)())
                    })()
                }, []), e) ? {} : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: [y.buttonsContainer, H.marginBottom20].join(" "),
                        children: [(0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_OPEN_OVERLAY,
                            children: (0, a.jsx)(S.Button, {
                                onClick: () => window.open(s, "_blank"),
                                disabled: "" === s,
                                children: "Open Overlay"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_RESET_SOCKET,
                            children: (0, a.jsx)(S.Button, {
                                onClick: () => {
                                    h.default.getSocket().close(), h.default.getSocket().connect()
                                },
                                children: "Reset Socket"
                            })
                        }), A.ENABLE_CACHE_STORE && (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_CLEAR_CACHES,
                            children: (0, a.jsx)(S.Button, {
                                onClick: () => {
                                    E.default.dispatch({
                                        type: "CLEAR_CACHES",
                                        reason: "Requested by user",
                                        preventWritingCachesAgainThisSession: !0,
                                        resetSocket: !0
                                    })
                                },
                                children: "Clear Caches"
                            })
                        })]
                    }), (0, a.jsx)(R.Subsetting, {
                        setting: G.WebSetting.DEVELOPER_OPTIONS_CRASHES,
                        children: (0, a.jsx)(S.FormSection, {
                            title: "Crashes",
                            tag: S.FormTitleTags.H1,
                            children: (0, a.jsxs)("div", {
                                className: y.buttonsContainer,
                                children: [(0, a.jsx)(S.SingleSelect, {
                                    value: void 0,
                                    options: [{
                                        value: void 0,
                                        label: "Native libdiscord crash"
                                    }, {
                                        value: 0,
                                        label: "Abort()"
                                    }, {
                                        value: 1,
                                        label: "SIGSEGV()"
                                    }, {
                                        value: 2,
                                        label: "EXCEPTION_ACCESS_VIOLATION"
                                    }, {
                                        value: 3,
                                        label: "RaiseFailFastException"
                                    }, {
                                        value: 4,
                                        label: "Out of Memory"
                                    }],
                                    onChange: e => null != e && v.default.crash(e)
                                }), (0, a.jsx)(S.SingleSelect, {
                                    value: void 0,
                                    options: [{
                                        value: void 0,
                                        label: "Native JS crash"
                                    }, {
                                        value: d.JSExceptionLocation.RendererProcessDelayed,
                                        label: "Delayed exception in renderer process"
                                    }, {
                                        value: d.JSExceptionLocation.RendererProcess,
                                        label: "Exception in renderer process"
                                    }, {
                                        value: d.JSExceptionLocation.MainProcess,
                                        label: "Exception in main process"
                                    }],
                                    onChange: e => {
                                        var t;
                                        return null != e ? (t = e, void v.default.triggerJSException(t)) : void 0
                                    }
                                }), (0, a.jsx)(S.Button, {
                                    onClick: () => t(!0),
                                    children: "React Crash"
                                }), (0, a.jsx)(S.Button, {
                                    onClick: q,
                                    children: "onClick Throw"
                                })]
                            })
                        })
                    })]
                })
            }
            let J = u.default.connectStores([M.default], () => ({
                isTracingRequests: M.default.isTracingRequests,
                isForcedCanary: M.default.isForcedCanary,
                isLoggingGatewayEvents: M.default.isLoggingGatewayEvents,
                isLoggingOverlayEvents: M.default.isLoggingOverlayEvents,
                isLoggingAnalyticsEvents: M.default.isLoggingAnalyticsEvents,
                isAxeEnabled: M.default.isAxeEnabled,
                isSourceMapsEnabled: M.default.sourceMapsEnabled,
                isAnalyticsDebuggerEnabled: M.default.isAnalyticsDebuggerEnabled,
                isIdleStatusIndicatorEnabled: M.default.isIdleStatusIndicatorEnabled,
                appDirectoryIncludesInactiveCollections: M.default.appDirectoryIncludesInactiveCollections
            }))(e => {
                let {
                    isTracingRequests: t,
                    isForcedCanary: s,
                    isLoggingGatewayEvents: n,
                    isLoggingOverlayEvents: i,
                    isLoggingAnalyticsEvents: l,
                    isAxeEnabled: r,
                    isSourceMapsEnabled: o,
                    isAnalyticsDebuggerEnabled: d,
                    isIdleStatusIndicatorEnabled: c,
                    appDirectoryIncludesInactiveCollections: E
                } = e, T = (0, u.useStateFromStores)([x.default], () => x.default.getCurrentUser());
                return (0, a.jsx)(R.Subsetting, {
                    setting: G.WebSetting.DEVELOPER_OPTIONS_FLAGS,
                    children: (0, a.jsxs)(S.FormSection, {
                        title: "Developer Flags",
                        tag: S.FormTitleTags.H1,
                        children: [(0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_TRACING_REQUESTS,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: t,
                                note: "Force trace all client requests with APM",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    trace: e
                                }),
                                children: "Enable Tracing Requests"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_FORCED_CANARY,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: s,
                                note: "Force all API requests to canary instances",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    canary: e
                                }),
                                children: "Enable Forced Canary"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_GATEWAY_EVENTS_TO_CONSOLE,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: n,
                                note: "Logs all incoming and outgoing gateway events to the developer console, enable verbose logging in the developer console to see! This includes all message content.",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    logGatewayEvents: e
                                }),
                                children: "Enable Logging of Gateway Events to Console"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_OVERLAY_RPC_EVENTS_COMMANDS,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: i,
                                note: "Logs all overlay related RPC events. Super noisy if an overlay is connected",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    logOverlayEvents: e
                                }),
                                children: "Enable Logging of Overlay RPC Events & Commands"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_ANALYTICS_EVENTS_LOGGING,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: l,
                                note: "Logs all analytics events to the developer console",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    logAnalyticsEvents: e
                                }),
                                children: "Enable Logging of Analytics Events"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_SOURCE_MAPS,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: o,
                                note: "Only enable on devices you trust.",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    sourceMapsEnabled: e
                                }),
                                children: "Enable source maps to be loaded on this client"
                            })
                        }), (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_ANALYTICS_DEBUGGER_VIEW,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: d,
                                note: "Displays a floating debugger with viewed impressions",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    analyticsDebuggerEnabled: e
                                }),
                                children: "Enable standard analytics debugger view"
                            })
                        }), (null == T ? void 0 : T.isStaff()) ? (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_IDLE_STATUS_INDICATOR,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: c,
                                note: "Displays a floating idle status indicator",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    idleStatusIndicatorEnabled: e
                                }),
                                children: "Enable idle status indicator"
                            })
                        }) : null, null, (null == T ? void 0 : T.isStaff()) ? (0, a.jsx)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_PREVIEW_UNPUBLISHED_COLLECTIONS,
                            children: (0, a.jsx)(S.FormSwitch, {
                                value: E,
                                note: "In App Directory, include inactive collections on the homepage. Use this to preview changes to collections before publishing them.",
                                onChange: e => (0, _.setDeveloperOptionSettings)({
                                    appDirectoryIncludesInactiveCollections: e
                                }),
                                children: "Preview Unpublished Collections on App Directory Homepage"
                            })
                        }) : null, p.default.isDeveloper ? (0, a.jsxs)(R.Subsetting, {
                            setting: G.WebSetting.DEVELOPER_OPTIONS_OVERRIDE_CLIENT_SIDE,
                            children: [(0, a.jsx)("div", {
                                className: [y.buttonsContainer, H.marginBottom20].join(" "),
                                children: (0, a.jsx)(j.OverridePremiumTypeDropDown, {})
                            }), (0, a.jsx)(S.FormDivider, {
                                className: y.divider
                            })]
                        }) : null]
                    })
                })
            });

            function $() {
                let e = (0, u.useStateFromStores)([D.default], () => D.default.getSurveyOverride()),
                    [t, s] = n.useState(null != e ? e : "");
                return (0, a.jsx)(R.Subsetting, {
                    setting: G.WebSetting.DEVELOPER_OPTIONS_SURVEY_OVERRIDE,
                    children: (0, a.jsxs)(S.FormSection, {
                        tag: S.FormTitleTags.H1,
                        title: "Survey Override",
                        className: H.marginTop60,
                        children: [(0, a.jsx)(S.FormTitle, {
                            children: "Copy the ID of the Survey you want to test:"
                        }), (0, a.jsxs)("form", {
                            className: y.surveyOverride,
                            onSubmit: e => {
                                e.preventDefault(), t.length > 0 ? I.overrideSurvey(t) : I.overrideSurvey(null)
                            },
                            children: [(0, a.jsx)(S.TextInput, {
                                className: y.surveyOverrideInput,
                                value: t,
                                onChange: s
                            }), (0, a.jsx)(S.Button, {
                                type: "submit",
                                children: "Save Override"
                            })]
                        })]
                    })
                })
            }

            function ee() {
                var e;
                let t = (0, u.useStateFromStores)([C.default], () => C.default.overrideId()),
                    [s, i] = n.useState(null !== (e = C.default.overrideId()) && void 0 !== e ? e : "");
                return (0, a.jsx)(R.Subsetting, {
                    setting: G.WebSetting.DEVELOPER_OPTIONS_CHANGELOG_OVERRIDE,
                    children: (0, a.jsxs)(S.FormSection, {
                        tag: S.FormTitleTags.H1,
                        title: "Changelog Override",
                        className: H.marginTop60,
                        children: [(0, a.jsx)(S.FormTitle, {
                            children: "Enter the ID of the changelog you want to test"
                        }), (0, a.jsxs)("div", {
                            className: y.surveyOverride,
                            children: [(0, a.jsx)(S.TextInput, {
                                className: y.surveyOverrideInput,
                                value: s,
                                onChange: i
                            }), (0, a.jsx)(S.Button, {
                                onClick: () => {
                                    "" === s ? T.default.setChangelogOverride(null) : T.default.setChangelogOverride(s)
                                },
                                disabled: t === s,
                                children: "Update Changelog"
                            })]
                        })]
                    })
                })
            }
            class et extends n.PureComponent {
                render() {
                    return (0, a.jsxs)(n.Fragment, {
                        children: [(0, a.jsx)(J, {}), (0, a.jsx)(Z, {}), (0, a.jsx)($, {}), (0, a.jsx)(ee, {}), (0, a.jsx)(z, {})]
                    })
                }
            }
            t.default = et
        },
        54942: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return i
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("106939");

            function i() {
                return (0, a.jsx)(n.UserSettingsFamilyCenterPage, {})
            }
        },
        15780: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("630388"),
                d = s("88658"),
                u = s("695346"),
                c = s("981631"),
                S = s("689938"),
                E = s("611273");

            function T() {
                let e = u.FriendSourceFlagsSetting.useSetting(),
                    t = n.useMemo(() => (0, d.computeFlags)(e), [e]);
                return (0, a.jsx)(r.FormSection, {
                    tag: r.FormTitleTags.H1,
                    title: S.default.Messages.FRIEND_REQUESTS,
                    children: (0, a.jsxs)(r.FormSection, {
                        title: S.default.Messages.FRIEND_PERMITTED_SOURCE,
                        className: E.marginBottom40,
                        children: [(0, a.jsx)(r.FormSwitch, {
                            className: l()(E.marginTop8, E.marginBottom20),
                            value: t.all,
                            onChange: e => u.FriendSourceFlagsSetting.updateSetting(e ? c.AllFriendSourceFlags : c.AllFriendSourceFlags & ~c.FriendSourceFlags.NO_RELATION),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_ALL
                        }), (0, a.jsx)(r.FormSwitch, {
                            value: t.all || t.mutualFriends,
                            onChange: t => u.FriendSourceFlagsSetting.updateSetting(t ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_FRIENDS) : o.removeFlags(e, c.FriendSourceFlags.MUTUAL_FRIENDS, c.FriendSourceFlags.NO_RELATION)),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_FRIENDS
                        }), (0, a.jsx)(r.FormSwitch, {
                            value: t.all || t.mutualGuilds,
                            onChange: t => u.FriendSourceFlagsSetting.updateSetting(t ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_GUILDS) : o.removeFlags(e, c.FriendSourceFlags.MUTUAL_GUILDS, c.FriendSourceFlags.NO_RELATION)),
                            children: S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_GUILDS
                        })]
                    })
                })
            }
        },
        293389: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("692547"),
                d = s("481060"),
                u = s("224706"),
                c = s("225433"),
                S = s("594190"),
                E = s("320724"),
                T = s("77498"),
                _ = s("283595"),
                I = s("797717"),
                N = s("546591"),
                g = s("794358"),
                f = s("880008"),
                m = s("795295"),
                A = s("169278"),
                C = s("931003"),
                O = s("507957"),
                h = s("626135"),
                R = s("251625"),
                p = s("358085"),
                M = s("210887"),
                D = s("981631"),
                x = s("689938"),
                L = s("159618"),
                P = s("661781"),
                b = s("961047"),
                v = s("164149"),
                U = s("611273");
            let j = r.default.connectStores([M.default], () => ({
                    theme: M.default.theme
                }))(d.EmptyState),
                G = (0, p.isWindows)();

            function F(e) {
                let {
                    onClose: t
                } = e, s = (0, r.useStateFromStores)([S.default], () => S.default.getCandidateGames()), [i, o] = n.useState(null), c = s.map(e => ({
                    key: e.pid,
                    value: e,
                    label: null != e.name ? e.name : ""
                }));
                return (0, a.jsxs)(d.Dialog, {
                    className: l()(L.addGamePopout, P.elevationBorderHigh),
                    "aria-label": x.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME,
                    children: [(0, a.jsx)(d.SearchableSelect, {
                        placeholder: x.default.Messages.SELECT,
                        value: i,
                        options: c,
                        onChange: function(e) {
                            o(e)
                        }
                    }), (0, a.jsx)(d.FormDivider, {
                        className: l()(U.marginTop8, U.marginBottom8)
                    }), (0, a.jsxs)("div", {
                        className: l()(L.actions, b.horizontal),
                        children: [(0, a.jsx)(d.Button, {
                            className: L.cancelButton,
                            look: d.ButtonLooks.LINK,
                            color: d.ButtonColors.PRIMARY,
                            onClick: t,
                            children: x.default.Messages.CANCEL
                        }), (0, a.jsx)(d.Button, {
                            disabled: null == i,
                            onClick: function() {
                                null != i && (u.default.addGame(i.pid, i.name), t())
                            },
                            children: x.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME
                        })]
                    })]
                })
            }

            function B(e) {
                var t;
                let {
                    rawGame: s,
                    nowPlaying: i = !1,
                    isOverride: E
                } = e, R = (0, r.useStateFromStoresObject)([T.default, S.default, _.default], () => (0, S.transformForGameSettings)(s)), [p, M] = n.useState(!1), [P, U] = n.useState(null !== (t = R.name) && void 0 !== t ? t : "???"), j = l()(b.flexCenter, {
                    [L.game]: !i,
                    [L.activeGame]: i,
                    [v.card]: !i,
                    [L.nowPlaying]: null != R && i
                });

                function F() {
                    u.default.deleteEntry(R)
                }

                function B() {
                    R.name !== P && u.default.editName(R, P)
                }

                function y(e) {
                    13 === e.keyCode && (e.currentTarget.blur(), e.preventDefault())
                }

                function V() {
                    u.default.toggleDetection(R)
                }

                function H() {
                    if (p) return;
                    let e = null != R.id ? T.default.getDetectableGame(R.id) : null;
                    h.default.track(D.AnalyticEvents.USER_SETTINGS_REPORT_INCORRECT_GAME_DETECTION, {
                        application_id: null == e ? void 0 : e.id,
                        game_name: R.name
                    }), (0, d.showToast)((0, d.createToast)(x.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION_CONFIRMATION.format({
                        gameName: R.name
                    }), d.ToastType.SUCCESS)), M(!0)
                }
                return (0, a.jsxs)("div", {
                    className: j,
                    children: [(0, a.jsxs)("div", {
                        className: l()(L.gameNameLastPlayed, b.vertical),
                        children: [R.verified && !E ? (0, a.jsxs)("div", {
                            className: L.detectedApplication,
                            children: [(0, a.jsx)("div", {
                                className: L.gameName,
                                children: R.name
                            }), (0, a.jsx)(d.Tooltip, {
                                text: x.default.Messages.SETTINGS_GAMES_VERIFIED_ICON,
                                children: e => (0, a.jsx)(I.default, {
                                    className: L.gameVerifiedIcon,
                                    size: 18,
                                    color: o.default.unsafe_rawColors.BRAND_500.css,
                                    ...e,
                                    children: (0, a.jsx)(O.default, {
                                        width: 18,
                                        height: 18,
                                        color: o.default.unsafe_rawColors.WHITE_500.css
                                    })
                                })
                            })]
                        }) : (0, a.jsx)("input", {
                            className: l()(L.gameName, L.gameNameInput),
                            type: "text",
                            maxLength: 128,
                            value: P,
                            onBlur: B,
                            onKeyDown: y,
                            onChange: e => U(e.target.value)
                        }), function() {
                            let e;
                            let {
                                played: t,
                                exePath: s
                            } = R;
                            return i ? e = x.default.Messages.SETTINGS_GAMES_NOW_PLAYING_STATE : null != t && "" !== t && (e = x.default.Messages.SETTINGS_GAMES_LAST_PLAYED.format({
                                when: t
                            })), (0, a.jsx)("div", {
                                className: L.lastPlayed,
                                children: (0, a.jsx)(N.default, {
                                    hoverText: null != s && "" !== s ? s.toUpperCase() : "",
                                    children: e
                                })
                            })
                        }()]
                    }), E ? null : p ? null : (0, a.jsx)("div", {
                        className: l()(b.flexCenter, b.noWrap, b.justifyBetween, L.toggleContainer),
                        children: (0, a.jsx)(d.Tooltip, {
                            text: x.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                            children: e => {
                                let {
                                    onMouseEnter: t,
                                    onMouseLeave: s
                                } = e;
                                return (0, a.jsx)(d.Clickable, {
                                    "aria-label": x.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                                    className: L.toggleIcon,
                                    onClick: H,
                                    onMouseEnter: t,
                                    onMouseLeave: s,
                                    children: (0, a.jsx)(m.default, {
                                        className: L.toggleIconOn,
                                        foreground: L.fill,
                                        width: 24,
                                        height: 24
                                    })
                                })
                            }
                        })
                    }), function() {
                        let {
                            detectable: e
                        } = R, t = e ? (0, a.jsx)(g.default, {
                            className: L.toggleIconOn,
                            foreground: L.fill,
                            width: 24,
                            height: 24
                        }) : (0, a.jsx)(f.default, {
                            className: L.toggleIconOff,
                            background: L.fill,
                            foreground: L.fill,
                            width: 24,
                            height: 24
                        });
                        return (0, a.jsx)("div", {
                            className: l()(b.flexCenter, b.noWrap, b.justifyBetween, L.toggleContainer),
                            children: (0, a.jsx)(d.Tooltip, {
                                text: x.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                                children: e => {
                                    let {
                                        onMouseEnter: s,
                                        onMouseLeave: n
                                    } = e;
                                    return (0, a.jsx)(d.Clickable, {
                                        "aria-label": x.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                                        className: L.toggleIcon,
                                        onClick: V,
                                        onMouseEnter: s,
                                        onMouseLeave: n,
                                        children: t
                                    })
                                }
                            })
                        })
                    }(), function() {
                        if (!G) return null;
                        let {
                            overlay: e,
                            overlayWarn: t
                        } = R, s = e ? (0, a.jsx)(A.default, {
                            className: L.toggleIconOn,
                            foreground: L.fill
                        }) : (0, a.jsx)(C.default, {
                            className: L.toggleIconOff,
                            foreground: L.fill
                        }), n = t ? (0, a.jsx)(d.Tooltip, {
                            text: x.default.Messages.SETTINGS_GAMES_OVERLAY_WARNING,
                            children: e => (0, a.jsx)("i", {
                                className: L.overlayWarningIcon,
                                ...e
                            })
                        }) : null;
                        return (0, a.jsxs)("div", {
                            className: l()(b.flexCenter, b.noWrap, b.justifyBetween, L.toggleContainer),
                            children: [n, (0, a.jsx)(d.Tooltip, {
                                text: x.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                                children: t => {
                                    let {
                                        onMouseEnter: n,
                                        onMouseLeave: i
                                    } = t;
                                    return (0, a.jsx)(d.Clickable, {
                                        "aria-label": x.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                                        className: L.toggleIcon,
                                        onClick: () => {
                                            var t;
                                            return t = !e, void u.default.toggleOverlay(R, t)
                                        },
                                        onMouseEnter: n,
                                        onMouseLeave: i,
                                        children: s
                                    })
                                }
                            })]
                        })
                    }(), !i || E ? (0, a.jsx)(c.default, {
                        className: L.removeGame,
                        onClick: F
                    }) : null]
                })
            }

            function y() {
                return (0, a.jsx)("div", {
                    className: l()(b.flexCenter, L.notDetected, L.activeGame),
                    children: (0, a.jsxs)("div", {
                        className: l()(L.gameNameLastPlayed, b.vertical),
                        children: [(0, a.jsx)("div", {
                            className: L.gameName,
                            children: x.default.Messages.SETTINGS_GAMES_NO_GAME_DETECTED
                        }), (0, a.jsx)("div", {
                            className: L.lastPlayed,
                            children: x.default.Messages.SETTINGS_GAMES_NOT_PLAYING
                        })]
                    })
                })
            }

            function V(e) {
                let {
                    children: t
                } = e;
                return (0, a.jsxs)(j, {
                    className: U.marginTop40,
                    children: [(0, a.jsx)(d.EmptyStateImage, {
                        darkSrc: s("879601"),
                        lightSrc: s("889000"),
                        width: 430,
                        height: 250
                    }), t]
                })
            }
            let H = (0, R.cachedFunction)(function() {
                for (var e = arguments.length, t = Array(e), s = 0; s < e; s++) t[s] = arguments[s];
                return new Set(t.map(e => e.exePath))
            });
            t.default = function(e) {
                let {
                    className: t,
                    showHeader: s = !0
                } = e, i = (0, r.useStateFromStoresArray)([S.default], () => S.default.getGamesSeen(!0)), {
                    runningGame: o,
                    overrideExePaths: u
                } = (0, r.useStateFromStoresObject)([S.default], () => ({
                    runningGame: S.default.getVisibleGame(),
                    overrideExePaths: H(...S.default.getOverrides())
                }));
                return n.useEffect(() => ((0, E.watchCandidateGames)(), E.stopWatchingCandidateGames), []), (0, a.jsxs)(d.FormSection, {
                    tag: "h1",
                    title: s ? x.default.Messages.REGISTERED_GAMES : null,
                    className: t,
                    children: [null != o ? (0, a.jsx)(B, {
                        rawGame: o,
                        isOverride: u.has(o.exePath),
                        nowPlaying: !0
                    }, (0, S.gameKey)(o)) : (0, a.jsx)(y, {}), (0, a.jsxs)("div", {
                        className: l()(L.nowPlayingAdd, U.marginReset, U.marginTop8, U.marginBottom20),
                        children: [(0, a.jsx)("span", {
                            children: x.default.Messages.SETTINGS_GAMES_NOT_SEEING_GAME
                        }), (0, a.jsx)(d.Popout, {
                            renderPopout: e => {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(F, {
                                    onClose: t
                                })
                            },
                            align: "center",
                            position: "bottom",
                            children: e => (0, a.jsx)(d.Button, {
                                ...e,
                                look: d.ButtonLooks.LINK,
                                size: d.ButtonSizes.MIN,
                                color: d.ButtonColors.LINK,
                                children: x.default.Messages.SETTINGS_GAMES_ADD_GAME
                            })
                        })]
                    }), 0 === i.length ? (0, a.jsx)(V, {
                        children: (0, a.jsx)(d.EmptyStateText, {
                            children: x.default.Messages.SETTINGS_GAMES_NO_GAMES_HEADER
                        })
                    }) : (0, a.jsxs)(d.FormSection, {
                        className: U.marginTop40,
                        children: [(0, a.jsx)(d.FormTitle, {
                            className: U.marginBottom4,
                            children: x.default.Messages.SETTINGS_GAMES_ADDED_GAMES_LABEL
                        }), (0, a.jsx)(d.FormText, {
                            type: d.FormTextTypes.DESCRIPTION,
                            children: x.default.Messages.SETTINGS_GAMES_IGDB_ATTRIBUTION.format({
                                igdbLink: "https://www.igdb.com/about"
                            })
                        }), i.map(e => (0, a.jsx)(B, {
                            rawGame: e,
                            isOverride: u.has(e.exePath)
                        }, (0, S.gameKey)(e)))]
                    })]
                })
            }
        },
        88624: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("346951"),
                u = s("644744"),
                c = s("792423"),
                S = s("674985"),
                E = s("594174"),
                T = s("63063"),
                _ = s("843200"),
                I = s("981631"),
                N = s("689938"),
                g = s("459056");
            class f extends n.PureComponent {
                renderIntroHeader() {
                    let {
                        houseMembership: e
                    } = this.props;
                    return null == e ? N.default.Messages.HYPESQUAD_HEADING : N.default.Messages.HYPESQUAD_HEADING_EXISTING_MEMBER
                }
                render() {
                    let {
                        houseMembership: e,
                        isClaimed: t,
                        isVerified: s
                    } = this.props;
                    return (0, a.jsxs)(o.HeadingLevel, {
                        component: (0, a.jsxs)("div", {
                            className: g.intro,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-xxl/semibold",
                                className: g.introHeader,
                                children: this.renderIntroHeader()
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-lg/normal",
                                children: N.default.Messages.HYPESQUAD_SUBHEADING
                            })]
                        }),
                        children: [(0, a.jsx)(_.default, {
                            className: g.verificationNotice,
                            unclaimedNotice: N.default.Messages.HYPESQUAD_UNCLAIMED_ACCOUNT_NOTICE,
                            unverifiedNotice: N.default.Messages.HYPESQUAD_UNVERIFIED_EMAIL_NOTICE
                        }), (0, a.jsx)(u.default, {
                            houseMembership: e,
                            isClaimed: t,
                            isVerified: s
                        }), (0, a.jsx)(d.default, {}), (0, a.jsx)(c.default, {
                            isHypeSquadOnlineMember: null != e
                        }), (0, a.jsx)(o.Card, {
                            className: g.attendeeCTA,
                            children: N.default.Messages.HYPESQUAD_ATTENDEE_CTA.format({
                                url: T.default.getArticleURL(I.HelpdeskArticles.PROFILE_BADGES)
                            })
                        })]
                    })
                }
            }
            t.default = r.default.connectStores([E.default, S.default], () => {
                let e = E.default.getCurrentUser();
                return l()(null != e, "UserSettingsHypeSquad: currentUser cannot be undefined"), {
                    houseMembership: S.default.getHouseMembership(),
                    isClaimed: e.isClaimed(),
                    isVerified: e.verified
                }
            })(f)
        },
        387747: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("410575"),
                i = s("100527"),
                l = s("211242"),
                r = s("89057"),
                o = s("223639"),
                d = s("347475"),
                u = s("977156"),
                c = s("97926"),
                S = s("921801"),
                E = s("541540"),
                T = s("206339"),
                _ = s("726985"),
                I = s("981631"),
                N = s("46140"),
                g = s("313026");

            function f() {
                let e = (0, u.useIsEligibleForQuests)({
                        location: N.QuestsExperimentLocations.USER_SETTINGS_GIFT_INVENTORY
                    }),
                    {
                        enabled: t
                    } = o.default.useExperiment({
                        location: "UserSettingsInventory"
                    }, {
                        autoTrackExposure: !0
                    }),
                    s = (0, l.useBlockedPaymentsConfig)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [!s && (0, a.jsxs)(a.Fragment, {
                        children: [t && (0, a.jsx)(S.Subsetting, {
                            setting: _.WebSetting.GIFT_NITRO,
                            children: (0, a.jsx)(d.default, {
                                location: i.default.USER_SETTINGS_GIFT_INVENTORY,
                                className: g.giftNitro,
                                imageClassName: g.giftNitroImage,
                                textContainerOverrideStyles: {
                                    padding: "32px",
                                    width: "360px"
                                },
                                analyticsLocation: {
                                    page: I.AnalyticsPages.GIFTING_SETTINGS,
                                    section: I.AnalyticsSections.GIFT_BANNER
                                }
                            })
                        }), (0, a.jsx)(S.Subsetting, {
                            setting: _.WebSetting.GIFT_CODE_REDEMPTION,
                            children: (0, a.jsx)(n.default, {
                                section: I.AnalyticsSections.LIBRARY_INVENTORY_CODE_REDEMPTION,
                                children: (0, a.jsx)(E.default, {})
                            })
                        })]
                    }), e && (0, a.jsx)(S.Subsetting, {
                        setting: _.WebSetting.GIFT_INVENTORY_QUESTS,
                        children: (0, a.jsx)(n.default, {
                            section: I.AnalyticsSections.QUESTS,
                            children: (0, a.jsx)(c.default, {})
                        })
                    }), !s && (0, a.jsx)(S.Subsetting, {
                        setting: _.WebSetting.GIFT_INVENTORY_LIST,
                        children: (0, a.jsx)(n.default, {
                            section: I.AnalyticsSections.LIBRARY_INVENTORY_GIFTS_LIST,
                            children: (0, a.jsx)(T.default, {})
                        })
                    }), s && (0, a.jsx)(S.Subsetting, {
                        setting: _.WebSetting.GIFT_BLOCKED_PAYMENTS,
                        children: (0, a.jsx)(r.BlockedPaymentsContentSettings, {})
                    })]
                })
            }
        },
        389650: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Y
                }
            }), s("47120"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("392711"),
                o = s.n(r),
                d = s("442837"),
                u = s("692547"),
                c = s("481060"),
                S = s("660216"),
                E = s("225433"),
                T = s("825209"),
                _ = s("721383"),
                I = s("612226"),
                N = s("714338"),
                g = s("924557"),
                f = s("74299"),
                m = s("131951"),
                A = s("556296"),
                C = s("808506"),
                O = s("285952"),
                h = s("474333"),
                R = s("63063"),
                p = s("358085"),
                M = s("13140"),
                D = s("210887"),
                x = s("659947"),
                L = s("981631"),
                P = s("420212"),
                b = s("689938"),
                v = s("996196"),
                U = s("164149"),
                j = s("611273");

            function G(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }

            function F(e) {
                let {
                    children: t
                } = e;
                return t([I.KeybindGroup.MESSAGE, I.KeybindGroup.NAVIGATION, I.KeybindGroup.DND, I.KeybindGroup.CHAT, I.KeybindGroup.VOICE_AND_VIDEO, I.KeybindGroup.MISCELLANEOUS])
            }
            let B = o()((0, I.getDefaultLayoutContent)()).filter(e => e.description !== b.default.Messages.KEYBIND_DESCRIPTION_MODAL_EASTER_EGG).groupBy(e => e.group).value(),
                y = d.default.connectStores([D.default], () => ({
                    theme: D.default.theme
                }))(c.EmptyState);
            class V extends n.PureComponent {
                renderMessage() {
                    let {
                        keybind: e
                    } = this.props, t = M.toString(e.shortcut);
                    return N.default.hasBind(t) ? (0, a.jsx)(c.FormText, {
                        className: v.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        style: {
                            color: u.default.unsafe_rawColors.RED_400.css
                        },
                        children: b.default.Messages.KEYBIND_CONFLICT
                    }) : P.NavigationShortcuts.has(t) ? (0, a.jsx)(c.FormText, {
                        className: v.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        style: {
                            color: u.default.unsafe_rawColors.RED_400.css
                        },
                        children: b.default.Messages.KEYBIND_NAVIGATION_CONFLICT.format({
                            keyboardNavArticle: R.default.getArticleURL(L.HelpdeskArticles.KEYBOARD_NAVIGATION)
                        })
                    }) : (0, a.jsx)(c.FormText, {
                        className: v.keybindMessage,
                        type: c.FormTextTypes.DESCRIPTION,
                        children: this.props.keybindDescriptions[e.action]
                    })
                }
                render() {
                    let {
                        managed: e,
                        enabled: t
                    } = this.props.keybind;
                    return (0, a.jsxs)(O.default, {
                        direction: O.default.Direction.VERTICAL,
                        className: l()(v.keybindGroup, U.card),
                        children: [!e && (0, a.jsx)(E.default, {
                            "aria-label": b.default.Messages.REMOVE_KEYBIND,
                            className: v.removeKeybind,
                            onClick: this.handleDeleteKeybind,
                            look: E.default.Looks.FILLED
                        }), (0, a.jsxs)(O.default, {
                            className: j.marginBottom8,
                            children: [(0, a.jsx)(O.default.Child, {
                                basis: "45%",
                                children: (0, a.jsx)(c.FormItem, {
                                    title: b.default.Messages.USER_SETTINGS_KEYBINDS_ACTION,
                                    className: v.item,
                                    children: (0, a.jsx)(c.SingleSelect, {
                                        value: this.props.keybind.action,
                                        options: this.props.keybindActionTypes,
                                        onChange: this.handleActionChanged,
                                        isDisabled: e
                                    })
                                })
                            }), (0, a.jsx)(O.default.Child, {
                                basis: "45%",
                                children: (0, a.jsx)(c.FormItem, {
                                    title: b.default.Messages.USER_SETTINGS_KEYBINDS_KEYBIND,
                                    className: v.item,
                                    children: (0, a.jsx)(T.default, {
                                        defaultValue: this.props.keybind.shortcut,
                                        onChange: this.handleShortcutChange
                                    })
                                })
                            }), (0, a.jsx)(O.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(c.FormItem, {
                                    className: v.switch,
                                    children: (0, a.jsx)(c.Tooltip, {
                                        text: b.default.Messages.USER_SETTINGS_KEYBIND_ENABLE_DISABLE,
                                        children: e => (0, a.jsx)("div", {
                                            ...e,
                                            children: (0, a.jsx)(c.Switch, {
                                                checked: t,
                                                onChange: this.handleEnableDisable
                                            })
                                        })
                                    })
                                })
                            })]
                        }), (0, a.jsx)(O.default.Child, {
                            children: this.renderMessage()
                        }), this.renderExtraSettings()]
                    })
                }
                renderExtraSettings() {
                    let {
                        action: e
                    } = this.props.keybind;
                    if (e === L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL) return (0, a.jsx)(x.default, {
                        keybind: this.props.keybind
                    })
                }
                constructor(...e) {
                    super(...e), G(this, "handleActionChanged", e => {
                        S.default.setKeybind({
                            ...this.props.keybind,
                            action: e
                        })
                    }), G(this, "handleShortcutChange", e => {
                        S.default.setKeybind({
                            ...this.props.keybind,
                            shortcut: e
                        })
                    }), G(this, "handleDeleteKeybind", () => {
                        S.default.deleteKeybind(this.props.keybind.id)
                    }), G(this, "handleEnableDisable", () => {
                        let {
                            keybind: e
                        } = this.props;
                        S.default.setKeybind({
                            ...this.props.keybind,
                            enabled: !e.enabled
                        })
                    })
                }
            }
            class H extends n.PureComponent {
                componentDidMount() {
                    S.default.enableAll(!1)
                }
                componentWillUnmount() {
                    S.default.enableAll(!0)
                }
                get keybindActionTypes() {
                    let {
                        overlaySupported: e,
                        canGoLive: t,
                        allowSoundboard: s,
                        enableClips: a
                    } = this.props, n = [{
                        value: L.GlobalKeybindActions.UNASSIGNED,
                        label: b.default.Messages.KEYBIND_UNASSIGNED
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_TALK,
                        label: b.default.Messages.KEYBIND_PUSH_TO_TALK
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY,
                        label: b.default.Messages.KEYBIND_PUSH_TO_TALK_PRIORITY
                    }, {
                        value: L.GlobalKeybindActions.PUSH_TO_MUTE,
                        label: b.default.Messages.KEYBIND_PUSH_TO_MUTE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_MUTE,
                        label: b.default.Messages.KEYBIND_TOGGLE_MUTE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_DEAFEN,
                        label: b.default.Messages.KEYBIND_TOGGLE_DEAFEN
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_VOICE_MODE,
                        label: b.default.Messages.KEYBIND_TOGGLE_VOICE_MODE
                    }, {
                        value: L.GlobalKeybindActions.TOGGLE_STREAMER_MODE,
                        label: b.default.Messages.KEYBIND_TOGGLE_STREAM_MODE
                    }];
                    return e && (n.push({
                        value: L.GlobalKeybindActions.TOGGLE_OVERLAY,
                        label: b.default.Messages.KEYBIND_TOGGLE_OVERLAY
                    }), n.push({
                        value: L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK,
                        label: b.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK
                    }), n.push({
                        value: L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET,
                        label: b.default.Messages.KEYBIND_ACTIVATE_OVERLAY_CHAT
                    })), t && (0, p.isWindows)() && n.push({
                        value: L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING,
                        label: b.default.Messages.KEYBIND_TOGGLE_GO_LIVE_STREAMING
                    }), (0, p.isDesktop)() && (n.push({
                        value: L.GlobalKeybindActions.NAVIGATE_BACK,
                        label: b.default.Messages.KEYBIND_NAVIGATE_BACK
                    }, {
                        value: L.GlobalKeybindActions.NAVIGATE_FORWARD,
                        label: b.default.Messages.KEYBIND_NAVIGATE_FORWARD
                    }, {
                        value: L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL,
                        label: b.default.Messages.USER_SETTINGS_KEYBINDS_SWITCH_TO_VOICE_CHANNEL_LABEL
                    }, {
                        value: L.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL,
                        label: b.default.Messages.USER_SETTINGS_KEYBINDS_VOICE_CHANNEL_DISCONNECT_LABEL
                    }), s && n.push({
                        value: L.GlobalKeybindActions.SOUNDBOARD,
                        label: b.default.Messages.KEYBIND_SOUNDBOARD
                    }, {
                        value: L.GlobalKeybindActions.SOUNDBOARD_HOLD,
                        label: b.default.Messages.KEYBIND_SOUNDBOARD_HOLD
                    }), a && n.push({
                        value: L.GlobalKeybindActions.SAVE_CLIP,
                        label: b.default.Messages.CLIPS_SAVE
                    })), n
                }
                get keybindDescriptions() {
                    let {
                        overlaySupported: e,
                        canGoLive: t,
                        enableClips: s
                    } = this.props, a = {
                        [L.GlobalKeybindActions.UNASSIGNED]: b.default.Messages.KEYBIND_DESCRIPTION_UNASSIGNED,
                        [L.GlobalKeybindActions.PUSH_TO_MUTE]: b.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_MUTE,
                        [L.GlobalKeybindActions.PUSH_TO_TALK]: b.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK,
                        [L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: b.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK_PRIORITY,
                        [L.GlobalKeybindActions.TOGGLE_MUTE]: b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_MUTE,
                        [L.GlobalKeybindActions.TOGGLE_DEAFEN]: b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_DEAFEN,
                        [L.GlobalKeybindActions.TOGGLE_VOICE_MODE]: b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_VOICE_MODE,
                        [L.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_STREAMER_MODE
                    };
                    return e && (a[L.GlobalKeybindActions.TOGGLE_OVERLAY] = b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY, a[L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK] = b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY_INPUT_LOCK), t && (0, p.isWindows)() && (a[L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING] = b.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_GO_LIVE_STREAMING), (0, p.isDesktop)() && (a[L.GlobalKeybindActions.NAVIGATE_BACK] = b.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_BACK, a[L.GlobalKeybindActions.NAVIGATE_FORWARD] = b.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_FORWARD, a[L.GlobalKeybindActions.SOUNDBOARD] = (0, p.isWindows)() ? b.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_NO_POPOUT_WHEEL_SUPPORT : b.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD, a[L.GlobalKeybindActions.SOUNDBOARD_HOLD] = (0, p.isWindows)() ? b.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD_NO_POPOUT_WHEEL_SUPPORT : b.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD, s && (a[L.GlobalKeybindActions.SAVE_CLIP] = b.default.Messages.CLIPS_KEYBIND_DESCRIPTION)), a
                }
                renderKeybinds(e) {
                    return e.map(e => (0, a.jsx)("div", {
                        className: v.row,
                        children: (0, a.jsx)(V, {
                            keybind: e,
                            keybindDescriptions: this.keybindDescriptions,
                            keybindActionTypes: this.keybindActionTypes
                        }, e.id)
                    }, e.id))
                }
                renderEmpty(e) {
                    if (0 === e.length) return (0, a.jsx)(y, {
                        className: j.marginTop60,
                        children: (0, a.jsx)(c.EmptyStateImage, {
                            darkSrc: s("572279"),
                            lightSrc: s("871803"),
                            width: 320,
                            height: 170
                        })
                    })
                }
                render() {
                    let e = this.props.enableClips,
                        t = o()(this.props.keybinds).reject(e => e.managed && ![L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET, L.GlobalKeybindActions.SAVE_CLIP].includes(e.action)).reject(t => !e && t.action === L.GlobalKeybindActions.SAVE_CLIP).reject(e => !this.props.allowSoundboard && (e.action === L.GlobalKeybindActions.SOUNDBOARD || e.action === L.GlobalKeybindActions.SOUNDBOARD_HOLD)).sortBy(e => e.id).sortBy(e => !0 === e.managed ? -1 : 0).value();
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(c.FormSection, {
                            tag: c.FormTitleTags.H1,
                            title: b.default.Messages.KEYBINDS,
                            children: p.isPlatformEmbedded ? (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsxs)(O.default, {
                                    justify: O.default.Justify.BETWEEN,
                                    className: j.marginBottom20,
                                    children: [(0, a.jsx)(O.default.Child, {
                                        grow: 0,
                                        children: (0, a.jsx)(h.default, {
                                            messageType: h.HelpMessageTypes.WARNING,
                                            children: b.default.Messages.ADD_KEYBIND_WARNING
                                        })
                                    }), (0, a.jsx)(O.default.Child, {
                                        wrap: !0,
                                        grow: 0,
                                        children: (0, a.jsx)(c.Button, {
                                            size: c.ButtonSizes.LARGE,
                                            onClick: this.handleAddKeybind,
                                            children: b.default.Messages.ADD_KEYBIND
                                        })
                                    })]
                                }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsxs)(c.FormSection, {
                                    children: [this.renderKeybinds(t), this.renderEmpty(t)]
                                })]
                            }) : (0, a.jsx)(h.default, {
                                messageType: h.HelpMessageTypes.INFO,
                                textVariant: "text-lg/medium",
                                className: v.browserNotice,
                                children: b.default.Messages.KEYBIND_IN_BROSWER_NOTICE.format({
                                    downloadLink: L.MarketingURLs.DOWNLOAD
                                })
                            })
                        }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsxs)(c.FormSection, {
                            tag: c.FormTitleTags.H1,
                            title: b.default.Messages.USER_SETTINGS_KEYBINDS_DEFAULT_KEYBINDS_TITLE,
                            className: j.marginTop60,
                            children: [(0, a.jsxs)("div", {
                                className: v.defaultKeybind,
                                children: [(0, a.jsx)(c.Text, {
                                    variant: "text-md/normal",
                                    children: b.default.Messages.USER_SETTINGS_KEYBINDS_SHOW_LIST_TITLE
                                }), (0, a.jsx)("div", {
                                    className: v.defaultKeybindShortcutGroup,
                                    children: (0, a.jsx)(c.KeyCombo, {
                                        shortcut: _.TOGGLE_HOTKEYS.binds["0"],
                                        className: v.__invalid_defaultKeybindShortcut
                                    })
                                })]
                            }), (0, a.jsx)(c.FormDivider, {}), (0, a.jsx)(F, {
                                children: e => (0, a.jsx)(a.Fragment, {
                                    children: e.map((e, t) => {
                                        let s = (0, I.getNameForKeybindGroup)(e),
                                            i = (0, I.getDescriptionForKeybindGroup)(e),
                                            r = B[e];
                                        return (0, a.jsxs)("div", {
                                            className: v.defaultKeybindGroup,
                                            children: [(0, a.jsx)(c.Heading, {
                                                variant: "heading-deprecated-12/semibold",
                                                className: l()(v.defaultKeybindGroupHeader, {
                                                    [v.defaultKeybindGroupWithDescription]: null != i
                                                }),
                                                children: s
                                            }), null != i && (0, a.jsx)(c.Text, {
                                                color: "header-secondary",
                                                className: v.defaultKeybindGroupDescription,
                                                variant: "text-sm/normal",
                                                children: i
                                            }), (0, a.jsx)(c.FormDivider, {}), r.map(e => (0, a.jsxs)(n.Fragment, {
                                                children: [(0, a.jsxs)("div", {
                                                    className: v.defaultKeybind,
                                                    children: [(0, a.jsx)(c.Text, {
                                                        variant: "text-md/normal",
                                                        children: e.description
                                                    }), (0, a.jsx)("div", {
                                                        className: v.defaultKeybindShortcutGroup,
                                                        children: e.binds.map(e => (0, a.jsx)(c.KeyCombo, {
                                                            shortcut: e
                                                        }, e))
                                                    })]
                                                }), (0, a.jsx)(c.FormDivider, {})]
                                            }, e.description))]
                                        }, t)
                                    })
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), G(this, "handleAddKeybind", () => {
                        S.default.addKeybind()
                    })
                }
            }

            function Y() {
                let e = (0, d.useStateFromStores)([A.default], () => A.default.getState()),
                    t = (0, d.useStateFromStores)([m.default], () => (0, f.default)(m.default)),
                    s = (0, d.useStateFromStores)([C.default], () => C.default.isSupported()),
                    n = (0, g.useEnableClips)();
                return (0, a.jsx)(H, {
                    keybinds: e,
                    canGoLive: t,
                    overlaySupported: s,
                    allowSoundboard: (0, p.isWindows)(),
                    enableClips: n
                })
            }
        },
        649157: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("153867"),
                o = s("706454"),
                d = s("689938"),
                u = s("769897"),
                c = s("444675");
            t.default = i.default.connectStores([o.default], () => ({
                currentLocale: o.default.locale
            }))(function(e) {
                let [t, i] = n.useState(e.currentLocale), [o] = n.useState(() => d.default.getAvailableLocales().map(e => {
                    let t;
                    try {
                        t = s("333369")("@discordapp/common/images/flags/".concat(e.value, ".png").replace("@discordapp/common/images/flags/", "./"))
                    } catch (e) {
                        t = s("1474")
                    }
                    return {
                        ...e,
                        name: (0, a.jsxs)("div", {
                            className: u.option,
                            children: [(0, a.jsx)("span", {
                                className: u.localeName,
                                children: e.name
                            }), (0, a.jsx)("span", {
                                className: u.localizedName,
                                children: e.localizedName
                            }), (0, a.jsx)("div", {
                                className: u.flag,
                                "aria-hidden": !0,
                                children: (0, a.jsx)("img", {
                                    alt: "",
                                    src: t,
                                    className: u.flagImage
                                })
                            })]
                        })
                    }
                })), S = n.useCallback(e => {
                    let {
                        value: t
                    } = e;
                    i(t), c.nextTick(() => r.default.updateLocale(t))
                }, []);
                return (0, a.jsx)(l.FormSection, {
                    tag: l.FormTitleTags.H1,
                    title: d.default.Messages.LANGUAGE,
                    children: (0, a.jsx)(l.FormSection, {
                        children: (0, a.jsx)(l.FormItem, {
                            title: d.default.Messages.LANGUAGE_SELECT,
                            children: (0, a.jsx)(l.RadioGroup, {
                                onChange: S,
                                options: o,
                                value: t
                            })
                        })
                    })
                })
            })
        },
        593648: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return et
                }
            }), s("653041"), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("392711"),
                o = s.n(r),
                d = s("442837"),
                u = s("481060"),
                c = s("668781"),
                S = s("292556"),
                E = s("92114"),
                T = s("419363"),
                _ = s("818083"),
                I = s("688465"),
                N = s("487419"),
                g = s("378364"),
                f = s("197344"),
                m = s("734934"),
                A = s("223683"),
                C = s("312400"),
                O = s("115345"),
                h = s("392888"),
                R = s("921801"),
                p = s("657254"),
                M = s("470647"),
                D = s("292959"),
                x = s("9156"),
                L = s("632184"),
                P = s("626135"),
                b = s("912101"),
                v = s("358085"),
                U = s("709054"),
                j = s("557177"),
                G = s("695346"),
                F = s("675478"),
                B = s("33656"),
                y = s("726985"),
                V = s("981631"),
                H = s("468788"),
                Y = s("689938"),
                k = s("153764"),
                w = s("611273");

            function W(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }

            function K(e) {
                let {
                    label: t,
                    enabled: s,
                    disabled: n,
                    onPreview: i,
                    onChange: l,
                    tooltip: r
                } = e;
                return (0, a.jsx)(u.FormSwitch, {
                    className: k.soundRow,
                    value: s,
                    onChange: l,
                    disabled: n,
                    tooltipNote: r,
                    children: (0, a.jsxs)("div", {
                        className: k.notificationSound,
                        children: [(0, a.jsx)("div", {
                            className: k.soundName,
                            children: t
                        }), (0, a.jsx)(u.Clickable, {
                            className: k.soundIcon,
                            onClick: i,
                            "aria-label": Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_PREVIEW_SOUND,
                            children: (0, a.jsx)(L.default, {
                                width: 16,
                                height: 16,
                                className: k.icon,
                                "aria-hidden": !0
                            })
                        })]
                    })
                })
            }

            function Q(e) {
                let {
                    disabledSounds: t,
                    disableAllSounds: s,
                    notifyMessagesInSelectedChannel: i
                } = e, {
                    allowAprilFoolsSoundpack: r
                } = p.default.useExperiment({
                    location: "791c79_1"
                }, {
                    autoTrackExposure: !1
                }), o = f.default.useIsRingtoneEligible();
                n.useEffect(() => {
                    p.default.trackExposure({
                        location: "791c79_3"
                    })
                }, []);
                let d = n.useRef(),
                    c = (0, m.useFocusModeEnabled)(),
                    E = n.useCallback((e, t) => {
                        t.stopPropagation(), t.preventDefault(), null != d.current && d.current.stop(), d.current = j.playSound(e)
                    }, []),
                    T = n.useCallback((e, s) => {
                        let a = t.filter(t => t !== e);
                        !s && a.push(e), e === g.default.ringtone && P.default.track(V.AnalyticEvents.EVENT_RINGTONE_TOGGLED, {
                            toggled_on: s,
                            sound_name: e
                        }), S.default.setDisabledSounds(a)
                    }, [t]);
                n.useEffect(() => () => {
                    var e;
                    null === (e = d.current) || void 0 === e || e.stop()
                });
                let _ = [{
                    label: Y.default.Messages.SOUND_MESSAGE,
                    sound: "message1",
                    focusModeDisabled: c
                }, {
                    label: Y.default.Messages.SOUND_DEAFEN,
                    sound: "deafen"
                }, {
                    label: Y.default.Messages.SOUND_UNDEAFEN,
                    sound: "undeafen"
                }, {
                    label: Y.default.Messages.MUTE,
                    sound: "mute"
                }, {
                    label: Y.default.Messages.UNMUTE,
                    sound: "unmute"
                }, {
                    label: Y.default.Messages.SOUND_VOICE_DISCONNECTED,
                    sound: "disconnect"
                }, {
                    label: Y.default.Messages.SOUND_PTT_ACTIVATE,
                    sound: "ptt_start"
                }, {
                    label: Y.default.Messages.SOUND_PTT_DEACTIVATE,
                    sound: "ptt_stop"
                }, {
                    label: Y.default.Messages.SOUND_USER_JOIN,
                    sound: "user_join"
                }, {
                    label: Y.default.Messages.SOUND_USER_LEAVE,
                    sound: "user_leave"
                }, {
                    label: Y.default.Messages.SOUND_USER_MOVED,
                    sound: "user_moved"
                }, {
                    label: Y.default.Messages.SOUND_OUTGOING_RING,
                    sound: "call_calling"
                }, {
                    label: Y.default.Messages.SOUND_INCOMING_RING,
                    sound: "call_ringing"
                }, ...o ? [{
                    label: g.default.getRingtoneSettingsLabel(),
                    sound: g.default.ringtone,
                    disabled: t.includes("call_ringing")
                }] : [], {
                    label: Y.default.Messages.SOUND_STREAM_STARTED,
                    sound: "stream_started"
                }, {
                    label: Y.default.Messages.SOUND_STREAM_STOPPED,
                    sound: "stream_ended"
                }, {
                    label: Y.default.Messages.SOUND_VIEWER_JOIN,
                    sound: "stream_user_joined"
                }, {
                    label: Y.default.Messages.SOUND_VIEWER_LEAVE,
                    sound: "stream_user_left"
                }, {
                    label: Y.default.Messages.SOUND_ACTIVITY_START,
                    sound: "activity_launch"
                }, {
                    label: Y.default.Messages.SOUND_ACTIVITY_END,
                    sound: "activity_end"
                }, {
                    label: Y.default.Messages.SOUND_ACTIVITY_USER_JOIN,
                    sound: "activity_user_join"
                }, {
                    label: Y.default.Messages.SOUND_ACTIVITY_USER_LEAVE,
                    sound: "activity_user_left"
                }, {
                    label: Y.default.Messages.SOUND_INVITED_TO_SPEAK,
                    sound: "reconnect"
                }];
                return (0, a.jsx)(R.Subsetting, {
                    setting: y.WebSetting.NOTIFICATIONS_SOUNDS,
                    children: (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H1,
                        title: Y.default.Messages.SOUNDS,
                        children: [r ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(u.FormTitle, {
                                className: w.marginBottom20,
                                children: Y.default.Messages.SOUNDPACK_LABEL
                            }), (0, a.jsx)(M.default, {
                                className: l()(k.soundpackSelect, w.marginBottom40)
                            })]
                        }) : null, (0, a.jsx)(u.FormSwitch, {
                            note: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_NOTE,
                            value: i,
                            onChange: S.default.setNotifyMessagesInSelectedChannel,
                            children: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_LABEL
                        }), (0, a.jsx)(u.FormSwitch, {
                            note: Y.default.Messages.SOUND_DISABLE_ALL_NOTE,
                            value: s,
                            onChange: S.default.toggleDisableAllSounds,
                            children: Y.default.Messages.SOUND_DISABLE_ALL
                        }), _.map(e => {
                            let {
                                label: n,
                                sound: i,
                                disabled: l,
                                focusModeDisabled: r
                            } = e;
                            return (0, a.jsx)(K, {
                                label: n,
                                disabled: s || !0 === l || !0 === r,
                                tooltip: r ? Y.default.Messages.QUIET_MODE_DISABLED_BY : void 0,
                                onChange: e => T(i, e),
                                onPreview: e => E(i, e),
                                enabled: !s && !t.includes(i) && !0 !== r
                            }, i)
                        })]
                    })
                })
            }

            function z() {
                let e = (0, d.useStateFromStores)([N.default], () => N.default.getGuildAlertSettings()),
                    [t, s] = n.useState(null),
                    i = U.default.keys(e).map(t => {
                        let s = e[t];
                        return {
                            label: s.guildName,
                            value: s.guildId
                        }
                    });
                return 0 === Object.keys(e).length ? null : (0, a.jsxs)(R.Subsetting, {
                    setting: y.WebSetting.NOTIFICATIONS_COMMUNITY_ACTIVITY_ALERTS,
                    children: [(0, a.jsxs)(u.Heading, {
                        variant: "heading-lg/semibold",
                        className: l()(k.titleWithBeta, w.marginBottom20),
                        children: [Y.default.Messages.GUILD_COMMUNITY_ALERTS_HEADER, (0, a.jsx)(I.default, {})]
                    }), (0, a.jsx)(u.FormText, {
                        type: u.FormTextTypes.DESCRIPTION,
                        className: w.marginBottom20,
                        children: Y.default.Messages.GUILD_COMMUNITY_ALERTS_DESCRIPTION
                    }), (0, a.jsxs)(u.FormItem, {
                        title: Y.default.Messages.GUILD_COMMUNITY_ALERTS_CHOOSE_SERVER,
                        children: [(0, a.jsx)(u.SingleSelect, {
                            className: null != t ? w.marginBottom20 : w.marginBottom40,
                            value: t,
                            onChange: e => {
                                s(e)
                            },
                            options: i
                        }), null != t ? (0, a.jsxs)("div", {
                            className: w.marginTop20,
                            children: [(0, a.jsxs)(R.Subsetting, {
                                setting: y.WebSetting.NOTIFICATIONS_COMMUNITY_IN_APP_ALERTS,
                                children: [(0, a.jsx)(u.FormSwitch, {
                                    className: l()(w.marginBottom20),
                                    note: Y.default.Messages.GUILD_COMMUNITY_ALERTS_NAG_DESCRIPTION,
                                    value: !e[t].disableRaidAlertNag,
                                    onChange: () => {
                                        (0, F.updateUserGuildSettings)(t, e => {
                                            e.disableRaidAlertNag = !e.disableRaidAlertNag
                                        }, F.UserSettingsDelay.INFREQUENT_USER_ACTION)
                                    },
                                    hideBorder: !0,
                                    children: Y.default.Messages.GUILD_COMMUNITY_ALERTS_NAG_HEADER
                                }), (0, a.jsx)(u.FormDivider, {
                                    className: l()(w.marginTop20, w.marginBottom40)
                                })]
                            }), (0, a.jsxs)(R.Subsetting, {
                                setting: y.WebSetting.NOTIFICATIONS_COMMUNITY_PUSH_NOTIFICATIONS,
                                children: [(0, a.jsx)(u.FormSwitch, {
                                    className: w.marginBottom20,
                                    note: Y.default.Messages.GUILD_COMMUNITY_ALERTS_PUSH_DESCRIPTION,
                                    value: !e[t].disableRaidAlertPush,
                                    onChange: () => {
                                        (0, F.updateUserGuildSettings)(t, e => {
                                            e.disableRaidAlertPush = !e.disableRaidAlertPush
                                        }, F.UserSettingsDelay.INFREQUENT_USER_ACTION)
                                    },
                                    hideBorder: !0,
                                    children: Y.default.Messages.GUILD_COMMUNITY_ALERTS_PUSH_HEADER
                                }), (0, a.jsx)(u.FormDivider, {
                                    className: l()(w.marginTop20, w.marginBottom40)
                                })]
                            })]
                        }) : null, null != t ? null : (0, a.jsx)(u.FormDivider, {
                            className: l()(w.marginTop20, w.marginBottom40)
                        })]
                    })]
                })
            }
            class X extends n.PureComponent {
                handleDesktopChange(e) {
                    let t = e ? V.DesktopNotificationTypes.ALL : V.DesktopNotificationTypes.NEVER;
                    if (t !== V.DesktopNotificationTypes.NEVER) {
                        var s;
                        s = "UserSettingsModal", b.default.requestPermission(e => {
                            let t = e ? V.NotificationPermissionTypes.ENABLED : V.NotificationPermissionTypes.BLOCKED;
                            S.default.setPermissionsState(t, s)
                        })
                    } else S.default.setDesktopType(t)
                }
                handleTTSChange(e) {
                    let t = e.value;
                    S.default.setTTSType(t)
                }
                render() {
                    let {
                        desktopType: e,
                        afkTimeout: t,
                        disableUnreadBadge: s,
                        taskbarFlash: n,
                        disabledSounds: i,
                        disableAllSounds: r,
                        notifyMessagesInSelectedChannel: d,
                        focusMode: c
                    } = this.props, S = v.isPlatformEmbedded && (0, v.isWindows)(), E = o().range(1, 11).map(e => ({
                        value: 60 * e,
                        label: Y.default.Messages.DURATION_MINUTES.format({
                            minutes: e
                        })
                    }));
                    return (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H1,
                        title: Y.default.Messages.NOTIFICATIONS,
                        children: [(0, a.jsx)(R.Subsetting, {
                            setting: y.WebSetting.NOTIFICATIONS_ENABLE_DESKTOP,
                            children: (0, a.jsx)(u.FormSwitch, {
                                className: w.marginBottom20,
                                value: e !== V.DesktopNotificationTypes.NEVER && !c,
                                onChange: this.handleDesktopChange,
                                note: Y.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE_BODY,
                                disabled: c,
                                tooltipNote: c ? Y.default.Messages.QUIET_MODE_DISABLED_BY : void 0,
                                children: Y.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE
                            })
                        }), (0, a.jsx)(Z, {}), (0, a.jsx)(R.Subsetting, {
                            setting: y.WebSetting.NOTIFICATIONS_UNREAD_MESSAGE_BADGE,
                            children: (0, a.jsx)(u.FormSwitch, {
                                className: S ? w.marginBottom20 : w.marginBottom40,
                                value: !s,
                                note: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_BODY,
                                onChange: this.handleToggleShowUnreadBadge,
                                children: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_LABEL
                            })
                        }), S ? (0, a.jsx)(R.Subsetting, {
                            setting: y.WebSetting.NOTIFICATIONS_ENABLE_TASKBAR_FLASHING,
                            children: (0, a.jsx)(u.FormSwitch, {
                                className: w.marginBottom40,
                                value: n,
                                note: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_BODY,
                                onChange: this.handleToggleShowFlash,
                                children: Y.default.Messages.USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_LABEL
                            })
                        }) : null, (0, a.jsx)(J, {}), (0, a.jsx)(R.Subsetting, {
                            setting: y.WebSetting.NOTIFICATIONS_PUSH_INACTIVE_TIMEOUT,
                            children: (0, a.jsxs)(u.FormItem, {
                                title: Y.default.Messages.FORM_LABEL_PUSH_AFK_TIMEOUT,
                                children: [(0, a.jsx)(u.SingleSelect, {
                                    value: t,
                                    onChange: G.AfkTimeout.updateSetting,
                                    options: E
                                }), (0, a.jsx)(u.FormText, {
                                    type: u.FormTextTypes.DESCRIPTION,
                                    className: w.marginTop8,
                                    children: Y.default.Messages.FORM_DESCRIPTION_PUSH_AFK_TIMEOUT
                                }), (0, a.jsx)(u.FormDivider, {
                                    className: l()(w.marginTop40, w.marginBottom40)
                                })]
                            })
                        }), this.renderTTS(), (0, a.jsx)(z, {}), (0, a.jsx)(u.FormItem, {
                            children: (0, a.jsx)(Q, {
                                disabledSounds: i,
                                disableAllSounds: r,
                                notifyMessagesInSelectedChannel: d
                            })
                        }), (0, a.jsx)(B.default, {})]
                    })
                }
                constructor(...e) {
                    super(...e), W(this, "handleToggleShowUnreadBadge", () => {
                        S.default.setDisableUnreadBadge(!this.props.disableUnreadBadge)
                    }), W(this, "handleToggleShowFlash", () => {
                        S.default.setTaskbarFlash(!this.props.taskbarFlash)
                    }), W(this, "renderTTS", () => {
                        if (!T.supported) return null;
                        let e = [{
                            name: Y.default.Messages.TTS_ALLS,
                            value: V.TTSNotificationTypes.ALL_CHANNELS
                        }, {
                            name: Y.default.Messages.TTS_CURRENT,
                            value: V.TTSNotificationTypes.SELECTED_CHANNEL
                        }, {
                            name: Y.default.Messages.TTS_NEVER,
                            value: V.TTSNotificationTypes.NEVER
                        }];
                        return (0, a.jsxs)(R.Subsetting, {
                            setting: y.WebSetting.NOTIFICATIONS_TEXT_TO_SPEECH,
                            children: [(0, a.jsxs)(u.FormItem, {
                                title: Y.default.Messages.FORM_LABEL_TTS_NOTIFICATIONS,
                                children: [(0, a.jsx)(u.FormText, {
                                    type: u.FormTextTypes.DESCRIPTION,
                                    className: w.marginBottom8,
                                    children: Y.default.Messages.FORM_DESCRIPTION_TTS
                                }), (0, a.jsx)(u.RadioGroup, {
                                    options: e,
                                    onChange: this.handleTTSChange,
                                    value: this.props.ttsType
                                })]
                            }), (0, a.jsx)(u.FormDivider, {
                                className: l()(w.marginTop40, w.marginBottom40)
                            })]
                        })
                    })
                }
            }
            let q = (0, _.createExperiment)({
                kind: "user",
                id: "2024-01_mention_on_all_messages",
                label: "Mention on all messages",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Increment mention count when receiving a message in a channel set to all messages",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function Z() {
                let e = q.useExperiment({
                        location: "settings"
                    }, {
                        autoTrackExposure: !1
                    }).enabled,
                    t = (0, d.useStateFromStores)([x.default], () => x.default.mentionOnAllMessages);
                return e ? (0, a.jsx)(R.Subsetting, {
                    setting: y.WebSetting.NOTIFICATIONS_MENTION_ON_ALL_MESSAGES,
                    children: (0, a.jsx)(u.FormSwitch, {
                        className: w.marginBottom20,
                        value: t,
                        onChange: e => {
                            E.default.setAccountFlag(H.AccountNotificationFlags.MENTION_ON_ALL_MESSAGES, e)
                        },
                        note: "Increments the mention count when receiving a message in a channel set to 'All Messages'",
                        children: "Mention on all messages?"
                    })
                }) : null
            }

            function J() {
                let e = C.NotificationsExperiment.useExperiment({
                        location: "UserSettingsNotifications"
                    }, {
                        autoTrackExposure: !1
                    }).enabled,
                    {
                        manuallyOpen: t
                    } = C.UnreadsEntryPointExperiment.useExperiment({
                        location: "UserSettingsNotifications"
                    }, {
                        autoTrackExposure: !1
                    }),
                    s = (0, d.useStateFromStores)([x.default], () => x.default.useNewNotifications),
                    [i, l] = n.useState(!1);
                return e && (s || t) ? (0, a.jsxs)(a.Fragment, {
                    children: [s ? (0, a.jsx)(R.Subsetting, {
                        setting: y.WebSetting.NOTIFICATIONS_UNREAD_SETTINGS,
                        children: (0, a.jsx)(u.FormSwitch, {
                            className: w.marginBottom40,
                            style: {
                                marginTop: -20
                            },
                            value: s,
                            disabled: i || !s,
                            note: Y.default.Messages.NOTIF_MIGRATION_SETTINGS_SUBTITLE,
                            onChange: () => $(l),
                            children: Y.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE
                        })
                    }) : t ? (0, a.jsx)(R.Subsetting, {
                        setting: y.WebSetting.NOTIFICATIONS_UNREAD_SETTINGS,
                        children: (0, a.jsx)(u.FormSwitch, {
                            className: w.marginBottom40,
                            value: s,
                            disabled: i || s,
                            note: "Turns on the new notification system",
                            onChange: () => (0, h.openMigrationModal)(!0),
                            children: Y.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE
                        })
                    }) : null, null]
                }) : null
            }
            async function $(e) {
                e(!0);
                let t = await (0, A.listSnapshots)();
                0 === t.length ? await (0, O.revertToOldSystem)() : c.default.show({
                    title: Y.default.Messages.CONFIRM,
                    body: Y.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_BODY.format({
                        date: new Date(t[t.length - 1].recorded_at)
                    }),
                    cancelText: Y.default.Messages.CANCEL,
                    confirmText: Y.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_ACTION,
                    onConfirm: O.revertToOldSystem
                }), e(!1)
            }

            function ee(e) {
                let t = (0, m.useFocusModeEnabled)();
                return (0, a.jsx)(X, {
                    ...e,
                    focusMode: t
                })
            }

            function et() {
                let e = (0, d.useStateFromStoresObject)([D.default], () => ({
                    disableUnreadBadge: D.default.getDisableUnreadBadge(),
                    taskbarFlash: D.default.taskbarFlash,
                    disabledSounds: D.default.getDisabledSounds(),
                    disableAllSounds: D.default.getDisableAllSounds(),
                    desktopType: D.default.getDesktopType(),
                    ttsType: D.default.getTTSType(),
                    notifyMessagesInSelectedChannel: D.default.getNotifyMessagesInSelectedChannel()
                }));
                return (0, a.jsx)(ee, {
                    ...e,
                    afkTimeout: G.AfkTimeout.useSetting()
                })
            }
        },
        327885: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return D
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("512722"),
                i = s.n(n),
                l = s("392711"),
                r = s.n(l),
                o = s("442837"),
                d = s("481060"),
                u = s("660216"),
                c = s("13245"),
                S = s("825209"),
                E = s("887278"),
                T = s("630699"),
                _ = s("658785"),
                I = s("556296"),
                N = s("808506"),
                g = s("237997"),
                f = s("739563"),
                m = s("626135");
            s("63063");
            var A = s("13140"),
                C = s("981631"),
                O = s("689938"),
                h = s("867541");
            let R = p(null);

            function p(e) {
                var t;
                let s = g.default.getNotificationPositionMode(),
                    a = s !== C.OverlayNotificationPositions.DISABLED,
                    n = I.default.getOverlayKeybind(),
                    i = I.default.getOverlayChatKeybind();
                return {
                    enabled: N.default.enabled,
                    notifications_enabled: a,
                    notifications_position: a ? s : null,
                    text_notifications_mode: g.default.getTextChatNotificationMode(),
                    hotkey: null != n ? (0, A.toString)(n.shortcut) : null,
                    text_activation_hotkey: null != i ? (0, A.toString)(i.shortcut) : null,
                    text_opacity_slider: g.default.getTextWidgetOpacity(),
                    old_enabled: null !== (t = null == e ? void 0 : e.enabled) && void 0 !== t ? t : N.default.enabled
                }
            }

            function M(e) {
                let {
                    children: t,
                    title: s
                } = e;
                return (0, a.jsx)(d.FormItem, {
                    title: s,
                    className: h.userSettingsOverlayField,
                    children: t
                })
            }

            function D(e) {
                let {
                    className: t,
                    showHeader: s = !0
                } = e, {
                    enabled: n,
                    legacyEnabled: l
                } = (0, o.useStateFromStoresObject)([N.default], () => ({
                    enabled: N.default.enabled,
                    legacyEnabled: N.default.legacyEnabled
                })), {
                    avatarSizeMode: A,
                    displayNameMode: D,
                    displayUserMode: x,
                    notificationPositionMode: L,
                    textChatNotificationMode: P,
                    shouldShowKeybindIndicators: b
                } = (0, o.useStateFromStoresObject)([g.default], () => ({
                    avatarSizeMode: g.default.getAvatarSizeMode(),
                    displayNameMode: g.default.getDisplayNameMode(),
                    displayUserMode: g.default.getDisplayUserMode(),
                    notificationPositionMode: g.default.getNotificationPositionMode(),
                    textChatNotificationMode: g.default.getTextChatNotificationMode(),
                    shouldShowKeybindIndicators: g.default.showKeybindIndicators
                })), v = (0, o.useStateFromStores)([I.default], () => I.default.getOverlayKeybind()), {
                    showKeybindIndicators: U
                } = _.default.useExperiment({
                    location: "overlay_user_settings"
                }), j = (0, E.isHookModuleTooOld)();

                function G(e) {
                    c.default.setEnabled(e, l), m.default.track(C.AnalyticEvents.OVERLAY_TOGGLED, {
                        enabled: e,
                        setting_type: "overlay toggled - global"
                    })
                }

                function F(e) {
                    c.default.setEnabled(n, e), m.default.track(C.AnalyticEvents.OVERLAY_TOGGLED, {
                        enabled: e,
                        setting_type: "overlay toggled - legacy"
                    })
                }
                return ! function() {
                    let e = p(R);
                    !r().isEqual(e, R) && (m.default.track(C.AnalyticEvents.OVERLAY_SETTINGS_UPDATED, e), R = e)
                }(), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(d.FormSection, {
                        className: t,
                        tag: d.FormTitleTags.H1,
                        title: s ? O.default.Messages.OVERLAY : null,
                        children: [!1, (0, a.jsxs)("div", {
                            className: h.enableOverlaySection,
                            children: [(0, T.isOOPExperimentEnabled)() ? (0, a.jsxs)(d.FormItem, {
                                title: O.default.Messages.SETTINGS_GAMES_ENABLE_OVERLAY_LABEL,
                                className: h.enableOverlayItem,
                                children: [(0, a.jsx)(d.FormSwitch, {
                                    className: h.enableSwitch,
                                    value: n,
                                    hideBorder: !0,
                                    onChange: G,
                                    children: O.default.Messages.ENABLE_INGAME_OVERLAY
                                }), (0, a.jsx)(d.FormSwitch, {
                                    className: h.enableSwitch,
                                    value: l,
                                    disabled: j || !n,
                                    note: j ? O.default.Messages.OVERLAY_DISABLED_OLD_CLIENT : null,
                                    hideBorder: !0,
                                    onChange: F,
                                    children: O.default.Messages.ENABLE_LEGACY_OVERLAY
                                })]
                            }) : (0, a.jsx)(d.FormItem, {
                                title: O.default.Messages.SETTINGS_GAMES_ENABLE_OVERLAY_LABEL,
                                className: h.enableOverlayItem,
                                children: (0, a.jsx)(d.FormSwitch, {
                                    className: h.enableSwitch,
                                    value: n,
                                    disabled: j,
                                    note: j ? O.default.Messages.OVERLAY_DISABLED_OLD_CLIENT : null,
                                    hideBorder: !0,
                                    onChange: G,
                                    children: O.default.Messages.ENABLE_INGAME_OVERLAY
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                title: O.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK,
                                className: h.enableOverlayItem,
                                children: (0, a.jsx)(S.default, {
                                    disabled: !n,
                                    defaultValue: null != v ? v.shortcut : [],
                                    onChange: function(e) {
                                        i()(null != v, "Keybind should never be undefined"), u.default.setKeybind({
                                            ...v,
                                            shortcut: e
                                        })
                                    }
                                })
                            })]
                        }), (0, a.jsx)(M, {
                            title: O.default.Messages.FORM_LABEL_AVATAR_SIZE,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: O.default.Messages.AVATAR_SIZE_OPTION_LARGE,
                                    value: C.OverlayAvatarSizes.LARGE
                                }, {
                                    name: O.default.Messages.AVATAR_SIZE_OPTION_SMALL,
                                    value: C.OverlayAvatarSizes.SMALL
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setAvatarSizeMode(t)
                                },
                                value: A
                            })
                        }), (0, a.jsx)(M, {
                            title: O.default.Messages.FORM_LABEL_DISPLAY_NAMES,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: O.default.Messages.DISPLAY_OPTION_ALWAYS,
                                    value: C.OverlayDisplayNames.ALWAYS
                                }, {
                                    name: O.default.Messages.DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                                    value: C.OverlayDisplayNames.ONLY_WHILE_SPEAKING
                                }, {
                                    name: O.default.Messages.DISPLAY_OPTION_NEVER,
                                    value: C.OverlayDisplayNames.NEVER
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setDisplayNameMode(t)
                                },
                                value: D
                            })
                        }), (0, a.jsx)(M, {
                            title: O.default.Messages.FORM_LABEL_DISPLAY_USERS,
                            children: (0, a.jsx)(d.RadioGroup, {
                                options: [{
                                    name: O.default.Messages.DISPLAY_OPTION_ALWAYS,
                                    value: C.OverlayDisplayUsers.ALWAYS
                                }, {
                                    name: O.default.Messages.DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                                    value: C.OverlayDisplayUsers.ONLY_WHILE_SPEAKING
                                }],
                                onChange: e => {
                                    let {
                                        value: t
                                    } = e;
                                    return c.default.setDisplayUserMode(t)
                                },
                                value: x
                            })
                        }), U && (0, a.jsx)(M, {
                            children: (0, a.jsx)(d.FormSwitch, {
                                value: b,
                                onChange: e => c.default.setShowKeybindIndicators(e),
                                hideBorder: !0,
                                children: O.default.Messages.FORM_LABEL_OVERLAY_SHOW_MUTE_DEAFEN_KEYBINDS
                            })
                        })]
                    }), (0, a.jsxs)(d.FormSection, {
                        tag: d.FormTitleTags.H1,
                        title: O.default.Messages.OVERLAY_NOTIFICATIONS_SETTINGS,
                        className: h.notificationSection,
                        children: [(0, a.jsx)(M, {
                            title: O.default.Messages.FORM_LABEL_NOTIFICATION_POSITION,
                            children: (0, a.jsx)("div", {
                                className: h.notificationSettings,
                                children: (0, a.jsx)(f.default, {
                                    position: L,
                                    onChange: (e, t) => c.default.setNotificationPositionMode(t)
                                })
                            })
                        }), (0, a.jsx)(M, {
                            children: (0, a.jsx)(d.FormSwitch, {
                                value: L !== C.OverlayNotificationPositions.DISABLED && P === C.OverlayNotificationTextChatTypes.ENABLED,
                                disabled: L === C.OverlayNotificationPositions.DISABLED,
                                onChange: function() {
                                    let {
                                        ENABLED: e,
                                        DISABLED: t
                                    } = C.OverlayNotificationTextChatTypes;
                                    c.default.setTextChatNotificationMode(P === e ? t : e)
                                },
                                hideBorder: !0,
                                children: O.default.Messages.FORM_LABEL_OVERLAY_TEXT_CHAT_NOTIFICATIONS
                            })
                        })]
                    })]
                })
            }
        },
        595242: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("570140"),
                u = s("355467"),
                c = s("179360"),
                S = s("821849"),
                E = s("15640"),
                T = s("314684"),
                _ = s("899667"),
                I = s("853872"),
                N = s("78839"),
                g = s("783739"),
                f = s("981631"),
                m = s("220439");

            function A() {
                n.useEffect(() => {
                    d.default.wait(() => {
                        u.fetchSubscriptions(), u.fetchPaymentSources(), (0, c.fetchGuildBoostSlots)(), (0, S.fetchPremiumSubscriptionPlans)(null, null, f.RevenueSurfaces.DISCOVERY), (0, c.fetchAppliedGuildBoostsForUser)(!0)
                    })
                }, []);
                let {
                    hasFetchedSubscriptions: e,
                    premiumSubscription: t
                } = (0, r.useStateFromStoresObject)([N.default], () => ({
                    hasFetchedSubscriptions: N.default.hasFetchedSubscriptions(),
                    premiumSubscription: N.default.getPremiumTypeSubscription()
                })), s = (0, E.useSubscriptionPlansLoaded)(), i = (0, r.useStateFromStores)([I.default], () => I.default.hasFetchedPaymentSources), A = (0, r.useStateFromStores)([_.default], () => _.default.isFetchingCurrentUserAppliedBoosts);
                return ((0, T.useFetchEntitlementsForTenureReward)(), e && s && i && !A) ? (0, a.jsxs)("div", {
                    className: m.container,
                    children: [(0, a.jsx)("div", {
                        className: m.background
                    }), (0, a.jsx)("div", {
                        className: m.content,
                        children: (0, a.jsx)(g.default, {
                            premiumSubscription: t
                        })
                    })]
                }) : (0, a.jsx)("div", {
                    className: l()(m.container, m.loading),
                    children: (0, a.jsx)(o.Spinner, {})
                })
            }
        },
        301121: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return ef
                }
            }), s("47120"), s("733860"), s("773603");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("120356"),
                o = s.n(r),
                d = s("512722"),
                u = s.n(d),
                c = s("913527"),
                S = s.n(c),
                E = s("442837"),
                T = s("524437"),
                _ = s("481060"),
                I = s("570140"),
                N = s("668781"),
                g = s("409700"),
                f = s("809206"),
                m = s("230711"),
                A = s("241420"),
                C = s("651530"),
                O = s("163268"),
                h = s("294602"),
                R = s("778825"),
                p = s("856768"),
                M = s("592204"),
                D = s("712950"),
                x = s("610697"),
                L = s("880257"),
                P = s("16703"),
                b = s("236289"),
                v = s("518560"),
                U = s("237292"),
                j = s("604849"),
                G = s("278828"),
                F = s("921801"),
                B = s("480294"),
                y = s("430824"),
                V = s("663389"),
                H = s("594174"),
                Y = s("285952"),
                k = s("153124"),
                w = s("626135"),
                W = s("63063"),
                K = s("78451"),
                Q = s("709054"),
                z = s("88658"),
                X = s("263399"),
                q = s("695346"),
                Z = s("3957"),
                J = s("279743"),
                $ = s("839469"),
                ee = s("973005"),
                et = s("703115"),
                es = s("526761"),
                ea = s("726985"),
                en = s("981631"),
                ei = s("800530"),
                el = s("689938"),
                er = s("79849"),
                eo = s("611273");

            function ed(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }

            function eu() {
                let e = (0, E.useStateFromStores)([R.default], () => R.default.getGuild()),
                    t = (0, P.default)(),
                    s = null != e ? e : t;
                l.useEffect(() => {
                    w.default.track(en.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: et.UserGuildPrivacySettingsAction.VIEW_SETTINGS_PAGE
                    })
                }, []);
                let a = l.useCallback(e => {
                    null != e && I.default.dispatch({
                        type: "GUILD_IDENTITY_SETTINGS_SET_GUILD",
                        guild: e
                    }), w.default.track(en.AnalyticEvents.USER_SERVER_PRIVACY_SETTINGS_ACTION, {
                        action: et.UserGuildPrivacySettingsAction.SELECT_GUILD,
                        guild_id: null == e ? void 0 : e.id
                    })
                }, []);
                return null == s ? null : (0, i.jsxs)(_.FormSection, {
                    tag: _.FormTitleTags.H1,
                    title: el.default.Messages.PRIVACY_AND_SAFETY,
                    children: [(0, i.jsx)(p.default, {
                        className: er.guildSelector,
                        guildId: s.id,
                        onChange: a
                    }), (0, i.jsx)(A.ConnectedPrivacySettings, {
                        guild: s,
                        ingress: A.PrivacySettingSurfaces.USER_SETTINGS_PRIVACY_SAFETY
                    })]
                })
            }

            function ec() {
                var e;
                let t = null === (e = (0, L.default)()) || void 0 === e || e,
                    s = (0, U.useIsEligibleForInappropriateConversationWarning)({
                        location: "user_settings_web"
                    }),
                    a = (0, j.useSafetyAlertsSettingOrDefault)(),
                    n = (0, Z.useScrollToSetting)(es.PrivacyAndSafetyScrollPositions.DM_SAFETY_ALERTS);
                return t || !s ? null : (0, i.jsxs)(F.Subsetting, {
                    setting: ea.WebSetting.PRIVACY_SAFETY_ALERTS,
                    children: [(0, i.jsx)(_.FormDivider, {
                        className: eo.marginBottom20
                    }), (0, i.jsx)(_.FormSection, {
                        ref: n,
                        children: (0, i.jsxs)(_.FormItem, {
                            className: o()(er.settingsBackgroundFlashElement),
                            children: [(0, i.jsx)(_.FormTitle, {
                                tag: _.FormTitleTags.H5,
                                faded: !0,
                                className: eo.marginBottom8,
                                children: el.default.Messages.SAFETY_ALERTS_SETTINGS_HEADER
                            }), (0, i.jsx)(_.FormSwitch, {
                                value: a,
                                note: el.default.Messages.SAFETY_ALERTS_SETTING_DESCRIPTION.format({
                                    learnMoreLink: W.default.getArticleURL(en.HelpdeskArticles.SAFETY_ALERTS)
                                }),
                                onChange: G.updateDmSafetyAlertsSetting,
                                hideBorder: !0,
                                children: el.default.Messages.SAFETY_ALERTS_SETTING_TITLE
                            }), (0, i.jsx)(J.default, {
                                animationDelay: 1e3,
                                scrollPosition: es.PrivacyAndSafetyScrollPositions.DM_SAFETY_ALERTS
                            })]
                        })
                    }), (0, i.jsx)(_.FormDivider, {
                        className: eo.marginBottom20
                    })]
                })
            }

            function eS(e, t) {
                w.default.track(en.AnalyticEvents.GUILD_DEFAULT_MESSAGE_REQUEST_UPDATED, {
                    default_guilds_restricted: e,
                    applied_to_existing_guilds: t
                })
            }

            function eE() {
                let e = (0, x.default)(),
                    t = q.DefaultGuildsRestricted.useSetting(),
                    s = q.MessageRequestRestrictedDefault.useSetting(),
                    a = (0, Z.useScrollToSetting)(es.PrivacyAndSafetyScrollPositions.DM_SAFETY_ALERTS);
                return e ? null : (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)("div", {
                        className: er.settingsBackgroundFlashElement,
                        children: [(0, i.jsx)(_.FormItem, {
                            ref: a,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: !s,
                                note: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_CAPTION.format({
                                    helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.MESSAGE_REQUESTS)
                                }),
                                disabled: t,
                                onChange: () => {
                                    var e;
                                    return e = !s, void eI({
                                        header: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_HEADER,
                                        body: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_DESCRIPTION,
                                        confirmText: el.default.Messages.NO_TEXT,
                                        cancelText: el.default.Messages.YES_TEXT,
                                        confirmButtonColor: _.Button.Colors.BRAND,
                                        onConfirm: () => {
                                            q.MessageRequestRestrictedDefault.updateSetting(e), eS(e, !1)
                                        },
                                        onCancel: () => {
                                            q.MessageRequestRestrictedDefault.updateSetting(e), q.MessageRequestRestrictedGuildIds.updateSetting(e ? Q.default.keys(y.default.getGuilds()) : []), eS(e, !0)
                                        }
                                    })
                                },
                                hideBorder: !0,
                                children: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_HEADER
                            })
                        }), (0, i.jsx)(J.default, {
                            animationDelay: 700,
                            scrollPosition: es.PrivacyAndSafetyScrollPositions.MESSAGE_REQUESTS
                        })]
                    }), (0, i.jsx)(_.FormDivider, {
                        className: eo.marginBottom20
                    })]
                })
            }

            function eT() {
                var e;
                let t = null === (e = (0, L.default)()) || void 0 === e || e,
                    {
                        explicitContentGuilds: s,
                        explicitContentFriendDm: a,
                        explicitContentNonFriendDm: n
                    } = (0, h.useExplicitContentSettingOrDefault)(),
                    l = (0, Z.useScrollToSetting)(es.PrivacyAndSafetyScrollPositions.DM_SAFETY_ALERTS),
                    r = [{
                        value: T.ExplicitContentRedaction.BLUR,
                        label: el.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR
                    }, {
                        value: T.ExplicitContentRedaction.BLOCK,
                        label: el.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLOCK
                    }],
                    o = [{
                        value: T.ExplicitContentRedaction.BLUR,
                        label: el.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR
                    }],
                    d = {
                        value: T.ExplicitContentRedaction.SHOW,
                        label: el.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_SHOW
                    };
                return t && (r.unshift(d), o.unshift(d)), (0, i.jsxs)(i.Fragment, {
                    children: [(0, i.jsxs)("div", {
                        className: er.settingsBackgroundFlashElement,
                        children: [(0, i.jsx)(_.FormTitle, {
                            tag: _.FormTitleTags.H5,
                            faded: !0,
                            className: eo.marginBottom8,
                            children: el.default.Messages.OBSCURED_CONTENT_SETTINGS_HEADER
                        }), (0, i.jsx)(_.FormText, {
                            type: _.FormTextTypes.DESCRIPTION,
                            className: eo.marginBottom8,
                            children: el.default.Messages.OBSCURED_CONTENT_SETTINGS_DESC.format({
                                learnMoreLink: W.default.getArticleURL(en.HelpdeskArticles.EXPLICIT_MEDIA_REDACTION)
                            })
                        }), (0, i.jsx)(_.FormItem, {
                            ref: l,
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            title: el.default.Messages.OBSCURED_CONTENT_SETTING_FRIENDS,
                            children: (0, i.jsx)(_.SingleSelect, {
                                options: r,
                                value: a,
                                onChange: e => (0, O.updateExplicitContentSetting)({
                                    explicitContentFriendDm: e
                                })
                            })
                        }), (0, i.jsx)(_.FormItem, {
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            title: el.default.Messages.OBSCURED_CONTENT_SETTING_NON_FRIENDS,
                            children: (0, i.jsx)(_.SingleSelect, {
                                options: r,
                                value: n,
                                onChange: e => (0, O.updateExplicitContentSetting)({
                                    explicitContentNonFriendDm: e
                                })
                            })
                        }), t && (0, i.jsx)(_.FormItem, {
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            title: el.default.Messages.OBSCURED_CONTENT_SETTING_GUILDS,
                            children: (0, i.jsx)(_.SingleSelect, {
                                options: o,
                                value: s,
                                onChange: e => (0, O.updateExplicitContentSetting)({
                                    explicitContentGuilds: e
                                })
                            })
                        }), (0, i.jsx)(J.default, {
                            scrollPosition: es.PrivacyAndSafetyScrollPositions.EXPLICIT_MEDIA_REDACTION
                        })]
                    }), (0, i.jsx)(_.FormDivider, {
                        className: eo.marginBottom20
                    })]
                })
            }

            function e_(e) {
                let {
                    modalProps: t,
                    settings: {
                        onConfirm: s,
                        ...a
                    }
                } = e, [n, r] = l.useState({
                    Account: {
                        value: "Account",
                        label: el.default.Messages.HARVEST_BACKEND_USERS,
                        checked: !1
                    },
                    Analytics: {
                        value: "Analytics",
                        label: el.default.Messages.HARVEST_BACKEND_ANALYTICS,
                        checked: !1
                    },
                    Activities: {
                        value: "Activities",
                        label: el.default.Messages.HARVEST_BACKEND_ACTIVITIES,
                        checked: !1
                    },
                    Messages: {
                        value: "Messages",
                        label: el.default.Messages.HARVEST_BACKEND_MESSAGES,
                        checked: !1
                    },
                    Programs: {
                        value: "Programs",
                        label: el.default.Messages.HARVEST_BACKEND_HUBSPOT,
                        checked: !1
                    },
                    Servers: {
                        value: "Servers",
                        label: el.default.Messages.HARVEST_BACKEND_GUILDS,
                        checked: !1
                    }
                }), o = e => (t, s) => {
                    r(t => ({
                        ...t,
                        [e]: {
                            ...t[e],
                            checked: s
                        }
                    }))
                };
                return (0, i.jsxs)(_.ConfirmModal, {
                    ...t,
                    ...a,
                    onConfirm: () => {
                        let e = Object.keys(n).filter(e => n[e].checked).map(e => n[e].value);
                        null == s || s(e)
                    },
                    children: [(0, i.jsx)(_.Text, {
                        variant: "text-md/normal",
                        style: {
                            marginBottom: "5px"
                        },
                        children: a.body
                    }), Object.keys(n).map(e => {
                        let {
                            label: t,
                            checked: s
                        } = n[e];
                        return (0, i.jsx)(_.Checkbox, {
                            type: _.Checkbox.Types.INVERTED,
                            value: s,
                            style: {
                                marginBottom: "2px"
                            },
                            onChange: o(e),
                            children: (0, i.jsx)(_.Text, {
                                variant: "text-md/normal",
                                children: t
                            })
                        }, e)
                    })]
                })
            }(n = a || (a = {})).USERS = "Account", n.MESSAGES = "Messages", n.GUILDS = "Servers", n.ANALYTICS = "Analytics", n.ACTIVITIES = "Activities", n.HUBSPOT = "Programs";

            function eI(e) {
                let {
                    body: t,
                    ...s
                } = e;
                (0, _.openModal)(e => (0, i.jsx)(_.ConfirmModal, {
                    ...e,
                    ...s,
                    children: (0, i.jsx)(_.Text, {
                        variant: "text-md/normal",
                        children: t
                    })
                }))
            }

            function eN(e) {
                let {
                    message: t
                } = e;
                eI({
                    header: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                    confirmText: el.default.Messages.OKAY,
                    body: t
                })
            }
            class eg extends l.PureComponent {
                componentDidMount() {
                    (0, g.fetchConsents)(), (0, f.getHarvestStatus)().then(e => {
                        let t = {
                            requestingHarvest: !1,
                            currentHarvestRequest: e.body
                        };
                        this.setState(t)
                    }, () => {
                        this.setState({
                            requestingHarvest: !1
                        })
                    })
                }
                componentDidUpdate(e) {
                    e.defaultGuildsRestricted !== this.props.defaultGuildsRestricted && this.setState({
                        defaultGuildsRestricted: this.props.defaultGuildsRestricted
                    })
                }
                showGuildRestrictionModal(e) {
                    eI({
                        header: el.default.Messages.USER_DM_SETTINGS_TITLE,
                        body: el.default.Messages.USER_DM_SETTINGS_DESCRIPTION,
                        confirmText: el.default.Messages.NO_TEXT,
                        cancelText: el.default.Messages.YES_TEXT,
                        confirmButtonColor: _.Button.Colors.BRAND,
                        onConfirm: () => {
                            q.DefaultGuildsRestricted.updateSetting(e), this.trackDefaultDmsUpdated(e, !1)
                        },
                        onCancel: () => {
                            q.DefaultGuildsRestricted.updateSetting(e), q.RestrictedGuildIds.updateSetting(e ? Q.default.keys(y.default.getGuilds()) : []), this.trackDefaultDmsUpdated(e, !0)
                        }
                    })
                }
                trackDefaultDmsUpdated(e, t) {
                    w.default.track(en.AnalyticEvents.GUILD_DEFAULT_DMS_UPDATED, {
                        default_guilds_restricted: e,
                        applied_to_existing_guilds: t
                    })
                }
                showMessageRequestRestrictionModal(e) {
                    eI({
                        header: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_HEADER,
                        body: el.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_DESCRIPTION,
                        confirmText: el.default.Messages.NO_TEXT,
                        cancelText: el.default.Messages.YES_TEXT,
                        confirmButtonColor: _.Button.Colors.BRAND,
                        onConfirm: () => {
                            q.MessageRequestRestrictedDefault.updateSetting(e), this.trackDefaultMessageRequestUpdated(e, !1)
                        },
                        onCancel: () => {
                            q.MessageRequestRestrictedDefault.updateSetting(e), q.MessageRequestRestrictedGuildIds.updateSetting(e ? Q.default.keys(y.default.getGuilds()) : []), this.trackDefaultMessageRequestUpdated(e, !0)
                        }
                    })
                }
                trackDefaultMessageRequestUpdated(e, t) {
                    w.default.track(en.AnalyticEvents.GUILD_DEFAULT_MESSAGE_REQUEST_UPDATED, {
                        default_guilds_restricted: e,
                        applied_to_existing_guilds: t
                    })
                }
                renderLegacyExplicitContentFilter(e) {
                    return (0, i.jsx)(i.Fragment, {
                        children: (0, i.jsxs)(_.FormItem, {
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            title: el.default.Messages.USER_EXPLICIT_CONTENT_FILTER_V2,
                            children: [(0, i.jsx)(_.FormText, {
                                type: _.FormTextTypes.DESCRIPTION,
                                className: eo.marginBottom8,
                                children: el.default.Messages.USER_EXPLICIT_CONTENT_FILTER_HELP_V3.format({
                                    appealLink: W.default.getArticleURL(en.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                                })
                            }), (0, i.jsx)(_.RadioGroup, {
                                value: this.props.explicitContentFilter,
                                options: (0, K.generateExplicitImageOptions)(),
                                onChange: t => {
                                    let {
                                        value: s
                                    } = t;
                                    this.props.dmSpamFilter === T.DmSpamFilterV2.DEFAULT_UNSET ? q.DmSpamFilterV2.updateSetting(e).then(() => {
                                        q.ExplicitContentFilter.updateSetting(s)
                                    }) : q.ExplicitContentFilter.updateSetting(s)
                                }
                            })]
                        })
                    })
                }
                renderDMSafety() {
                    var e;
                    let t = this.props.dmSpamFilter !== T.DmSpamFilterV2.DEFAULT_UNSET ? this.props.dmSpamFilter : null !== (e = ee.ExplicitContentFilterToDmSpamFilterV2.get(this.props.explicitContentFilter)) && void 0 !== e ? e : T.DmSpamFilterV2.NON_FRIENDS;
                    return this.props.mediaRedactionIsEnabled ? (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsxs)(_.FormSection, {
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            children: [(0, i.jsx)(F.Subsetting, {
                                setting: ea.WebSetting.PRIVACY_SENSITIVE_MEDIA,
                                children: (0, i.jsx)(eT, {})
                            }), (0, i.jsx)(F.Subsetting, {
                                setting: ea.WebSetting.PRIVACY_DIRECT_MESSAGE_SPAM_FILTER,
                                children: (0, i.jsxs)(_.FormItem, {
                                    tag: _.FormTitleTags.H5,
                                    className: eo.marginBottom4,
                                    title: el.default.Messages.USER_DM_SPAM_FILTER,
                                    children: [(0, i.jsx)(_.FormText, {
                                        type: _.FormTextTypes.DESCRIPTION,
                                        className: eo.marginBottom8,
                                        children: el.default.Messages.USER_DM_SPAM_FILTER_HELP.format({
                                            appealLink: W.default.getArticleURL(en.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                                        })
                                    }), (0, i.jsx)(_.RadioGroup, {
                                        value: t,
                                        options: (0, K.generateDmSpamOptions)(),
                                        onChange: e => {
                                            let {
                                                value: t
                                            } = e;
                                            return q.DmSpamFilterV2.updateSetting(t)
                                        }
                                    })]
                                })
                            })]
                        }), (0, i.jsx)(ec, {})]
                    }) : (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsxs)(_.FormSection, {
                            tag: _.FormTitleTags.H5,
                            className: eo.marginBottom40,
                            title: el.default.Messages.USER_DIRECT_MESSAGE_FILTERS,
                            children: [this.renderLegacyExplicitContentFilter(t), (0, i.jsxs)(_.FormItem, {
                                tag: _.FormTitleTags.H3,
                                className: eo.marginBottom4,
                                title: el.default.Messages.USER_DM_SPAM_FILTER,
                                children: [(0, i.jsx)(_.FormText, {
                                    type: _.FormTextTypes.DESCRIPTION,
                                    className: eo.marginBottom8,
                                    children: el.default.Messages.USER_DM_SPAM_FILTER_HELP.format({
                                        appealLink: W.default.getArticleURL(en.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                                    })
                                }), (0, i.jsx)(_.RadioGroup, {
                                    value: t,
                                    options: (0, K.generateDmSpamOptions)(),
                                    onChange: e => {
                                        let {
                                            value: t
                                        } = e;
                                        return q.DmSpamFilterV2.updateSetting(t)
                                    }
                                })]
                            })]
                        }), (0, i.jsx)(ec, {})]
                    })
                }
                renderKeywordFiltering() {
                    if (!this.props.keywordFilteringEnabled) return null;
                    let {
                        profanity: e,
                        slurs: t,
                        sexualContent: s
                    } = this.props.keywordFilter;
                    return (0, i.jsx)(i.Fragment, {
                        children: (0, i.jsxs)(_.FormSection, {
                            tag: _.FormTitleTags.H3,
                            className: eo.marginBottom20,
                            children: [(0, i.jsx)(_.FormTitle, {
                                tag: _.FormTitleTags.H5,
                                className: eo.marginBottom8,
                                children: el.default.Messages.USER_KEYWORD_FILTERS_TITLE
                            }), (0, i.jsx)(_.FormText, {
                                type: _.FormTextTypes.DESCRIPTION,
                                className: eo.marginBottom8,
                                children: el.default.Messages.USER_KEYWORD_FILTERS_DESCRIPTION
                            }), (0, i.jsx)(F.Subsetting, {
                                setting: ea.WebSetting.PRIVACY_KEYWORD_FILTER_PROFANITY,
                                children: (0, i.jsx)(_.FormSwitch, {
                                    value: e,
                                    note: el.default.Messages.USER_KEYWORD_FILTERS_PROFANITY_DESCRIPTION,
                                    onChange: e => q.KeywordFilterSettings.updateSetting({
                                        profanity: e,
                                        slurs: t,
                                        sexualContent: s
                                    }),
                                    children: el.default.Messages.USER_KEYWORD_FILTERS_PROFANITY_TITLE
                                })
                            }), (0, i.jsx)(F.Subsetting, {
                                setting: ea.WebSetting.PRIVACY_KEYWORD_FILTER_INSULTS_SLURS,
                                children: (0, i.jsx)(_.FormSwitch, {
                                    value: t,
                                    note: el.default.Messages.USER_KEYWORD_FILTERS_SLURS_DESCRIPTION,
                                    onChange: t => q.KeywordFilterSettings.updateSetting({
                                        profanity: e,
                                        slurs: t,
                                        sexualContent: s
                                    }),
                                    children: el.default.Messages.USER_KEYWORD_FILTERS_SLURS_TITLE
                                })
                            }), (0, i.jsx)(F.Subsetting, {
                                setting: ea.WebSetting.PRIVACY_KEYWORD_FILTER_SEXUAL_CONTENT,
                                children: (0, i.jsx)(_.FormSwitch, {
                                    value: s,
                                    note: el.default.Messages.USER_KEYWORD_FILTERS_SEXUAL_CONTENT_DESCRIPTION,
                                    onChange: s => q.KeywordFilterSettings.updateSetting({
                                        profanity: e,
                                        slurs: t,
                                        sexualContent: s
                                    }),
                                    children: el.default.Messages.USER_KEYWORD_FILTERS_SEXUAL_CONTENT_TITLE
                                })
                            })]
                        })
                    })
                }
                renderServerPrivacy() {
                    let {
                        viewNsfwGuilds: e,
                        currentUser: t,
                        viewNsfwCommands: s
                    } = this.props, {
                        defaultGuildsRestricted: a
                    } = this.state, n = !0 === t.nsfwAllowed;
                    return (0, i.jsxs)(_.FormSection, {
                        className: eo.marginBottom40,
                        children: [(0, i.jsx)(_.FormTitle, {
                            tag: _.FormTitleTags.H5,
                            className: eo.marginBottom8,
                            children: el.default.Messages.USER_DM_SETTINGS
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_DMS,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: !a,
                                note: el.default.Messages.USER_DM_SETTINGS_HELP,
                                onChange: this.handleChangeDefaultGuildsRestricted,
                                children: el.default.Messages.NEW_GUILDS_DM_ALLOWED
                            })
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_IOS,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: !!n && e,
                                note: el.default.Messages.NSFW_GUILDS_TOGGLE_CAPTION,
                                disabled: !n,
                                onChange: q.ViewNsfwGuilds.updateSetting,
                                children: el.default.Messages.NSFW_GUILDS_TOGGLE_HEADER
                            })
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_MESSAGE_REQUESTS,
                            children: (0, i.jsx)(eE, {})
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS_AGE_RESTRICTED_APPS,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: !!n && s,
                                note: el.default.Messages.NSFW_DM_COMMANDS_CAPTION,
                                disabled: !n,
                                onChange: q.ViewNsfwCommands.updateSetting,
                                children: el.default.Messages.NSFW_DM_COMMANDS_HEADER
                            })
                        })]
                    })
                }
                renderDataPrivacy() {
                    let {
                        usageStatistics: e,
                        personalization: t,
                        dropsOptedOut: s
                    } = this.props;
                    return (0, i.jsxs)(_.FormSection, {
                        className: eo.marginBottom40,
                        children: [(0, i.jsx)(_.FormTitle, {
                            tag: _.FormTitleTags.H5,
                            className: eo.marginBottom8,
                            children: el.default.Messages.DATA_PRIVACY_CONTROLS
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_IMPROVE_DISCORD,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: e,
                                note: el.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_NOTE.format({
                                    helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.DATA_USED_TO_IMPROVE_DISCORD)
                                }),
                                onChange: this.handleUsageStatisticsChange,
                                children: el.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_TITLE
                            })
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_PERSONALIZE,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: t,
                                note: el.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_NOTE_LEARN_MORE.format({
                                    helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.DATA_USED_FOR_RECOMMENDED)
                                }),
                                hideBorder: !0,
                                onChange: this.handlePersonalizationChange,
                                children: el.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_TITLE
                            })
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_QUESTS,
                            children: (0, i.jsx)(_.FormSwitch, {
                                value: !s,
                                note: el.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT_FORMATTED.format({
                                    helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.DATA_PRIVACY_CONTROLS)
                                }),
                                onChange: this.handleChangeDropsOptedOut,
                                children: (0, i.jsx)("div", {
                                    children: el.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT
                                })
                            })
                        }), (0, i.jsxs)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_BASIC_SERVICE,
                            children: [(0, i.jsx)(_.FormTitle, {
                                tag: _.FormTitleTags.H3,
                                className: o()(eo.marginTop20, eo.marginBottom8),
                                children: el.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_TITLE
                            }), (0, i.jsx)(_.FormText, {
                                type: _.FormTextTypes.DESCRIPTION,
                                className: eo.marginBottom20,
                                children: el.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_NOTE.format({
                                    onClick: () => {
                                        m.default.setSection(en.UserSettingsSections.ACCOUNT)
                                    }
                                })
                            })]
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_REQUEST,
                            children: this.renderHarvestRequest()
                        })]
                    })
                }
                renderHarvestRequest() {
                    let e;
                    let {
                        currentUser: t
                    } = this.props, {
                        requestingHarvest: s,
                        currentHarvestRequest: a
                    } = this.state, n = (0, z.harvestDisabled)(a, t), r = (0, i.jsx)(_.Tooltip, {
                        text: t.verified ? null : el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_TOOLTIP,
                        children: e => {
                            let {
                                onMouseEnter: t,
                                onMouseLeave: a
                            } = e;
                            return (0, i.jsx)(_.Button, {
                                disabled: n,
                                onClick: this.handleDataDownloadRequest,
                                onMouseEnter: t,
                                onMouseLeave: a,
                                look: _.Button.Looks.FILLED,
                                color: _.Button.Colors.BRAND,
                                submitting: s,
                                children: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_DOWNLOAD
                            })
                        }
                    });
                    return n && null != a && (e = (0, i.jsx)(_.Card, {
                        className: er.card,
                        children: (0, i.jsx)(_.Text, {
                            variant: "text-md/normal",
                            children: el.default.Messages.DATA_DOWNLOAD_REQUESTED_STATUS_NOTE.format({
                                date: S()(a.created_at).add(en.REQUEST_DATA_LIMIT_DAYS, "days").format("MMMM Do YYYY")
                            })
                        })
                    }), r = null), null != r && (r = (0, i.jsx)(Y.default, {
                        children: r
                    })), (0, i.jsxs)(l.Fragment, {
                        children: [(0, i.jsx)(_.FormDivider, {
                            className: eo.marginBottom20
                        }), (0, i.jsx)(_.FormTitle, {
                            tag: _.FormTitleTags.H3,
                            children: el.default.Messages.DATA_PRIVACY_CONTROLS_PERSONAL_DATA_TITLE
                        }), (0, i.jsx)(_.FormText, {
                            type: _.FormTextTypes.DESCRIPTION,
                            className: eo.marginBottom20,
                            children: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_NOTE.format({
                                helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.GDPR_REQUEST_DATA)
                            })
                        }), e, r]
                    })
                }
                renderPrivacyAndTermsNote() {
                    return (0, i.jsx)(_.FormSection, {
                        className: eo.marginBottom40,
                        children: (0, i.jsx)(_.FormNotice, {
                            type: _.FormNotice.Types.PRIMARY,
                            body: el.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
                                termsLink: en.MarketingURLs.TERMS,
                                privacyLink: en.MarketingURLs.PRIVACY
                            })
                        })
                    })
                }
                renderStaffOnlySettings() {
                    let {
                        currentUser: e,
                        nonSpamRetrainingOptIn: t
                    } = this.props;
                    return e.isStaff() ? (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsx)(_.FormDivider, {
                            className: eo.marginBottom20
                        }), (0, i.jsxs)(_.FormSection, {
                            className: eo.marginBottom40,
                            children: [(0, i.jsx)(_.FormTitle, {
                                tag: _.FormTitleTags.H5,
                                className: eo.marginBottom8,
                                children: el.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_HEADER
                            }), (0, i.jsxs)(_.FormItem, {
                                tag: _.FormTitleTags.H5,
                                className: eo.marginBottom4,
                                children: [(0, i.jsx)(_.FormText, {
                                    type: _.FormTextTypes.DESCRIPTION,
                                    className: eo.marginBottom8,
                                    children: el.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_DESC
                                }), (0, i.jsx)(_.RadioGroup, {
                                    options: (0, z.generateNonSpamRetrainingOptInSettingOptions)(),
                                    value: null == t ? z.NonSpamRetrainingOptInOptions.UNDECIDED : t ? z.NonSpamRetrainingOptInOptions.OPTIN : z.NonSpamRetrainingOptInOptions.OPTOUT,
                                    onChange: e => {
                                        let {
                                            value: t
                                        } = e;
                                        return q.NonSpamRetrainingOptIn.updateSetting(z.NonSpamRetrainingOptInOptionsToValue[t])
                                    }
                                })]
                            })]
                        })]
                    }) : null
                }
                renderSettingsBody() {
                    let {
                        fetchedConsents: e
                    } = this.props;
                    return (0, i.jsxs)(_.FormSection, {
                        tag: _.FormTitleTags.H1,
                        title: el.default.Messages.PRIVACY_AND_SAFETY,
                        children: [this.renderDMSafety(), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_KEYWORD_FILTER,
                            children: this.renderKeywordFiltering()
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_SERVER_PRIVACY_DEFAULTS,
                            children: this.renderServerPrivacy()
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_DATA_PRIVACY,
                            children: e ? this.renderDataPrivacy() : null
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_TERMS_POLICY,
                            children: this.renderPrivacyAndTermsNote()
                        }), (0, i.jsx)(F.Subsetting, {
                            setting: ea.WebSetting.PRIVACY_STAFF_ONLY,
                            children: this.renderStaffOnlySettings()
                        })]
                    })
                }
                render() {
                    let {
                        safetyHubFetchError: e,
                        subsection: t,
                        guildPrivacySettingsEnabled: s,
                        searchFilter: a
                    } = this.props, {
                        selectedTab: n
                    } = this.state;
                    null != t && this.setState({
                        selectedTab: t
                    });
                    let l = e => t => t === e,
                        r = !1;
                    null != a && null == a.find(l(ea.WebSetting.PRIVACY_USER_SETTINGS)) && null != a.find(l(ea.WebSetting.PRIVACY_ACCOUNT_STANDING)) && (this.setState({
                        selectedTab: ei.SafetyHubView.ACCOUNT_STANDING
                    }), r = !0);
                    let d = n === ei.SafetyHubView.ACCOUNT_STANDING && null != e;
                    return (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsxs)(_.TabBar, {
                            className: er.settingsTabBar,
                            "aria-label": el.default.Messages.SAFETY_HUB_PAGE_TITLE,
                            selectedItem: n,
                            type: "top",
                            look: "brand",
                            onItemSelect: this.handleTabSelect,
                            children: [r ? null : (0, i.jsx)(_.TabBar.Item, {
                                className: er.settingsTabBarItem,
                                id: ei.SafetyHubView.SETTINGS,
                                "aria-label": el.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS,
                                children: el.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS
                            }), s && !r ? (0, i.jsx)(_.TabBar.Item, {
                                className: er.settingsTabBarItem,
                                id: ei.SafetyHubView.GUILD_SETTINGS,
                                "aria-label": el.default.Messages.PRIVACY_AND_SAFETY_GUILD_TAB_TITLE,
                                children: el.default.Messages.PRIVACY_AND_SAFETY_GUILD_TAB_TITLE
                            }) : null, (0, i.jsx)(_.TabBar.Item, {
                                className: er.settingsTabBarItem,
                                id: ei.SafetyHubView.ACCOUNT_STANDING,
                                "aria-label": el.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT_V2,
                                children: el.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT_V2
                            })]
                        }), (0, i.jsx)(_.TabBar.Panel, {
                            id: n,
                            "aria-labelledby": (0, k.uid)(),
                            className: o()(er.contentPanel, {
                                [er.contentPanelNagbar]: d
                            }),
                            children: (0, i.jsx)("div", {
                                children: this.SETTINGS_TABS[n]()
                            })
                        })]
                    })
                }
                constructor(e) {
                    super(e), ed(this, "SETTINGS_TABS", {
                        [ei.SafetyHubView.SETTINGS]: () => this.renderSettingsBody(),
                        [ei.SafetyHubView.ACCOUNT_STANDING]: () => (0, i.jsx)(v.default, {}),
                        [ei.SafetyHubView.GUILD_SETTINGS]: () => (0, i.jsx)(eu, {})
                    }), ed(this, "handleChangeDefaultGuildsRestricted", e => {
                        this.setState({
                            defaultGuildsRestricted: !e
                        }, () => this.showGuildRestrictionModal(!e))
                    }), ed(this, "handleChangeDropsOptedOut", () => {
                        q.DropsOptedOut.updateSetting(!this.props.dropsOptedOut)
                    }), ed(this, "handleUsageStatisticsChange", () => {
                        this.props.usageStatistics ? eI({
                            header: el.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_TITLE,
                            body: el.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_BODY,
                            confirmText: el.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CONFIRM,
                            cancelText: el.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CANCEL,
                            onConfirm: () => (0, g.setConsents)([], [en.Consents.USAGE_STATISTICS]).catch(eN)
                        }) : (0, g.setConsents)([en.Consents.USAGE_STATISTICS], []).catch(eN)
                    }), ed(this, "handlePersonalizationChange", () => {
                        this.props.personalization ? eI({
                            header: el.default.Messages.PERSONALIZATION_DISABLE_MODAL_TITLE,
                            confirmText: el.default.Messages.PERSONALIZATION_DISABLE_MODAL_CONFIRM,
                            cancelText: el.default.Messages.PERSONALIZATION_DISABLE_MODAL_CANCEL,
                            onConfirm: () => {
                                (0, g.setConsents)([], [en.Consents.PERSONALIZATION]).catch(eN)
                            },
                            body: el.default.Messages.PERSONALIZATION_DISABLE_MODAL_BODY
                        }) : (0, g.setConsents)([en.Consents.PERSONALIZATION], []).catch(eN)
                    }), ed(this, "handleDataDownloadRequest", () => {
                        var e;
                        e = {
                            header: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_TITLE,
                            body: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_WEB_NOTE.format({
                                helpdeskArticle: W.default.getArticleURL(en.HelpdeskArticles.GDPR_PACKAGE_CONTENTS)
                            }),
                            confirmText: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CONFIRM,
                            cancelText: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CANCEL,
                            confirmButtonColor: _.Button.Colors.BRAND,
                            onConfirm: e => {
                                this.setState({
                                    requestingHarvest: !0
                                }, () => {
                                    (0, f.requestHarvest)(e).then(e => {
                                        null != e && null != e.body ? (this.setState({
                                            currentHarvestRequest: e.body
                                        }), N.default.show({
                                            body: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_SUCCESS
                                        })) : N.default.show({
                                            title: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                                            body: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY
                                        })
                                    }, () => N.default.show({
                                        title: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                                        body: el.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY
                                    })).finally(() => this.setState({
                                        requestingHarvest: !1
                                    }))
                                })
                            }
                        }, (0, _.openModal)(t => (0, i.jsx)(e_, {
                            modalProps: t,
                            settings: e
                        }))
                    }), ed(this, "handleTabSelect", e => {
                        this.setState({
                            selectedTab: e
                        })
                    });
                    let {
                        defaultGuildsRestricted: t
                    } = e;
                    this.state = {
                        defaultGuildsRestricted: t,
                        currentHarvestRequest: null,
                        requestingHarvest: !0,
                        selectedTab: ei.SafetyHubView.SETTINGS
                    }
                }
            }

            function ef() {
                let e = (0, E.useStateFromStores)([H.default], () => {
                        let e = H.default.getCurrentUser();
                        return u()(null != e, "ConnectedUserSettingsPrivacySafety: currentUser cannot be undefined"), e
                    }),
                    t = (0, E.useStateFromStoresObject)([B.default], () => ({
                        fetchedConsents: B.default.fetchedConsents,
                        usageStatistics: B.default.hasConsented(en.Consents.USAGE_STATISTICS),
                        personalization: B.default.hasConsented(en.Consents.PERSONALIZATION)
                    })),
                    s = (0, E.useStateFromStores)([b.default], () => b.default.getFetchError()),
                    a = (0, E.useStateFromStores)([V.default], () => V.default.getSubsection()),
                    n = (0, C.useIsEligibleForExplicitMediaRedaction)(),
                    l = (0, M.useIsEligibleForKeywordFiltering)({
                        location: "web_user_privacy_and_safety_settings"
                    }),
                    {
                        hasSearchResults: r,
                        searchResults: o
                    } = (0, $.useSettingSearchResults)(),
                    d = (0, D.useKeywordFilterSettings)(),
                    c = (0, L.default)(),
                    S = (0, X.useServerPrivacySettingsInUserSettingsEnabled)({
                        location: "user_settings_privacy_safety"
                    });
                return (0, i.jsx)(eg, {
                    currentUser: e,
                    defaultGuildsRestricted: q.DefaultGuildsRestricted.useSetting(),
                    nonSpamRetrainingOptIn: q.NonSpamRetrainingOptIn.useSetting(),
                    viewNsfwGuilds: q.ViewNsfwGuilds.useSetting(),
                    viewNsfwCommands: q.ViewNsfwCommands.useSetting(),
                    explicitContentFilter: q.ExplicitContentFilter.useSetting(),
                    keywordFilter: d,
                    dmSpamFilter: q.DmSpamFilterV2.useSetting(),
                    showCurrentGame: q.ShowCurrentGame.useSetting(),
                    dropsOptedOut: q.DropsOptedOut.useSetting(),
                    safetyHubFetchError: s,
                    mediaRedactionIsEnabled: n,
                    keywordFilteringEnabled: l,
                    userIsConsideredAdult: null == c || c,
                    subsection: a,
                    guildPrivacySettingsEnabled: S,
                    searchFilter: r ? o : void 0,
                    ...t
                })
            }
        },
        207874: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("461745"),
                l = s("128277"),
                r = s("689938");

            function o() {
                let e = (0, l.useSettingSearchQuery)(),
                    t = n.useCallback((e, t) => {
                        t.stopPropagation(), t.preventDefault(), (0, l.setIsSettingSearchActive)(e)
                    }, []),
                    s = n.useCallback(() => {
                        (0, l.setIsSettingSearchActive)(!1), (0, l.setSettingSearchQuery)("")
                    }, []);
                return (0, a.jsx)("div", {
                    style: {
                        marginBottom: "8px"
                    },
                    children: (0, a.jsx)(i.default, {
                        size: i.default.Sizes.MEDIUM,
                        query: e,
                        onClear: s,
                        onQueryChange: l.setSettingSearchQuery,
                        placeholder: r.default.Messages.SEARCH,
                        inputProps: {
                            "aria-label": r.default.Messages.USER_SETTINGS_SEARCH_BAR,
                            "aria-expanded": !0,
                            onFocus: e => t(!0, e),
                            onBlur: e => t(!1, e)
                        }
                    })
                })
            }
        },
        295545: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useIsEligibleForUserSettingsSearchDesktop: function() {
                    return n
                },
                useIsEligibleForUserSettingsSearchDesktopWithCount: function() {
                    return i
                }
            });
            let a = (0, s("818083").createExperiment)({
                kind: "user",
                id: "2024-05_desktop_user_settings_search",
                label: "Desktop User Settings Search",
                defaultConfig: {
                    enabled: !1,
                    showSearchCount: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable User Settings Search on Desktop",
                    config: {
                        enabled: !0,
                        showSearchCount: !1
                    }
                }, {
                    id: 2,
                    label: "Enable User Settings Search on Desktop with Search Count",
                    config: {
                        enabled: !0,
                        showSearchCount: !0
                    }
                }]
            });

            function n(e) {
                let {
                    location: t
                } = e;
                return a.useExperiment({
                    location: t
                }, {
                    autoTrackExposure: !0
                }).enabled
            }

            function i(e) {
                let {
                    location: t
                } = e, {
                    enabled: s,
                    showSearchCount: n
                } = a.useExperiment({
                    location: t
                }, {
                    autoTrackExposure: !0
                });
                return s && n
            }
        },
        463153: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return o
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("793030"),
                i = s("689938"),
                l = s("305373"),
                r = s("258720");

            function o() {
                return (0, a.jsxs)("div", {
                    className: l.container,
                    children: [(0, a.jsx)("img", {
                        className: l.emptySearchIcon,
                        src: r,
                        alt: ""
                    }), (0, a.jsx)(n.Text, {
                        variant: "text-md/normal",
                        color: "text-muted",
                        children: i.default.Messages.USER_SETTINGS_NO_SEARCH_RESULTS
                    })]
                })
            }
        },
        36192: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return M
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("544891"),
                d = s("704215"),
                u = s("481060"),
                c = s("230711"),
                S = s("497321"),
                E = s("43015"),
                T = s("136097"),
                _ = s("605236"),
                I = s("246946"),
                N = s("594174"),
                g = s("460562"),
                f = s("465670"),
                m = s("736921"),
                A = s("169278"),
                C = s("823379"),
                O = s("981631"),
                h = s("921944"),
                R = s("689938"),
                p = s("663563");

            function M() {
                let e;
                let {
                    currentSession: t,
                    otherSessions: s
                } = (0, T.useAuthSessions)(), i = (0, r.useStateFromStores)([I.default], () => I.default.hidePersonalInformation), l = (0, r.useStateFromStores)([N.default], () => N.default.getCurrentUser()), [c, g] = n.useState(!1);
                n.useEffect(() => {
                    (0, _.markDismissibleContentAsDismissed)(d.DismissibleContent.AUTH_SESSIONS_NEW, {
                        dismissAction: h.ContentDismissActionType.AUTO
                    }), (0, E.fetchAuthSessions)();
                    let e = setTimeout(() => g(!0), 500);
                    return () => {
                        clearTimeout(e), (0, E.clearAuthSessions)()
                    }
                }, []);
                let f = () => {
                        o.HTTP.post({
                            url: O.Endpoints.AUTH_SESSION_NOTIFICATIONS_DEBUG
                        })
                    },
                    [m, A] = n.useState(new Set);
                return i ? (0, a.jsx)(S.default, {}) : (e = null == t && 0 === s.length ? c ? (0, a.jsx)("div", {
                    className: p.loading,
                    children: (0, a.jsx)(u.Spinner, {})
                }) : null : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: p.sessions,
                        children: [(0, a.jsx)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title: R.default.Messages.AUTH_SESSIONS_CURRENT,
                            titleClassName: p.groupTitle,
                            children: null != t ? (0, a.jsx)(D, {
                                session: t,
                                current: !0
                            }) : null
                        }), !(s.length > 0) && (null == l ? void 0 : l.mfaEnabled) ? null : (0, a.jsxs)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title: R.default.Messages.AUTH_SESSIONS_OTHERS,
                            titleClassName: p.groupTitle,
                            className: p.otherSessions,
                            children: [s.map(e => (0, a.jsx)(D, {
                                session: e,
                                useChecks: m.size > 0,
                                checked: m.has(e.id_hash),
                                setChecked: t => {
                                    let s = new Set(m);
                                    t ? s.add(e.id_hash) : s.delete(e.id_hash), A(s)
                                }
                            }, e.id_hash)), (null == l ? void 0 : l.mfaEnabled) ? null : (0, a.jsx)(x, {})]
                        })]
                    }), s.length > 0 ? (0, a.jsxs)(u.FormSection, {
                        tag: u.FormTitleTags.H5,
                        title: m.size > 0 ? R.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_TITLE : R.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_TITLE,
                        children: [(0, a.jsx)(u.FormText, {
                            type: u.FormTextTypes.DESCRIPTION,
                            children: R.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_DESCRIPTION
                        }), (0, a.jsx)(u.Button, {
                            look: u.Button.Looks.OUTLINED,
                            color: u.Button.Colors.RED,
                            size: u.Button.Sizes.SMALL,
                            className: p.logOutAllButton,
                            onClick: () => {
                                m.size > 0 ? (0, E.logOutSessions)(Array.from(m)) : (0, E.logOutSessions)(s.map(e => e.id_hash))
                            },
                            children: m.size > 0 ? R.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_ACTION.format({
                                count: m.size
                            }) : R.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_ACTION
                        })]
                    }) : null]
                }), (0, a.jsxs)(u.FormSection, {
                    tag: u.FormTitleTags.H1,
                    title: R.default.Messages.AUTH_SESSIONS,
                    children: [(0, a.jsx)(u.FormText, {
                        type: u.FormTextTypes.DESCRIPTION,
                        className: p.description,
                        children: R.default.Messages.AUTH_SESSIONS_DESCRIPTION
                    }), (null == l ? void 0 : l.isStaff()) ? (0, a.jsxs)("div", {
                        className: p.tools,
                        children: [(0, a.jsx)(u.Text, {
                            className: p.toolsTitle,
                            variant: "text-md/bold",
                            children: "DEV TOOLS"
                        }), (0, a.jsx)(u.Text, {
                            className: p.toolsTitle,
                            variant: "text-sm/normal",
                            color: "text-danger",
                            children: "These tools are only shown to staff users."
                        }), (0, a.jsx)(u.Tooltip, {
                            text: "Triggers mobile and email suspicious session notifications for the current user",
                            children: e => {
                                let {
                                    onMouseEnter: t,
                                    onMouseLeave: s
                                } = e;
                                return (0, a.jsx)(u.Button, {
                                    size: u.Button.Sizes.SMALL,
                                    color: u.Button.Colors.PRIMARY,
                                    onClick: f,
                                    onMouseEnter: t,
                                    onMouseLeave: s,
                                    children: "Trigger Suspicious Sessions Notification"
                                })
                            }
                        })]
                    }) : null, e]
                }))
            }

            function D(e) {
                var t, s, n, i, r;
                let {
                    session: o,
                    current: d,
                    setChecked: c,
                    checked: S,
                    useChecks: _
                } = e, I = null !== (r = null === (t = o.client_info) || void 0 === t ? void 0 : t.location) && void 0 !== r ? r : null === (s = o.client_info) || void 0 === s ? void 0 : s.ip, N = null === (n = o.client_info) || void 0 === n ? void 0 : n.platform, {
                    text: g,
                    icon: O
                } = function(e) {
                    switch (null == e ? void 0 : e.toLowerCase().trim()) {
                        case null:
                        case void 0:
                        case "":
                            return {
                                text: R.default.Messages.AUTH_SESSIONS_OS_UNKNOWN, icon: A.default
                            };
                        case "ios":
                        case "android":
                            return {
                                text: e, icon: m.default
                            };
                        default:
                            return {
                                text: e, icon: A.default
                            }
                    }
                }(null === (i = o.client_info) || void 0 === i ? void 0 : i.os), h = d ? null : (0, T.formatDate)(o.approx_last_used_time), M = [g, N].filter(C.isNotNullish), D = [I, h].filter(C.isNotNullish), x = (0, u.useRedesignIconContext)().enabled ? 24 : 32;
                return (0, a.jsxs)("div", {
                    className: l()(p.session, d ? p.currentSession : null),
                    children: [(0, a.jsx)("div", {
                        className: p.sessionIcon,
                        children: (0, a.jsx)(O, {
                            width: x,
                            height: x
                        })
                    }), (0, a.jsxs)("div", {
                        className: p.sessionInfo,
                        children: [(0, a.jsxs)(u.Text, {
                            variant: "eyebrow",
                            className: p.sessionInfoRow,
                            children: [(0, a.jsx)("span", {
                                children: M[0]
                            }), M.length > 1 && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)("span", {
                                    children: "\xb7"
                                }), (0, a.jsx)("span", {
                                    children: M[1]
                                })]
                            })]
                        }), (0, a.jsxs)(u.Text, {
                            variant: "text-sm/medium",
                            className: p.sessionInfoRow,
                            children: [(0, a.jsx)("span", {
                                children: D[0]
                            }), D.length > 1 && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)("span", {
                                    children: "\xb7"
                                }), (0, a.jsx)("span", {
                                    children: D[1]
                                })]
                            })]
                        })]
                    }), d ? null : _ ? (0, a.jsx)("div", {
                        className: p.sessionCheckbox,
                        children: (0, a.jsx)(u.Checkbox, {
                            onChange: (e, t) => {
                                null == c || c(t)
                            },
                            value: S
                        })
                    }) : (0, a.jsx)(u.Clickable, {
                        className: p.sessionMoreButton,
                        onClick: e => {
                            e.shiftKey ? null == c || c(!0) : (0, E.logOutSessions)(o.id_hash)
                        },
                        "aria-label": R.default.Messages.AUTH_SESSIONS_SESSION_LOG_OUT,
                        children: (0, a.jsx)(f.default, {})
                    })]
                }, o.id_hash)
            }

            function x() {
                return (0, a.jsxs)("div", {
                    className: l()(p.session, p.legacySession),
                    children: [(0, a.jsx)("div", {
                        className: p.sessionIcon,
                        children: (0, a.jsx)(g.default, {
                            width: "32",
                            height: "32"
                        })
                    }), (0, a.jsxs)("div", {
                        className: p.sessionInfo,
                        children: [(0, a.jsx)(u.Text, {
                            variant: "eyebrow",
                            className: p.sessionInfoRow,
                            color: "text-muted",
                            children: (0, a.jsx)("span", {
                                children: R.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY
                            })
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-sm/medium",
                            className: p.sessionInfoRow,
                            color: "text-muted",
                            children: (0, a.jsx)("span", {
                                children: R.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY_LOG_OUT.format({
                                    onClick: () => c.default.setSection(O.UserSettingsSections.ACCOUNT)
                                })
                            })
                        })]
                    })]
                })
            }
        },
        338345: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("442837"),
                r = s("481060"),
                o = s("223245"),
                d = s("230711"),
                u = s("579806"),
                c = s("921801"),
                S = s("246946"),
                E = s("358085"),
                T = s("726985"),
                _ = s("981631"),
                I = s("689938"),
                N = s("247763"),
                g = s("611273");

            function f() {
                var e, t, n;
                let {
                    enabled: f,
                    autoToggle: m,
                    hideInstantInvites: A,
                    hidePersonalInformation: C,
                    disableSounds: O,
                    disableNotifications: h,
                    enableContentProtection: R
                } = (0, l.useStateFromStoresObject)([S.default], () => ({
                    ...S.default.getSettings()
                })), p = (e, t) => {
                    o.default.update({
                        [e]: t
                    })
                }, M = null !== (n = null === u.default || void 0 === u.default ? void 0 : null === (t = u.default.window) || void 0 === t ? void 0 : null === (e = t.supportsContentProtection) || void 0 === e ? void 0 : e.call(t)) && void 0 !== n && n;
                return (0, a.jsxs)(r.FormSection, {
                    className: N.container,
                    tag: r.FormTitleTags.H1,
                    title: I.default.Messages.STREAMER_MODE,
                    children: [(0, a.jsx)(c.Subsetting, {
                        setting: T.WebSetting.STREAMER_MODE_INTEGRATIONS,
                        children: (0, a.jsx)(r.FormNotice, {
                            className: g.marginBottom40,
                            iconClassName: N.noticeIcon,
                            type: r.FormNoticeTypes.PRIMARY,
                            imageData: {
                                src: s("560264"),
                                width: 184,
                                height: 110,
                                position: r.FormNoticeImagePositions.RIGHT
                            },
                            title: I.default.Messages.USER_SETTINGS_STREAMER_NOTICE_TITLE,
                            body: I.default.Messages.USER_SETTINGS_STREAMER_NOTICE_BODY.format({
                                streamkitURL: _.MarketingURLs.STREAMKIT
                            })
                        })
                    }), (0, a.jsxs)(c.Subsetting, {
                        setting: T.WebSetting.STREAMER_MODE_ENABLE,
                        children: [(0, a.jsx)(r.FormSwitch, {
                            value: f,
                            onChange: e => p("enabled", e),
                            note: I.default.Messages.ENABLE_STREAMER_MODE_DESCRIPTION.format({
                                onClick: () => {
                                    d.default.setSection(_.UserSettingsSections.KEYBINDS)
                                }
                            }),
                            children: I.default.Messages.ENABLE_STREAMER_MODE_LABEL
                        }), (() => {
                            if (E.isPlatformEmbedded) return (0, a.jsx)(r.FormSwitch, {
                                value: m,
                                onChange: e => p("autoToggle", e),
                                note: I.default.Messages.AUTO_TOGGLE_STREAMER_MODE_DESCRIPTION,
                                children: I.default.Messages.AUTO_TOGGLE_STREAMER_MODE_LABEL
                            })
                        })()]
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(r.FormTitle, {
                            className: i()(g.marginTop40, g.marginBottom8, N.sectionLabel),
                            children: I.default.Messages.OPTIONS
                        }), (0, a.jsx)(c.Subsetting, {
                            setting: T.WebSetting.STREAMER_MODE_HIDE_PERSONAL_INFORMATION,
                            children: (0, a.jsx)(r.FormSwitch, {
                                value: C,
                                onChange: e => p("hidePersonalInformation", e),
                                note: I.default.Messages.HIDE_PERSONAL_INFORMATION_DESCRIPTION,
                                children: I.default.Messages.HIDE_PERSONAL_INFORMATION_LABEL
                            })
                        }), (0, a.jsx)(c.Subsetting, {
                            setting: T.WebSetting.STREAMER_MODE_HIDE_INVITE_LINKS,
                            children: (0, a.jsx)(r.FormSwitch, {
                                value: A,
                                onChange: e => p("hideInstantInvites", e),
                                note: I.default.Messages.HIDE_INSTANT_INVITES_DESCRIPTION,
                                children: I.default.Messages.HIDE_INSTANT_INVITES_LABEL
                            })
                        }), (0, a.jsx)(c.Subsetting, {
                            setting: T.WebSetting.STREAMER_MODE_DISABLE_SOUNDS,
                            children: (0, a.jsx)(r.FormSwitch, {
                                value: O,
                                onChange: e => p("disableSounds", e),
                                note: I.default.Messages.DISABLE_SOUNDS_DESCRIPTION,
                                children: I.default.Messages.DISABLE_SOUNDS_LABEL
                            })
                        }), (0, a.jsx)(c.Subsetting, {
                            setting: T.WebSetting.STREAMER_MODE_DISABLE_NOTIFICATIONS,
                            children: (0, a.jsx)(r.FormSwitch, {
                                value: h,
                                onChange: e => p("disableNotifications", e),
                                note: I.default.Messages.DISABLE_NOTIFICATIONS_DESCRIPTION,
                                children: I.default.Messages.DISABLE_NOTIFICATIONS_LABEL
                            })
                        }), M && (0, a.jsx)(c.Subsetting, {
                            setting: T.WebSetting.STREAMER_MODE_HIDE_DISCORD_WINDOW_FROM_SCREEN_CAPTURE,
                            children: (0, a.jsx)(r.FormSwitch, {
                                value: R,
                                onChange: e => p("enableContentProtection", e),
                                note: I.default.Messages.HIDE_WINDOW_FROM_STREAM_DESCRIPTION,
                                children: I.default.Messages.HIDE_WINDOW_FROM_STREAM_LABEL
                            })
                        })]
                    })]
                })
            }
        },
        400287: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("481060"),
                r = s("100527"),
                o = s("906732"),
                d = s("454585"),
                u = s("921801"),
                c = s("626135"),
                S = s("695346"),
                E = s("726985"),
                T = s("981631"),
                _ = s("689938"),
                I = s("611273");

            function N() {
                let e = S.ExpressionSuggestionsEnabled.useSetting(),
                    t = S.IncludeStickersInAutocomplete.useSetting(),
                    s = S.UseRichChatInput.useSetting(),
                    n = S.RenderSpoilers.useSetting(),
                    N = S.UseThreadSidebar.useSetting(),
                    g = S.ViewImageDescriptions.useSetting(),
                    f = S.ConvertEmoticons.useSetting(),
                    m = S.InlineAttachmentMedia.useSetting(),
                    A = S.InlineEmbedMedia.useSetting(),
                    C = S.RenderEmbeds.useSetting(),
                    O = S.RenderReactions.useSetting(),
                    {
                        analyticsLocations: h
                    } = (0, o.default)(r.default.TEXT_AND_IMAGES);
                return (0, a.jsxs)(l.FormSection, {
                    tag: l.FormTitleTags.H1,
                    title: _.default.Messages.CHAT,
                    children: [(0, a.jsxs)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_INLINE_MEDIA,
                        children: [(0, a.jsx)(l.FormTitle, {
                            className: I.marginBottom8,
                            children: _.default.Messages.INLINE_MEDIA_LABEL
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_INLINE_MEDIA_LINKS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: i()(I.marginTop8, I.marginBottom20),
                                value: A,
                                onChange: S.InlineEmbedMedia.updateSetting,
                                children: _.default.Messages.INLINE_EMBED_MEDIA
                            })
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_INLINE_MEDIA_UPLOADS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: i()(I.marginTop8, I.marginBottom20),
                                value: m,
                                note: _.default.Messages.INLINE_ATTACHMENT_MEDIA_HELP.format({
                                    maxSize: 10
                                }),
                                onChange: S.InlineAttachmentMedia.updateSetting,
                                children: _.default.Messages.INLINE_ATTACHMENT_MEDIA
                            })
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_INLINE_MEDIA_IMAGE_DESCRIPTIONS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: i()(I.marginTop8, I.marginBottom40),
                                value: g,
                                note: _.default.Messages.IMAGE_DESCRIPTION_HELP,
                                onChange: S.ViewImageDescriptions.updateSetting,
                                children: _.default.Messages.USER_SETTINGS_WITH_IMAGE_DESCRIPTIONS
                            })
                        })]
                    }), (0, a.jsxs)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_EMBEDS,
                        children: [(0, a.jsx)(l.FormTitle, {
                            className: I.marginBottom8,
                            children: _.default.Messages.RENDER_EMBEDS_LABEL
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_EMBEDS_LINK_PREVIEWS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: i()(I.marginTop8, I.marginBottom40),
                                value: C,
                                onChange: S.RenderEmbeds.updateSetting,
                                children: _.default.Messages.RENDER_EMBEDS
                            })
                        })]
                    }), (0, a.jsxs)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_EMOJI,
                        children: [(0, a.jsx)(l.FormTitle, {
                            className: I.marginBottom8,
                            children: _.default.Messages.EMOJI
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_EMOJI_REACTIONS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: i()(I.marginTop8, I.marginBottom20),
                                value: O,
                                onChange: S.RenderReactions.updateSetting,
                                children: _.default.Messages.RENDER_REACTIONS
                            })
                        }), (0, a.jsx)(u.Subsetting, {
                            setting: E.WebSetting.CHAT_EMOJI_EMOTICONS,
                            children: (0, a.jsx)(l.FormSwitch, {
                                className: I.marginBottom40,
                                value: f,
                                note: d.default.parse(_.default.Messages.CONVERT_EMOTICONS_HELP),
                                onChange: S.ConvertEmoticons.updateSetting,
                                children: _.default.Messages.CONVERT_EMOTICONS
                            })
                        })]
                    }), (0, a.jsx)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_STICKERS,
                        children: (0, a.jsxs)(l.FormSection, {
                            className: I.marginBottom8,
                            children: [(0, a.jsx)(l.FormTitle, {
                                className: I.marginBottom8,
                                children: _.default.Messages.STICKERS_AUTO_PLAY_HEADING
                            }), (0, a.jsx)(u.Subsetting, {
                                setting: E.WebSetting.CHAT_STICKERS_SUGGESTIONS,
                                children: (0, a.jsx)(l.FormSwitch, {
                                    className: i()(I.marginTop8, I.marginBottom20),
                                    value: e,
                                    note: _.default.Messages.AUTO_SUGGEST_STICKERS_DESCRIPTION,
                                    onChange: t => {
                                        c.default.track(T.AnalyticEvents.STICKER_SUGGESTIONS_ENABLED_TOGGLED, {
                                            enabled: !e,
                                            location: {
                                                section: T.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                            },
                                            location_stack: h
                                        }), S.ExpressionSuggestionsEnabled.updateSetting(!e)
                                    },
                                    children: _.default.Messages.AUTO_SUGGEST_STICKERS
                                })
                            }), (0, a.jsx)(u.Subsetting, {
                                setting: E.WebSetting.CHAT_STICKERS_AUTOCOMPLETE,
                                children: (0, a.jsx)(l.FormSwitch, {
                                    className: I.marginBottom40,
                                    value: t,
                                    note: _.default.Messages.INCLUDE_STICKER_RESULTS_IN_AUTOCOMPLETE,
                                    onChange: e => {
                                        c.default.track(T.AnalyticEvents.STICKERS_IN_AUTOCOMPLETE_TOGGLED, {
                                            enabled: e,
                                            location: {
                                                section: T.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                            },
                                            location_stack: h
                                        }), S.IncludeStickersInAutocomplete.updateSetting(e)
                                    },
                                    children: _.default.Messages.STICKERS_IN_AUTOCOMPLETE
                                })
                            })]
                        })
                    }), (0, a.jsx)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_TEXT_BOX,
                        children: (0, a.jsxs)(l.FormSection, {
                            className: I.marginBottom8,
                            children: [(0, a.jsx)(l.FormTitle, {
                                className: I.marginBottom8,
                                children: _.default.Messages.FORM_LABEL_USE_RICH_CHAT_BOX
                            }), (0, a.jsx)(u.Subsetting, {
                                setting: E.WebSetting.CHAT_TEXT_BOX_PREVIEW,
                                children: (0, a.jsx)(l.FormSwitch, {
                                    className: i()(I.marginTop8, I.marginBottom40),
                                    value: s,
                                    onChange: e => {
                                        c.default.track(T.AnalyticEvents.PREVIEW_MARKDOWN_TOGGLED, {
                                            enabled: e,
                                            location: {
                                                section: T.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES
                                            }
                                        }), S.UseRichChatInput.updateSetting(e)
                                    },
                                    children: _.default.Messages.PREVIEW_MARKDOWN_DESCRIPTION
                                })
                            })]
                        })
                    }), (0, a.jsx)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_THREADS,
                        children: (0, a.jsxs)(l.FormSection, {
                            className: I.marginBottom40,
                            children: [(0, a.jsx)(l.FormTitle, {
                                className: I.marginBottom8,
                                children: _.default.Messages.THREADS
                            }), (0, a.jsx)(u.Subsetting, {
                                setting: E.WebSetting.CHAT_THREADS_SPLIT_VIEW,
                                children: (0, a.jsx)(l.FormSwitch, {
                                    className: I.marginTop8,
                                    value: N,
                                    onChange: S.UseThreadSidebar.updateSetting,
                                    children: _.default.Messages.USE_THREADS_SIDEBAR_DESCRIPTION
                                })
                            })]
                        })
                    }), (0, a.jsx)(u.Subsetting, {
                        setting: E.WebSetting.CHAT_SPOILERS,
                        children: (0, a.jsxs)(l.FormItem, {
                            title: _.default.Messages.SHOW_SPOILER_CONTENT,
                            children: [(0, a.jsx)(l.FormText, {
                                type: l.FormText.Types.DESCRIPTION,
                                className: I.marginBottom8,
                                children: _.default.Messages.SHOW_SPOILER_CONTENT_HELP
                            }), (0, a.jsx)(l.RadioGroup, {
                                options: [{
                                    name: _.default.Messages.SHOW_SPOILER_ON_CLICK,
                                    value: T.SpoilerRenderSetting.ON_CLICK
                                }, {
                                    name: _.default.Messages.SHOW_SPOILER_ON_SERVERS_I_MOD,
                                    value: T.SpoilerRenderSetting.IF_MODERATOR
                                }, {
                                    name: _.default.Messages.SHOW_SPOILER_ALWAYS,
                                    value: T.SpoilerRenderSetting.ALWAYS
                                }],
                                onChange: e => S.RenderSpoilers.updateSetting(e.value),
                                value: n
                            })]
                        })
                    })]
                })
            }
        },
        554042: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("433517"),
                d = s("481060"),
                u = s("37234"),
                c = s("153867"),
                S = s("425493"),
                E = s("607070"),
                T = s("304761"),
                _ = s("865427"),
                I = s("358085"),
                N = s("210887"),
                g = s("981631"),
                f = s("689938"),
                m = s("307723");
            let A = [{
                label: "Latin alphabet",
                value: "aBcDeFgHiJkLmNoPqRsTuVwXyZ"
            }, {
                label: "Latin pangram",
                value: "The quick brown fox jumps over the lazy dog"
            }, {
                label: "Greek alphabet",
                value: "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΆΈΉΊΌΎΏ"
            }, {
                label: "Greek pangram",
                value: "ΤΑΧΊΣΤΗ ΑΛΏΠΗΞ ΒΑΦΉΣ ΨΗΜΈΝΗ ΓΗ, ΔΡΑΣΚΕΛΊΖΕΙ ΥΠΈΡ ΝΩΘΡΟΎ ΚΥΝΌΣ"
            }, {
                label: "Cyrillic alphabet",
                value: "АБВГЃҐДЕЀЁЖЗИЙЍКЌЛМНОПРСТУЎФХЧЦШЩЏЬЪЫЉЊЅЄЭІЇЈЋЮЯЂѢѲѴ"
            }, {
                label: "Cyrillic pangram",
                value: "В ЧАЩАХ ЮГА ЖИЛ БЫ ЦИТРУС? ДА, НО ФАЛЬШИВЫЙ ЭКЗЕМПЛЯР!"
            }, {
                label: "Custom",
                value: "custom"
            }];

            function C(e, t) {
                let [s, a] = n.useState(() => {
                    let s = o.Storage.get(e);
                    return null != s ? s : t
                });
                return n.useEffect(() => {
                    o.Storage.set(e, s)
                }, [e, s]), [s, a]
            }

            function O() {
                let [e, t] = n.useState(Math.round(window.outerWidth / window.innerWidth * 100)), {
                    platformZoom: s,
                    theme: i
                } = (0, r.useStateFromStoresObject)([N.default, E.default], () => ({
                    theme: N.default.theme,
                    platformZoom: E.default.zoom
                })), [o, O] = n.useState("upright"), h = ["normal", "medium", "semibold", "bold", "extrabold"], R = new Map([
                    ["normal", 400],
                    ["medium", 500],
                    ["semibold", 600],
                    ["bold", 700],
                    ["extrabold", 800]
                ]);
                n.useEffect(() => {
                    !I.isPlatformEmbedded && window.addEventListener("resize", () => {
                        t(Math.round(window.outerWidth / window.innerWidth * 100))
                    })
                }, []);
                let p = I.isPlatformEmbedded ? s : e,
                    M = (0, r.useStateFromStores)([T.default], () => {
                        var e, t;
                        return (0, _.probablyHasBuildOverride)() ? null === (t = T.default.getCurrentBuildOverride()) || void 0 === t ? void 0 : null === (e = t.overrides) || void 0 === e ? void 0 : e.discord_web : null
                    }),
                    [D, x] = C("playground-overrideText", null),
                    [L, P] = C("playground-defaultText", A[0].value),
                    b = n.useCallback(e => {
                        let t = A.find(t => {
                            let {
                                value: s
                            } = t;
                            return s === e
                        });
                        "" === e || null == e ? (P(A[0].value), x(null)) : null != t ? P(t.value) : (P("custom"), x(e))
                    }, [x, P]);
                return (0, a.jsx)("div", {
                    className: m.fullscreen,
                    style: {
                        "--playground-font-family": "mono" === o ? "gg mono" : "gg sans",
                        "--playground-font-style": "italic" === o ? "italic" : "normal"
                    },
                    children: (0, a.jsxs)(d.FormSection, {
                        tag: d.FormTitleTags.H1,
                        children: [(0, a.jsxs)("div", {
                            className: m.toolbar,
                            children: [(0, a.jsxs)("div", {
                                children: [(0, a.jsxs)(d.Text, {
                                    tag: "div",
                                    variant: "heading-lg/bold",
                                    style: {
                                        display: "inline-block"
                                    },
                                    children: ["Zoom: ", p, "%"]
                                }), null != M ? (0, a.jsxs)(d.Text, {
                                    tag: "div",
                                    variant: "heading-lg/bold",
                                    style: {
                                        display: "inline-block",
                                        marginLeft: "1em"
                                    },
                                    color: "header-secondary",
                                    children: ["(", M.id, ")"]
                                }) : null]
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)(d.SingleSelect, {
                                    className: m.select,
                                    options: A,
                                    onChange: e => b(e),
                                    value: L
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)("div", {
                                    className: m.input,
                                    children: (0, a.jsx)(d.TextInput, {
                                        placeholder: "Enter custom input...",
                                        value: null != D ? D : "",
                                        onChange: b
                                    })
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)(d.RadioGroup, {
                                    withTransparentBackground: !0,
                                    className: m.theme,
                                    orientation: "horizontal",
                                    options: [{
                                        name: f.default.Messages.THEME_DARK,
                                        value: g.ThemeTypes.DARK
                                    }, {
                                        name: f.default.Messages.THEME_LIGHT,
                                        value: g.ThemeTypes.LIGHT
                                    }],
                                    onChange: e => {
                                        (0, c.saveClientTheme)({
                                            theme: e.value
                                        })
                                    },
                                    value: i
                                })
                            }), (0, a.jsx)(d.FormItem, {
                                children: (0, a.jsx)(d.RadioGroup, {
                                    withTransparentBackground: !0,
                                    className: m.theme,
                                    orientation: "horizontal",
                                    options: [{
                                        name: "Upright",
                                        value: "upright"
                                    }, {
                                        name: "Italic",
                                        value: "italic"
                                    }, {
                                        name: "Mono",
                                        value: "mono"
                                    }],
                                    onChange: e => {
                                        O(e.value)
                                    },
                                    value: o
                                })
                            }), (0, a.jsx)(S.default, {
                                closeAction: u.popLayer,
                                keybind: "ESC"
                            })]
                        }), (0, a.jsxs)("div", {
                            className: m.textGrid,
                            children: [(0, a.jsx)("div", {}), h.map(e => (0, a.jsx)("div", {
                                className: m.columnHeading,
                                children: (0, a.jsx)(d.Heading, {
                                    variant: "eyebrow",
                                    children: e
                                })
                            }, e)), [10, 12, 14, 15, 16, 18, 20, 24].map(e => (0, a.jsxs)(n.Fragment, {
                                children: [(0, a.jsxs)("div", {
                                    className: m.fontSize,
                                    children: [(0, a.jsxs)(d.Heading, {
                                        variant: "eyebrow",
                                        children: [e, "px"]
                                    }), 100 !== p ? (0, a.jsxs)(d.Heading, {
                                        variant: "eyebrow",
                                        color: "text-muted",
                                        children: ["(", e * p / 100, ")"]
                                    }) : null]
                                }, e), h.map(t => {
                                    var s;
                                    let n = null !== (s = "custom" === L ? D : L) && void 0 !== s ? s : "";
                                    return (0, a.jsx)("div", {
                                        className: m.textSample,
                                        children: (0, a.jsxs)("div", {
                                            title: "".concat(e, "px at ").concat(t),
                                            className: l()(m.text, {
                                                [m.breakAnywhere]: !n.includes(" ")
                                            }),
                                            style: {
                                                fontSize: e,
                                                fontWeight: R.get(t)
                                            },
                                            children: [(0, a.jsx)("p", {
                                                children: n
                                            }), (0, a.jsx)("p", {
                                                style: {
                                                    textTransform: "lowercase"
                                                },
                                                children: n
                                            }), (0, a.jsx)("p", {
                                                style: {
                                                    textTransform: "uppercase"
                                                },
                                                children: n
                                            })]
                                        })
                                    }, "".concat(e, "-").concat(t))
                                })]
                            }, e))]
                        })]
                    })
                })
            }
        },
        200645: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("358085"),
                d = s("998502"),
                u = s("689938"),
                c = s("611273");

            function S(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class E extends n.PureComponent {
                async componentDidMount() {
                    this.setState({
                        openOnStartup: await d.default.getSetting("OPEN_ON_STARTUP", !0),
                        startMinimized: await d.default.getSetting("START_MINIMIZED", !1),
                        minimizeToTray: await d.default.getSetting("MINIMIZE_TO_TRAY", !0)
                    })
                }
                render() {
                    let {
                        openOnStartup: e,
                        startMinimized: t,
                        minimizeToTray: s
                    } = this.state, n = (0, o.isLinux)() ? u.default.Messages.USER_SETTINGS_LINUX_SETTINGS : u.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS;
                    return (0, a.jsxs)(r.FormSection, {
                        tag: r.FormTitleTags.H1,
                        title: n,
                        children: [(0, a.jsx)(r.FormTitle, {
                            children: u.default.Messages.USER_SETTINGS_STARTUP_BEHAVIOR
                        }), (0, a.jsx)(r.FormSwitch, {
                            className: c.marginBottom20,
                            value: e,
                            note: u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_BODY,
                            onChange: this.handleToggleOpenOnStartup,
                            children: u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_LABEL
                        }), (0, o.isWindows)() ? (0, a.jsx)(r.FormSwitch, {
                            disabled: !e,
                            className: l()(c.marginTop8, c.marginBottom20),
                            value: !!e && t,
                            note: u.default.Messages.USER_SETTINGS_START_MINIMIZED_BODY,
                            onChange: this.handleToggleStartMinimized,
                            children: u.default.Messages.USER_SETTINGS_START_MINIMIZED_LABEL
                        }) : null, (0, a.jsx)(r.FormTitle, {
                            className: l()(c.marginTop20, c.marginBottom8),
                            children: u.default.Messages.USER_SETTINGS_CLOSE_BUTTON
                        }), (0, a.jsx)(r.FormSwitch, {
                            className: c.marginBottom20,
                            value: s,
                            note: u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_BODY,
                            onChange: this.handleToggleMinimizeToTray,
                            children: u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_LABEL
                        })]
                    })
                }
                constructor(e) {
                    super(e), S(this, "handleToggleOpenOnStartup", () => {
                        let e = !this.state.openOnStartup;
                        this.setState({
                            openOnStartup: e
                        }), d.default.send("TOGGLE_OPEN_ON_STARTUP", e)
                    }), S(this, "handleToggleStartMinimized", () => {
                        let e = !this.state.startMinimized;
                        this.setState({
                            startMinimized: e
                        }), d.default.send("TOGGLE_START_MINIMIZED", e)
                    }), S(this, "handleToggleMinimizeToTray", () => {
                        let e = !this.state.minimizeToTray;
                        this.setState({
                            minimizeToTray: e
                        }), d.default.send("TOGGLE_MINIMIZE_TO_TRAY", e)
                    }), this.state = {
                        openOnStartup: !0,
                        startMinimized: !1,
                        minimizeToTray: !0
                    }
                }
            }
            t.default = E
        },
        287490: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            }), s("47120"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("392711"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("492435"),
                u = s("353926"),
                c = s("430824"),
                S = s("499533"),
                E = s("878209"),
                T = s("987338"),
                _ = s("964966");

            function I(e, t) {
                return e.map((e, s) => ({
                    label: "object" == typeof t ? t[s] : S.default.getExperimentBucketName(e),
                    value: e
                }))
            }

            function N() {
                let e = (0, r.useStateFromStoresObject)([u.default], () => u.default.getAllExperimentOverrideDescriptors()),
                    t = (0, r.useStateFromStoresObject)([u.default], () => u.default.getRegisteredExperiments()),
                    [s, i] = n.useState(""),
                    l = (0, E.getBestMatches)((0, E.sortEntries)((0, E.getEntries)(t), e), s);
                return (0, a.jsxs)(o.FormSection, {
                    tag: o.FormTitleTags.H1,
                    title: "Experiments",
                    children: [(0, a.jsx)(o.SearchBar, {
                        size: o.SearchBar.Sizes.LARGE,
                        query: s,
                        onChange: i,
                        onClear: () => i("")
                    }), l.length > 0 ? l.map(t => {
                        let s = t.experiment.type === T.ExperimentTypes.GUILD ? f : g;
                        return (0, a.jsx)(s, {
                            experiment: t.experiment,
                            experimentId: t.id,
                            overrideDescriptor: e[t.id]
                        }, t.id)
                    }) : (0, a.jsx)("div", {
                        className: _.emptyState,
                        children: (0, a.jsx)(o.Heading, {
                            variant: "heading-md/semibold",
                            children: "No Experiments Found"
                        })
                    })]
                })
            }

            function g(e) {
                var t;
                let {
                    experiment: s,
                    experimentId: i,
                    overrideDescriptor: c
                } = e, [S, E] = n.useState(null != c), [N, g] = n.useState(!1), f = n.useCallback(() => {
                    E(e => !e)
                }, []), m = (0, r.useStateFromStores)([u.default], () => u.default.getUserExperimentDescriptor(i)), A = (0, r.useStateFromStores)([u.default], () => u.default.getLoadedUserExperiment(i)), C = (0, r.useStateFromStores)([u.default], () => l().sortBy(u.default.getRecentExposures(T.ExperimentTypes.USER, i), e => {
                    let [t, s] = e;
                    return -s
                }).map(e => {
                    let [t, s] = e;
                    return "".concat(new Date(s).toLocaleString(), " (").concat(t, ")")
                })), O = (0, a.jsx)(o.Clickable, {
                    onClick: f,
                    children: (0, a.jsxs)(o.FormTitle, {
                        tag: o.FormTitleTags.H3,
                        className: _.title,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("span", {
                                children: s.title
                            }), (0, a.jsx)(o.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: i
                            })]
                        }), (0, a.jsx)("span", {
                            className: _.experimentDate,
                            children: "User"
                        })]
                    })
                });
                return S ? (0, a.jsxs)("div", {
                    className: _.group,
                    children: [(0, a.jsxs)(o.FormSection, {
                        children: [O, (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormItem, {
                                title: "Bucket Override",
                                children: (0, a.jsx)(o.SingleSelect, {
                                    value: null != c ? c.bucket : null,
                                    clearable: null != c,
                                    options: I(s.buckets, s.description),
                                    onChange: e => {
                                        (0, d.overrideBucket)(i, e)
                                    }
                                })
                            }), "string" == typeof s.description ? (0, a.jsx)("div", {
                                className: _.description,
                                children: (0, a.jsx)(o.FormText, {
                                    type: o.FormTextTypes.DESCRIPTION,
                                    children: s.description
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: _.description,
                            children: [(0, a.jsxs)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: ["Current assigned to bucket ", null !== (t = null == m ? void 0 : m.bucket) && void 0 !== t ? t : T.ExperimentBuckets.NOT_ELIGIBLE]
                            }), null == A ? (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: 'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.'
                            }) : null]
                        }), N ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Server Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: null == A ? "None" : JSON.stringify(A, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Override Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: null == c ? "None" : JSON.stringify(c, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Recent Exposures"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: 0 === C.length ? "None" : C.join("\n")
                            })]
                        }) : (0, a.jsx)(o.Button, {
                            className: _.debugButton,
                            size: o.Button.Sizes.SMALL,
                            look: o.Button.Looks.BLANK,
                            onClick: () => g(!0),
                            children: "More Details \xbb"
                        })]
                    }), (0, a.jsx)(o.FormDivider, {
                        className: _.divider
                    })]
                }) : (0, a.jsx)("div", {
                    className: _.group,
                    children: (0, a.jsx)(o.FormSection, {
                        children: O
                    })
                })
            }

            function f(e) {
                let {
                    experiment: t,
                    experimentId: s,
                    overrideDescriptor: i
                } = e, [S, E] = n.useState(null != i), [N, g] = n.useState(!1), f = n.useCallback(() => {
                    E(e => !e)
                }, []), m = (0, r.useStateFromStores)([u.default], () => u.default.getLoadedGuildExperiment(s)), A = (0, r.useStateFromStores)([u.default], () => l().sortBy(u.default.getRecentExposures(T.ExperimentTypes.GUILD, s), e => {
                    let [t, s] = e;
                    return -s
                }).map(e => {
                    let [t, s] = e;
                    return "".concat(new Date(s).toLocaleString(), " (").concat(t, ")")
                })), [C, O] = (0, r.useStateFromStoresArray)([c.default, u.default], () => {
                    let e = l().sortBy(l().values(c.default.getGuilds()), e => e.name.toLowerCase()),
                        t = {},
                        a = [];
                    for (let i of e) {
                        var n;
                        let e = u.default.getGuildExperimentDescriptor(s, i.id),
                            l = null !== (n = null == e ? void 0 : e.bucket) && void 0 !== n ? n : T.ExperimentBuckets.NOT_ELIGIBLE;
                        !(l in t) && (t[l] = 0), t[l]++, a.push("".concat(i.name, ": ").concat(l))
                    }
                    return [a, l()(t).keys().map(Number).sort().map(e => "".concat(t[e], " guilds in bucket ").concat(e)).join(", ")]
                }), h = (0, a.jsx)(o.Clickable, {
                    onClick: f,
                    children: (0, a.jsxs)(o.FormTitle, {
                        tag: o.FormTitleTags.H3,
                        className: _.title,
                        children: [(0, a.jsxs)("div", {
                            children: [(0, a.jsx)("span", {
                                children: t.title
                            }), (0, a.jsx)(o.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: s
                            })]
                        }), (0, a.jsx)("span", {
                            className: _.experimentDate,
                            children: "Guild"
                        })]
                    })
                });
                return S ? (0, a.jsxs)("div", {
                    className: _.group,
                    children: [(0, a.jsxs)(o.FormSection, {
                        children: [h, (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormItem, {
                                title: "Bucket Override",
                                children: (0, a.jsx)(o.SingleSelect, {
                                    value: null != i ? i.bucket : null,
                                    clearable: null != i,
                                    options: I(t.buckets, t.description),
                                    onChange: e => {
                                        (0, d.overrideBucket)(s, e)
                                    }
                                })
                            }), "string" == typeof t.description ? (0, a.jsx)("div", {
                                className: _.description,
                                children: (0, a.jsx)(o.FormText, {
                                    type: o.FormTextTypes.DESCRIPTION,
                                    children: t.description
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: _.description,
                            children: [(0, a.jsxs)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: ["Current Assignments: ", O]
                            }), null == m ? (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: 'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.'
                            }) : null]
                        }), N ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Guild Assignments"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: C.join("\n")
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Server Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: null == m ? "None" : JSON.stringify(m, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Override Descriptor"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: null == i ? "None" : JSON.stringify(i, void 0, 2)
                            }), (0, a.jsx)(o.FormTitle, {
                                tag: "h5",
                                className: _.debugTitle,
                                children: "Recent Exposures"
                            }), (0, a.jsx)(o.Text, {
                                variant: "code",
                                className: _.pre,
                                children: 0 === A.length ? "None" : A.join("\n")
                            })]
                        }) : (0, a.jsx)(o.Button, {
                            className: _.debugButton,
                            size: o.Button.Sizes.SMALL,
                            look: o.Button.Looks.BLANK,
                            onClick: () => g(!0),
                            children: "More Details \xbb"
                        })]
                    }), (0, a.jsx)(o.FormDivider, {
                        className: _.divider
                    })]
                }) : (0, a.jsx)("div", {
                    className: _.group,
                    children: (0, a.jsx)(o.FormSection, {
                        children: h
                    })
                })
            }
        },
        888256: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return d
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("921801"),
                l = s("726985"),
                r = s("689938"),
                o = s("200173");

            function d(e) {
                let {
                    className: t,
                    currentUser: s,
                    handleDisableAccount: d,
                    handleDeleteAccount: u
                } = e, c = s.isClaimed();
                return (0, a.jsx)(i.Subsetting, {
                    setting: l.WebSetting.ACCOUNT_DISABLE_ACCOUNT,
                    children: (0, a.jsxs)(n.FormSection, {
                        className: t,
                        title: r.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_SECTION,
                        children: [(0, a.jsx)(n.FormText, {
                            className: o.description,
                            type: n.FormText.Types.DESCRIPTION,
                            children: c ? r.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION : r.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION_UNCLAIMED
                        }), (0, a.jsxs)("div", {
                            className: o.buttonContainer,
                            children: [c ? (0, a.jsx)(n.Button, {
                                className: o.disableButton,
                                look: n.ButtonLooks.FILLED,
                                color: n.ButtonColors.RED,
                                size: n.ButtonSizes.SMALL,
                                onClick: d,
                                children: r.default.Messages.DISABLE_ACCOUNT
                            }) : null, (0, a.jsx)(i.Subsetting, {
                                setting: l.WebSetting.ACCOUNT_DELETE_ACCOUNT,
                                children: (0, a.jsx)(n.Button, {
                                    look: n.ButtonLooks.OUTLINED,
                                    color: n.ButtonColors.RED,
                                    size: n.ButtonSizes.SMALL,
                                    onClick: u,
                                    children: r.default.Messages.DELETE_ACCOUNT
                                })
                            })]
                        })]
                    })
                })
            }
        },
        954756: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("809206"),
                r = s("852860"),
                o = s("164946"),
                d = s("350327"),
                u = s("25990"),
                c = s("647699"),
                S = s("155433");

            function E() {
                let e = (0, i.useStateFromStores)([u.default], () => u.default.getIsSubmitDisabled()),
                    [t, s] = n.useState(!1),
                    E = n.useCallback(async () => {
                        var e, t, a;
                        s(!0);
                        let n = u.default.getAllPending(),
                            i = (0, o.getAccountUpdateForUpdateRequest)(n),
                            r = (0, o.getProfileChangesForUpdateRequest)(n),
                            E = !0;
                        if (Object.keys(i).length > 0) {
                            let s = await (0, l.saveAccountChanges)(i);
                            E = E && null !== (t = null == s ? void 0 : s.ok) && void 0 !== t && t, (null == s ? void 0 : s.ok) ? (0, l.resetPendingAccountChanges)() : (null == s ? void 0 : null === (e = s.body) || void 0 === e ? void 0 : e.username) != null ? (0, S.showInvalidUsernameToast)() : (0, c.showGenericProfileUpdateFailureToast)()
                        }
                        if (Object.keys(r).length > 0) {
                            let e = await (0, d.saveProfileChanges)(r);
                            E = E && null !== (a = null == e ? void 0 : e.ok) && void 0 !== a && a, (null == e ? void 0 : e.ok) ? (0, d.resetPendingProfileChanges)() : (0, c.showGenericProfileUpdateFailureToast)()
                        }
                        E && (0, l.clearErrors)(), s(!1)
                    }, []),
                    T = n.useCallback(() => {
                        (0, l.resetAllPending)()
                    }, []);
                return (0, a.jsx)(r.default, {
                    submitting: t,
                    onSave: E,
                    onReset: T,
                    disabled: e
                })
            }
        },
        2719: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return Z
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("512722"),
                o = s.n(r),
                d = s("442837"),
                u = s("692547"),
                c = s("481060"),
                S = s("230711"),
                E = s("129861"),
                T = s("279837"),
                _ = s("952306"),
                I = s("299206"),
                N = s("295474"),
                g = s("144114"),
                f = s("918505"),
                m = s("332473"),
                A = s("921801"),
                C = s("290421"),
                O = s("318661"),
                h = s("80132"),
                R = s("735336"),
                p = s("204197"),
                M = s("25990"),
                D = s("594174"),
                x = s("808268"),
                L = s("759231"),
                P = s("572004"),
                b = s("51144"),
                v = s("998502"),
                U = s("695346"),
                j = s("461877"),
                G = s("726985"),
                F = s("981631"),
                B = s("815660"),
                y = s("801461"),
                V = s("228168"),
                H = s("689938"),
                Y = s("276380");
            let k = v.default.getEnableHardwareAcceleration() ? c.AnimatedAvatar : c.Avatar;

            function w(e) {
                var t, i;
                let {
                    className: r,
                    user: o
                } = e, d = n.useRef(null), S = (0, f.usePomeloEligibility)(), E = (0, m.useIsEligibleForPomelo)(), T = (0, N.useGuildAutomodProfileQuarantineErrors)(), _ = null !== (i = null == T ? void 0 : null === (t = T.nick) || void 0 === t ? void 0 : t[0]) && void 0 !== i ? i : null, [I, g] = n.useState(!1);
                n.useEffect(() => {
                    g(null != d.current && d.current.scrollWidth > d.current.clientWidth)
                }, [o.username]);
                let A = !o.isClaimed(),
                    C = S && !o.isPomelo() && !o.hasVerifiedEmailOrPhone() || A,
                    O = C ? H.default.Messages.POMELO_UPDATE_DISABLED_MESSAGE : void 0;
                return (0, a.jsxs)("div", {
                    className: l()(Y.field, r),
                    children: [(0, a.jsx)("div", {
                        className: Y.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            className: Y.usernameRow,
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: Y.fieldTitle,
                                children: H.default.Messages.USER_SETTINGS_LABEL_USERNAME
                            }), (0, a.jsxs)("div", {
                                className: Y.usernameInnerRow,
                                ref: d,
                                children: [(0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: o.username
                                }), !o.isPomelo() && (0, a.jsxs)(c.Text, {
                                    tag: "span",
                                    color: "header-secondary",
                                    variant: "text-md/normal",
                                    children: ["#", o.discriminator]
                                })]
                            })]
                        })
                    }), E && (0, a.jsx)("div", {
                        className: Y.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: H.default.Messages.ACTION_NEEDED,
                            children: e => (0, a.jsx)(L.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), null != _ && (0, a.jsx)("div", {
                        className: Y.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: _,
                            "aria-label": !1,
                            children: e => (0, a.jsx)(L.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), (0, a.jsx)(c.Tooltip, {
                        text: O,
                        children: e => (0, a.jsx)(c.Button, {
                            ...e,
                            disabled: C,
                            size: c.Button.Sizes.SMALL,
                            className: Y.fieldButton,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": H.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_USERNAME_A11Y_LABEL,
                            onClick: () => (0, c.openModalLazy)(async () => {
                                if (E) {
                                    let {
                                        default: e
                                    } = await Promise.all([s.e("99387"), s.e("85342")]).then(s.bind(s, "193049"));
                                    return t => (0, a.jsx)(e, {
                                        source: y.PomeloEntrypoints.USER_SETTINGS_EDIT,
                                        ...t
                                    })
                                } {
                                    let {
                                        default: e
                                    } = await Promise.all([s.e("99387"), s.e("75492"), s.e("42758")]).then(s.bind(s, "2702"));
                                    return t => (0, a.jsx)(e, {
                                        ...t
                                    })
                                }
                            }),
                            children: I ? H.default.Messages.DISAPPROVAL : H.default.Messages.EDIT
                        })
                    })]
                })
            }

            function W(e) {
                var t, s;
                let {
                    user: i,
                    className: r
                } = e, o = (0, N.useGuildAutomodProfileQuarantineErrors)(), d = null !== (s = null == o ? void 0 : null === (t = o.nick) || void 0 === t ? void 0 : t[0]) && void 0 !== s ? s : null, S = b.default.getGlobalName(i), E = n.useRef(null), [T, _] = n.useState(!1);
                return n.useEffect(() => {
                    _(null != E.current && E.current.scrollWidth > E.current.clientWidth)
                }, [S]), (0, a.jsxs)("div", {
                    className: l()(Y.field, r),
                    children: [(0, a.jsx)("div", {
                        className: Y.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            className: Y.usernameRow,
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: Y.fieldTitle,
                                children: H.default.Messages.DISPLAY_NAME
                            }), (0, a.jsx)("div", {
                                className: Y.usernameInnerRow,
                                ref: E,
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: null == S ? H.default.Messages.USER_SETTINGS_NO_DISPLAYNAME_PLACEHOLDER : S
                                })
                            })]
                        })
                    }), null != d && (0, a.jsx)("div", {
                        className: Y.pomeloWarning,
                        children: (0, a.jsx)(c.Tooltip, {
                            text: d,
                            "aria-label": !1,
                            children: e => (0, a.jsx)(L.default, {
                                ...e,
                                color: u.default.colors.STATUS_WARNING.css
                            })
                        })
                    }), (0, a.jsx)(c.Button, {
                        className: Y.fieldButton,
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.PRIMARY,
                        "aria-label": H.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_DISPLAYNAME_A11Y_LABEL,
                        onClick: q,
                        children: T ? H.default.Messages.DISAPPROVAL : H.default.Messages.EDIT
                    })]
                })
            }

            function K(e) {
                let {
                    text: t,
                    censor: s,
                    revealLabel: i,
                    hideLabel: l
                } = e, [r, o] = n.useState(!1), d = r ? t : s(t);
                return (0, a.jsxs)(a.Fragment, {
                    children: [d, (0, a.jsx)(c.Button, {
                        look: c.Button.Looks.LINK,
                        size: c.Button.Sizes.MIN,
                        color: c.Button.Colors.LINK,
                        "aria-label": r ? l : i,
                        onClick: () => o(!r),
                        children: r ? H.default.Messages.HIDE : H.default.Messages.REVEAL
                    })]
                })
            }

            function Q(e) {
                let t, {
                    className: n,
                    user: i
                } = e;
                if (i.isClaimed()) {
                    if (null == i.email) t = {
                        buttonText: H.default.Messages.ADD,
                        buttonAriaLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_ADD_EMAIL_A11Y_LABEL,
                        buttonColor: c.Button.Colors.PRIMARY,
                        valueMessage: H.default.Messages.USER_SETTINGS_NO_EMAIL_PLACEHOLDER,
                        handleClick: () => (0, c.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([s.e("99387"), s.e("9343")]).then(s.bind(s, "642298"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    };
                    else {
                        let {
                            email: e
                        } = i;
                        t = {
                            buttonText: H.default.Messages.EDIT,
                            buttonAriaLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_EMAIL_A11Y_LABEL,
                            buttonColor: c.Button.Colors.PRIMARY,
                            valueMessage: (0, a.jsx)(K, {
                                text: e,
                                censor: j.censorEmail,
                                revealLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_REVEAL_EMAIL_A11Y_LABEL,
                                hideLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_HIDE_EMAIL_A11Y_LABEL
                            }),
                            handleClick: () => (0, c.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([s.e("99387"), s.e("9343")]).then(s.bind(s, "642298"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        }
                    }
                } else t = {
                    buttonText: H.default.Messages.CLAIM_ACCOUNT_SHORT,
                    buttonAriaLabel: H.default.Messages.CLAIM_ACCOUNT_SHORT,
                    buttonColor: c.Button.Colors.BRAND,
                    valueMessage: H.default.Messages.USER_SETTINGS_ADD_EMAIL_CLAIM,
                    handleClick: () => _.default.openClaimAccountModal()
                };
                return (0, a.jsxs)("div", {
                    className: l()(Y.field, n),
                    children: [(0, a.jsx)("div", {
                        className: Y.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: Y.fieldTitle,
                                children: H.default.Messages.USER_SETTINGS_LABEL_EMAIL
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: t.valueMessage
                                })
                            })]
                        })
                    }), (0, a.jsx)(c.Button, {
                        className: Y.fieldButton,
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.PRIMARY,
                        "aria-label": t.buttonAriaLabel,
                        onClick: t.handleClick,
                        children: t.buttonText
                    })]
                })
            }

            function z(e) {
                let t, {
                    className: n,
                    user: i
                } = e;
                if (!i.isClaimed()) return null;
                let {
                    phone: r,
                    email: o
                } = i, d = null != r;
                return t = d ? (0, a.jsx)(K, {
                    text: r,
                    censor: j.censorPhone,
                    revealLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_REVEAL_PHONE_A11Y_LABEL,
                    hideLabel: H.default.Messages.USER_SETTINGS_ACCOUNT_HIDE_PHONE_A11Y_LABEL
                }) : H.default.Messages.USER_SETTINGS_NO_PHONE_PLACEHOLDER, (0, a.jsxs)("div", {
                    className: l()(Y.field, n),
                    children: [(0, a.jsx)("div", {
                        className: Y.constrainedRow,
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(c.FormTitle, {
                                className: Y.fieldTitle,
                                children: H.default.Messages.USER_SETTINGS_LABEL_PHONE_NUMBER
                            }), (0, a.jsx)("div", {
                                children: (0, a.jsx)(c.Text, {
                                    tag: "span",
                                    color: "header-primary",
                                    variant: "text-md/normal",
                                    children: t
                                })
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: Y.fieldButtonList,
                        children: [d && null != o ? (0, a.jsx)(c.Button, {
                            className: l()(Y.fieldButton, Y.removeButton),
                            size: c.Button.Sizes.SMALL,
                            look: c.Button.Looks.LINK,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": H.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_A11Y_LABEL,
                            onClick: function() {
                                (0, c.openModal)(e => (0, a.jsx)(T.default, {
                                    ...e,
                                    title: H.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_NUMBER_TITLE,
                                    children: i.hasFlag(F.UserFlags.MFA_SMS) ? H.default.Messages.USER_SETTINGS_ACCOUNT_REMOVE_PHONE_SMS_BACKUP_WARNING : void 0,
                                    actionText: H.default.Messages.REMOVE,
                                    handleSubmit: e => g.default.removePhone(e, g.ChangePhoneReason.USER_SETTINGS_UPDATE)
                                }))
                            },
                            children: H.default.Messages.REMOVE
                        }) : null, (0, a.jsx)(c.Button, {
                            className: Y.fieldButton,
                            size: c.Button.Sizes.SMALL,
                            color: c.Button.Colors.PRIMARY,
                            "aria-label": d ? H.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_PHONE_A11Y_LABEL : H.default.Messages.USER_SETTINGS_ACCOUNT_ADD_PHONE_A11Y_LABEL,
                            onClick: function() {
                                (0, c.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await Promise.resolve().then(s.bind(s, "607018"));
                                    return t => (0, a.jsx)(e, {
                                        reason: g.ChangePhoneReason.USER_SETTINGS_UPDATE,
                                        ...t
                                    })
                                }, {
                                    modalKey: B.PHONE_VERIFICATION_MODAL_KEY
                                })
                            },
                            children: d ? H.default.Messages.EDIT : H.default.Messages.ADD
                        })]
                    })]
                })
            }

            function X(e) {
                let {
                    user: t
                } = e, s = (0, I.default)({
                    id: t.id,
                    label: H.default.Messages.COPY_ID_USER
                });
                return U.DeveloperMode.useSetting() && P.SUPPORTS_COPY ? (0, a.jsx)(c.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(c.Menu, {
                            onClose: t,
                            onSelect: void 0,
                            navId: "copy-id",
                            "aria-label": H.default.Messages.USER_MORE_ACTIONS_MENU_LABEL,
                            children: s
                        })
                    },
                    children: e => (0, a.jsx)(c.Clickable, {
                        ...e,
                        className: Y.overflowMenuButton,
                        "aria-label": H.default.Messages.ACTIONS,
                        children: (0, a.jsx)(x.default, {
                            className: Y.overflowMenuIcon,
                            height: 24,
                            width: 24
                        })
                    })
                }) : null
            }

            function q() {
                S.default.setSection(F.UserSettingsSections.PROFILE_CUSTOMIZATION)
            }

            function Z() {
                var e;
                let t = (0, d.useStateFromStores)([D.default], () => {
                        let e = D.default.getCurrentUser();
                        return o()(null != e, "UserSettingsAccountProfileCard: currentUser cannot be undefined"), e
                    }),
                    s = (0, O.default)(t.id),
                    n = (0, C.default)(s),
                    i = U.StatusSetting.useSetting(),
                    l = (0, d.useStateFromStores)([M.default], () => M.default.getErrors()),
                    r = null == l ? void 0 : null === (e = l.avatar) || void 0 === e ? void 0 : e[0],
                    {
                        avatarSrc: u,
                        avatarDecorationSrc: S
                    } = (0, p.default)({
                        user: t,
                        size: c.AvatarSizes.SIZE_80
                    });
                return (0, a.jsxs)("div", {
                    className: Y.accountProfileCard,
                    children: [(0, a.jsx)(R.default, {
                        displayProfile: s,
                        user: t,
                        allowEdit: !1,
                        guildId: void 0,
                        profileType: V.UserProfileTypes.SETTINGS
                    }), (0, a.jsxs)("div", {
                        className: Y.userInfo,
                        children: [(0, a.jsx)(k, {
                            className: Y.avatar,
                            src: u,
                            avatarDecoration: S,
                            status: i,
                            size: c.AvatarSizes.SIZE_80,
                            "aria-label": t.username
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsxs)("div", {
                                className: Y.profileCardUsernameRow,
                                children: [(0, a.jsx)(E.default, {
                                    user: t,
                                    className: Y.userTag,
                                    discriminatorClass: Y.discriminator
                                }), (0, a.jsx)(X, {
                                    user: t
                                })]
                            }), (0, a.jsx)(h.default, {
                                badges: n,
                                className: Y.badgeList,
                                badgeClassName: Y.badge
                            })]
                        }), (0, a.jsx)(c.Button, {
                            onClick: q,
                            size: c.Button.Sizes.SMALL,
                            children: H.default.Messages.USER_SETTINGS_EDIT_USER_PROFILE
                        })]
                    }), (0, a.jsxs)("div", {
                        className: Y.background,
                        children: [null != r ? (0, a.jsx)(c.Text, {
                            className: Y.avatarError,
                            variant: "text-xs/normal",
                            color: "text-danger",
                            children: r
                        }) : null, (0, a.jsxs)("div", {
                            className: Y.fieldList,
                            children: [(0, a.jsx)(A.Subsetting, {
                                setting: G.WebSetting.ACCOUNT_DISPLAY_NAME,
                                children: (0, a.jsx)(W, {
                                    className: Y.fieldSpacerBottom,
                                    user: t
                                })
                            }), (0, a.jsx)(A.Subsetting, {
                                setting: G.WebSetting.ACCOUNT_USERNAME,
                                children: (0, a.jsx)(w, {
                                    user: t
                                })
                            }), (0, a.jsx)(A.Subsetting, {
                                setting: G.WebSetting.ACCOUNT_EMAIL,
                                children: (0, a.jsx)(Q, {
                                    className: Y.fieldSpacer,
                                    user: t
                                })
                            }), (0, a.jsx)(A.Subsetting, {
                                setting: G.WebSetting.ACCOUNT_PHONE_NUMBER,
                                children: (0, a.jsx)(z, {
                                    className: Y.fieldSpacer,
                                    user: t
                                })
                            })]
                        })]
                    })]
                })
            }
        },
        194530: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return T
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("809206"),
                o = s("25990"),
                d = s("154921"),
                u = s("155433"),
                c = s("981631"),
                S = s("689938"),
                E = s("559912");

            function T(e) {
                var t, s, T, _;
                let {
                    transitionState: I,
                    onSuccess: N,
                    onClose: g,
                    requirementsUpdated: f,
                    noSkip: m = !1
                } = e, [A, C] = n.useState(""), [O, h] = n.useState(""), [R, p] = n.useState(""), [M, D] = n.useState(null), [x, L] = n.useState(null), P = (0, i.useStateFromStores)([o.default], () => o.default.getErrors()), b = (0, i.useStateFromStores)([o.default], () => o.default.getFormState()), v = n.useRef(null);
                async function U(e) {
                    e.preventDefault(), (0, r.clearErrors)();
                    let t = !1;
                    if ("" === O ? (D(S.default.Messages.PASSWORD_REQUIREMENTS_EMPTY), t = !0) : D(null), O !== R ? (L(S.default.Messages.FORM_LABEL_NEW_PASSWORD_MISMATCH), t = !0) : L(null), t) return;
                    let s = await (0, r.saveAccountChanges)({
                        password: A,
                        newPassword: O
                    });
                    if (null == s ? void 0 : s.ok) N();
                    else {
                        var a;
                        (null == s ? void 0 : null === (a = s.body) || void 0 === a ? void 0 : a.username) != null && (0, u.showInvalidUsernameToast)()
                    }
                }
                return n.useEffect(() => {
                    if (I === l.ModalTransitionState.ENTERED) {
                        var e;
                        null === (e = v.current) || void 0 === e || e.focus()
                    }
                }, [I]), (0, a.jsxs)(l.ModalRoot, {
                    transitionState: I,
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        className: E.header,
                        children: [(0, a.jsx)(d.default, {
                            color: d.default.Colors.HEADER_PRIMARY,
                            size: d.default.Sizes.SIZE_24,
                            className: E.title,
                            children: S.default.Messages.UPDATE_PASSWORD
                        }), (0, a.jsx)(l.Text, {
                            color: "header-secondary",
                            variant: "text-md/normal",
                            className: E.subtitle,
                            children: f ? S.default.Messages.FORCE_PASSWORD_UPDATE_DESCRIPTION : S.default.Messages.USER_SETTINGS_ACCOUNT_CHANGE_PASSWORD_PROMPT_DESKTOP
                        }), !0 !== m && (0, a.jsx)(l.ModalCloseButton, {
                            onClick: g,
                            className: E.modalCloseButton
                        })]
                    }), (0, a.jsxs)("form", {
                        onSubmit: U,
                        children: [(0, a.jsxs)(l.ModalContent, {
                            className: E.content,
                            children: [(0, a.jsx)(l.FormItem, {
                                title: S.default.Messages.FORM_LABEL_CURRENT_PASSWORD,
                                error: null == P ? void 0 : null === (t = P.password) || void 0 === t ? void 0 : t[0],
                                children: (0, a.jsx)(l.TextInput, {
                                    type: "password",
                                    value: A,
                                    onChange: C,
                                    inputRef: v
                                })
                            }), (0, a.jsx)(l.FormItem, {
                                className: E.newPassword,
                                title: S.default.Messages.FORM_LABEL_NEW_PASSWORD,
                                error: null !== (_ = null !== (T = null == P ? void 0 : null === (s = P.new_password) || void 0 === s ? void 0 : s[0]) && void 0 !== T ? T : M) && void 0 !== _ ? _ : void 0,
                                children: (0, a.jsx)(l.TextInput, {
                                    type: "password",
                                    value: O,
                                    onChange: h
                                })
                            }), (0, a.jsx)(l.FormItem, {
                                className: E.newPassword,
                                title: S.default.Messages.FORM_LABEL_CONFIRM_NEW_PASSWORD,
                                error: null != x ? x : void 0,
                                children: (0, a.jsx)(l.TextInput, {
                                    type: "password",
                                    value: R,
                                    onChange: p
                                })
                            })]
                        }), (0, a.jsxs)(l.ModalFooter, {
                            children: [(0, a.jsx)(l.Button, {
                                type: "submit",
                                color: l.Button.Colors.BRAND,
                                size: l.Button.Sizes.MEDIUM,
                                submitting: b === c.FormStates.SUBMITTING,
                                children: S.default.Messages.DONE
                            }), !0 !== m && (0, a.jsx)(l.Button, {
                                className: E.cancel,
                                look: l.Button.Looks.LINK,
                                color: l.Button.Colors.PRIMARY,
                                onClick: g,
                                children: S.default.Messages.CANCEL
                            })]
                        })]
                    })]
                })
            }
        },
        622474: function(e, t, s) {
            "use strict";
            s.r(t), s("47120"), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("913527"),
                o = s.n(r),
                d = s("374470"),
                u = s("399606"),
                c = s("481060"),
                S = s("570140"),
                E = s("37234"),
                T = s("960359"),
                _ = s("853197"),
                I = s("430492"),
                N = s("688465"),
                g = s("594174"),
                f = s("55935"),
                m = s("702512"),
                A = s("689938"),
                C = s("193225");
            let O = "YYYY-MM-DD HH:mm";

            function h(e) {
                let {
                    drop: t,
                    enrolled: s,
                    completed: i
                } = e, l = n.useRef(null), r = e => {
                    let t = e.target;
                    (0, d.isElement)(t, HTMLAnchorElement) && (0, E.popLayer)()
                };
                (0, n.useEffect)(() => {
                    let e = l.current;
                    return null != e && e.addEventListener("click", r), () => {
                        null != e && e.removeEventListener("click", r)
                    }
                }, []);
                let {
                    title: u,
                    endDate: I,
                    dropsQuestId: N,
                    assets: g,
                    articleUrl: f
                } = t, m = (0, _.getDropByQuestId)(N);
                if (null == m) return null;
                let O = () => {
                    (0, T.enrollDropsUser)(N).then(() => {
                        S.default.wait(async () => {
                            await (0, T.fetchDropsUserStatus)()
                        })
                    })
                };
                return (0, a.jsxs)("div", {
                    className: C.dropContainer,
                    children: [(0, a.jsx)("div", {
                        className: C.dropCard,
                        children: (0, a.jsxs)("div", {
                            className: C.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: C.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: C.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: g.iconSrc,
                                        className: C.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(c.Heading, {
                                        variant: "heading-md/semibold",
                                        children: u
                                    }), (0, a.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "text-normal",
                                        className: C.availableUntil,
                                        children: A.default.Messages.DROPS_CARD_REDEEM_UNTIL.format({
                                            endDate: o()(I, "YYYY-MM-DD HH:mm").format("MMMM Do, YYYY")
                                        })
                                    })]
                                })]
                            }), (0, a.jsx)(c.Tooltip, {
                                text: s && !i ? A.default.Messages.DROPS_GIFT_INVENTORY_REDEMPTION_TOOLTIP : null,
                                tooltipContentClassName: C.redeemTooltipContent,
                                children: e => (0, a.jsx)(c.Button, {
                                    className: C.promotionCardButton,
                                    color: c.Button.Colors.BRAND,
                                    size: c.Button.Sizes.SMALL,
                                    onClick: O,
                                    disabled: s && !i,
                                    ...e,
                                    children: s ? A.default.Messages.REDEEM : A.default.Messages.DROPS_GIFT_INVENTORY_ENROLL
                                })
                            })]
                        })
                    }), (0, a.jsxs)("div", {
                        className: C.dropCriteria,
                        children: [(0, a.jsx)("img", {
                            alt: "",
                            src: g.rewardSrc,
                            className: C.dropRewardImage
                        }), (0, a.jsx)("div", {
                            ref: l,
                            children: (0, a.jsx)(c.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                className: C.dropCriteriaText,
                                children: m.messages.giftInfo()
                            })
                        }), (0, a.jsx)(c.Text, {
                            color: "text-muted",
                            variant: "text-sm/normal",
                            className: C.dropLearnMore,
                            children: A.default.Messages.DROPS_LEARN_MORE.format({
                                faqUrl: f
                            })
                        })]
                    })]
                })
            }

            function R(e) {
                let {
                    drop: t,
                    code: s,
                    platform: i
                } = e, [r, d] = n.useState(!1), u = void 0 !== s, S = (0, f.dateFormat)(o()(t.endDate), "LL"), E = A.default.Messages.DROPS_CARD_REDEEM_UNTIL.format({
                    endDate: S
                }), T = u ? A.default.Messages.OUTBOUND_PROMOTION_SEE_CODE : A.default.Messages.PROMOTION_CARD_ACTION_CLAIM, _ = n.useCallback(() => d(!1), []);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        className: l()(C.skuCard, C.promotionCard),
                        children: (0, a.jsxs)("div", {
                            className: C.mainPromotionCardContainer,
                            children: [(0, a.jsxs)("div", {
                                className: C.promotionCardLeftContainer,
                                children: [(0, a.jsx)("div", {
                                    className: C.promotionIcon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: t.assets.iconSrc,
                                        className: C.promotionIconImage
                                    })
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(c.Heading, {
                                        variant: "heading-md/semibold",
                                        children: t.title
                                    }), (0, a.jsx)(c.Text, {
                                        variant: "text-sm/normal",
                                        color: "text-normal",
                                        className: C.__invalid_promotionText,
                                        children: E
                                    })]
                                })]
                            }), (0, a.jsx)(c.Button, {
                                color: c.Button.Colors.BRAND,
                                size: c.Button.Sizes.SMALL,
                                onClick: () => d(!0),
                                children: T
                            })]
                        })
                    }), r && (0, a.jsx)(c.Modal, {
                        renderModal: e => (0, a.jsx)(I.default, {
                            ...e,
                            onClose: _,
                            code: s,
                            drop: t,
                            platform: i
                        }),
                        onCloseRequest: _
                    })]
                })
            }
            t.default = function(e) {
                var t;
                let {
                    dropsOptedOut: s,
                    dropsStatuses: n
                } = e, i = [], l = [], r = (0, u.useStateFromStores)([g.default], () => g.default.getCurrentUser()), d = !1;
                if (null == n) return null;
                for (let e of Object.keys(n)) {
                    let t = (0, _.getDropByQuestId)(e);
                    if (null == t) continue;
                    let s = n[e],
                        a = (0, _.getDropsPartnerGameNameByQuestId)(e);
                    if (null == a) continue;
                    let u = (0, _.getEligibilityByRunningGameDetection)(a),
                        c = s.eligible && u,
                        S = (0, _.getDropsExperiment)(a);
                    if (null == S) continue;
                    c && S.trackExposure({
                        location: "ENTITLEMENT_GIFTS"
                    });
                    let E = !!((null == r ? void 0 : r.isStaff()) && S.getCurrentConfig({
                        location: "076035_2"
                    }, {
                        autoTrackExposure: !1
                    }).showUnenroll);
                    if (!S.getCurrentConfig({
                            location: "076035_3"
                        }, {
                            autoTrackExposure: !1
                        }).dropsEnabled) continue;
                    d = !0;
                    let T = o()(t.endDate, O),
                        I = o()();
                    c && null == s.completed_at || null != s.enrolled_at && null == s.completed_at && s.eligible ? I < T && i.push({
                        dropsQuestId: e,
                        dropsStatus: s,
                        showUnenroll: E,
                        experiment: S
                    }) : (null != s.code || null != s.completed_at) && I < o()(t.finalClaimDate, O) && l.push({
                        dropsQuestId: e,
                        dropsStatus: s,
                        showUnenroll: E,
                        experiment: S
                    })
                }
                let S = (0, a.jsxs)("div", {
                    className: C.dropsHeaderContainer,
                    children: [(0, a.jsx)(c.Heading, {
                        variant: "heading-md/semibold",
                        children: A.default.Messages.DROPS_GIFT_INVENTORY_TITLE
                    }), (0, a.jsx)(N.default, {
                        className: C.betaTagIcon
                    })]
                });
                return d && 0 === i.length && 0 === l.length && s ? (0, a.jsxs)(c.FormSection, {
                    children: [S, (0, a.jsx)(c.FormDivider, {
                        className: C.divider
                    }), (0, a.jsx)("div", {
                        className: C.dropsHelpText,
                        children: A.default.Messages.DROPS_READ_BLOG_TO_ENABLE.format({
                            blogURL: m.DropsFaqUrl
                        })
                    })]
                }) : 0 === i.length && 0 === l.length ? null : (0, a.jsxs)(c.FormSection, {
                    children: [S, (0, a.jsx)(c.FormDivider, {
                        className: C.divider
                    }), i.map(e => {
                        let t = (0, _.getDropByQuestId)(e.dropsQuestId),
                            s = null != e.dropsStatus.enrolled_at,
                            n = null != e.dropsStatus.completed_at;
                        return null != t ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(h, {
                                drop: {
                                    ...t
                                },
                                enrolled: s,
                                completed: n
                            }, t.dropsQuestId), e.showUnenroll && (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () => (0, T.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL"
                            })]
                        }) : null
                    }), l.map(e => {
                        var t, s;
                        let n = (0, _.getDropByQuestId)(e.dropsQuestId);
                        return null != n ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(R, {
                                drop: n,
                                code: null !== (t = e.dropsStatus.code) && void 0 !== t ? t : void 0,
                                platform: null !== (s = e.dropsStatus.platform) && void 0 !== s ? s : void 0
                            }, e.dropsQuestId), e.showUnenroll && (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () => (0, T.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL"
                            })]
                        }) : null
                    }), "string" == typeof(null == r ? void 0 : r.id) && l.length > 0 ? (0, a.jsx)("div", {
                        className: C.feedback,
                        children: A.default.Messages.DROPS_REQUEST_FEEDBACK_SUCCESS.format({
                            feedbackURL: "https://survey.alchemer.com/s3/7043098/Discord-Drops-CSAT?user_id=".concat(null !== (t = null == r ? void 0 : r.id) && void 0 !== t ? t : "")
                        })
                    }) : null]
                })
            }
        },
        168308: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                shouldShowRegisteredGamesSettings: function() {
                    return l
                },
                useShouldShowOverlaySettings: function() {
                    return r
                }
            });
            var a = s("442837"),
                n = s("808506"),
                i = s("358085");

            function l() {
                return i.isPlatformEmbedded
            }

            function r() {
                return (0, a.useStateFromStores)([n.default], () => n.default.isSupported()) || !1
            }
        },
        277329: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return N
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("230711"),
                r = s("574755"),
                o = s("663389"),
                d = s("309739"),
                u = s("293389"),
                c = s("327885"),
                S = s("326528"),
                E = s("332325"),
                T = s("981631"),
                _ = s("689938"),
                I = s("417433");

            function N() {
                let e = (0, S.useGameSettingsTabs)(),
                    t = (0, n.useStateFromStores)([o.default], () => o.default.getSubsection()),
                    s = null != t && e.some(e => e.id === t) ? t : e[0].id;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(i.Heading, {
                        className: I.heading,
                        variant: "heading-xl/semibold",
                        children: _.default.Messages.GAMES
                    }), (0, a.jsx)(i.TabBar, {
                        className: I.tabBar,
                        selectedItem: s,
                        onItemSelect: e => {
                            l.default.setSection(T.UserSettingsSections.GAMES, e)
                        },
                        orientation: "horizontal",
                        type: "top",
                        look: "brand",
                        children: e.map(e => (0, a.jsxs)(i.TabBar.Item, {
                            className: I.tab,
                            id: e.id,
                            "aria-label": e.title,
                            children: [(0, a.jsx)(e.icon, {
                                className: I.tabIcon,
                                color: "currentColor"
                            }), (0, a.jsx)("div", {
                                className: I.iconTitle,
                                children: e.title
                            })]
                        }, e.id))
                    }), (() => {
                        switch (s) {
                            case E.GameSettingsTab.CLIPS:
                                return (0, a.jsx)(r.default, {
                                    className: I.body,
                                    showHeader: !1
                                });
                            case E.GameSettingsTab.OVERLAY:
                                return (0, a.jsx)(c.default, {
                                    className: I.body,
                                    showHeader: !1
                                });
                            case E.GameSettingsTab.ACTIVITY_PRIVACY:
                                return (0, a.jsx)(d.default, {
                                    className: I.body,
                                    showHeader: !1
                                });
                            case E.GameSettingsTab.MY_GAMES:
                            default:
                                return (0, a.jsx)(u.default, {
                                    className: I.body,
                                    showHeader: !1
                                })
                        }
                    })()]
                })
            }
        },
        326528: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useGameSettingsTabs: function() {
                    return T
                }
            });
            var a = s("895070"),
                n = s("785511"),
                i = s("194632"),
                l = s("683692"),
                r = s("358085"),
                o = s("394644"),
                d = s("295545"),
                u = s("168308"),
                c = s("726985"),
                S = s("332325"),
                E = s("689938");

            function T() {
                let e = (0, u.useShouldShowOverlaySettings)(),
                    t = (0, o.useViewableSettingsFilterFromSearch)(c.WebSetting.GAMES);
                return function(e, t, s) {
                    var o;
                    let d = (o = e, [{
                        id: S.GameSettingsTab.MY_GAMES,
                        title: E.default.Messages.MY_GAMES,
                        icon: n.DpadIcon,
                        predicate: () => !r.isPlatformEmbedded,
                        setting: c.WebSetting.GAMES_MY_GAMES
                    }, {
                        id: S.GameSettingsTab.CLIPS,
                        title: E.default.Messages.CLIPS,
                        icon: a.ClipsIcon,
                        setting: c.WebSetting.GAMES_CLIPS
                    }, {
                        id: S.GameSettingsTab.OVERLAY,
                        title: E.default.Messages.SETTINGS_GAMES_OVERLAY,
                        icon: l.ScreenSystemRequirementsIcon,
                        predicate: () => !o,
                        setting: c.WebSetting.GAMES_OVERLAY
                    }, {
                        id: S.GameSettingsTab.ACTIVITY_PRIVACY,
                        title: E.default.Messages.ACTIVITY_PRIVACY,
                        icon: i.FlashIcon,
                        setting: c.WebSetting.GAMES_ACTIVITY_PRIVACY
                    }]).filter(e => null == e.predicate || !e.predicate());
                    if (t && null != s && s.size > 0) {
                        let e = d.filter(e => s.has(e.setting));
                        return e.length > 0 ? e : d
                    }
                    return d
                }(e, (0, d.useIsEligibleForUserSettingsSearchDesktop)({
                    location: "settings"
                }), t)
            }
        },
        783739: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return h
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("89057"),
                r = s("724884"),
                o = s("290799"),
                d = s("362948"),
                u = s("899667"),
                c = s("165630"),
                S = s("771845"),
                E = s("594174"),
                T = s("314884"),
                _ = s("74538"),
                I = s("296533"),
                N = s("901750"),
                g = s("112863"),
                f = s("701157"),
                m = s("912152"),
                A = s("615603"),
                C = s("474936"),
                O = s("388095");

            function h(e) {
                let {
                    premiumSubscription: t
                } = e, s = (0, i.useStateFromStores)([T.default], () => T.default.boostSlots), h = n.useMemo(() => Object.values(s), [s]), R = (0, i.useStateFromStores)([E.default], () => E.default.getCurrentUser()), p = _.default.isPremium(R, C.PremiumTypes.TIER_2), M = (0, i.useStateFromStores)([c.default], () => c.default.affinities), D = (0, i.useStateFromStores)([S.default], () => S.default.getFlattenedGuildIds()), x = M.length > 0 || D.length > 0, L = h.length > 0, P = n.useMemo(() => h.some(e => null != e.premiumGuildSubscription), [h]), b = (0, i.useStateFromStores)([u.default], () => u.default.getCurrentUserAppliedBoosts()), v = (null == t ? void 0 : t.isPausedOrPausePending) === !0;
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(l.BlockedPaymentsWarning, {
                        className: O.blockedPaymentsWarning
                    }), (0, a.jsx)(N.default, {
                        hasGuildBoostSlots: L,
                        hasAppliedGuildBoosts: P,
                        isUserPremiumTier2: p,
                        subscriptionIsPausedOrPausePending: v
                    }), (0, a.jsx)(m.default, {
                        hasAppliedGuildBoosts: P,
                        isUserPremiumTier2: p,
                        hasGuildAffinitiesOrInGuild: x,
                        subscriptionIsPausedOrPausePending: v
                    }), !x && (0, a.jsx)(g.default, {}), (null == t ? void 0 : t.isPaused) ? (0, a.jsx)(I.GuildBoostingSettingsPausedAppliedBoosts, {
                        appliedGuildBoosts: b,
                        premiumSubscription: t
                    }) : (0, a.jsx)(I.default, {
                        guildBoostSlots: s,
                        premiumSubscription: t
                    }), (0, a.jsx)(A.default, {
                        guildBoostSlots: h
                    }), (0, a.jsx)(f.default, {
                        hasAppliedGuildBoosts: P,
                        subscriptionIsPausedOrPausePending: v
                    }), (0, a.jsx)(d.default, {
                        className: O.tierComparisonTable,
                        hideHeading: !0,
                        hideTier0: !0
                    }), (0, a.jsx)(r.default, {
                        cardClassName: O.boosterRecognitionCard
                    }), (0, a.jsx)(o.default, {
                        className: O.faq
                    })]
                })
            }
        },
        296533: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                GuildBoostingSettingsPausedAppliedBoosts: function() {
                    return D
                },
                default: function() {
                    return x
                }
            }), s("653041"), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("920906"),
                l = s("399606"),
                r = s("481060"),
                o = s("607070"),
                d = s("158153"),
                u = s("280942"),
                c = s("314684"),
                S = s("209747"),
                E = s("430824"),
                T = s("621113"),
                _ = s("267642"),
                I = s("709054"),
                N = s("357956"),
                g = s("275909"),
                f = s("300037"),
                m = s("981631"),
                A = s("474936"),
                C = s("689938"),
                O = s("441083");

            function h(e) {
                let {
                    guildTier: t,
                    guildBoostSlot: s,
                    showAltText: l,
                    isCanceled: o,
                    premiumSubscription: d
                } = e, u = n.useMemo(() => {
                    if (o) return C.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format({
                        date: d.currentPeriodEnd
                    });
                    let e = null != s.premiumGuildSubscription ? I.default.extractTimestamp(s.premiumGuildSubscription.id) : 0;
                    return C.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_DURATION_SHORTENED.format({
                        date: new Date(e)
                    })
                }, [s, o, d]), c = n.useMemo(() => (function(e) {
                    if (null == e || e === m.BoostedGuildTiers.NONE) return "";
                    let t = [C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_EMOJI_SLOTS.format({
                        numEmojiSlots: A.BoostedGuildFeatures[e].limits.emoji
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STICKER_SLOTS.format({
                        numStickerSlots: A.BoostedGuildFeatures[e].limits.stickers
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_SOUNDBOARD_SLOTS.format({
                        numSoundboardSlots: A.BoostedGuildFeatures[e].limits.soundboardSounds
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STREAM_QUALITY.format({
                        resolution: A.BoostedGuildFeatures[e].limits.screenShareQualityResolution,
                        framerate: A.BoostedGuildFeatures[e].limits.screenShareQualityFramerate
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_AUDIO_QUALITY.format({
                        bitrate: A.BoostedGuildFeatures[e].limits.bitrate / 1e3
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_UPLOAD_SIZE_LIMIT.format({
                        filesize: A.BoostedGuildFeatures[e].limits.fileSize / 1024 / 1024
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_VIDEO_STAGE_SEATS.format({
                        numVideoStageSeats: A.BoostedGuildFeatures[e].limits.stageVideoUsers
                    }), C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_ANIMATED_GUILD_ICON, C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_INVITE_BACKGROUND];
                    e >= m.BoostedGuildTiers.TIER_2 && (t.push(C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_BANNER), t.push(C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_CUSTOM_ROLE_ICONS)), e >= m.BoostedGuildTiers.TIER_3 && t.push(C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_VANITY_URL);
                    let s = t[Math.floor(Math.random() * t.length)];
                    return C.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_TEMPLATE.format({
                        perk: s
                    })
                })(t), [t]), S = (0, i.useTransition)(l, {
                    from: {
                        opacity: 0
                    },
                    enter: {
                        opacity: 1
                    },
                    leave: {
                        opacity: 0
                    }
                });
                return o || t === m.BoostedGuildTiers.NONE ? (0, a.jsx)("div", {
                    className: O.boostDescriptionInnerContainer,
                    children: (0, a.jsx)(r.Text, {
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: u
                    })
                }) : S((e, t) => (0, a.jsx)(i.animated.div, {
                    style: e,
                    className: O.boostDescriptionInnerContainer,
                    children: (0, a.jsx)(r.Text, {
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: t ? c : u
                    })
                }))
            }

            function R(e) {
                let {
                    guildTier: t,
                    guildBoostSlot: s,
                    premiumSubscription: i,
                    hasCancelableGuildBoostSlot: d,
                    showAltText: c,
                    isLastGuildBoostSlot: S
                } = e, E = (0, l.useStateFromStores)([o.default], () => o.default.useReducedMotion), I = n.useMemo(() => null != s.cooldownEndsAt ? new Date(s.cooldownEndsAt) : null, [s]), f = n.useMemo(() => null != I && I > new Date, [I]), m = (0, _.isGuildBoostSlotCanceled)(s);
                return (0, a.jsxs)("div", {
                    className: O.boostContainer,
                    children: [(0, a.jsxs)("div", {
                        className: O.boostInnerContainer,
                        children: [(0, a.jsx)(g.default, {
                            isCanceled: m,
                            hasCooldown: f,
                            useReducedMotion: E
                        }), (0, a.jsx)("div", {
                            className: O.boostDescriptionContainer,
                            children: null != I && f && !m ? (0, a.jsx)(N.default, {
                                className: O.boostDescriptionInnerContainer,
                                cooldown: I.getTime()
                            }) : (0, a.jsx)(h, {
                                guildTier: t,
                                guildBoostSlot: s,
                                showAltText: c,
                                isCanceled: m,
                                premiumSubscription: i
                            })
                        }), (0, a.jsx)(r.Popout, {
                            renderPopout: function(e) {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(u.default, {
                                    onClose: t,
                                    guildBoostSlot: s,
                                    premiumSubscription: i,
                                    hasCancelableGuildBoostSlot: d
                                })
                            },
                            position: "right",
                            align: "center",
                            children: e => (0, a.jsx)(r.Clickable, {
                                ...e,
                                "aria-label": C.default.Messages.MORE_OPTIONS,
                                className: O.boostSlotMenuIcon,
                                children: (0, a.jsx)(T.default, {})
                            })
                        })]
                    }), !S && (0, a.jsx)("div", {
                        className: O.boostContainerSeparator
                    })]
                })
            }

            function p(e) {
                let {
                    guildId: t,
                    guildBoostSlotRecords: s,
                    premiumSubscription: n,
                    hasCancelableGuildBoostSlot: i,
                    showAltText: r
                } = e, o = (0, l.useStateFromStores)([E.default], () => E.default.getGuild(t), [t]);
                return (0, a.jsxs)("div", {
                    className: O.appliedBoostContainer,
                    children: [(0, a.jsx)(f.default, {
                        guildId: t,
                        boostingVariant: !1
                    }), s.map((e, t) => (0, a.jsx)(R, {
                        guildTier: null == o ? void 0 : o.premiumTier,
                        guildBoostSlot: e,
                        premiumSubscription: n,
                        hasCancelableGuildBoostSlot: i,
                        showAltText: r,
                        isLastGuildBoostSlot: t === s.length - 1
                    }, e.id))]
                })
            }

            function M(e) {
                let {
                    guildId: t,
                    appliedGuildBoosts: s,
                    premiumSubscription: n
                } = e, i = (0, l.useStateFromStores)([E.default], () => E.default.getGuild(t), [t]), r = I.default.fromTimestamp(Date.now());
                if (s.forEach(e => {
                        (null == r || 0 > I.default.compare(e.id, r)) && (r = e.id)
                    }), null == r) return null;
                let o = S.default.createFromServer({
                    id: I.default.fromTimestamp(Date.now()),
                    subscription_id: n.id,
                    canceled: !1,
                    premium_guild_subscription: {
                        id: r,
                        guild_id: t
                    },
                    cooldown_ends_at: null
                }, n);
                return (0, a.jsxs)("div", {
                    className: O.appliedBoostContainer,
                    children: [(0, a.jsx)(f.default, {
                        guildId: t,
                        boostingVariant: !1
                    }), s.map((e, t) => (0, a.jsx)(R, {
                        guildTier: null == i ? void 0 : i.premiumTier,
                        guildBoostSlot: o,
                        premiumSubscription: n,
                        hasCancelableGuildBoostSlot: !1,
                        showAltText: !1,
                        isLastGuildBoostSlot: t === s.length - 1
                    }, t))]
                })
            }

            function D(e) {
                let {
                    appliedGuildBoosts: t,
                    premiumSubscription: s
                } = e, i = n.useMemo(() => {
                    let e = {};
                    return t.forEach(t => {
                        let s = t.guildId;
                        !(s in e) && (e[s] = []), e[s].push(t)
                    }), e
                }, [t]);
                return null == s || 0 === t.length ? null : (0, a.jsxs)("div", {
                    className: O.wrapper,
                    children: [(0, a.jsx)("div", {
                        className: O.container,
                        children: I.default.keys(i).map(e => (0, a.jsx)(M, {
                            guildId: e,
                            premiumSubscription: s,
                            appliedGuildBoosts: i[e]
                        }, e))
                    }), (0, a.jsx)("div", {
                        className: O.mainSeparator
                    })]
                })
            }

            function x(e) {
                let {
                    guildBoostSlots: t,
                    premiumSubscription: s
                } = e, [i, l] = n.useState(!1), r = (0, c.useFreeBoostTenureRewardEntitlement)();
                n.useEffect(() => {
                    let e = -1;
                    return null != s && (e = setInterval(() => {
                        l(e => !e)
                    }, 3e3)), () => {
                        clearInterval(e)
                    }
                }, [s]);
                let {
                    boostsByGuildId: o,
                    numActiveGuildBoostSlots: u
                } = n.useMemo(() => {
                    let e = 0,
                        s = {};
                    return Object.keys(t).forEach(a => {
                        let n = t[a];
                        if (!(0, _.isGuildBoostSlotCanceled)(n) && e++, null != n.premiumGuildSubscription) {
                            let e = n.premiumGuildSubscription.guildId;
                            !(e in s) && (s[e] = []), s[e].push(n)
                        }
                    }), {
                        boostsByGuildId: s,
                        numActiveGuildBoostSlots: e
                    }
                }, [t]);
                if (null == s || 0 === Object.keys(o).length) return null;
                let S = u > (0, d.getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots)(s, r);
                return (0, a.jsxs)("div", {
                    className: O.wrapper,
                    children: [(0, a.jsx)("div", {
                        className: O.container,
                        children: I.default.keys(o).map(e => (0, a.jsx)(p, {
                            guildId: e,
                            guildBoostSlotRecords: o[e],
                            premiumSubscription: s,
                            hasCancelableGuildBoostSlot: S,
                            showAltText: i
                        }, e))
                    }), (0, a.jsx)("div", {
                        className: O.mainSeparator
                    })]
                })
            }
        },
        11844: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("906732"),
                r = s("879892"),
                o = s("709586"),
                d = s("267642"),
                u = s("981631"),
                c = s("689938"),
                S = s("190285");
            t.default = function() {
                let e = n.useRef(null),
                    {
                        analyticsLocations: t
                    } = (0, l.default)();

                function E(s) {
                    null != e.current && (0, i.closeModal)(e.current), (0, r.addAppliedGuildBoosts)({
                        analyticsLocation: {
                            page: u.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                            section: u.AnalyticsSections.GUILD_BOOSTING_BOOST_ANY_GUILD_CTA,
                            object: u.AnalyticsObjects.BUTTON_CTA,
                            objectType: u.AnalyticsObjectTypes.BUY
                        },
                        analyticsLocations: t,
                        guild: s
                    })
                }
                async function T() {
                    e.current = await (0, i.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.resolve().then(s.bind(s, "719228"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            onSelectGuild: E
                        })
                    }, {
                        onCloseRequest: () => {
                            null != e.current && (0, i.closeModal)(e.current)
                        }
                    })
                }
                let _ = (0, d.generateBlockGuildSubscriptionPurchasesNode)();
                return (0, a.jsxs)("div", {
                    className: S.wrapper,
                    children: [(0, a.jsx)(o.default, {
                        className: S.boostIcon,
                        width: 16,
                        height: 16
                    }), (0, a.jsx)(i.Text, {
                        className: S.copy,
                        color: "header-secondary",
                        variant: "text-sm/medium",
                        children: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_GUILD_CTA.format({
                            boostAnyGuildHook: (e, t) => {
                                let s = null != _,
                                    n = (0, a.jsx)(i.Button, {
                                        className: S.cta,
                                        disabled: s,
                                        color: i.Button.Colors.LINK,
                                        look: i.Button.Looks.LINK,
                                        onClick: s ? void 0 : T,
                                        children: e
                                    }, t);
                                return s ? (0, a.jsx)(i.Tooltip, {
                                    text: _,
                                    children: e => (0, a.jsx)("span", {
                                        ...e,
                                        children: n
                                    })
                                }, t) : n
                            }
                        })
                    })]
                })
            }
        },
        283029: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("455399");
            t.default = function(e) {
                let {
                    className: t,
                    imageClassName: n,
                    boostInCooldown: r,
                    useReducedMotion: o
                } = e;
                return (0, a.jsx)("div", {
                    className: i()(l.imageWrapper, t, {
                        [l.cooldown]: r
                    }),
                    children: (0, a.jsx)("img", {
                        className: i()(l.image, n, {
                            [l.cooldownImage]: r
                        }),
                        src: r ? s("971149") : o ? s("908635") : s("83957"),
                        alt: ""
                    })
                })
            }
        },
        357956: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("774078"),
                l = s("55935"),
                r = s("689938");
            t.default = function(e) {
                let {
                    className: t,
                    cooldown: s
                } = e, o = (0, i.default)(s);
                return (0, a.jsx)(n.Text, {
                    className: t,
                    variant: "text-sm/medium",
                    color: "text-muted",
                    children: (0, l.unitsAsStrings)(o, {
                        days: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_DAYS,
                        hours: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_HOURS,
                        minutes: r.default.Messages.PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_MINUTES
                    })
                })
            }
        },
        275909: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("283029"),
                r = s("981874");
            t.default = function(e) {
                let {
                    className: t,
                    hasCooldown: n,
                    isCanceled: o,
                    useReducedMotion: d
                } = e;
                return (0, a.jsxs)("div", {
                    className: i()(r.boostIconContainer, t),
                    children: [o ? (0, a.jsx)("img", {
                        className: i()(r.boostIcon, r.boostIconCanceled),
                        src: s("457026"),
                        alt: ""
                    }) : (0, a.jsx)(l.default, {
                        className: r.boostIcon,
                        boostInCooldown: n,
                        useReducedMotion: d
                    }), !o && n && (0, a.jsx)("img", {
                        className: r.snowflake,
                        src: s("765028"),
                        alt: ""
                    })]
                })
            }
        },
        300037: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("399606"),
                r = s("481060"),
                o = s("623624"),
                d = s("678558"),
                u = s("430824"),
                c = s("346656"),
                S = s("709586"),
                E = s("267642"),
                T = s("981631"),
                _ = s("689938"),
                I = s("550634");
            t.default = function(e) {
                let {
                    className: t,
                    guildId: s,
                    boostingVariant: n
                } = e, N = (0, l.useStateFromStores)([u.default], () => u.default.getGuild(s), [s]);
                return null == N ? (0, a.jsx)("div", {
                    className: i()(t, I.guildContainer),
                    children: (0, a.jsx)("div", {
                        className: I.guildInfoContainer,
                        children: (0, a.jsx)(r.Text, {
                            variant: "text-lg/bold",
                            children: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_APPLIED_GUILD_BOOST_UNKNOWN_GUILD
                        })
                    })
                }) : (0, a.jsxs)("div", {
                    className: i()(t, I.guildContainer),
                    children: [(0, a.jsx)(c.default, {
                        className: I.__invalid_guildIcon,
                        guild: N,
                        size: c.default.Sizes.LARGER
                    }), (0, a.jsxs)("div", {
                        className: I.guildInfoContainer,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-lg/bold",
                            children: N.name
                        }), (0, a.jsxs)("div", {
                            className: I.guildBoostStatsContainer,
                            children: [(0, a.jsx)(S.default, {
                                className: I.guildBoostBadge,
                                width: 16,
                                height: 16
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-sm/bold",
                                color: "text-muted",
                                children: _.default.Messages.PREMIUM_GUILD_PERKS_MODAL_HEADER_SUBSCRIPTION_COUNT.format({
                                    subscriptions: N.premiumSubscriberCount
                                })
                            }), (0, a.jsx)("div", {
                                className: I.separator
                            }), (0, a.jsx)(r.Text, {
                                variant: "text-sm/bold",
                                color: "text-muted",
                                children: (0, E.getTierName)(N.premiumTier, {
                                    useLevels: !1
                                })
                            })]
                        })]
                    }), n ? (0, a.jsx)(d.default, {
                        guild: N,
                        analyticsLocation: {
                            page: T.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                            section: T.AnalyticsSections.GUILD_BOOSTING_RECOMMENDED_SERVER_BOOST_THIS_SERVER_CTA,
                            object: T.AnalyticsObjects.BUTTON_CTA,
                            objectType: T.AnalyticsObjectTypes.BUY
                        },
                        pauseAnimation: !0,
                        size: r.Button.Sizes.MEDIUM,
                        color: r.Button.Colors.PRIMARY,
                        buttonText: _.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_THIS_SERVER
                    }) : (0, a.jsx)(r.Button, {
                        color: r.Button.Colors.PRIMARY,
                        onClick: () => {
                            (0, o.openGuildBoostingMarketingModal)({
                                guildId: N.id,
                                location: {
                                    section: T.AnalyticsSections.GUILD_BOOSTING_RECOMMENDED_SERVER_GO_TO_SERVER_CTA
                                }
                            })
                        },
                        size: r.Button.Sizes.MEDIUM,
                        children: _.default.Messages.NAVIGATE_TO_GUILD
                    })]
                })
            }
        },
        901750: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("689938"),
                l = s("460103");
            t.default = function(e) {
                let {
                    hasGuildBoostSlots: t,
                    hasAppliedGuildBoosts: r,
                    isUserPremiumTier2: o,
                    subscriptionIsPausedOrPausePending: d
                } = e;
                return (0, a.jsxs)("div", {
                    className: l.wrapper,
                    children: [(0, a.jsx)("div", {
                        className: l.guildBoostGemWrapper,
                        children: (0, a.jsx)("img", {
                            alt: "",
                            className: l.guildBoostGem,
                            src: s("908635")
                        })
                    }), (0, a.jsxs)("div", {
                        className: l.gradient,
                        children: [(0, a.jsx)(n.Heading, {
                            variant: "display-md",
                            className: l.heading,
                            children: function(e) {
                                let {
                                    hasGuildBoostSlots: t,
                                    hasAppliedGuildBoosts: s,
                                    isUserPremiumTier2: a,
                                    subscriptionIsPausedOrPausePending: n
                                } = e;
                                return n ? i.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_YOUR_GUILD_BOOSTS.format() : t ? a && !s ? i.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_HAS_UNAPPLIED_FREE_GUILD_BOOSTS.format() : i.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_YOUR_GUILD_BOOSTS.format() : i.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_NO_GUILD_BOOSTS
                            }({
                                hasGuildBoostSlots: t,
                                isUserPremiumTier2: o,
                                hasAppliedGuildBoosts: r,
                                subscriptionIsPausedOrPausePending: d
                            })
                        }), (0, a.jsx)("svg", {
                            viewBox: "0 0 660 210",
                            className: l.wave,
                            children: (0, a.jsx)("path", {
                                d: "M101.3,45.5C57.5,45.9,15.9,82.2,0,99.5V210h660V53.5c-164-137-265.2,32.4-385.8,33.6  C177.7,88.1,158.1,45,101.3,45.5z"
                            })
                        })]
                    })]
                })
            }
        },
        112863: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("37234"),
                l = s("703656"),
                r = s("981631"),
                o = s("689938"),
                d = s("672129"),
                u = s("286359");

            function c() {
                return (0, a.jsxs)("div", {
                    className: d.wrapper,
                    children: [(0, a.jsx)("img", {
                        className: d.icon,
                        alt: "",
                        src: u
                    }), (0, a.jsxs)("div", {
                        className: d.info,
                        children: [(0, a.jsx)(n.Text, {
                            variant: "text-lg/bold",
                            children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_TITLE
                        }), (0, a.jsx)(n.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_SUBTITLE
                        })]
                    }), (0, a.jsx)(n.Button, {
                        color: n.Button.Colors.PRIMARY,
                        onClick: () => {
                            (0, l.transitionTo)(r.Routes.GUILD_DISCOVERY), (0, i.popLayer)()
                        },
                        size: n.Button.Sizes.LARGE,
                        children: o.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_CTA
                    })]
                })
            }
        },
        701157: function(e, t, s) {
            "use strict";
            s.r(t), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("165630"),
                o = s("771845"),
                d = s("11844"),
                u = s("300037"),
                c = s("689938"),
                S = s("197846");
            t.default = function(e) {
                let {
                    hasAppliedGuildBoosts: t,
                    subscriptionIsPausedOrPausePending: s
                } = e, E = (0, i.useStateFromStores)([r.default], () => r.default.affinities), T = (0, i.useStateFromStores)([o.default], () => o.default.getFlattenedGuildIds()), _ = n.useMemo(() => {
                    let e = E.slice(0, 3).map(e => e.guildId);
                    for (let t = 0; t < T.length && !(e.length >= 3); t++) {
                        let s = T[t];
                        !e.includes(s) && e.push(s)
                    }
                    return e
                }, [E, T]);
                return 0 === _.length ? null : (0, a.jsxs)("div", {
                    className: S.wrapper,
                    children: [t && (0, a.jsx)(l.Heading, {
                        variant: "heading-lg/semibold",
                        className: S.header,
                        children: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_RECOMMENDED_SERVERS_HEADING
                    }), _.map(e => (0, a.jsx)(u.default, {
                        className: S.recommendedServerCard,
                        guildId: e,
                        boostingVariant: !0
                    }, e)), T.length > 3 && !1 === s && (0, a.jsx)(d.default, {})]
                })
            }
        },
        912152: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("230711"),
                l = s("63063"),
                r = s("74538"),
                o = s("937615"),
                d = s("981631"),
                u = s("474936"),
                c = s("689938"),
                S = s("128423");
            t.default = function(e) {
                let {
                    hasAppliedGuildBoosts: t,
                    isUserPremiumTier2: s,
                    hasGuildAffinitiesOrInGuild: E,
                    subscriptionIsPausedOrPausePending: T
                } = e, {
                    subtitle: _,
                    flavor: I
                } = function(e) {
                    let {
                        hasAppliedGuildBoosts: t,
                        isUserPremiumTier2: s,
                        hasGuildAffinitiesOrInGuild: a,
                        subscriptionIsPausedOrPausePending: n
                    } = e;
                    if (n) return {
                        flavor: c.default.Messages.GUILD_BOOSTING_DISABLED_FOR_PAUSED_SUBSCRIPTION_WITH_LINK.format({
                            onClick: () => i.default.open(d.UserSettingsSections.SUBSCRIPTIONS)
                        })
                    };
                    if (!a) return {
                        subtitle: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_NO_JOINED_SERVER_SUBTITLE
                    };
                    if (t) return {
                        subtitle: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS,
                        flavor: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS_FLAVOR.format({
                            helpdeskArticle: l.default.getArticleURL(d.HelpdeskArticles.GUILD_SUBSCRIPTIONS)
                        })
                    };
                    let S = u.SubscriptionPlanInfo[u.SubscriptionPlans.PREMIUM_MONTH_GUILD],
                        E = r.default.getDefaultPrice(S.id, s),
                        T = (0, o.formatRate)((0, o.formatPrice)(E.amount, E.currency), S.interval, S.intervalCount);
                    return {
                        subtitle: s ? c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_SUBBED_NO_ACTIVE_BOOSTS : c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_SUB_NO_ACTIVE_BOOSTS,
                        flavor: c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_ACTIVE_BOOSTS_FLAVOR.format({
                            monthlyGuildBoostPrice: T
                        })
                    }
                }({
                    hasAppliedGuildBoosts: t,
                    isUserPremiumTier2: s,
                    hasGuildAffinitiesOrInGuild: E,
                    subscriptionIsPausedOrPausePending: T
                });
                return (0, a.jsxs)("div", {
                    className: S.wrapper,
                    children: [(0, a.jsx)(n.Heading, {
                        variant: "heading-lg/bold",
                        className: S.subtitle,
                        children: _
                    }), null != I && (0, a.jsx)(n.Text, {
                        variant: "text-sm/normal",
                        children: I
                    })]
                })
            }
        },
        615603: function(e, t, s) {
            "use strict";
            s.r(t), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("607070"),
                u = s("158153"),
                c = s("760558"),
                S = s("401786"),
                E = s("450468"),
                T = s("98278"),
                _ = s("314684"),
                I = s("594174"),
                N = s("78839"),
                g = s("267642"),
                f = s("74538"),
                m = s("283029"),
                A = s("357956"),
                C = s("275909"),
                O = s("981631"),
                h = s("735825"),
                R = s("689938"),
                p = s("657390");

            function M(e) {
                let {
                    guildBoostSlot: t,
                    isCancellable: s,
                    onCancel: i,
                    onUncancel: l,
                    premiumSubscription: r,
                    useReducedMotion: d
                } = e, u = n.useMemo(() => null != t.cooldownEndsAt ? new Date(t.cooldownEndsAt) : null, [t]), c = (0, g.isGuildBoostSlotCanceled)(t);
                return (0, a.jsxs)("li", {
                    className: p.unappliedGuildBoostSlot,
                    children: [(0, a.jsxs)("div", {
                        className: p.unappliedGuildBoostSlotContentPrimary,
                        children: [(0, a.jsx)(C.default, {
                            className: p.unappliedGuildBoostSlotIcon,
                            hasCooldown: t.isOnCooldown(),
                            isCanceled: c,
                            useReducedMotion: d
                        }), c && null != r ? (0, a.jsx)(o.Text, {
                            color: "text-muted",
                            variant: "text-sm/medium",
                            children: R.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format({
                                date: r.currentPeriodEnd
                            })
                        }) : t.isOnCooldown() && null != u ? (0, a.jsx)(A.default, {
                            cooldown: u.getTime()
                        }) : (0, a.jsx)(o.Text, {
                            className: p.__invalid_unappliedGuildBoostSlotDescription,
                            color: "text-muted",
                            variant: "text-sm/medium",
                            children: R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_UNAPPLIED_GUILD_BOOST_DESCRIPTION
                        })]
                    }), (0, a.jsxs)("div", {
                        className: p.unappliedGuildBoostSlotContentSecondary,
                        children: [s && !c && (0, a.jsx)(o.Button, {
                            className: p.unappliedGuildBoostSlotCta,
                            color: o.Button.Colors.PRIMARY,
                            look: o.Button.Looks.LINK,
                            onClick: () => i(t),
                            size: o.Button.Sizes.NONE,
                            children: R.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON
                        }), c && (0, a.jsx)(o.Button, {
                            className: p.unappliedGuildBoostSlotCta,
                            color: o.Button.Colors.PRIMARY,
                            look: o.Button.Looks.LINK,
                            onClick: () => l(t),
                            size: o.Button.Sizes.NONE,
                            children: R.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON
                        })]
                    })]
                }, t.id)
            }

            function D(e) {
                (0, o.openModalLazy)(async () => t => (0, a.jsx)(S.default, {
                    ...t,
                    guildBoostSlot: e
                }))
            }

            function x(e) {
                (0, o.openModalLazy)(async () => t => (0, a.jsx)(E.default, {
                    ...t,
                    guildBoostSlotId: e.id
                }))
            }
            t.default = function(e) {
                let t, s;
                let {
                    guildBoostSlots: i
                } = e, S = (0, r.useStateFromStores)([N.default], () => N.default.getPremiumTypeSubscription()), E = (null == S ? void 0 : S.isPausedOrPausePending) === !0, A = (0, r.useStateFromStores)([d.default], () => d.default.useReducedMotion), C = (0, r.useStateFromStores)([I.default], () => I.default.getCurrentUser()), L = (0, _.useFreeBoostTenureRewardEntitlement)(), {
                    appliedGuildBoostSlots: P,
                    unappliedGuildBoostSlots: b,
                    numActiveGuildBoostSlots: v,
                    hasCooldownBoosts: U
                } = n.useMemo(() => {
                    let e = [],
                        t = [],
                        s = 0,
                        a = !1;
                    return i.forEach(n => {
                        !(0, g.isGuildBoostSlotCanceled)(n) && s++, n.isOnCooldown() && (a = !0), null != n.premiumGuildSubscription ? e.push(n) : t.push(n)
                    }), {
                        appliedGuildBoostSlots: e,
                        unappliedGuildBoostSlots: t,
                        numActiveGuildBoostSlots: s,
                        hasCooldownBoosts: a
                    }
                }, [i]), j = null != S ? (0, u.getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots)(S, L) : 0, G = Math.max(0, j - P.length), F = v > j, B = j === i.length, y = B ? G : 1, V = n.useMemo(() => {
                    let e = [];
                    for (let t = 0; t < y; t++) e.push((0, a.jsx)(m.default, {
                        className: p.headerBoostGem,
                        useReducedMotion: A
                    }, t));
                    return e
                }, [y, A]), H = null != L, Y = n.useMemo(() => b.find(e => e.isAvailable()), [b]);
                if (0 === b.length) return null;
                let k = b.length;
                return t = B ? 1 === k && H ? R.default.Messages.SINGLE_UNUSED_GUILD_BOOST_NITRO_REWARD_TITLE : R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_INCLUDED_WITH_SUBSCRIPTION.format({
                    numUnappliedGuildBoostSlots: k
                }) : R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_V2.format({
                    numUnappliedGuildBoostSlots: k
                }), f.default.isPremium(C) ? s = B && 1 === k && H ? L.skuId === h.TenureRewardSKUs.FREE_GUILD_BOOST_1_MONTH ? R.default.Messages.SINGLE_UNUSED_GUILD_BOOST_NITRO_REWARD_SUBTITLE_1_MONTH_VARIANT : R.default.Messages.SINGLE_UNUSED_GUILD_BOOST_NITRO_REWARD_SUBTITLE_3_MONTHS_VARIANT : R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING_WITH_PREMIUM_SUBSCRIPTION.format({
                    numUnappliedGuildBoostSlots: k,
                    learnMoreHook: (e, t) => (0, a.jsx)(o.Clickable, {
                        className: p.headerLearnMoreLink,
                        tag: "span",
                        onClick: () => {
                            (0, T.navigateToPremiumMarketingPage)()
                        },
                        children: e
                    }, t)
                }) : R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING.format({
                    numUnappliedGuildBoostSlots: k
                }), (0, a.jsxs)("div", {
                    className: p.wrapper,
                    children: [H && (0, a.jsxs)("div", {
                        className: p.specialHeader,
                        children: [(0, a.jsx)(o.Text, {
                            variant: "text-xs/semibold",
                            className: p.pill,
                            children: R.default.Messages.NITRO_HOME_REWARDING_LOCKED_STATE_TITLE.toLocaleUpperCase()
                        }), (0, a.jsx)(o.Heading, {
                            color: "header-primary",
                            variant: "heading-md/semibold",
                            children: R.default.Messages.GUILD_BOOST_NITRO_REWARD_BANNER
                        })]
                    }), (0, a.jsxs)("div", {
                        className: l()(p.content, {
                            [p.headerWithBoost]: H,
                            [p.headerWithoutSpecialHeader]: !H
                        }),
                        children: [(0, a.jsxs)("div", {
                            className: p.header,
                            children: [(0, a.jsxs)("div", {
                                className: p.headerContentPrimary,
                                children: [(0, a.jsx)("div", {
                                    className: p.headerBoostGems,
                                    children: V
                                }), (0, a.jsxs)("div", {
                                    className: p.__invalid_headerCopy,
                                    children: [(0, a.jsx)(o.Heading, {
                                        className: p.headerHeading,
                                        variant: "heading-lg/bold",
                                        children: t
                                    }), (0, a.jsx)(o.Text, {
                                        className: p.__invalid_headerSubheading,
                                        color: "text-primary",
                                        variant: "text-sm/normal",
                                        children: s
                                    })]
                                })]
                            }), (0, a.jsx)("div", {
                                className: p.headerContentSecondary,
                                children: (0, a.jsx)(o.Tooltip, {
                                    shouldShow: null == Y || E,
                                    text: E ? R.default.Messages.GUILD_BOOSTING_DISABLED_FOR_PAUSED_SUBSCRIPTION : R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_NO_AVAILABLE_GUILD_BOOST_SLOTS,
                                    children: e => (0, a.jsx)(o.Button, {
                                        ...e,
                                        disabled: null == Y || E,
                                        onClick: null != Y ? () => {
                                            var e;
                                            return e = Y, void(0, o.openModalLazy)(async () => t => (0, a.jsx)(c.default, {
                                                ...t,
                                                guildBoostSlots: [e],
                                                locationSection: O.AnalyticsSections.SETTINGS_PREMIUM
                                            }))
                                        } : void 0,
                                        children: R.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_SERVER
                                    })
                                })
                            })]
                        }), (!B || U) && (0, a.jsx)("ul", {
                            className: p.unappliedBoostSlots,
                            children: b.map(e => (0, a.jsx)(M, {
                                guildBoostSlot: e,
                                isCancellable: F,
                                onCancel: D,
                                onUncancel: x,
                                premiumSubscription: S,
                                useReducedMotion: A
                            }, e.id))
                        })]
                    })]
                })
            }
        },
        33656: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("724458");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("921801"),
                u = s("663389"),
                c = s("960412"),
                S = s("151662"),
                E = s("930441"),
                T = s("726985"),
                _ = s("689938"),
                I = s("63057"),
                N = s("611273");

            function g(e) {
                let {
                    label: t,
                    onChange: s,
                    enabled: n,
                    subLabel: i
                } = e;
                return (0, a.jsx)(o.FormSwitch, {
                    value: !!n,
                    onChange: s,
                    note: i,
                    children: t
                })
            }

            function f() {
                let e = (0, r.useStateFromStores)([u.default], () => u.default.getSubsection()),
                    t = n.createRef(),
                    {
                        categories: s,
                        initialized: i
                    } = (0, r.useStateFromStoresObject)([S.default], () => S.default.getEmailSettings());
                n.useEffect(() => {
                    if (null == i)(0, c.fetchEmailSettings)();
                    else if (e === E.EMAILS_SUBSECTION.toUpperCase()) {
                        var s;
                        null == t || null === (s = t.current) || void 0 === s || s.scrollIntoView(!0)
                    }
                }, [i, t, e]);
                let f = E.MarketingEmailCategories.reduce((e, t) => e || !!s[t], !1),
                    m = {
                        [E.EmailCategories.COMMUNICATION]: T.WebSetting.NOTIFICATIONS_EMAILS_COMMUNICATION,
                        [E.EmailCategories.SOCIAL]: T.WebSetting.NOTIFICATIONS_EMAILS_SOCIAL,
                        [E.EmailCategories.UPDATES_AND_ANNOUNCEMENTS]: T.WebSetting.NOTIFICATIONS_EMAILS_ANNOUNCEMENTS_AND_UPDATES,
                        [E.EmailCategories.TIPS]: T.WebSetting.NOTIFICATIONS_EMAILS_TIPS,
                        [E.EmailCategories.RECOMMENDATIONS_AND_EVENTS]: T.WebSetting.NOTIFICATIONS_EMAILS_RECOMMENDATIONS_AND_EVENTS
                    };
                return i ? (0, a.jsxs)(d.Subsetting, {
                    setting: T.WebSetting.NOTIFICATIONS_EMAILS,
                    children: [(0, a.jsx)("div", {
                        ref: t
                    }), (0, a.jsxs)(o.FormSection, {
                        className: l()(N.marginTop40),
                        tag: o.FormTitleTags.H1,
                        title: _.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS,
                        children: [E.EmailCategoriesList.map(e => {
                            let {
                                category: t,
                                label: n,
                                subLabel: i
                            } = e, l = m[t], r = (0, a.jsx)(g, {
                                label: n(),
                                subLabel: i(),
                                enabled: s[t],
                                onChange: e => {
                                    var s, a;
                                    return s = t, a = e, void(0, c.updateEmailSetting)(s, a)
                                }
                            }, n());
                            return null != l ? (0, a.jsx)(d.Subsetting, {
                                setting: l,
                                children: r
                            }, n()) : r
                        }), (0, a.jsxs)(d.Subsetting, {
                            setting: T.WebSetting.NOTIFICATIONS_EMAILS_UNSUBSCRIBE_FROM_ALL_MARKETING_EMAILS,
                            children: [(0, a.jsx)(o.Button, {
                                className: I.marketingUnsubscribeButton,
                                disabled: !f,
                                look: o.ButtonLooks.LINK,
                                color: o.ButtonColors.LINK,
                                onClick: c.updateMarketingEmailSettings,
                                children: _.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING
                            }), (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: _.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING_DESCRIPTION
                            }), (0, a.jsx)(o.FormDivider, {
                                className: l()(N.marginTop40, N.marginBottom40)
                            })]
                        })]
                    })]
                }) : null
            }
        },
        532495: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return b
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("512722"),
                i = s.n(n),
                l = s("442837"),
                r = s("809206"),
                o = s("634894"),
                d = s("954138"),
                u = s("891728"),
                c = s("328783"),
                S = s("295474"),
                E = s("150039"),
                T = s("126631"),
                _ = s("433411"),
                I = s("532432"),
                N = s("349177"),
                g = s("872736"),
                f = s("134795"),
                m = s("610966"),
                A = s("513901"),
                C = s("451392"),
                O = s("906364"),
                h = s("350327"),
                R = s("621853"),
                p = s("318661"),
                M = s("25990"),
                D = s("594174"),
                x = s("74538"),
                L = s("689938"),
                P = s("741129");

            function b() {
                var e, t, s, n, b, v, U, j;
                let G = (0, l.useStateFromStores)([D.default], () => {
                        let e = D.default.getCurrentUser();
                        return i()(null != e, "DefaultCustomizationSections: user cannot be undefined"), e
                    }),
                    F = (0, l.useStateFromStores)([R.default], () => R.default.getUserProfile(G.id)),
                    {
                        pendingAvatar: B,
                        pendingGlobalName: y,
                        pendingBanner: V,
                        pendingBio: H,
                        pendingPronouns: Y,
                        pendingAccentColor: k,
                        pendingThemeColors: w,
                        errors: W
                    } = (0, l.useStateFromStoresObject)([M.default], () => {
                        let e = M.default.getAllPending(),
                            t = M.default.getErrors();
                        return {
                            ...e,
                            errors: t
                        }
                    }),
                    K = (0, S.useGuildAutomodProfileQuarantineErrors)(),
                    Q = x.default.canUsePremiumProfileCustomization(G),
                    z = (0, E.showRemoveAvatar)(B, G.avatar),
                    X = (0, E.showRemoveBanner)(V, null == F ? void 0 : F.banner),
                    q = "DefaultCustomizationSections";
                (0, o.useTriggerDebuggingAA)({
                    location: q + " auto on",
                    autoTrackExposure: !0
                }), (0, o.useTriggerDebuggingAA)({
                    location: q + " auto off",
                    autoTrackExposure: !1
                });
                let Z = (0, p.default)(G.id),
                    J = null == Z ? void 0 : Z.getLegacyUsername(),
                    $ = (null !== (s = null === (e = W.global_name) || void 0 === e ? void 0 : e.length) && void 0 !== s ? s : 0) > 0 ? W.global_name : null !== (n = null == K ? void 0 : K.nick) && void 0 !== n ? n : [],
                    ee = (null !== (b = null === (t = W.bio) || void 0 === t ? void 0 : t.length) && void 0 !== b ? b : 0) > 0 ? W.bio : null !== (v = null == K ? void 0 : K.bio) && void 0 !== v ? v : [],
                    et = (0, d.default)("user_profile"),
                    es = (0, u.useCurrentUserAvailableClans)();
                return (0, a.jsxs)("div", {
                    className: P.sectionsContainer,
                    children: [(0, a.jsx)(N.default, {
                        placeholder: G.username,
                        errors: $,
                        currentGlobalName: G.globalName,
                        pendingGlobalName: y,
                        onGlobalNameChange: r.setPendingGlobalNameName
                    }), (0, a.jsx)(O.default, {
                        sectionTitle: L.default.Messages.USER_SETTINGS_PRONOUNS,
                        errors: W.pronouns,
                        onPronounsChange: h.setPendingPronouns,
                        pendingPronouns: Y,
                        currentPronouns: null !== (U = null == F ? void 0 : F.pronouns) && void 0 !== U ? U : ""
                    }, "pronouns"), (0, a.jsx)(I.default, {
                        onAvatarChange: r.setPendingAvatar,
                        showRemoveAvatarButton: z,
                        errors: W.avatar,
                        sectionTitle: L.default.Messages.USER_SETTINGS_AVATAR,
                        forcedDivider: !0
                    }, "avatar"), (0, a.jsx)(_.default, {
                        user: G,
                        sectionTitle: L.default.Messages.USER_SETTINGS_AVATAR_DECORATION
                    }, "decoration"), (0, a.jsx)(A.default, {
                        user: G,
                        sectionTitle: L.default.Messages.USER_SETTINGS_PROFILE_EFFECT
                    }, "effect"), Q ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(f.default, {
                            showRemoveBannerButton: X,
                            errors: W.banner,
                            onBannerChange: h.setPendingBanner,
                            forcedDivider: !0
                        }, "banner"), (0, a.jsx)(C.default, {
                            user: G,
                            pendingAvatar: B,
                            pendingColors: w,
                            onThemeColorsChange: h.setPendingThemeColors,
                            forcedDivider: !0
                        })]
                    }) : (0, a.jsx)(m.default, {
                        user: G,
                        savedUserColor: null == F ? void 0 : F.accentColor,
                        pendingColor: k,
                        setPendingAccentColor: h.setPendingAccentColor
                    }, "color"), (0, a.jsx)(T.default, {
                        sectionTitle: L.default.Messages.USER_SETTINGS_ABOUT_ME,
                        errors: ee,
                        onBioChange: e => (0, E.setNewPendingUserBio)(e, null == F ? void 0 : F.bio),
                        pendingBio: H,
                        currentBio: null !== (j = null == F ? void 0 : F.bio) && void 0 !== j ? j : ""
                    }, "bio"), et && es.length > 0 && (0, a.jsx)(c.default, {
                        availableClans: es
                    }), null != J && (0, a.jsx)(g.default, {
                        legacyUsername: J
                    }, "legacy_username")]
                })
            }
        },
        216045: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return D
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("512722"),
                l = s.n(i),
                r = s("442837"),
                o = s("570140"),
                d = s("232567"),
                u = s("809206"),
                c = s("497321"),
                S = s("634894"),
                E = s("100527"),
                T = s("906732"),
                _ = s("475977"),
                I = s("957730"),
                N = s("589266"),
                g = s("296810"),
                f = s("935147"),
                m = s("350327"),
                A = s("246946"),
                C = s("25990"),
                O = s("594174"),
                h = s("74538"),
                R = s("695346"),
                p = s("265159"),
                M = s("532495");

            function D() {
                let e = (0, r.useStateFromStores)([O.default], () => {
                    let e = O.default.getCurrentUser();
                    return l()(null != e, "UserSettingsProfileCustomization: user cannot be undefined"), e
                });
                n.useEffect(() => {
                    (0, d.fetchProfile)(e.id)
                }, [e.id]);
                let t = (0, r.useStateFromStores)([A.default], () => A.default.hidePersonalInformation),
                    {
                        pendingAvatar: s,
                        pendingBanner: i,
                        pendingBio: D,
                        pendingPronouns: x,
                        pendingGlobalName: L,
                        pendingAccentColor: P,
                        pendingAvatarDecoration: b,
                        pendingThemeColors: v,
                        pendingProfileEffectId: U
                    } = (0, r.useStateFromStoresObject)([C.default], () => {
                        let e = C.default.getAllPending(),
                            t = C.default.getErrors();
                        return {
                            ...e,
                            errors: t
                        }
                    }),
                    j = R.UseLegacyChatInput.useSetting() && null != D ? I.default.parse(void 0, D).content : D,
                    G = h.default.canUsePremiumProfileCustomization(e),
                    {
                        analyticsLocations: F
                    } = (0, T.default)(E.default.PROFILE),
                    B = {
                        user: e,
                        canUsePremiumCustomization: G,
                        onUpsellClick: p.default,
                        onAvatarChange: u.setPendingAvatar,
                        onBannerChange: m.setPendingBanner,
                        pendingBanner: i,
                        pendingBio: j,
                        pendingPronouns: x,
                        pendingAvatar: s,
                        pendingGlobalName: L,
                        pendingAvatarDecoration: b,
                        pendingProfileEffectId: U
                    };
                n.useEffect(() => () => o.default.wait(u.resetAllPending), []);
                let y = "UserSettingsProfileCustomization";
                return ((0, S.useTriggerDebuggingAA)({
                    location: y + " auto on",
                    autoTrackExposure: !0
                }), (0, S.useTriggerDebuggingAA)({
                    location: y + " auto off",
                    autoTrackExposure: !1
                }), t) ? (0, a.jsx)(c.default, {}) : (0, a.jsx)(T.AnalyticsLocationProvider, {
                    value: F,
                    children: (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(_.default, {}), (0, a.jsx)(g.default, {
                            profilePreview: (0, a.jsx)(N.default, {
                                ...B,
                                location: "UserSettingsProfileCustomization",
                                pendingThemeColors: v,
                                pendingAccentColor: P
                            }),
                            children: (0, a.jsx)(M.default, {})
                        }), !h.default.canUsePremiumProfileCustomization(e) && (0, a.jsx)(f.default, {
                            user: e
                        })]
                    })
                })
            }
        },
        894939: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("596454"),
                o = s("906732"),
                d = s("856768"),
                u = s("993413"),
                c = s("921801"),
                S = s("208049"),
                E = s("763296"),
                T = s("242291"),
                _ = s("893663"),
                I = s("331642"),
                N = s("474333"),
                g = s("466111"),
                f = s("632184"),
                m = s("63063"),
                A = s("581883"),
                C = s("918257"),
                O = s("726985"),
                h = s("981631"),
                R = s("710111"),
                p = s("689938"),
                M = s("976130"),
                D = s("611273");

            function x(e) {
                return (0, i.useStateFromStores)([E.default], () => {
                    if (null == e) return null;
                    let {
                        guildId: t,
                        soundId: s
                    } = e;
                    return E.default.getSound(t === R.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID ? R.DEFAULT_SOUND_GUILD_ID : t, s)
                })
            }

            function L() {
                let {
                    analyticsLocations: e
                } = (0, o.default)(), [t, s] = n.useState(R.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID), r = (0, _.useCustomJoinSound)(t), f = x(r), A = (0, i.useStateFromStores)([E.default], () => E.default.hasFetchedAllSounds()), L = (null == r ? void 0 : r.type) === _.CustomSoundType.GLOBAL, b = A && null != r && null == f;
                n.useEffect(() => {
                    b && (0, T.trackCustomCallSoundExternallyDeleted)({
                        location: e
                    })
                }, [b, e]), n.useEffect(() => {
                    (0, S.maybeFetchSoundboardSounds)()
                }, []);
                let v = n.useCallback((e, t) => {
                    let {
                        inDropdown: s
                    } = t;
                    return null == e ? null : s ? (0, a.jsx)(P, {
                        guildId: e.value
                    }) : null
                }, []);
                return (0, a.jsxs)(l.FormSection, {
                    className: M.container,
                    tag: l.FormTitleTags.H1,
                    titleClassName: D.__invalid_marginBottom16,
                    title: p.default.Messages.SOUNDBOARD,
                    children: [(0, a.jsx)(c.Subsetting, {
                        setting: O.WebSetting.VOICE_AND_VIDEO_SOUNDBOARD,
                        children: (0, a.jsx)(C.default, {})
                    }), (0, a.jsxs)(c.Subsetting, {
                        setting: O.WebSetting.VOICE_AND_VIDEO_ENTRANCE_SOUNDS,
                        children: [(0, a.jsx)(l.FormDivider, {
                            className: M.callSoundsDivider
                        }), (0, a.jsx)(l.Heading, {
                            variant: "text-md/medium",
                            color: "header-primary",
                            className: M.callSoundsTitle,
                            children: p.default.Messages.CALL_SOUNDS_SETTINGS
                        }), (0, a.jsx)(l.Text, {
                            variant: "text-sm/medium",
                            color: "header-secondary",
                            children: p.default.Messages.CALL_SOUNDS_SETTINGS_DESCRIPTION_2.format({
                                helpdeskArticle: m.default.getArticleURL(h.HelpdeskArticles.SOUNDBOARD)
                            })
                        }), (0, a.jsx)(d.default, {
                            guildId: t,
                            className: M.guildSelector,
                            globalOption: {
                                label: p.default.Messages.CALL_SOUNDS_SETTINGS_GLOBAL_GUILD_SEARCH,
                                value: R.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID
                            },
                            onChange: e => s(null == e ? R.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID : e.id),
                            renderOptionSuffix: v,
                            hideDivider: !0
                        }), (0, a.jsxs)(u.default, {
                            className: D.marginTop20,
                            title: p.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND.format({
                                nitroWheelHook: () => (0, a.jsx)(g.default, {
                                    className: M.nitroWheel
                                })
                            }),
                            forcedDivider: !0,
                            children: [(0, a.jsx)(I.default, {
                                sound: f,
                                isGlobal: L,
                                onSelect: s => {
                                    null == s ? (0, T.removeCustomJoinSound)(t, e) : (0, T.updateCustomJoinSound)(t, s, e)
                                }
                            }), b && (0, a.jsx)(N.default, {
                                className: M.notice,
                                messageType: N.HelpMessageTypes.WARNING,
                                children: p.default.Messages.CALL_SOUNDS_SETTINGS_SOUND_REMOVED
                            })]
                        })]
                    })]
                })
            }

            function P(e) {
                let {
                    guildId: t
                } = e, s = (0, i.useStateFromStores)([A.default], () => {
                    var e, s, a;
                    return null === (a = A.default.settings.guilds) || void 0 === a ? void 0 : null === (s = a.guilds) || void 0 === s ? void 0 : null === (e = s[t]) || void 0 === e ? void 0 : e.joinSound
                }), n = x(s);
                if (null == s || null == n) return null;
                let {
                    emojiId: o,
                    emojiName: d
                } = n, u = null != o || null != d;
                return (0, a.jsxs)("div", {
                    className: M.pill,
                    children: [u ? (0, a.jsx)(r.default, {
                        emojiId: o,
                        emojiName: d,
                        className: M.pillIcon
                    }) : (0, a.jsx)(f.default, {
                        className: M.pillIcon
                    }), (0, a.jsx)(l.Text, {
                        className: M.pillText,
                        variant: "text-xs/medium",
                        children: n.name
                    })]
                })
            }
        },
        321499: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("780384"),
                d = s("481060"),
                u = s("846027"),
                c = s("131951"),
                S = s("285952"),
                E = s("998502"),
                T = s("210887"),
                _ = s("996073"),
                I = s("526761"),
                N = s("65154"),
                g = s("689938"),
                f = s("611273");
            let m = s("651714"),
                A = s("297166");

            function C() {
                let {
                    experimentalEncoders: e
                } = (0, r.useStateFromStoresObject)([c.default], () => ({
                    experimentalEncoders: c.default.getExperimentalEncoders()
                }));
                return "stable" !== E.default.releaseChannel && c.default.isExperimentalEncodersSupported() ? (0, a.jsx)(d.FormSwitch, {
                    className: l()(f.marginTop8, f.marginBottom20),
                    value: e,
                    onChange: e => u.default.setExperimentalEncoders(e),
                    disabled: !1,
                    children: g.default.Messages.EXPERIMENTAL_ENCODERS
                }) : null
            }

            function O() {
                let e = (0, r.useStateFromStores)([T.default], () => T.default.theme),
                    {
                        openH264: t,
                        hardwareH264: s,
                        supportsOpenH264: i
                    } = (0, r.useStateFromStoresObject)([c.default], () => ({
                        openH264: c.default.getOpenH264(),
                        hardwareH264: c.default.getHardwareH264(),
                        supportsOpenH264: c.default.supports(N.Features.OPEN_H264)
                    })),
                    E = n.useRef(null);
                return (0, _.default)(E, I.UserSettingsScrollPositions.VoiceAndVideoScrollPositions.HARDWARE_ACCELERATION), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(d.FormSection, {
                        className: f.marginBottom20,
                        title: g.default.Messages.USER_SETTINGS_VOICE_CODEC_TITLE,
                        children: (0, a.jsx)(d.FormNotice, {
                            className: f.marginBottom20,
                            type: d.FormNoticeTypes.PRIMARY,
                            imageData: {
                                src: (0, o.isThemeLight)(e) ? m : A,
                                width: 70,
                                height: 40
                            },
                            align: S.default.Align.CENTER,
                            body: g.default.Messages.USER_SETTINGS_VOICE_CODEC_DESCRIPTION
                        })
                    }), i && (0, a.jsxs)(d.FormSection, {
                        className: f.marginBottom20,
                        title: g.default.Messages.USER_SETTINGS_VOICE_VIDEO_CODEC_TITLE,
                        children: [(0, a.jsx)(d.FormSwitch, {
                            className: l()(f.marginTop8, f.marginBottom20),
                            value: t,
                            onChange: e => u.default.setOpenH264(e),
                            disabled: !1,
                            note: g.default.Messages.FORM_HELP_OPEN_H264,
                            children: g.default.Messages.USER_SETTINGS_VOICE_OPEN_H264
                        }), (0, a.jsx)("div", {
                            style: {
                                scrollMarginTop: "48px"
                            },
                            ref: E
                        }), (0, a.jsx)(d.FormSwitch, {
                            className: l()(f.marginTop8, f.marginBottom20),
                            value: s,
                            onChange: e => u.default.setHardwareH264(e),
                            note: g.default.Messages.FORM_HELP_HARDWARE_H264,
                            children: g.default.Messages.USER_SETTINGS_VOICE_HARDWARE_H264
                        }), (0, a.jsx)(C, {})]
                    })]
                })
            }
        },
        710808: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return O
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("846027"),
                o = s("304680"),
                d = s("579806"),
                u = s("729345"),
                c = s("131951"),
                S = s("226961"),
                E = s("594174"),
                T = s("285952"),
                _ = s("12647"),
                I = s("998502"),
                N = s("981631"),
                g = s("65154"),
                f = s("689938"),
                m = s("611273");
            async function A() {
                let e = await d.default.fileManager.getModulePath(),
                    t = d.default.fileManager.join(e, "discord_voice");
                d.default.fileManager.showItemInFolder(t)
            }

            function C(e) {
                (0, l.openModal)(t => (0, a.jsx)(l.ConfirmModal, {
                    header: f.default.Messages.SET_DEBUG_LOGGING,
                    confirmText: f.default.Messages.OKAY,
                    cancelText: f.default.Messages.CANCEL,
                    onCancel: t.onClose,
                    onConfirm: () => r.default.setDebugLogging(e),
                    ...t,
                    children: (0, a.jsx)(l.Text, {
                        variant: "text-md/normal",
                        children: f.default.Messages.SET_DEBUG_LOGGING_BODY
                    })
                }))
            }

            function O() {
                let [e, t] = n.useState(!1), {
                    aecDumpSupported: s,
                    debugLogging: d,
                    aecDumpEnabled: O,
                    supportsConnectionReplay: h
                } = (0, i.useStateFromStoresObject)([c.default], () => ({
                    aecDumpSupported: c.default.isAecDumpSupported(),
                    debugLogging: c.default.getDebugLogging(),
                    aecDumpEnabled: c.default.getAecDump(),
                    supportsConnectionReplay: c.default.supports(g.Features.CONNECTION_REPLAY)
                })), R = (0, i.useStateFromStores)([S.default], () => S.default.shouldRecordNextConnection()), p = (0, i.useStateFromStores)([E.default], () => {
                    var e, t;
                    return null !== (t = null === (e = E.default.getCurrentUser()) || void 0 === e ? void 0 : e.isStaff()) && void 0 !== t && t
                }), M = ("canary" === I.default.releaseChannel || "development" === I.default.releaseChannel) && p && h;
                async function D() {
                    t(!0);
                    try {
                        await c.default.getMediaEngine().writeAudioDebugState(), await _.default.submitLiveCrashReport({
                            message: {
                                message: "User Live Dump"
                            }
                        }), await (0, u.uploadDebugLogFiles)(N.DebugLogCategory.RTC), ! function() {
                            let e = f.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS_HEADER,
                                t = f.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS;
                            (0, l.openModal)(s => (0, a.jsx)(l.ConfirmModal, {
                                header: e,
                                confirmButtonColor: l.Button.Colors.BRAND,
                                confirmText: f.default.Messages.OKAY,
                                ...s,
                                children: (0, a.jsx)(l.Text, {
                                    variant: "text-md/normal",
                                    children: t
                                })
                            }))
                        }()
                    } catch (e) {
                        ! function(e) {
                            let t = f.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_HEADER,
                                s = null != e ? e : f.default.Messages.UPLOAD_DEBUG_LOG_FAILURE;
                            (0, l.openModal)(e => (0, a.jsx)(l.ConfirmModal, {
                                header: t,
                                confirmButtonColor: l.Button.Colors.BRAND,
                                confirmText: f.default.Messages.OKAY,
                                ...e,
                                children: (0, a.jsx)(l.Text, {
                                    variant: "text-md/normal",
                                    children: s
                                })
                            }))
                        }(e.displayMessage)
                    }
                }
                return (0, a.jsxs)(l.FormSection, {
                    className: m.marginBottom40,
                    title: f.default.Messages.FORM_LABEL_DEBUG,
                    children: [s && (0, a.jsx)(l.FormSwitch, {
                        value: O,
                        onChange: e => r.default.setAecDump(e),
                        note: f.default.Messages.FORM_HELP_AEC_DUMP,
                        children: f.default.Messages.FORM_CHECKBOX_AEC_DUMP
                    }), M && (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(l.FormSwitch, {
                            hideBorder: !0,
                            value: R,
                            onChange: e => o.setShouldRecordNextConnection(e),
                            note: f.default.Messages.FORM_HELP_CONNECTION_LOG,
                            children: f.default.Messages.FORM_CHECKBOX_CONNECTION_LOG
                        }), (0, a.jsx)(l.FormItem, {
                            children: (0, a.jsx)(T.default, {
                                className: m.marginBottom20,
                                children: (0, a.jsx)(T.default.Child, {
                                    grow: 0,
                                    shrink: 0,
                                    children: (0, a.jsx)(l.Button, {
                                        size: l.Button.Sizes.SMALL,
                                        onClick: () => o.openReplay(),
                                        children: f.default.Messages.OPEN_CONNECTION_REPLAY
                                    })
                                })
                            })
                        })]
                    }), (0, a.jsx)(l.FormSwitch, {
                        hideBorder: !0,
                        value: d,
                        onChange: C,
                        note: f.default.Messages.FORM_HELP_DEBUG_LOGGING,
                        children: f.default.Messages.FORM_CHECKBOX_DEBUG_LOGGING
                    }), (0, a.jsx)(l.FormItem, {
                        children: (0, a.jsxs)(T.default, {
                            children: [(0, a.jsx)(T.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(l.Button, {
                                    disabled: e,
                                    size: l.Button.Sizes.SMALL,
                                    onClick: D,
                                    children: f.default.Messages.UPLOAD
                                })
                            }), (0, a.jsx)(T.default.Child, {
                                grow: 0,
                                shrink: 0,
                                children: (0, a.jsx)(l.Button, {
                                    size: l.Button.Sizes.SMALL,
                                    onClick: A,
                                    children: f.default.Messages.SHOW_FOLDER
                                })
                            })]
                        })
                    })]
                })
            }
        },
        625205: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("47120");
            var a = s("735250");
            s("470079");
            var n = s("392711"),
                i = s.n(n),
                l = s("442837"),
                r = s("780384"),
                o = s("481060"),
                d = s("846027"),
                u = s("463395"),
                c = s("131951"),
                S = s("285952"),
                E = s("210887"),
                T = s("962100"),
                _ = s("65154"),
                I = s("689938"),
                N = s("623378"),
                g = s("611273");

            function f() {
                let e, t;
                let n = (0, l.useStateFromStores)([E.default], () => E.default.theme),
                    {
                        canSetInputDevice: f,
                        canSetOutputDevice: m,
                        inputDeviceId: A,
                        outputDeviceId: C
                    } = (0, l.useStateFromStoresObject)([c.default], () => ({
                        canSetInputDevice: c.default.supports(_.Features.AUDIO_INPUT_DEVICE),
                        canSetOutputDevice: c.default.supports(_.Features.AUDIO_OUTPUT_DEVICE),
                        inputDeviceId: c.default.getInputDeviceId(),
                        outputDeviceId: c.default.getOutputDeviceId()
                    })),
                    O = (0, l.useStateFromStores)([c.default], () => c.default.getInputDevices()),
                    h = (0, l.useStateFromStores)([c.default], () => c.default.getOutputDevices());
                !f && (e = (0, a.jsx)(o.FormText, {
                    type: o.FormText.Types.DESCRIPTION,
                    className: g.marginTop8,
                    children: I.default.Messages.BROWSER_INPUT_DEVICE_WARNING.format({
                        onDownloadClick: () => (0, T.openDownloadAppsModal)("Help Text Input Devices")
                    })
                })), !m && (t = (0, a.jsx)(o.FormText, {
                    type: o.FormText.Types.DESCRIPTION,
                    className: g.marginTop8,
                    children: I.default.Messages.BROWSER_OUTPUT_DEVICE_WARNING.format({
                        onDownloadClick: () => (0, T.openDownloadAppsModal)("Help Text Output Devices")
                    })
                }));
                let R = i()(O).values().first(),
                    p = null != R ? R.disabled : null != e,
                    M = i()(h).values().first(),
                    D = null != M ? M.disabled : null != t;

                function x(e) {
                    let t, {
                        label: i,
                        value: l
                    } = e;
                    if (u.default.isCertified(l)) {
                        let e = (0, r.isThemeLight)(n) ? s("561259") : s("887695");
                        t = (0, a.jsx)("img", {
                            src: e,
                            alt: "Certified",
                            className: N.deviceOptionCertified
                        })
                    }
                    return (0, a.jsxs)("span", {
                        className: N.deviceOption,
                        children: [(0, a.jsx)("span", {
                            className: N.deviceOptionLabel,
                            children: u.default.getCertifiedDeviceName(l, i)
                        }), t]
                    }, l)
                }

                function L(e) {
                    return x(e[0])
                }
                return (0, a.jsxs)(S.default, {
                    className: g.marginBottom20,
                    children: [(0, a.jsxs)(S.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: I.default.Messages.FORM_LABEL_INPUT_DEVICE
                        }), (0, a.jsx)(o.SingleSelect, {
                            value: A,
                            onChange: e => d.default.setInputDevice(e, "Settings"),
                            options: i().map(O, e => {
                                let {
                                    id: t,
                                    name: s
                                } = e;
                                return {
                                    value: t,
                                    label: s
                                }
                            }),
                            isDisabled: p,
                            renderOptionValue: L,
                            renderOptionLabel: x
                        }), e]
                    }), (0, a.jsxs)(S.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H5,
                            className: g.marginBottom8,
                            children: I.default.Messages.FORM_LABEL_OUTPUT_DEVICE
                        }), (0, a.jsx)(o.SingleSelect, {
                            value: C,
                            onChange: e => d.default.setOutputDevice(e, "Settings"),
                            options: i().map(h, e => {
                                let {
                                    id: t,
                                    name: s
                                } = e;
                                return {
                                    value: t,
                                    label: s
                                }
                            }),
                            isDisabled: D,
                            renderOptionValue: L,
                            renderOptionLabel: x
                        }), t]
                    })]
                })
            }
        },
        325808: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("442837"),
                r = s("481060"),
                o = s("846027"),
                d = s("230711"),
                u = s("825209"),
                c = s("131951"),
                S = s("285952"),
                E = s("153124"),
                T = s("358085"),
                _ = s("962100"),
                I = s("981631"),
                N = s("689938"),
                g = s("917439"),
                f = s("611273");
            let m = !T.isPlatformEmbedded,
                A = (0, E.uid)();

            function C(e) {
                let {
                    value: t
                } = e;
                t === I.InputModes.PUSH_TO_TALK && m && (0, r.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await Promise.resolve().then(s.bind(s, "468026"));
                    return t => (0, a.jsx)(e, {
                        title: N.default.Messages.PTT_LIMITED_TITLE,
                        confirmText: N.default.Messages.DOWNLOAD,
                        cancelText: N.default.Messages.OKAY,
                        onConfirm: () => (0, _.openDownloadAppsModal)("PTT Limited Modal"),
                        body: N.default.Messages.PTT_LIMITED_BODY,
                        ...t
                    })
                }), o.default.setMode(t)
            }

            function O(e) {
                return e >= 1e3 ? (e /= 1e3, "".concat(e.toFixed(2), "s")) : "".concat(e.toFixed(0), " ms")
            }

            function h(e) {
                let t, {
                        inputMode: s
                    } = e,
                    {
                        shortcut: n,
                        delay: E
                    } = (0, l.useStateFromStoresObject)([c.default], () => c.default.getModeOptions());
                return t = T.isPlatformEmbedded || s !== I.InputModes.PUSH_TO_TALK ? (0, a.jsx)(r.FormText, {
                    type: r.FormText.Types.DESCRIPTION,
                    className: i()(g.pttToolsMessage, f.marginBottom8),
                    children: N.default.Messages.USER_SETTINGS_VOICE_ADD_MULTIPLE.format({
                        onClick: () => d.default.setSection(I.UserSettingsSections.KEYBINDS)
                    })
                }) : (0, a.jsx)(r.FormText, {
                    type: r.FormText.Types.DESCRIPTION,
                    className: i()(g.pttToolsMessage, g.pttToolsWarning, f.marginBottom8),
                    children: N.default.Messages.PTT_LIMITED_WARNING.format({
                        onDownloadClick: () => (0, _.openDownloadAppsModal)("Help Text PTT")
                    })
                }), (0, a.jsxs)("div", {
                    className: g.pttTools,
                    children: [(0, a.jsxs)(S.default, {
                        children: [(0, a.jsx)(S.default.Child, {
                            basis: "50%",
                            children: (0, a.jsx)(r.FormItem, {
                                title: N.default.Messages.FORM_LABEL_SHORTCUT,
                                children: (0, a.jsx)(u.default, {
                                    defaultValue: n,
                                    onChange: e => o.default.setMode(s, {
                                        shortcut: e
                                    })
                                })
                            })
                        }), (0, a.jsx)(S.default.Child, {
                            basis: "50%",
                            children: (0, a.jsxs)(r.FormItem, {
                                children: [(0, a.jsx)(r.FormTitle, {
                                    id: A,
                                    tag: r.FormTitleTags.H5,
                                    className: f.marginBottom8,
                                    children: N.default.Messages.INPUT_MODE_PTT_RELEASE_DELAY
                                }), (0, a.jsx)(r.Slider, {
                                    initialValue: E,
                                    onValueChange: e => o.default.setMode(s, {
                                        delay: e
                                    }),
                                    onValueRender: O,
                                    maxValue: I.MAX_PTT_RELEASE_DELAY,
                                    "aria-labelledby": A
                                })]
                            })
                        })]
                    }), t]
                })
            }

            function R() {
                let e = (0, l.useStateFromStores)([c.default], () => c.default.getMode()),
                    t = [{
                        value: I.InputModes.VOICE_ACTIVITY,
                        name: N.default.Messages.INPUT_MODE_VAD
                    }, {
                        value: I.InputModes.PUSH_TO_TALK,
                        name: m ? N.default.Messages.INPUT_MODE_PTT_LIMITED : N.default.Messages.INPUT_MODE_PTT
                    }];
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.FormItem, {
                        title: N.default.Messages.FORM_LABEL_INPUT_MODE,
                        className: f.marginBottom20,
                        children: (0, a.jsx)(r.RadioGroup, {
                            onChange: C,
                            options: t,
                            value: e
                        })
                    }), e === I.InputModes.PUSH_TO_TALK && (0, a.jsx)(h, {
                        inputMode: e
                    })]
                })
            }
        },
        823087: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return E
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("399606"),
                i = s("481060"),
                l = s("284056"),
                r = s("131951"),
                o = s("63063"),
                d = s("981631"),
                u = s("65154"),
                c = s("689938"),
                S = s("470251");

            function E() {
                return (0, n.useStateFromStores)([r.default], () => r.default.supports(u.Features.LOOPBACK)) ? (0, a.jsx)("div", {
                    className: S.micTest,
                    children: (0, a.jsx)(l.default, {
                        title: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_TITLE,
                        description: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_DESCRIPTION,
                        notchBackground: l.NotchBackground.GRAY,
                        captionVoice: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_VOICE_CAPTION,
                        captionNoVoice: (0, a.jsxs)(a.Fragment, {
                            children: [c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_VOICE_NO_INPUT_NOTICE, (0, a.jsx)(i.Anchor, {
                                className: S.micTestHelpLink,
                                href: o.default.getArticleURL(d.HelpdeskArticles.NO_INPUT_DETECTED),
                                children: c.default.Messages.NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT
                            })]
                        }),
                        buttonTest: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_BUTTON_INACTIVE,
                        buttonStop: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_BUTTON_ACTIVE,
                        buttonClassName: S.micTestButton,
                        buttonColor: i.Button.Colors.BRAND,
                        location: {
                            page: d.AnalyticsPages.USER_SETTINGS,
                            section: d.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                        }
                    })
                }) : null
            }
        },
        546997: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return u
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("846027"),
                r = s("131951"),
                o = s("689938"),
                d = s("611273");

            function u() {
                let {
                    videoHook: e,
                    experimentalSoundshare: t,
                    supportsVideoHook: s,
                    supportsExperimentalSoundshare: u
                } = (0, n.useStateFromStoresObject)([r.default], () => ({
                    videoHook: r.default.getVideoHook(),
                    experimentalSoundshare: r.default.getExperimentalSoundshare(),
                    supportsVideoHook: r.default.supportsVideoHook(),
                    supportsExperimentalSoundshare: r.default.supportsExperimentalSoundshare()
                }));
                return s || u ? (0, a.jsxs)(i.FormSection, {
                    className: d.marginBottom20,
                    title: o.default.Messages.FORM_LABEL_SCREENSHARE,
                    children: [s && (0, a.jsx)(i.FormSwitch, {
                        value: e,
                        onChange: e => l.default.setVideoHook(e),
                        note: o.default.Messages.FORM_HELP_VIDEO_HOOK,
                        children: o.default.Messages.USER_SETTINGS_VOICE_VIDEO_HOOK_LABEL
                    }), u && (0, a.jsx)(i.FormSwitch, {
                        value: t,
                        onChange: e => l.default.setExperimentalSoundshare(e),
                        children: o.default.Messages.USER_SETTINGS_VOICE_EXPERIMENTAL_SOUNDSHARE_LABEL
                    })]
                }) : null
            }
        },
        918257: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return I
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("120356"),
                i = s.n(n),
                l = s("481060"),
                r = s("208049"),
                o = s("242291"),
                d = s("153124"),
                u = s("63063"),
                c = s("36703"),
                S = s("981631"),
                E = s("689938"),
                T = s("917527");
            let _ = (0, d.uid)();

            function I() {
                let e = (0, o.getAmplitudinalSoundboardVolume)();
                return (0, a.jsxs)("div", {
                    className: i()(T.soundboardRow),
                    children: [(0, a.jsxs)("div", {
                        className: i()(T.soundboardColumn, T.leftColumn),
                        children: [(0, a.jsx)(l.FormTitle, {
                            tag: l.FormTitleTags.H5,
                            className: T.soundboardTitle,
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD
                        }), (0, a.jsx)(l.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME_DESCRIPTION_WITH_LINK.format({
                                helpCenterArticle: u.default.getArticleURL(S.HelpdeskArticles.SOUNDBOARD)
                            })
                        })]
                    }), (0, a.jsxs)("div", {
                        className: i()(T.soundboardColumn, T.__invalid_rightColumn),
                        children: [(0, a.jsx)(l.FormTitle, {
                            id: _,
                            tag: l.FormTitleTags.H5,
                            className: T.soundboardSubtitle,
                            children: E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME
                        }), (0, a.jsx)(l.Slider, {
                            initialValue: (0, c.amplitudeToPerceptual)(e),
                            maxValue: 100,
                            onValueRender: e => "".concat(e.toFixed(0), "%"),
                            asValueChanges: function(t) {
                                e = (0, c.perceptualToAmplitude)(t), (0, r.updateUserSoundboardVolume)(e)
                            },
                            "aria-labelledby": _
                        })]
                    })]
                })
            }
        },
        167540: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return g
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("921801"),
                u = s("131951"),
                c = s("962100"),
                S = s("445817"),
                E = s("726985"),
                T = s("65154"),
                _ = s("689938"),
                I = s("611273");

            function N() {
                return (0, a.jsx)(o.FormNotice, {
                    type: o.CardTypes.PRIMARY,
                    title: _.default.Messages.VIDEO_UNSUPPORTED_BROWSER_TITLE,
                    body: _.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY,
                    button: (0, a.jsx)(o.Button, {
                        size: o.Button.Sizes.SMALL,
                        className: I.marginTop20,
                        onClick: () => (0, c.openDownloadAppsModal)("Video unsupported browser"),
                        children: _.default.Messages.DOWNLOAD_APP
                    })
                })
            }

            function g() {
                let e = (0, r.useStateFromStores)([u.default], () => u.default.supports(T.Features.VIDEO)),
                    [t, s] = n.useState(!1);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(o.HeadingLevel, {
                        component: (0, a.jsx)(o.FormTitle, {
                            tag: o.FormTitleTags.H1,
                            className: I.marginBottom20,
                            children: _.default.Messages.VIDEO_SETTINGS
                        }),
                        children: e ? (0, a.jsx)(d.Subsetting, {
                            setting: E.WebSetting.VOICE_AND_VIDEO_VIDEO_CAMERA,
                            children: (0, a.jsx)(S.default, {
                                previewEnabled: t,
                                onEnablePreview: () => s(!0)
                            })
                        }) : (0, a.jsx)(N, {})
                    }), (0, a.jsx)(o.FormDivider, {
                        className: l()(I.marginBottom40, I.marginTop40)
                    })]
                })
            }
        },
        674116: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return B
                }
            }), s("653041");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("481060"),
                d = s("846027"),
                u = s("230711"),
                c = s("579806"),
                S = s("921801"),
                E = s("131951"),
                T = s("663389"),
                _ = s("153124"),
                I = s("63063"),
                N = s("358085"),
                g = s("894939"),
                f = s("321499"),
                m = s("710808"),
                A = s("625205"),
                C = s("325808"),
                O = s("823087"),
                h = s("546997"),
                R = s("167540"),
                p = s("803567"),
                M = s("269876"),
                D = s("976758"),
                x = s("526761"),
                L = s("726985"),
                P = s("981631"),
                b = s("65154"),
                v = s("689938"),
                U = s("611273");
            let j = (0, _.uid)(),
                G = "".concat(I.default.getArticleURL(P.HelpdeskArticles.VOICE_VIDEO_TROUBLESHOOTING), "?utm_source=discord&utm_medium=blog&utm_campaign=2020-06_help-voice-video&utm_content=--t%3Apm");

            function F(e, t, s) {
                (0, o.openModal)(n => (0, a.jsx)(o.ConfirmModal, {
                    header: e,
                    confirmText: v.default.Messages.OKAY,
                    cancelText: v.default.Messages.CANCEL,
                    onConfirm: s,
                    ...n,
                    children: (0, a.jsx)(o.Text, {
                        variant: "text-md/normal",
                        children: t
                    })
                }))
            }

            function B() {
                let {
                    inputMode: e,
                    qosEnabled: t,
                    attenuation: s,
                    attenuateWhileSpeakingSelf: i,
                    attenuateWhileSpeakingOthers: _,
                    audioSubsystem: I,
                    silenceWarning: P,
                    debugLoggingEnabled: B,
                    legacyAudioSubsystemSupported: y,
                    experimentalAudioSubsystemSupported: V,
                    qosSupported: H,
                    attenuationSupported: Y
                } = (0, r.useStateFromStoresObject)([E.default], () => ({
                    inputMode: E.default.getMode(),
                    qosEnabled: E.default.getQoS(),
                    attenuation: E.default.getAttenuation(),
                    attenuateWhileSpeakingSelf: E.default.getAttenuateWhileSpeakingSelf(),
                    attenuateWhileSpeakingOthers: E.default.getAttenuateWhileSpeakingOthers(),
                    audioSubsystem: E.default.getAudioSubsystem(),
                    silenceWarning: E.default.getEnableSilenceWarning(),
                    debugLoggingEnabled: E.default.supports(b.Features.DEBUG_LOGGING),
                    legacyAudioSubsystemSupported: E.default.supports(b.Features.LEGACY_AUDIO_SUBSYSTEM),
                    experimentalAudioSubsystemSupported: E.default.supports(b.Features.EXPERIMENTAL_AUDIO_SUBSYSTEM),
                    qosSupported: E.default.supports(b.Features.QOS),
                    attenuationSupported: E.default.supports(b.Features.ATTENUATION)
                })), k = (0, r.useStateFromStores)([T.default], () => T.default.getSubsection()), w = n.createRef(), W = N.isPlatformEmbedded && B && null != c.default.fileManager.readLogFiles;
                return n.useEffect(() => {
                    if (k === x.SOUNDBOARD_SUBSECTION) {
                        var e;
                        null == w || null === (e = w.current) || void 0 === e || e.scrollIntoView(), u.default.clearSubsection()
                    }
                }, [w, k]), (0, a.jsxs)(o.FormSection, {
                    tag: o.FormTitleTags.H1,
                    title: v.default.Messages.VOICE_SETTINGS,
                    children: [(0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_DEVICES,
                        children: (0, a.jsx)(A.default, {})
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_VOLUME_CONTROLS,
                        children: (0, a.jsx)(D.default, {})
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_MIC_TEST,
                        children: (0, a.jsx)(O.default, {})
                    }), (0, a.jsxs)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_TROUBLESHOOTING,
                        children: [(0, a.jsx)(o.FormText, {
                            className: U.marginBottom20,
                            type: o.FormText.Types.DESCRIPTION,
                            children: v.default.Messages.FORM_HELP_VOICE_VIDEO_TROUBLESHOOTING_GUIDE.format({
                                guideURL: G
                            })
                        }), (0, a.jsx)(o.FormDivider, {
                            className: l()(U.marginBottom20)
                        })]
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_INPUT_MODE,
                        children: (0, a.jsx)(C.default, {})
                    }), (0, a.jsxs)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_SENSITIVITY,
                        children: [e === b.InputModes.VOICE_ACTIVITY && (0, a.jsx)(M.default, {}), (0, a.jsx)(o.FormDivider, {
                            className: U.marginBottom40
                        })]
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_SOUNDBOARD,
                        children: (0, a.jsx)("div", {
                            style: {
                                scrollMarginTop: "48px"
                            },
                            ref: w
                        })
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_SOUNDS,
                        children: (0, a.jsx)(g.default, {})
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_VIDEO,
                        children: (0, a.jsx)(R.default, {})
                    }), (0, a.jsx)(S.Subsetting, {
                        setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED,
                        children: (0, a.jsxs)(o.HeadingLevel, {
                            component: (0, a.jsx)(o.FormTitle, {
                                tag: o.FormTitleTags.H1,
                                className: U.marginBottom20,
                                children: v.default.Messages.SETTINGS_ADVANCED
                            }),
                            children: [(0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED_CODECS,
                                children: (0, a.jsx)(f.default, {})
                            }), (0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING,
                                children: (0, a.jsx)(p.default, {})
                            }), H && (0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED_QOS,
                                children: (0, a.jsx)(o.FormSection, {
                                    className: U.marginBottom20,
                                    title: v.default.Messages.FORM_LABEL_QOS,
                                    children: (0, a.jsx)(o.FormSwitch, {
                                        value: t,
                                        onChange: e => d.default.setQoS(e),
                                        note: v.default.Messages.FORM_HELP_QOS,
                                        children: v.default.Messages.FORM_CHECKBOX_QOS
                                    })
                                })
                            }), Y && (0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED_ATTENUATION,
                                children: (0, a.jsxs)(o.FormSection, {
                                    className: U.marginBottom20,
                                    children: [(0, a.jsx)(o.FormTitle, {
                                        id: j,
                                        tag: o.FormTitleTags.H5,
                                        className: U.marginBottom8,
                                        children: v.default.Messages.FORM_LABEL_ATTENUATION
                                    }), (0, a.jsx)(o.Slider, {
                                        initialValue: s,
                                        onValueChange: e => {
                                            d.default.setAttenuation(e, i, _)
                                        },
                                        "aria-labelledby": j
                                    }), (0, a.jsx)(o.FormText, {
                                        className: U.marginBottom20,
                                        type: o.FormText.Types.DESCRIPTION,
                                        children: v.default.Messages.FORM_HELP_ATTENUATION
                                    }), (0, a.jsx)(o.FormDivider, {
                                        className: U.marginBottom20
                                    }), (0, a.jsx)(o.FormSwitch, {
                                        value: i,
                                        onChange: e => d.default.setAttenuation(s, e, _),
                                        children: v.default.Messages.ATTENUATE_WHILE_SPEAKING_SELF
                                    }), (0, a.jsx)(o.FormSwitch, {
                                        value: _,
                                        onChange: e => d.default.setAttenuation(s, i, e),
                                        children: v.default.Messages.ATTENUATE_WHILE_SPEAKING_OTHERS
                                    })]
                                })
                            }), (y || V) && (0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_ADVANCED_SUBSYSTEM,
                                children: (0, a.jsxs)(o.FormSection, {
                                    className: U.marginBottom20,
                                    title: v.default.Messages.FORM_LABEL_SUBSYSTEM,
                                    children: [(0, a.jsx)(o.SingleSelect, {
                                        className: U.marginBottom20,
                                        value: I,
                                        options: function(e, t) {
                                            let s = [{
                                                value: b.AudioSubsystems.STANDARD,
                                                label: "Standard"
                                            }];
                                            return e && s.push({
                                                value: b.AudioSubsystems.LEGACY,
                                                label: "Legacy"
                                            }), t && s.push({
                                                value: b.AudioSubsystems.EXPERIMENTAL,
                                                label: "Experimental"
                                            }), s
                                        }(y, V),
                                        onChange: e => {
                                            F(v.default.Messages.SWITCH_SUBSYSTEM, v.default.Messages.SWITCH_SUBSYSTEM_BODY, () => d.default.setAudioSubsystem(e))
                                        }
                                    }), (0, a.jsx)(o.FormDivider, {
                                        className: U.marginBottom20
                                    })]
                                })
                            }), N.isPlatformEmbedded && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)(h.default, {}), (0, a.jsx)(o.FormSection, {
                                    className: U.marginBottom20,
                                    title: v.default.Messages.FORM_LABEL_VOICE_DIAGNOSTICS,
                                    children: (0, a.jsx)(o.FormSwitch, {
                                        value: P,
                                        onChange: e => d.default.setSilenceWarning(e),
                                        children: v.default.Messages.DISPLAY_SILENCE_WARNING
                                    })
                                })]
                            }), W && (0, a.jsx)(m.default, {}), (0, a.jsx)(S.Subsetting, {
                                setting: L.WebSetting.VOICE_AND_VIDEO_RESET_VOICE_SETTINGS,
                                children: (0, a.jsx)(o.FormItem, {
                                    children: (0, a.jsx)(o.Button, {
                                        look: o.Button.Looks.OUTLINED,
                                        color: o.Button.Colors.RED,
                                        onClick: () => {
                                            F(v.default.Messages.RESET_VOICE_SETTINGS, v.default.Messages.RESET_VOICE_SETTINGS_BODY, d.default.reset)
                                        },
                                        size: o.Button.Sizes.SMALL,
                                        children: v.default.Messages.RESET_VOICE_SETTINGS
                                    })
                                })
                            })]
                        })
                    })]
                })
            }
        },
        803567: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return L
                }
            }), s("653041");
            var a, n, i = s("735250");
            s("470079");
            var l = s("120356"),
                r = s.n(l),
                o = s("442837"),
                d = s("780384"),
                u = s("481060"),
                c = s("846027"),
                S = s("921801"),
                E = s("463395"),
                T = s("131951"),
                _ = s("285952"),
                I = s("153124"),
                N = s("626135"),
                g = s("63063"),
                f = s("210887"),
                m = s("726985"),
                A = s("981631"),
                C = s("689938"),
                O = s("611273");
            let h = s("775322"),
                R = s("853453"),
                p = (0, I.uid)();
            (n = a || (a = {}))[n.NONE = 0] = "NONE", n[n.STANDARD = 1] = "STANDARD", n[n.KRISP = 2] = "KRISP";
            let M = {
                page: A.AnalyticsPages.USER_SETTINGS,
                section: A.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
            };

            function D(e) {
                let t = e.currentTarget;
                N.default.track(A.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
                    text: t.text,
                    href: t.href,
                    location: {
                        page: A.AnalyticsPages.USER_SETTINGS,
                        section: A.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                    }
                })
            }

            function x() {
                let e = (0, o.useStateFromStores)([f.default], () => f.default.theme),
                    {
                        noiseCancellation: t,
                        noiseSuppression: s,
                        noiseSuppressionSupported: a,
                        noiseCancellationSupported: n
                    } = (0, o.useStateFromStoresObject)([T.default], () => ({
                        noiseCancellation: T.default.getNoiseCancellation(),
                        noiseSuppression: T.default.getNoiseSuppression(),
                        noiseSuppressionSupported: T.default.isNoiseSuppressionSupported(),
                        noiseCancellationSupported: T.default.isNoiseCancellationSupported()
                    }));
                if (!a && !n) return null;
                let l = [];
                return n && l.push({
                    name: C.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_KRISP,
                    value: 2
                }), a && l.push({
                    name: C.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_STANDARD,
                    value: 1
                }), l.push({
                    name: C.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_DISABLED,
                    value: 0
                }), (0, i.jsxs)(u.FormSection, {
                    className: O.marginBottom20,
                    children: [(0, i.jsx)(u.FormTitle, {
                        id: p,
                        tag: u.FormTitleTags.H3,
                        className: O.marginBottom8,
                        children: C.default.Messages.NOISE_SUPPRESSION
                    }), (0, i.jsx)(u.FormText, {
                        type: u.FormText.Types.DESCRIPTION,
                        className: O.marginBottom8,
                        children: C.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_DESCRIPTION
                    }), (0, i.jsx)(u.RadioGroup, {
                        options: l,
                        onChange: e => {
                            c.default.setNoiseCancellation(2 === e.value, M), c.default.setNoiseSuppression(1 === e.value, M)
                        },
                        value: t ? 2 : s ? 1 : 0
                    }), n && (0, i.jsx)(u.FormNotice, {
                        className: O.marginBottom8,
                        type: u.FormNoticeTypes.PRIMARY,
                        imageData: {
                            src: (0, d.isThemeLight)(e) ? h : R,
                            width: 70,
                            height: 40
                        },
                        align: _.default.Align.CENTER,
                        body: (0, i.jsx)(u.Anchor, {
                            href: g.default.getArticleURL(A.HelpdeskArticles.NOISE_SUPPRESSION),
                            onClick: D,
                            children: C.default.Messages.LEARN_MORE
                        })
                    }), (0, i.jsx)(u.FormDivider, {})]
                })
            }

            function L() {
                let {
                    inputMode: e,
                    inputDeviceId: t,
                    echoCancellation: s,
                    automaticGainControl: a,
                    vadAutoThreshold: n,
                    vadUseKrisp: l,
                    advancedVoiceActivitySupported: d,
                    automaticGainControlSupported: _
                } = (0, o.useStateFromStoresObject)([T.default], () => ({
                    inputMode: T.default.getMode(),
                    inputDeviceId: T.default.getInputDeviceId(),
                    echoCancellation: T.default.getEchoCancellation(),
                    automaticGainControl: T.default.getAutomaticGainControl(),
                    vadAutoThreshold: T.default.getModeOptions().autoThreshold,
                    vadUseKrisp: T.default.getModeOptions().vadUseKrisp,
                    advancedVoiceActivitySupported: T.default.isAdvancedVoiceActivitySupported(),
                    automaticGainControlSupported: T.default.isAutomaticGainControlSupported()
                })), {
                    hasEchoCancellation: I,
                    hasNoiseSuppression: N,
                    hasAutomaticGainControl: g
                } = (0, o.useStateFromStoresObject)([E.default], () => ({
                    hasEchoCancellation: E.default.hasEchoCancellation(t),
                    hasNoiseSuppression: E.default.hasNoiseSuppression(t),
                    hasAutomaticGainControl: E.default.hasAutomaticGainControl(t)
                }), [t]), f = I || N || g, h = e === A.InputModes.VOICE_ACTIVITY && n;
                return (0, i.jsxs)(u.FormSection, {
                    className: O.marginBottom20,
                    title: C.default.Messages.FORM_LABEL_VOICE_PROCESSING,
                    children: [f && (0, i.jsx)(u.FormText, {
                        className: O.marginBottom20,
                        type: u.FormText.Types.DESCRIPTION,
                        children: C.default.Messages.FORM_HELP_CERTIFIED_VOICE_PROCESSING
                    }), (0, i.jsx)(S.Subsetting, {
                        setting: m.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ECHO_CANCELLATION,
                        children: (0, i.jsx)(u.FormSwitch, {
                            className: r()(O.marginTop8, O.marginBottom20),
                            value: s,
                            onChange: e => c.default.setEchoCancellation(e, {
                                page: A.AnalyticsPages.USER_SETTINGS,
                                section: A.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                            }),
                            disabled: I,
                            children: C.default.Messages.ECHO_CANCELLATION
                        })
                    }), (0, i.jsx)(S.Subsetting, {
                        setting: m.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_NOISE_SUPPRESSION,
                        children: (0, i.jsx)(x, {})
                    }), d && (0, i.jsx)(S.Subsetting, {
                        setting: m.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_ADVANCED_VOICE_ACTIVITY,
                        children: (0, i.jsx)(u.FormSwitch, {
                            value: l,
                            onChange: t => c.default.setMode(e, {
                                vadUseKrisp: t
                            }),
                            note: C.default.Messages.USER_SETTINGS_DISABLE_ADVANCED_VOICE_ACTIVITY,
                            disabled: !h,
                            children: C.default.Messages.ADVANCED_VOICE_ACTIVITY
                        })
                    }), _ && (0, i.jsx)(S.Subsetting, {
                        setting: m.WebSetting.VOICE_AND_VIDEO_ADVANCED_PROCESSING_AUTOMATIC_GAIN_CONTROL,
                        children: (0, i.jsx)(u.FormSwitch, {
                            className: "",
                            value: a,
                            onChange: e => c.default.setAutomaticGainControl(e, {
                                page: A.AnalyticsPages.USER_SETTINGS,
                                section: A.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO
                            }),
                            note: C.default.Messages.USER_SETTINGS_AUTOMATIC_GAIN_CONTROL,
                            disabled: g,
                            children: C.default.Messages.AUTOMATIC_GAIN_CONTROL
                        })
                    })]
                })
            }
        },
        269876: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return A
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("442837"),
                o = s("46973"),
                d = s("846519"),
                u = s("692547"),
                c = s("481060"),
                S = s("846027"),
                E = s("131951"),
                T = s("153124"),
                _ = s("65154"),
                I = s("689938"),
                N = s("689641"),
                g = s("961047"),
                f = s("611273");
            let m = (0, T.uid)();

            function A() {
                let [e, t] = n.useState(-100), [s, i] = n.useState(!1), {
                    threshold: A,
                    autoThreshold: C
                } = (0, r.useStateFromStoresObject)([E.default], () => E.default.getModeOptions()), {
                    inputMode: O,
                    automaticVADSupported: h,
                    isEnabled: R
                } = (0, r.useStateFromStoresObject)([E.default], () => ({
                    inputMode: E.default.getMode(),
                    automaticVADSupported: E.default.supports(_.Features.AUTOMATIC_VAD),
                    isEnabled: E.default.isEnabled()
                }));

                function p(e, s) {
                    t(e), i((s & _.SpeakingFlags.VOICE) === _.SpeakingFlags.VOICE)
                }

                function M(e, t) {
                    S.default.setMode(O, {
                        threshold: e,
                        autoThreshold: t
                    })
                }
                n.useEffect(() => {
                    let e = new d.Timeout;
                    return e.start(1e3, () => {
                        E.default.getMediaEngine().on(o.MediaEngineEvent.VoiceActivity, p), e.stop()
                    }), () => {
                        E.default.getMediaEngine().removeListener(o.MediaEngineEvent.VoiceActivity, p), e.stop()
                    }
                }, []);
                let D = (0, a.jsx)("section", {
                    className: l()(N.inputSensitivityToggle, N.manual),
                    children: (0, a.jsx)(c.Slider, {
                        initialValue: A + 100,
                        onValueRender: e => "".concat((-((100 - e) * 1)).toFixed(0), "dB"),
                        onValueChange: e => M(-((100 - e) * 1), C),
                        barStyles: {
                            background: u.default.unsafe_rawColors.GREEN_360.css
                        },
                        fillStyles: {
                            background: u.default.unsafe_rawColors.YELLOW_300.css
                        },
                        "aria-labelledby": m,
                        children: (0, a.jsxs)("div", {
                            className: l()(N.sliderBar, N.microphone, N.inputSensitivityBar),
                            children: [(0, a.jsx)("div", {
                                className: l()(N.fill, N.inputSensitivityBarFill),
                                style: {
                                    width: e + 100 + "%"
                                }
                            }), (0, a.jsx)("div", {
                                className: "grow"
                            })]
                        })
                    })
                });
                return C && (D = (0, a.jsxs)("section", {
                    className: N.inputSensitivityToggle,
                    children: [(0, a.jsx)("div", {
                        className: N.inputSensitivitySlider,
                        children: (0, a.jsx)("div", {
                            className: l()(N.inputSensitivityBar, N.sliderBar, {
                                [N.speaking]: s
                            })
                        })
                    }), (0, a.jsx)(c.FormText, {
                        type: c.FormText.Types.DESCRIPTION,
                        className: f.marginBottom8,
                        children: I.default.Messages.FORM_HELP_AUTOMATIC_VAD
                    })]
                })), (0, a.jsxs)(c.FormItem, {
                    className: N.sensitivity,
                    children: [(0, a.jsx)(c.FormTitle, {
                        id: m,
                        tag: c.FormTitleTags.H5,
                        className: f.marginBottom8,
                        children: I.default.Messages.FORM_LABEL_INPUT_SENSITIVTY
                    }), (0, a.jsxs)("div", {
                        children: [h && (0, a.jsx)(T.UID, {
                            children: e => (0, a.jsxs)("div", {
                                className: l()(g.horizontal, f.marginBottom4),
                                children: [(0, a.jsx)(c.FormTitle, {
                                    tag: c.FormTitleTags.H3,
                                    className: f.marginReset,
                                    children: (0, a.jsx)("label", {
                                        htmlFor: e,
                                        children: I.default.Messages.FORM_LABEL_AUTOMATIC_VAD
                                    })
                                }), (0, a.jsx)(c.Switch, {
                                    id: e,
                                    checked: C,
                                    onChange: e => M(A, e)
                                })]
                            })
                        }), D]
                    }), !R && (0, a.jsx)(c.FormText, {
                        type: c.FormText.Types.DESCRIPTION,
                        className: l()(N.inputDisabledWarning, f.marginBottom8),
                        children: I.default.Messages.FORM_WARNING_INPUT_SENSITIVTY.format({
                            onEnableClick: S.default.enable
                        })
                    })]
                })
            }
        },
        962100: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                openDownloadAppsModal: function() {
                    return i
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060");

            function i(e) {
                (0, n.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await Promise.resolve().then(s.bind(s, "431583"));
                    return s => (0, a.jsx)(t, {
                        source: e,
                        ...s
                    })
                })
            }
        },
        976758: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return _
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("442837"),
                i = s("481060"),
                l = s("846027"),
                r = s("131951"),
                o = s("285952"),
                d = s("153124"),
                u = s("36703"),
                c = s("689938"),
                S = s("611273");
            let E = (0, d.uid)(),
                T = (0, d.uid)();

            function _() {
                let {
                    inputVolume: e,
                    outputVolume: t
                } = (0, n.useStateFromStoresObject)([r.default], () => ({
                    inputVolume: r.default.getInputVolume(),
                    outputVolume: r.default.getOutputVolume()
                }));
                return (0, a.jsxs)(o.default, {
                    className: "volume",
                    children: [(0, a.jsxs)(o.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(i.FormTitle, {
                            id: E,
                            tag: i.FormTitleTags.H5,
                            className: S.marginBottom4,
                            children: c.default.Messages.FORM_LABEL_INPUT_VOLUME
                        }), (0, a.jsx)(i.Slider, {
                            initialValue: (0, u.amplitudeToPerceptual)(e),
                            asValueChanges: e => l.default.setInputVolume((0, u.perceptualToAmplitude)(e)),
                            "aria-labelledby": E
                        })]
                    }), (0, a.jsxs)(o.default.Child, {
                        basis: "50%",
                        children: [(0, a.jsx)(i.FormTitle, {
                            id: T,
                            tag: i.FormTitleTags.H5,
                            className: S.marginBottom4,
                            children: c.default.Messages.FORM_LABEL_OUTPUT_VOLUME
                        }), (0, a.jsx)(i.Slider, {
                            initialValue: (0, u.amplitudeToPerceptual)(t),
                            maxValue: 200,
                            onValueRender: e => "".concat(e.toFixed(0), "%"),
                            asValueChanges: e => l.default.setOutputVolume((0, u.perceptualToAmplitude)(e)),
                            "aria-labelledby": T
                        })]
                    })]
                })
            }
        },
        445817: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return f
                }
            }), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("442837"),
                l = s("481060"),
                r = s("570140"),
                o = s("2052"),
                d = s("932724"),
                u = s("716161"),
                c = s("672339"),
                S = s("747545"),
                E = s("131951"),
                T = s("594174"),
                _ = s("981631"),
                I = s("689938"),
                N = s("688725");
            let g = {
                width: 387,
                height: 218
            };

            function f(e) {
                let {
                    previewEnabled: t,
                    onEnablePreview: s
                } = e, f = E.default.getCameraComponent(), [m, A] = n.useState((0, d.getLastUsedVideoBackgroundOption)(T.default.getCurrentUser())), C = n.useRef(!1), O = n.useRef(m), h = (0, o.useAnalyticsContext)(), R = (0, i.useStateFromStores)([E.default], () => Object.values(E.default.getVideoDevices()).length > 0);
                return n.useEffect(() => () => {
                    C.current && r.default.wait(() => (0, u.saveLastUsedBackgroundOption)(O.current))
                }, []), (0, a.jsx)(S.default, {
                    selectedBackgroundOption: m,
                    onSelectBackgroundOption: e => {
                        C.current = !0, O.current = e, A(e), (0, c.applyBackgroundOptionLive)(e, {
                            location: h.location
                        }).catch(_.NOOP)
                    },
                    renderCamera: e => t ? (0, a.jsx)("div", {
                        className: N.cameraWrapper,
                        children: (0, a.jsxs)("div", {
                            className: N.camera,
                            children: [(0, a.jsx)(f, {
                                deviceId: e,
                                width: g.width,
                                height: g.height,
                                disabled: !t
                            }), (0, a.jsx)(S.FilterLoadingIndicator, {})]
                        })
                    }) : (0, a.jsxs)("div", {
                        className: N.cameraWrapper,
                        children: [(0, a.jsx)("div", {
                            className: N.previewImage
                        }), (0, a.jsx)(l.Tooltip, {
                            text: R ? null : I.default.Messages.CAMERA_UNAVAILABLE,
                            children: e => (0, a.jsx)(l.Button, {
                                ...e,
                                onClick: s,
                                disabled: !R,
                                children: I.default.Messages.TEST_VIDEO
                            })
                        })]
                    })
                })
            }
        },
        265159: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("981631");

            function l() {
                (0, n.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await s.e("38047").then(s.bind(s, "975863"));
                    return t => (0, a.jsx)(e, {
                        ...t,
                        source: {
                            page: i.AnalyticsPages.USER_SETTINGS,
                            section: i.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                            object: i.AnalyticsObjects.BUTTON_CTA,
                            type: i.AnalyticsObjectTypes.BUY
                        }
                    })
                })
            }
        },
        839469: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                useSettingSearchResults: function() {
                    return o
                }
            }), s("47120");
            var a = s("470079"),
                n = s("170401"),
                i = s("128277"),
                l = s("394644"),
                r = s("726985");

            function o() {
                let e = (0, i.useSettingSearchQuery)(),
                    t = (0, l.useGenerateUserSettingsSections)(),
                    s = a.useRef(new n.default((0, l.getSearchableSettingsTitles)(t))),
                    [o, d] = a.useState(!1),
                    [u, c] = a.useState(r.EMPTY_SETTINGS_LIST),
                    S = a.useCallback(async e => {
                        c(await s.current.search(e.trim())), d(!0)
                    }, []);
                return a.useEffect(() => {
                    "" === e || e.length < 2 ? (c(r.EMPTY_SETTINGS_LIST), d(!1)) : S(e)
                }, [e, S]), {
                    hasSearchResults: o,
                    searchResults: u
                }
            }
        },
        647699: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                showGenericGuildProfileUpdateFailureToast: function() {
                    return l
                },
                showGenericProfileUpdateFailureToast: function() {
                    return i
                }
            });
            var a = s("481060"),
                n = s("689938");

            function i() {
                (0, a.showToast)((0, a.createToast)(n.default.Messages.USER_SETTINGS_EDIT_PROFILE_GENERIC_ERROR, a.ToastType.FAILURE))
            }

            function l() {
                (0, a.showToast)((0, a.createToast)(n.default.Messages.GUILD_SETTINGS_EDIT_PROFILE_GENERIC_ERROR, a.ToastType.FAILURE))
            }
        },
        155433: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                showInvalidUsernameToast: function() {
                    return i
                }
            });
            var a = s("481060"),
                n = s("689938");

            function i() {
                (0, a.showToast)((0, a.createToast)(n.default.Messages.USER_SETTINGS_UPDATE_FAILURE, a.ToastType.FAILURE))
            }
        },
        249881: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                OneWayToTwoWayLinkUpsell: function() {
                    return c
                }
            });
            var a = s("735250"),
                n = s("470079"),
                i = s("481060"),
                l = s("243778"),
                r = s("921944"),
                o = s("689938"),
                d = s("832444");
            let u = e => {
                    let {
                        markAsDismissed: t
                    } = e;
                    return n.useEffect(() => t(r.ContentDismissActionType.UNKNOWN), [t]), (0, a.jsx)(i.TextBadge, {
                        className: d.newBadge,
                        text: o.default.Messages.NEW
                    })
                },
                c = e => {
                    let {
                        title: t,
                        body: s,
                        img: n,
                        newIndicatorDismissibleContent: r,
                        onClick: c
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: d.container,
                        children: [n, (0, a.jsxs)("div", {
                            className: d.textContainer,
                            children: [(0, a.jsxs)("div", {
                                className: d.headerText,
                                children: [(0, a.jsx)(l.default, {
                                    contentTypes: [r],
                                    children: e => {
                                        let {
                                            visibleContent: t,
                                            markAsDismissed: s
                                        } = e;
                                        return t === r ? (0, a.jsx)(u, {
                                            markAsDismissed: s
                                        }) : null
                                    }
                                }), (0, a.jsx)(i.Text, {
                                    variant: "text-md/semibold",
                                    children: t
                                })]
                            }), (0, a.jsx)(i.Text, {
                                variant: "text-xs/normal",
                                children: s
                            })]
                        }), (0, a.jsx)(i.Button, {
                            size: i.ButtonSizes.MEDIUM,
                            onClick: c,
                            className: d.reconnectButton,
                            children: o.default.Messages.RECONNECT
                        })]
                    })
                }
        },
        205266: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                PlayStationTwoWayLinkUpsell: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("704215"),
                i = s("231757"),
                l = s("63063"),
                r = s("249881"),
                o = s("981631"),
                d = s("689938"),
                u = s("359734");
            let c = () => {
                let e = l.default.getArticleURL(o.HelpdeskArticles.PS_CONNECTION);
                return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
                    title: d.default.Messages.PS_TWO_WAY_UPSELL_TITLE,
                    body: d.default.Messages.PS_TWO_WAY_UPSELL_BODY.format({
                        help_article: e
                    }),
                    img: (0, a.jsx)("img", {
                        src: u,
                        width: "82",
                        height: "auto",
                        alt: ""
                    }),
                    newIndicatorDismissibleContent: n.DismissibleContent.PS_ONE_WAY_RECONNECT,
                    onClick: () => (0, i.default)({
                        platformType: o.PlatformTypes.PLAYSTATION,
                        location: "PS two way upsell"
                    })
                })
            }
        },
        216153: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                XboxTwoWayLinkUpsell: function() {
                    return c
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("704215"),
                i = s("231757"),
                l = s("63063"),
                r = s("249881"),
                o = s("981631"),
                d = s("689938"),
                u = s("195794");
            let c = () => {
                let e = l.default.getArticleURL(o.HelpdeskArticles.XBOX_CONNECTION);
                return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
                    title: d.default.Messages.XBOX_TWO_WAY_UPSELL_TITLE,
                    body: d.default.Messages.XBOX_TWO_WAY_UPSELL_BODY.format({
                        help_article: e
                    }),
                    img: (0, a.jsx)("img", {
                        src: u,
                        width: "auto",
                        height: "45",
                        alt: ""
                    }),
                    newIndicatorDismissibleContent: n.DismissibleContent.XBOX_ONE_WAY_RECONNECT,
                    onClick: () => (0, i.default)({
                        platformType: o.PlatformTypes.XBOX,
                        location: "Xbox two way upsell"
                    })
                })
            }
        },
        755733: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                WebAuthnScreens: function() {
                    return a
                }
            }), (n = a || (a = {})).INIT = "INIT", n.EDIT = "EDIT", n.REGISTER = "REGISTER", n.NAME = "NAME", n.SUCCESS = "SUCCESS"
        },
        15980: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a, n, i, l, r = s("442837"),
                o = s("570140"),
                d = s("911969");
            let u = !1,
                c = [];
            class S extends(a = r.default.Store) {
                hasFetchedCredentials() {
                    return u
                }
                getCredentials() {
                    return c
                }
            }
            l = "WebAuthnStore", (i = "displayName") in(n = S) ? Object.defineProperty(n, i, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : n[i] = l, t.default = new S(o.default, {
                LOGOUT: function() {
                    c = [], u = !1
                },
                MFA_WEBAUTHN_CREDENTIALS_LOADING: () => (u = !0, !0),
                MFA_WEBAUTHN_CREDENTIALS_LOADED: e => (c = e.credentials, !0),
                AUTHENTICATOR_CREATE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === d.AuthenticatorType.WEBAUTHN && void 0 === c.find(e => e.id === t.id) && (c = [...c, t])
                },
                AUTHENTICATOR_UPDATE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === d.AuthenticatorType.WEBAUTHN && (c = c.map(e => e.id === t.id ? t : e))
                },
                AUTHENTICATOR_DELETE(e) {
                    let {
                        credential: t
                    } = e;
                    t.type === d.AuthenticatorType.WEBAUTHN && (c = c.filter(e => e.id !== t.id))
                }
            })
        },
        778764: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                default: function() {
                    return R
                }
            }), s("47120"), s("773603");
            var a = s("735250"),
                n = s("470079"),
                i = s("849055"),
                l = s("442837"),
                r = s("481060"),
                o = s("239091"),
                d = s("202858"),
                u = s("153124"),
                c = s("621113"),
                S = s("360048"),
                E = s("287880"),
                T = s("358085"),
                _ = s("960048"),
                I = s("998502"),
                N = s("365007"),
                g = s("15980"),
                f = s("755733"),
                m = s("981631"),
                A = s("689938"),
                C = s("865156");

            function O(e) {
                let {
                    transitionState: t,
                    onClose: l,
                    ticket: o,
                    challenge: c
                } = e, S = (0, u.useUID)(), [E, g] = n.useState(""), [O, h] = n.useState(!0), [R, p] = n.useState(f.WebAuthnScreens.INIT), [M, D] = n.useState(""), [x, L] = n.useState(null), P = async () => {
                    let e;
                    p(f.WebAuthnScreens.REGISTER);
                    let t = T.isPlatformEmbedded && I.default.supportsFeature(m.NativeFeatures.WEBAUTHN) ? I.default.webAuthnRegister(c) : i.create(JSON.parse(c)).then(e => JSON.stringify(e));
                    try {
                        e = await t
                    } catch (e) {
                        _.default.captureException(e), L(A.default.Messages.MFA_V2_WEBAUTHN_GENERIC_ERROR), p(f.WebAuthnScreens.INIT);
                        return
                    }
                    D(e), p(f.WebAuthnScreens.NAME)
                };
                return (0, a.jsxs)(r.ModalRoot, {
                    transitionState: t,
                    "aria-labelledby": S,
                    children: [(0, a.jsxs)(r.ModalHeader, {
                        className: C.header,
                        separator: !1,
                        children: [(0, a.jsxs)(r.Heading, {
                            id: S,
                            variant: "heading-lg/semibold",
                            children: [R === f.WebAuthnScreens.INIT && A.default.Messages.TWO_FA_WEBAUTHN_REGISTER, R === f.WebAuthnScreens.REGISTER && A.default.Messages.TWO_FA_WEBAUTHN_INTERACT, R === f.WebAuthnScreens.NAME && A.default.Messages.TWO_FA_WEBAUTHN_NAME]
                        }), (0, a.jsx)(r.ModalCloseButton, {
                            onClick: l,
                            className: C.modalCloseButton
                        })]
                    }), (0, a.jsxs)(r.Slides, {
                        activeSlide: R,
                        width: 440,
                        children: [(0, a.jsxs)(r.Slide, {
                            id: f.WebAuthnScreens.INIT,
                            children: [(0, a.jsxs)(r.ModalContent, {
                                className: C.content,
                                children: [(0, a.jsx)("div", {
                                    className: C.icon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: s("773072")
                                    })
                                }), (0, a.jsx)("div", {
                                    children: null != x && (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        color: "status-danger",
                                        children: x
                                    })
                                }), (0, a.jsx)("div", {
                                    children: (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        children: A.default.Messages.TWO_FA_WEBAUTHN_REGISTER_INSTRUCTIONS
                                    })
                                })]
                            }), (0, a.jsx)(r.ModalFooter, {
                                children: (0, a.jsx)(r.Button, {
                                    onClick: P,
                                    children: A.default.Messages.TWO_FA_WEBAUTHN_REGISTER_CONFIRM
                                })
                            })]
                        }), (0, a.jsxs)(r.Slide, {
                            id: f.WebAuthnScreens.REGISTER,
                            children: [(0, a.jsxs)(r.ModalContent, {
                                className: C.content,
                                children: [(0, a.jsx)("div", {
                                    className: C.icon,
                                    children: (0, a.jsx)("img", {
                                        alt: "",
                                        src: s("773072")
                                    })
                                }), (0, a.jsx)("div", {
                                    children: (0, a.jsx)(r.Text, {
                                        variant: "text-md/normal",
                                        children: A.default.Messages.TWO_FA_WEBAUTHN_INTERACT_INSTRUCTIONS
                                    })
                                })]
                            }), (0, a.jsx)(r.ModalFooter, {
                                children: (0, a.jsx)(r.Button, {
                                    submitting: !0
                                })
                            })]
                        }), (0, a.jsx)(r.Slide, {
                            id: f.WebAuthnScreens.NAME,
                            children: (0, a.jsxs)("form", {
                                onSubmit: e => {
                                    e.preventDefault(), (0, N.finishRegisterWebAuthnCredential)(E, o, M).then(async () => {
                                        await (0, d.showMFASuccessModal)(!1)
                                    }).then(() => l()).catch(() => {
                                        L(A.default.Messages.ERROR_OCCURRED_TRY_AGAIN), p(f.WebAuthnScreens.INIT)
                                    })
                                },
                                children: [(0, a.jsxs)(r.ModalContent, {
                                    className: C.content,
                                    children: [(0, a.jsx)("div", {
                                        className: C.icon,
                                        children: (0, a.jsx)("img", {
                                            alt: "",
                                            src: s("637163")
                                        })
                                    }), (0, a.jsxs)("div", {
                                        children: [(0, a.jsx)(r.Text, {
                                            variant: "text-md/normal",
                                            children: A.default.Messages.TWO_FA_WEBAUTHN_NAME_INSTRUCTIONS
                                        }), (0, a.jsx)(r.TextInput, {
                                            className: C.input,
                                            value: E,
                                            onChange: e => {
                                                g(e), h(0 === e.length)
                                            },
                                            autoFocus: !0,
                                            minLength: 1
                                        })]
                                    })]
                                }), (0, a.jsxs)(r.ModalFooter, {
                                    className: C.footer,
                                    children: [(0, a.jsx)(r.Button, {
                                        type: "submit",
                                        disabled: O,
                                        children: A.default.Messages.TWO_FA_WEBAUTHN_REGISTER_FINISH
                                    }), (0, a.jsx)(r.Button, {
                                        look: r.Button.Looks.LINK,
                                        color: r.Button.Colors.PRIMARY,
                                        onClick: () => {
                                            p(f.WebAuthnScreens.INIT)
                                        },
                                        children: A.default.Messages.BACK
                                    })]
                                })]
                            })
                        })]
                    })]
                })
            }

            function h(e) {
                let {
                    onSelect: t,
                    credential: n
                } = e;
                return (0, a.jsxs)(r.Menu, {
                    navId: "webauthn-credential-actions",
                    onClose: o.closeContextMenu,
                    "aria-label": A.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
                    onSelect: t,
                    children: [(0, a.jsx)(r.MenuItem, {
                        id: "webauthn-edit-credential-".concat(n.id),
                        label: A.default.Messages.EDIT,
                        action: () => {
                            (0, r.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([s.e("99387"), s.e("804")]).then(s.bind(s, "59617"));
                                return t => (0, a.jsx)(e, {
                                    credential: n,
                                    ...t
                                })
                            })
                        }
                    }), (0, a.jsx)(r.MenuItem, {
                        id: "webauthn-delete-credential-".concat(n.id),
                        label: A.default.Messages.TWO_FA_WEBAUTHN_DELETE_CREDENTIAL,
                        color: "danger",
                        action: () => {
                            (0, N.deleteWebAuthnCredential)(n)
                        }
                    })]
                })
            }

            function R() {
                let {
                    credentials: e,
                    hasFetchedCredentials: t
                } = (0, l.useStateFromStoresObject)([g.default], () => ({
                    hasFetchedCredentials: g.default.hasFetchedCredentials(),
                    credentials: g.default.getCredentials()
                }));
                n.useEffect(() => {
                    !t && (0, N.fetchWebAuthnCredentials)()
                }, [t]);
                let [s, i] = n.useState(!1);
                return (0, a.jsxs)(r.FormSection, {
                    title: A.default.Messages.TWO_FA_WEBAUTHN_TITLE,
                    className: C.settings,
                    children: [(0, a.jsx)(r.FormText, {
                        type: r.FormText.Types.DESCRIPTION,
                        className: C.description,
                        children: A.default.Messages.TWO_FA_WEBAUTHN_DESCRIPTION
                    }), e.length > 0 && (0, a.jsx)("div", {
                        className: C.credentialList,
                        children: e.map(e => (0, a.jsx)(S.default, {
                            avatar: null,
                            name: e.name,
                            className: C.credentialItem,
                            onContextMenu: t => {
                                (0, o.openContextMenu)(t, t => (0, a.jsx)(h, {
                                    ...t,
                                    credential: e
                                }))
                            },
                            children: (0, a.jsx)(r.Button, {
                                look: r.Button.Looks.BLANK,
                                color: r.Button.Colors.TRANSPARENT,
                                size: r.Button.Sizes.ICON,
                                onClick: t => {
                                    (0, o.openContextMenu)(t, t => (0, a.jsx)(h, {
                                        ...t,
                                        credential: e
                                    }))
                                },
                                "aria-label": A.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
                                innerClassName: C.credentialOptions,
                                children: (0, a.jsx)(c.default, {
                                    className: C.__invalid_overflowIcon,
                                    foreground: C.__invalid_overflowIconFg,
                                    "aria-hidden": !0
                                })
                            })
                        }, e.id))
                    }), (0, a.jsx)("div", {
                        children: (0, a.jsx)(r.Button, {
                            onClick: () => {
                                i(!0), (0, N.startRegisterWebAuthnCredential)().then(e => {
                                    let {
                                        ticket: t,
                                        challenge: s
                                    } = e;
                                    (0, r.openModal)(e => (0, a.jsx)(O, {
                                        ...e,
                                        ticket: t,
                                        challenge: s
                                    }))
                                }).catch(e => {
                                    e.message !== A.default.Messages.MFA_V2_CANCELED && _.default.captureException(e)
                                }).finally(() => {
                                    i(!1)
                                })
                            },
                            submitting: s,
                            disabled: !E.hasWebAuthn,
                            size: r.Button.Sizes.SMALL,
                            children: A.default.Messages.TWO_FA_WEBAUTHN_REGISTER
                        })
                    })]
                })
            }
        },
        15887: function(e, t, s) {
            "use strict";
            s.r(t);
            var a, n = s("735250"),
                i = s("470079"),
                l = s("120356"),
                r = s.n(l),
                o = s("285952"),
                d = s("533730");

            function u(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }
            class c extends(a = i.PureComponent) {
                render() {
                    let {
                        children: e,
                        className: t,
                        onMouseEnter: s,
                        onMouseLeave: a
                    } = this.props;
                    return (0, n.jsx)("div", {
                        className: r()(d.card, t),
                        onMouseEnter: s,
                        onMouseLeave: a,
                        children: e
                    })
                }
            }
            u(c, "Header", e => {
                let {
                    children: t,
                    className: s,
                    splashArtURL: a
                } = e;
                return (0, n.jsxs)(o.default, {
                    className: r()(d.header, s),
                    align: o.default.Align.CENTER,
                    children: [(0, n.jsx)("div", {
                        className: d.splashArt,
                        style: null != a ? {
                            backgroundImage: "url(".concat(a, ")")
                        } : void 0
                    }), t]
                })
            }), u(c, "Body", e => {
                let {
                    children: t,
                    className: s
                } = e;
                return (0, n.jsx)("div", {
                    className: r()(d.body, s),
                    children: t
                })
            }), t.default = c
        },
        504884: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                RecordModes: function() {
                    return a
                }
            }), s("47120");
            var a, n, i = s("735250"),
                l = s("470079"),
                r = s("120356"),
                o = s.n(r),
                d = s("879443"),
                u = s.n(d),
                c = s("392711"),
                S = s.n(c),
                E = s("481060"),
                T = s("13140"),
                _ = s("285952"),
                I = s("689938"),
                N = s("345757");

            function g(e, t, s) {
                return t in e ? Object.defineProperty(e, t, {
                    value: s,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = s, e
            }(n = a || (a = {})).DEFAULT = "DEFAULT", n.RECORDING = "RECORDING";
            let f = {
                DEFAULT: N.__invalid_default,
                RECORDING: N.recording
            };
            class m extends l.PureComponent {
                componentWillUnmount() {
                    null != this._unregisterNativeRecorder && this._unregisterNativeRecorder()
                }
                componentDidUpdate(e) {
                    let {
                        mode: t
                    } = this.props, {
                        mode: s
                    } = e;
                    if (s === t) return;
                    let {
                        _inputRef: a
                    } = this;
                    if (null == a.current) return;
                    let {
                        activeElement: n
                    } = document;
                    "DEFAULT" === t && a.current === n && a.current.blur(), "RECORDING" === t && a.current !== n && a.current.focus()
                }
                render() {
                    let e;
                    let {
                        mode: t,
                        value: s,
                        disabled: a
                    } = this.props, n = (0, T.toString)(s, !0);
                    e = "RECORDING" === t ? I.default.Messages.SHORTCUT_RECORDER_BUTTON_RECORDING : 0 === s.length ? I.default.Messages.SHORTCUT_RECORDER_BUTTON : I.default.Messages.SHORTCUT_RECORDER_BUTTON_EDIT;
                    let l = "DEFAULT" === t && s.length > 0;
                    return (0, i.jsx)(E.FocusRing, {
                        focusTarget: this._inputRef,
                        ringTarget: this._containerRef,
                        children: (0, i.jsx)("div", {
                            onClick: this.handleClick,
                            onMouseDown: this.handleMouseDown,
                            ref: this._containerRef,
                            className: o()(N.container, f[t], {
                                [N.hasValue]: l,
                                [N.disabled]: a
                            }),
                            children: (0, i.jsxs)(_.default, {
                                className: N.layout,
                                children: [(0, i.jsx)(_.default.Child, {
                                    className: N.input,
                                    children: (0, i.jsx)("input", {
                                        id: this._inputId,
                                        placeholder: I.default.Messages.SHORTCUT_RECORDER_NO_BIND,
                                        type: "text",
                                        ref: this.setInputRef,
                                        readOnly: !0,
                                        value: n,
                                        disabled: "RECORDING" !== this.props.mode || a
                                    })
                                }), (0, i.jsx)(_.default, {
                                    shrink: 1,
                                    grow: 0,
                                    style: {
                                        margin: 0
                                    },
                                    children: (0, i.jsxs)(E.Button, {
                                        className: N.button,
                                        disabled: a,
                                        onClick: e => {
                                            e.stopPropagation(), e.preventDefault(), this.handleClick(e)
                                        },
                                        size: E.Button.Sizes.MIN,
                                        color: E.ButtonColors.PRIMARY,
                                        children: [(0, i.jsx)("span", {
                                            className: N.text,
                                            children: e
                                        }), (0, i.jsx)("span", {
                                            className: N.editIcon
                                        })]
                                    })
                                })]
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), g(this, "_inputId", S().uniqueId("key-recorder-")), g(this, "_unregisterNativeRecorder", null), g(this, "_mousedownMode", null), g(this, "_inputRef", l.createRef()), g(this, "_containerRef", l.createRef()), g(this, "setInputRef", e => {
                        var t;
                        let {
                            registerNativeRecorder: s,
                            onChange: a
                        } = this.props;
                        this._inputRef.current = e, null === (t = this._unregisterNativeRecorder) || void 0 === t || t.call(this), null != e && (null != s && null != a ? this._unregisterNativeRecorder = s(e.id, a) : null != a && (new(u())(e).handleKey = a))
                    }), g(this, "handleClick", e => {
                        e.stopPropagation(), e.preventDefault();
                        let {
                            onClick: t,
                            disableOnClickWhileRecording: s
                        } = this.props;
                        (!s || "RECORDING" !== this._mousedownMode) && t()
                    }), g(this, "handleMouseDown", () => {
                        this._mousedownMode = this.props.mode
                    })
                }
            }
            t.default = m
        },
        755596: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("481060"),
                i = s("86813"),
                l = s("861559");
            t.default = e => {
                let {
                    label: t,
                    onClick: s,
                    submitting: r
                } = e;
                return (0, a.jsx)(n.Clickable, {
                    onClick: r ? void 0 : s,
                    className: l.button,
                    children: (0, a.jsxs)("div", {
                        className: l.contentContainer,
                        children: [r ? (0, a.jsx)(n.Spinner, {
                            type: n.Spinner.Type.PULSING_ELLIPSIS,
                            className: l.__invalid_spinner
                        }) : (0, a.jsx)(n.Text, {
                            variant: "text-md/medium",
                            className: l.label,
                            children: t
                        }), (0, a.jsx)(i.default, {
                            className: l.arrow
                        })]
                    })
                })
            }
        },
        662435: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("960259"),
                i = s("124702"),
                l = s("325767");
            t.default = (0, n.replaceIcon)(function(e) {
                let {
                    width: t = 16,
                    height: s = 16,
                    color: n = "currentColor",
                    className: i,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    className: i,
                    width: t,
                    height: s,
                    viewBox: "0 0 16 16",
                    ...(0, l.default)(o),
                    children: (0, a.jsxs)("g", {
                        fill: "none",
                        fillRule: "evenodd",
                        children: [(0, a.jsx)("path", {
                            className: r,
                            fill: n,
                            d: "M0,1.99406028 C0,0.892771196 0.894513756,0 1.99406028,0 L14.0059397,0 C15.1072288,0 16,0.894513756 16,1.99406028 L16,14.0059397 C16,15.1072288 15.1054862,16 14.0059397,16 L1.99406028,16 C0.892771196,16 0,15.1054862 0,14.0059397 L0,1.99406028 Z M8.23182341,16 L10.3991764,16 L10.3991764,9.93141161 L12.5663127,9.93141161 L13,7.76405862 L10.3991764,7.76405862 L10.3246195,6.3468265 C10.3246195,5.66107601 10.5049432,5.17342158 11.4698488,5.17342158 L12.974642,5.17385505 L12.974642,3.12202197 C12.7618079,3.09319618 12.3142495,3 11.4644304,3 C9.69001851,3 8.18500859,4.20353112 8.18500859,6.23043964 L8.23182341,7.76405862 L6.06425368,7.76405862 L6.06425368,9.93141161 L8.23182341,9.93141161 L8.23182341,16 Z"
                        }), (0, a.jsx)("rect", {
                            width: "16",
                            height: "16"
                        })]
                    })
                })
            }, i.FacebookIcon, void 0, {
                size: 16
            })
        },
        464198: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("960259"),
                i = s("581674"),
                l = s("325767");
            t.default = (0, n.replaceIcon)(function(e) {
                let {
                    width: t = 16,
                    height: s = 16,
                    color: n = "currentColor",
                    className: i,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    className: i,
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    viewBox: "0 0 16 16",
                    ...(0, l.default)(o),
                    children: (0, a.jsxs)("g", {
                        fill: "none",
                        fillRule: "evenodd",
                        children: [(0, a.jsx)("path", {
                            className: r,
                            fill: n,
                            d: "M4.70012698,0.0531746 C3.84888888,0.092 3.2675238,0.22720635 2.7588254,0.42492063 C2.23292063,0.62926983 1.78692063,0.90273016 1.3422857,1.34733333 C0.89768254,1.79196825 0.62422222,2.23796825 0.41987302,2.76387303 C0.22215872,3.27257143 0.08695238,3.85393651 0.04812698,4.7051746 C0.00920635,5.55819048 0,5.83053968 0,8.00253968 C0,10.1745079 0.00920635,10.4468571 0.04812698,11.299873 C0.08695238,12.1511111 0.22215873,12.7324762 0.41987302,13.2411746 C0.62422222,13.7670794 0.89768254,14.2130794 1.34228572,14.6577143 C1.78692062,15.1023175 2.23292062,15.3757778 2.7588254,15.5801587 C3.2675238,15.7778413 3.8488889,15.9130476 4.70012698,15.951873 C5.55314286,15.9907937 5.82549206,16 7.99749206,16 C10.1694603,16 10.4418095,15.9907937 11.2948254,15.951873 C12.1460635,15.9130476 12.7274286,15.7778413 13.236127,15.5801587 C13.7620317,15.3757778 14.2080317,15.1023175 14.6526667,14.6577143 C15.0972698,14.2130794 15.3707302,13.7670794 15.5751111,13.2411746 C15.7727937,12.7324762 15.908,12.1511111 15.9468254,11.299873 C15.985746,10.4468571 15.9949524,10.1745079 15.9949524,8.00253968 C15.9949524,5.83053968 15.985746,5.55819048 15.9468254,4.7051746 C15.908,3.8539365 15.7727937,3.27257143 15.5751111,2.76387302 C15.3707302,2.23796825 15.0972698,1.79196825 14.6526667,1.34733332 C14.2080317,0.90273016 13.7620317,0.62926984 13.236127,0.42492064 C12.7274286,0.22720634 12.1460635,0.092 11.2948254,0.0531746 C10.4418095,0.01425397 10.1694603,0.00504762 7.99749206,0.00504762 C5.82549206,0.00504762 5.55314286,0.01425397 4.70012698,0.0531746 L4.70012698,0.0531746 Z M8.00001453,2.00504762 C9.95416635,2.00504762 10.185649,2.01251386 10.9573741,2.04772432 C11.6709381,2.08026206 12.0584565,2.19948958 12.3163471,2.29971739 C12.6579641,2.43248289 12.9017646,2.59107525 13.157854,2.84719363 C13.4139723,3.10328295 13.5725647,3.34708347 13.7053302,3.68870053 C13.805558,3.94659105 13.9247856,4.33410953 13.9573233,5.04767346 C13.9925338,5.8193986 14,6.05088127 14,8.00506213 C14,9.95921396 13.9925338,10.1906966 13.9573233,10.9624217 C13.9247856,11.6759857 13.805558,12.0635042 13.7053302,12.3213947 C13.5725647,12.6630117 13.4139723,12.9068123 13.157854,13.1629016 C12.9017646,13.41902 12.6579641,13.5776123 12.3163471,13.7103779 C12.0584565,13.8106057 11.6709381,13.9298332 10.9573741,13.9623709 C10.1857652,13.9975814 9.9543116,14.0050476 8.00001453,14.0050476 C6.04568839,14.0050476 5.81426383,13.9975814 5.04262587,13.9623709 C4.32906195,13.9298332 3.94154347,13.8106057 3.68365294,13.7103779 C3.34203588,13.5776123 3.09823536,13.41902 2.84214604,13.1629016 C2.58605671,12.9068123 2.42743531,12.6630117 2.29466977,12.3213947 C2.19444197,12.0635042 2.07521444,11.6759857 2.04267671,10.9624217 C2.00746628,10.1906966 2,9.95921395 2,8.00506212 C2,6.05088125 2.00746625,5.81939858 2.0426767,5.04767347 C2.07521444,4.33410953 2.19444196,3.94659104 2.29466977,3.68870052 C2.42743531,3.34708346 2.58602767,3.10328294 2.84214604,2.84719362 C3.09823536,2.59107524 3.34203588,2.43248288 3.68365294,2.29971735 C3.94154346,2.19948953 4.32906194,2.08026201 5.04262587,2.04772428 C5.81435097,2.01251381 6.04583365,2.00504758 8.00001453,2.00504758 L8.00001453,2.00504762 Z"
                        }), (0, a.jsx)("path", {
                            className: r,
                            fill: n,
                            d: "M8.0000119,10 C6.89542535,10 6,9.10457466 6,8.0000119 C6,6.89542535 6.89542534,6 8.0000119,6 C9.10457467,6 10,6.89542534 10,8.0000119 C10,9.10457467 9.10457466,10 8.0000119,10 L8.0000119,10 Z M8.00001546,4 C5.7908468,4 4,5.7908468 4,8.00001546 C4,10.2091532 5.7908468,12 8.00001546,12 C10.2091532,12 12,10.2091532 12,8.00001546 C12,5.7908468 10.2091532,4 8.00001546,4 L8.00001546,4 Z M13,4.00001654 C13,4.55230644 12.5522734,5 11.9999835,5 C11.4477266,5 11,4.55230645 11,4.00001654 C11,3.44772664 11.4477266,3 11.9999835,3 C12.5522734,3 13,3.44772663 13,4.00001654 L13,4.00001654 Z"
                        }), (0, a.jsx)("rect", {
                            width: "16",
                            height: "16"
                        })]
                    })
                })
            }, i.InstagramIcon, void 0, {
                size: 16
            })
        },
        447293: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("325767");
            t.default = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: i = "currentColor",
                    className: l,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    width: t,
                    height: s,
                    viewBox: "0 0 24 24",
                    className: l,
                    ...(0, n.default)(o),
                    children: (0, a.jsx)("path", {
                        className: r,
                        fill: i,
                        d: "M17.836 6.009A4.794 4.794 0 0 1 15.658 2h-3.439l-.005 13.78a2.892 2.892 0 0 1-2.885 2.782 2.893 2.893 0 0 1-2.89-2.89 2.894 2.894 0 0 1 2.89-2.89c.298 0 .583.048.853.133v-3.51a6.308 6.308 0 0 0-.853-.062A6.336 6.336 0 0 0 3 15.672a6.324 6.324 0 0 0 2.702 5.181A6.29 6.29 0 0 0 9.329 22a6.336 6.336 0 0 0 6.329-6.329V8.683c1.348.968 3 1.539 4.784 1.539V6.783c-.96 0-1.855-.285-2.605-.775v.001Z"
                    })
                })
            }
        },
        58839: function(e, t, s) {
            "use strict";
            s.r(t);
            var a = s("735250");
            s("470079");
            var n = s("325767");
            t.default = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: i = "currentColor",
                    className: l,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    width: t,
                    height: s,
                    viewBox: "0 0 24 24",
                    className: l,
                    ...(0, n.default)(o),
                    children: (0, a.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M21.3766 4.10479C22.4093 4.38257 23.2225 5.20102 23.4985 6.24038C24 8.12411 24 12.0545 24 12.0545C24 12.0545 24 15.9848 23.4985 17.8688C23.2225 18.908 22.4093 19.7265 21.3766 20.0044C19.505 20.5091 12 20.5091 12 20.5091C12 20.5091 4.49496 20.5091 2.62336 20.0044C1.59082 19.7265 0.777545 18.908 0.501545 17.8688C0 15.9848 0 12.0545 0 12.0545C0 12.0545 0 8.12411 0.501545 6.24038C0.777545 5.20102 1.59082 4.38257 2.62336 4.10479C4.49496 3.59998 12 3.59998 12 3.59998C12 3.59998 19.505 3.59998 21.3766 4.10479ZM15.8182 12.0546L9.54551 15.623V8.48596L15.8182 12.0546Z",
                        fill: i,
                        className: r
                    })
                })
            }
        },
        739563: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("735250"),
                n = s("470079"),
                i = s("120356"),
                l = s.n(i),
                r = s("481060"),
                o = s("783014"),
                d = s("981631"),
                u = s("689938"),
                c = s("713265"),
                S = s("611273");
            let E = 0,
                T = () => "notification-position-selector-".concat(E++),
                _ = e => {
                    switch (e) {
                        case d.OverlayNotificationPositions.TOP_LEFT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_LEFT;
                        case d.OverlayNotificationPositions.TOP_RIGHT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_RIGHT;
                        case d.OverlayNotificationPositions.BOTTOM_LEFT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_LEFT;
                        case d.OverlayNotificationPositions.BOTTOM_RIGHT:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_RIGHT;
                        default:
                            return u.default.Messages.OVERLAY_NOTIFICATIONS_DISABLED
                    }
                },
                I = [d.OverlayNotificationPositions.DISABLED, d.OverlayNotificationPositions.TOP_LEFT, d.OverlayNotificationPositions.TOP_RIGHT, d.OverlayNotificationPositions.BOTTOM_LEFT, d.OverlayNotificationPositions.BOTTOM_RIGHT];

            function N(e) {
                let {
                    position: t,
                    onChange: s
                } = e, [i] = n.useState(() => T()), E = t === d.OverlayNotificationPositions.DISABLED ? u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_DISABLED : u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_POSITION.format({
                    position: _(t)
                });
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(r.FocusRing, {
                        within: !0,
                        offset: -2,
                        children: (0, a.jsx)("div", {
                            className: l()(c.wrapper, {
                                [c.disabledSelected]: t === d.OverlayNotificationPositions.DISABLED
                            }),
                            children: I.map(e => (0, a.jsxs)("label", {
                                className: l()({
                                    [c.selected]: e === t,
                                    [c.disabled]: e === d.OverlayNotificationPositions.DISABLED,
                                    [c.topRight]: e === d.OverlayNotificationPositions.TOP_RIGHT,
                                    [c.topLeft]: e === d.OverlayNotificationPositions.TOP_LEFT,
                                    [c.bottomRight]: e === d.OverlayNotificationPositions.BOTTOM_RIGHT,
                                    [c.bottomLeft]: e === d.OverlayNotificationPositions.BOTTOM_LEFT
                                }),
                                children: [_(e), e === d.OverlayNotificationPositions.DISABLED ? (0, a.jsx)(o.default, {
                                    className: c.disabledIcon
                                }) : null, (0, a.jsx)("input", {
                                    type: "radio",
                                    name: i,
                                    value: e,
                                    onChange: t => s(t, e),
                                    className: c.hiddenInput
                                })]
                            }, e))
                        })
                    }), (0, a.jsx)(r.FormText, {
                        type: r.FormTextTypes.DESCRIPTION,
                        className: S.marginTop8,
                        children: E
                    })]
                })
            }
            N.Positions = d.OverlayNotificationPositions, t.default = N
        },
        218872: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                formatExpiration: function() {
                    return n
                }
            }), s("757143"), s("653041");
            let a = /[^0-9/]/g;

            function n(e) {
                let t = e.replace(a, "").split("/"),
                    s = t[0],
                    n = t[1],
                    i = [];
                return parseInt(s, 10) > 12 && (s = s.substring(0, 1)), i.push(s), (parseInt(s, 10) > 1 || 2 === s.length || null != n && "" !== n) && i.push("/"), null != n && "" !== n && parseInt(n, 10) > 99 && (n = (n + "").substring(0, 2)), i.push(n), i.join("")
            }
        },
        499533: function(e, t, s) {
            "use strict";
            s.r(t), s("47120");
            var a = s("392711"),
                n = s.n(a),
                i = s("492435"),
                l = s("353926"),
                r = s("987338");

            function o(e) {
                for (let t of e) {
                    let e = l.default.getUserExperimentDescriptor(t);
                    if (null != e) return [t, e]
                }
                return null
            }
            t.default = {
                getFirstEligibleUserExperiment: o,
                isInExperimentBucket: function(e, t) {
                    return l.default.getUserExperimentBucket(e) === t
                },
                experimentDescriptorEquals: function(e, t) {
                    if (null == e && null == t || e === t) return !0;
                    if (null == e && null != t || null != e && null == t) return !1;
                    if (null != e && null != t) {
                        if (e.type !== t.type || e.bucket !== t.bucket || e.revision !== t.revision) return !1;
                        if (e.type === r.ExperimentTypes.USER && t.type === r.ExperimentTypes.USER) return n().isEqual(e.context, t.context)
                    }
                    return !0
                },
                trackExposureToFirstEligibleUserExperiment: function(e) {
                    let t = o(e);
                    if (null != t) {
                        let [e, s] = t;
                        return (0, i.trackExposureToExperiment)(e, s), s
                    }
                },
                getExperimentBucketName: function(e) {
                    let t;
                    return t = e === r.ExperimentBuckets.CONTROL ? "Control" : e === r.ExperimentBuckets.NOT_ELIGIBLE ? "Not Eligible" : "Treatment ".concat(e)
                }
            }
        },
        490529: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                getHouseNameFromHouseID: function() {
                    return E
                },
                getQuestions: function() {
                    return S
                },
                getRandomHouse: function() {
                    return r
                }
            }), s("653041");
            var a = s("512722"),
                n = s.n(a),
                i = s("981631"),
                l = s("689938");
            let r = () => {
                    let e = Object.keys(i.HypeSquadHouses);
                    return e[Math.floor(Math.random() * e.length)]
                },
                o = () => {
                    let e = [];
                    for (; e.length < 5;) {
                        let t = Math.floor(15 * Math.random());
                        !e.includes(t) && e.push(t)
                    }
                    return e
                },
                d = () => [l.default.Messages.HYPESQUAD_QUESTION_0_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_1_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_2_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_3_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_4_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_5_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_6_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_7_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_8_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_9_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_10_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_11_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_12_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_13_PROMPT, l.default.Messages.HYPESQUAD_QUESTION_14_PROMPT],
                u = () => [
                    [l.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_D],
                    [l.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_A, l.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_B, l.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_C, l.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_D]
                ],
                c = () => [i.HypeSquadHouses.HOUSE_1, i.HypeSquadHouses.HOUSE_2, i.HypeSquadHouses.HOUSE_3, i.RANDOM_HYPESQUAD_HOUSE],
                S = () => {
                    let e = c(),
                        t = d(),
                        s = u();
                    return o().map(a => {
                        let i = t[a],
                            l = s[a];
                        return n()(null != i && null != l, "Invalid HypeSquad quiz question index"), {
                            prompt: i,
                            options: l.map((t, s) => {
                                let a = e[s];
                                return n()(null !== a, "Invalid HypeSquad quiz question option index"), {
                                    copy: t,
                                    house: a
                                }
                            })
                        }
                    })
                },
                E = e => ({
                    [i.HypeSquadHouses.HOUSE_1]: l.default.Messages.HYPESQUAD_HOUSE_1,
                    [i.HypeSquadHouses.HOUSE_2]: l.default.Messages.HYPESQUAD_HOUSE_2,
                    [i.HypeSquadHouses.HOUSE_3]: l.default.Messages.HYPESQUAD_HOUSE_3
                })[e]
        },
        88658: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                NonSpamRetrainingOptInOptions: function() {
                    return n
                },
                NonSpamRetrainingOptInOptionsToValue: function() {
                    return N
                },
                computeFlags: function() {
                    return _
                },
                generateNonSpamRetrainingOptInSettingOptions: function() {
                    return g
                },
                getSanitizedActivityJoiningRestrictedGuilds: function() {
                    return T
                },
                getSanitizedActivityRestrictedGuilds: function() {
                    return E
                },
                getSanitizedMessageRequestRestrictedGuilds: function() {
                    return S
                },
                getSanitizedRestrictedGuilds: function() {
                    return c
                },
                harvestDisabled: function() {
                    return I
                }
            });
            var a, n, i = s("695346"),
                l = s("486472"),
                r = s("430824");
            s("626135");
            var o = s("981631"),
                d = s("689938");
            let u = 864e5 * o.REQUEST_DATA_LIMIT_DAYS;

            function c() {
                let e = i.RestrictedGuildIds.getSetting();
                return 0 === l.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function S() {
                let e = i.MessageRequestRestrictedGuildIds.getSetting();
                return 0 === l.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function E() {
                let e = i.ActivityRestrictedGuilds.getSetting();
                return 0 === l.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function T() {
                let e = i.ActivityJoiningRestrictedGuilds.getSetting();
                return 0 === l.default.totalUnavailableGuilds && (e = e.filter(e => null != r.default.getGuild(e))), e
            }

            function _(e) {
                return (e & o.AllFriendSourceFlags) === o.AllFriendSourceFlags ? {
                    all: !0,
                    mutualFriends: !0,
                    mutualGuilds: !0
                } : {
                    all: !1,
                    mutualFriends: (e & o.FriendSourceFlags.MUTUAL_FRIENDS) === o.FriendSourceFlags.MUTUAL_FRIENDS,
                    mutualGuilds: (e & o.FriendSourceFlags.MUTUAL_GUILDS) === o.FriendSourceFlags.MUTUAL_GUILDS
                }
            }

            function I(e, t) {
                return !t.verified || null != e && u > Date.now() - new Date(e.created_at).getTime()
            }(a = n || (n = {}))[a.UNDECIDED = 0] = "UNDECIDED", a[a.OPTIN = 1] = "OPTIN", a[a.OPTOUT = 2] = "OPTOUT";
            let N = {
                0: void 0,
                1: !0,
                2: !1
            };

            function g() {
                return [{
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_DESC,
                    value: 1
                }, {
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_DESC,
                    value: 2
                }, {
                    name: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_HEADER,
                    desc: d.default.Messages.PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_DESC,
                    value: 0
                }]
            }
        },
        101205: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                FacebookIcon: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("692547"),
                i = s("331595");
            let l = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: l = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, i.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        d: "M23 12a11 11 0 1 0-12.72 10.87v-7.69h-2.8V12h2.8V9.58c0-2.76 1.64-4.28 4.16-4.28 1.2 0 2.46.21 2.46.21v2.7H15.5c-1.37 0-1.8.86-1.8 1.73V12h3.06l-.49 3.18h-2.56v7.69A11 11 0 0 0 23 12Z",
                        className: r
                    })
                })
            }
        },
        883065: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                InstagramIcon: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("692547"),
                i = s("331595");
            let l = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: l = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, i.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        fillRule: "evenodd",
                        d: "M7 12a5 5 0 1 1 10 0 5 5 0 0 1-10 0Zm5-3a3 3 0 1 0 0 6 3 3 0 0 0 0-6Z",
                        clipRule: "evenodd",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        d: "M17.25 8a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        fillRule: "evenodd",
                        d: "M7.86 2.07a7.3 7.3 0 0 0-2.43.47A4.9 4.9 0 0 0 3.66 3.7a4.9 4.9 0 0 0-1.15 1.77 7.35 7.35 0 0 0-.46 2.43C2.01 8.96 2 9.3 2 12.02c0 2.71.02 3.06.07 4.12.05 1.07.22 1.8.47 2.43.26.66.6 1.21 1.16 1.77.55.55 1.11.9 1.77 1.15.64.24 1.36.41 2.43.46 1.06.04 1.4.05 4.12.05 2.71 0 3.06-.02 4.12-.07a6.14 6.14 0 0 0 4.2-1.63 6.15 6.15 0 0 0 1.6-4.2c.05-1.06.06-1.4.06-4.12 0-2.71-.02-3.05-.07-4.12a6.15 6.15 0 0 0-1.63-4.2 6.14 6.14 0 0 0-4.2-1.6C15.04 2 14.7 2 11.98 2c-2.71 0-3.05.02-4.12.07Zm.1 2c-.88.04-1.39.17-1.8.33a2.9 2.9 0 0 0-1.08.7 2.9 2.9 0 0 0-.7 1.09c-.16.4-.29.92-.33 1.8A68.6 68.6 0 0 0 4 12.01c0 2.7.02 3 .07 4.03.04.87.17 1.38.33 1.79.17.42.36.73.7 1.08.35.34.67.54 1.09.7.41.16.92.29 1.8.33 1.01.04 1.32.05 4.03.05 2.7 0 3-.02 4.03-.07 1.28-.06 2.23-.4 2.87-1.04.64-.64.97-1.6 1.03-2.87.04-1.02.05-1.33.05-4.04 0-2.7-.02-3-.07-4.03-.06-1.28-.4-2.23-1.04-2.87-.64-.64-1.6-.97-2.87-1.03A69.44 69.44 0 0 0 11.98 4c-2.7 0-3 .02-4.02.07Z",
                        clipRule: "evenodd",
                        className: r
                    })]
                })
            }
        },
        490748: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                LightbulbIcon: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("692547"),
                i = s("331595");
            let l = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: l = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, i.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        d: "M4 8.5C4 4.36 7.58 1 12 1s8 3.36 8 7.5c0 2.64-.98 4.02-1.9 5.33-.49.7-.96 1.38-1.27 2.2C16.45 17.09 15.6 18 14.5 18h-1a.5.5 0 0 1-.5-.5v-5.77c0-.32.3-.56.6-.44.29.12.53.27.72.44a1 1 0 0 0 1.36-1.46A5.46 5.46 0 0 0 12 9c-1.3 0-2.72.37-3.68 1.27a1 1 0 1 0 1.36 1.46c.19-.17.43-.32.73-.44s.59.12.59.44v5.77a.5.5 0 0 1-.5.5h-1c-1.1 0-1.95-.92-2.33-1.96-.3-.83-.78-1.5-1.27-2.2C4.98 12.51 4 11.13 4 8.5ZM15.1 19c.5 0 .9.4.9.9 0 .7-.28 1.38-.78 1.88l-.34.34a3 3 0 0 1-2.12.88h-1.52a3 3 0 0 1-2.12-.88l-.34-.34c-.5-.5-.78-1.18-.78-1.89 0-.5.4-.89.9-.89h6.2Z",
                        className: r
                    })
                })
            }
        },
        683692: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                ScreenSystemRequirementsIcon: function() {
                    return l
                }
            });
            var a = s("735250");
            s("470079");
            var n = s("692547"),
                i = s("331595");
            let l = e => {
                let {
                    width: t = 24,
                    height: s = 24,
                    color: l = n.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, i.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: s,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        d: "M9 9V7h2v2H9ZM13 9v2h-2V9h2ZM9 9v2H7V9h2ZM13 9h2v2h2V9h-2V7h-2v2Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        fillRule: "evenodd",
                        d: "M2 5a3 3 0 0 1 3-3h14a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V5Zm3 0h2v2H5V5Zm4 2H7v2H5v2h2v2h2v-2h2v2h2v-2h2v2h2v-2h2V9h-2V7h2V5h-2v2h-2V5h-2v2h-2V5H9v2Z",
                        clipRule: "evenodd",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof l ? l : l.css,
                        d: "M13 19.5c0 .28.22.5.5.5H15a1 1 0 1 1 0 2H9a1 1 0 1 1 0-2h1.5a.5.5 0 0 0 .5-.5v-2c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v2Z",
                        className: r
                    })]
                })
            }
        },
        173511: function(e, t, s) {
            "use strict";
            s.r(t), s.d(t, {
                TEXT_VARIANT: function() {
                    return a
                }
            });
            let a = ["heading-sm/normal", "heading-sm/medium", "heading-sm/semibold", "heading-sm/bold", "heading-sm/extrabold", "heading-md/normal", "heading-md/medium", "heading-md/semibold", "heading-md/bold", "heading-md/extrabold", "heading-lg/normal", "heading-lg/medium", "heading-lg/semibold", "heading-lg/bold", "heading-lg/extrabold", "heading-xl/normal", "heading-xl/medium", "heading-xl/semibold", "heading-xl/bold", "heading-xl/extrabold", "heading-xxl/normal", "heading-xxl/medium", "heading-xxl/semibold", "heading-xxl/bold", "heading-xxl/extrabold", "eyebrow", "heading-deprecated-12/normal", "heading-deprecated-12/medium", "heading-deprecated-12/semibold", "heading-deprecated-12/bold", "heading-deprecated-12/extrabold", "redesign/heading-18/bold", "text-xxs/normal", "text-xxs/medium", "text-xxs/semibold", "text-xxs/bold", "text-xs/normal", "text-xs/medium", "text-xs/semibold", "text-xs/bold", "text-sm/normal", "text-sm/medium", "text-sm/semibold", "text-sm/bold", "text-md/normal", "text-md/medium", "text-md/semibold", "text-md/bold", "text-lg/normal", "text-lg/medium", "text-lg/semibold", "text-lg/bold", "redesign/message-preview/normal", "redesign/message-preview/medium", "redesign/message-preview/semibold", "redesign/message-preview/bold", "redesign/channel-title/normal", "redesign/channel-title/medium", "redesign/channel-title/semibold", "redesign/channel-title/bold", "display-sm", "display-md", "display-lg", "code"]
        },
        159277: function(e, t, s) {
            "use strict";
            var a, n;
            s.r(t), s.d(t, {
                ConsoleOAuthApplications: function() {
                    return a
                },
                ConsoleOAuthApplicationsSets: function() {
                    return i
                }
            }), s("47120"), (n = a || (a = {})).XBOX_APPLICATION_ID = "622174530214821906", n.PLAYSTATION_APPLICATION_ID = "1008890872156405890", n.PLAYSTATION_STAGING_APPLICATION_ID = "984193235868065795";
            let i = {
                PLAYSTATION_APPLICATION_IDS: new Set(["984193235868065795", "1008890872156405890"]),
                ALL: new Set(["622174530214821906", "984193235868065795", "1008890872156405890"])
            }
        }
    }
]);
//# sourceMappingURL=ff998f6594d7ad6b1272.js.map