// File name: 5306a6f22925ecbceec7.js

(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["94864"], {
        863181: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c7abbedded96f1f8394f.svg"
        },
        466389: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fb241eb8d6962f9246be.svg"
        },
        943935: function(e, t, n) {
            "use strict";
            e.exports = n.p + "468655ad1c18b48efa5c.svg"
        },
        126888: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6888b24dba5c5984ad81.svg"
        },
        356634: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d0f702aca4098329ef14.svg"
        },
        459505: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1eadae118e0c918f2dcc.svg"
        },
        67764: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a53534212f318473a92f.svg"
        },
        900933: function(e, t, n) {
            "use strict";
            e.exports = n.p + "08f1deaffba0a7e218c6.svg"
        },
        917847: function(e, t, n) {
            "use strict";
            e.exports = n.p + "50d3eff7de09d288e327.svg"
        },
        55346: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27463004b38b7912608f.svg"
        },
        138715: function(e, t, n) {
            "use strict";
            e.exports = n.p + "68691bc51a5e2da8e8cf.svg"
        },
        979770: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8260cd6ea712a137b7fb.svg"
        },
        755386: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1da2b0b35c6c13e76f69.svg"
        },
        589148: function(e, t, n) {
            "use strict";
            e.exports = n.p + "263a0eec30014a29065d.svg"
        },
        511189: function(e, t, n) {
            "use strict";
            e.exports = n.p + "29ea3610954ecb316440.svg"
        },
        510342: function(e, t, n) {
            "use strict";
            e.exports = n.p + "24453243396b5423c2f3.svg"
        },
        211827: function(e, t, n) {
            "use strict";
            e.exports = n.p + "84019759c0b191364e10.svg"
        },
        497726: function(e, t, n) {
            "use strict";
            e.exports = n.p + "072d6b2d92501ce54cb3.svg"
        },
        839999: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1799cdf9e723c95278e6.svg"
        },
        127869: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f0b100f727ca7944d3c7.svg"
        },
        571472: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e96f93887696ffe54524.svg"
        },
        241626: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f181b348f55e50fb59a8.svg"
        },
        932478: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e4f2e7e50bd1ff049a3f.svg"
        },
        449757: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b4c7df133f2b206d0cdc.svg"
        },
        32634: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ca7a2d0b3ed78b9a34f6.svg"
        },
        292824: function(e, t, n) {
            "use strict";
            e.exports = n.p + "80e7ca7e0070473415b5.svg"
        },
        457115: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fd4c188cb0425a862c25.svg"
        },
        216522: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8de28552d274e387f740.png"
        },
        157476: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9e2d0e2aaf624ba30285.png"
        },
        259219: function(e, t, n) {
            "use strict";
            e.exports = n.p + "181e2f1adb397c8087a5.svg"
        },
        345480: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e0c79bc3b70499ed1610.svg"
        },
        236613: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b63fba8b6ef3b30580e8.svg"
        },
        368179: function(e, t, n) {
            "use strict";
            e.exports = n.p + "679d8a1ef4bba5d92f03.svg"
        },
        52518: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9bcd2aba4eefb34114f8.svg"
        },
        687351: function(e, t, n) {
            "use strict";
            e.exports = n.p + "84592476cb29ccbeb7c0.svg"
        },
        420569: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ce570f149ce9b4ee2bbd.png"
        },
        364632: function(e, t, n) {
            "use strict";
            e.exports = n.p + "73454cfdec093f49a001.svg"
        },
        586522: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6982b12c4d399172b860.svg"
        },
        837753: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f30f59bdbc948531f8f6.svg"
        },
        217110: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a8ef9c96cd9cbc3864e0.svg"
        },
        741160: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6977e55ec9f842eb5946.png"
        },
        829972: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d949d8131191e5b405e0.svg"
        },
        31932: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3bdd756580dba7afed1f.svg"
        },
        661278: function(e, t, n) {
            "use strict";
            e.exports = n.p + "44c78f01147e43a6d9cc.svg"
        },
        882977: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b2b7cf3e0823a26d77b4.svg"
        },
        297806: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0c1452b6855b89d9317f.svg"
        },
        256532: function(e, t, n) {
            "use strict";
            e.exports = n.p + "481e54fb137a402962e5.gif"
        },
        466160: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9cd379f1ca56b87f4104.png"
        },
        642301: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ff768c3dc96ae7110453.png"
        },
        788901: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4445cc321f0bd1c28eac.png"
        },
        933662: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6cb52edceb4d04290e0a.png"
        },
        146714: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1ed3b1410d848f56416e.svg"
        },
        120960: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setCertifiedDevices: function() {
                    return s
                }
            });
            var a = n("570140");

            function s(e, t) {
                a.default.dispatch({
                    type: "CERTIFIED_DEVICES_SET",
                    applicationId: e,
                    devices: t
                })
            }
        },
        949389: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hideEnablePublicGuildUpsellNotice: function() {
                    return l
                },
                hideMaxMemberCountChannelNotice: function() {
                    return i
                },
                hidePremiumGuildGracePeriodNotice: function() {
                    return s
                }
            });
            var a = n("570140");

            function s(e) {
                a.default.dispatch({
                    type: "BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "PUBLIC_UPSELL_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "MAX_MEMBER_COUNT_NOTICE_DISMISS",
                    guildId: e
                })
            }
        },
        943094: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                uninstallBranchPrompt: function() {
                    return r
                }
            });
            var a = n("481060"),
                s = n("812206"),
                l = n("710845"),
                i = n("51025");

            function r(e, t, r) {
                ! function(e, t) {
                    let i = s.default.getApplication(e);
                    if (null == i) {
                        new l.default("DispatchUninstallActionCreators").log("Application not found for game ".concat(e));
                        return
                    }(0, a.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.e("70061").then(n.bind(n, "764998"));
                        return n => e({
                            game: i,
                            onConfirmUninstall: t,
                            ...n
                        })
                    })
                }(e, () => (0, i.uninstallApplication)(e, t, r))
            }
        },
        287259: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                sortList: function() {
                    return s
                },
                updateActiveRowKey: function() {
                    return i
                },
                updateLibraryFilter: function() {
                    return l
                }
            });
            var a = n("570140");

            function s(e, t) {
                a.default.dispatch({
                    type: "LIBRARY_TABLE_SORT_UPDATE",
                    key: e,
                    direction: t
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "LIBRARY_APPLICATION_FILTER_UPDATE",
                    query: e
                })
            }

            function i(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                a.default.dispatch({
                    type: "LIBRARY_TABLE_ACTIVE_ROW_ID_UPDATE",
                    key: e,
                    isKeyboardEvent: t
                })
            }
        },
        325432: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                addInstallLocation: function() {
                    return l
                },
                fetchMetadata: function() {
                    return o
                },
                removeInstallLocation: function() {
                    return i
                },
                updateInstallLocation: function() {
                    return r
                }
            }), n("47120");
            var a = n("570140"),
                s = n("830168");

            function l(e) {
                s.default.queryDirectory(e, (t, n) => {
                    null == t && null != n && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_ADD",
                        path: e,
                        metadata: n
                    })
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_REMOVE",
                    path: e
                })
            }

            function r(e, t) {
                let {
                    label: n,
                    isDefault: s
                } = t;
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_UPDATE",
                    path: e,
                    label: n,
                    isDefault: s
                })
            }

            function o(e) {
                let t = {},
                    n = 0;
                for (let l of e) null != l && "string" == typeof l && s.default.queryDirectory(l, (s, i) => {
                    ++n, null == s && null != i && (t[l] = i), n === e.length && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_FETCH_METADATA",
                        metadataPayload: t
                    })
                })
            }
        },
        920456: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("544891"),
                s = n("314897"),
                l = n("981631");
            t.default = {
                setUserAchievement(e, t, n) {
                    let i = s.default.getId();
                    return a.HTTP.put({
                        url: l.Endpoints.USER_ACHIEVEMENTS_FOR_USER(i, e, t),
                        body: {
                            percent_complete: n
                        },
                        oldFormErrors: !0
                    })
                },
                fetchForApplication: e => a.HTTP.get({
                    url: l.Endpoints.USER_ACHIEVEMENTS(e),
                    retries: 1,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    return t
                })
            }
        },
        785570: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                markView: function() {
                    return s
                }
            });
            var a = n("570140");

            function s(e) {
                a.default.dispatch({
                    type: "VIEW_HISTORY_MARK_VIEW",
                    key: e
                })
            }
        },
        115849: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("512722"),
                o = n.n(r),
                u = n("481060"),
                d = n("194359"),
                c = n("153124"),
                f = n("657682"),
                E = n("981631"),
                h = n("420212"),
                C = n("689938"),
                _ = n("909759"),
                m = n("611273");
            let S = {
                    canSend: !1,
                    hint: null,
                    success: null,
                    error: null
                },
                p = (0, c.uid)(),
                I = "".concat(p, "-decription"),
                g = "".concat(p, "-error");

            function T(e, t) {
                switch (t.type) {
                    case "RESET":
                        return S;
                    case "SUCCESS":
                        return {
                            ...S, success: t.text
                        };
                    case "HINT":
                        return {
                            ...S, canSend: !0, hint: t.text
                        };
                    case "ERROR":
                        return {
                            ...e, canSend: !0, error: t.text
                        }
                }
            }

            function A() {
                let e = s.createRef(),
                    t = s.createRef(),
                    [n, l] = s.useReducer(T, S),
                    {
                        canSend: r,
                        hint: c,
                        success: A,
                        error: N
                    } = n;
                return s.useEffect(() => {
                    null != A && (o()(null != e.current, "Input is submitting when not mounted"), e.current.value = "", e.current.focus())
                }, [A, e]), (0, a.jsxs)("form", {
                    onSubmit: t => {
                        t.preventDefault(), o()(null != e.current, "Input is submitted when not mounted");
                        let n = e.current.value.trim();
                        !n.includes("#") && n.startsWith("@") && (n = n.substring(1));
                        let a = (0, f.validateDiscordTag)(n);
                        if (null != a) {
                            l({
                                type: "ERROR",
                                text: a
                            });
                            return
                        }
                        d.default.sendRequest({
                            discordTag: n,
                            context: {
                                location: "Add Friend"
                            }
                        }).then(() => l({
                            type: "SUCCESS",
                            text: C.default.Messages.ADD_FRIEND_SUCCESS.format({
                                discordTag: n
                            })
                        }), e => {
                            var t;
                            return l({
                                type: "ERROR",
                                text: (0, f.humanizeAbortCode)(null === (t = e.body) || void 0 === t ? void 0 : t.code, n)
                            })
                        })
                    },
                    autoComplete: "off",
                    children: [(0, a.jsx)(u.FormText, {
                        id: I,
                        type: u.FormText.Types.DESCRIPTION,
                        children: C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION
                    }), (0, a.jsx)(u.FocusRing, {
                        focusTarget: e,
                        ringTarget: t,
                        ringClassName: _.ring,
                        children: (0, a.jsxs)("div", {
                            ref: t,
                            className: i()(_.addFriendInputWrapper, {
                                [_.success]: A,
                                [_.error]: N
                            }),
                            children: [(0, a.jsx)(u.TextInput, {
                                id: p,
                                inputRef: e,
                                className: _.addFriendInput,
                                inputClassName: _.input,
                                onKeyPress: t => {
                                    let n = t.currentTarget.value;
                                    if (t.key !== h.KeyboardEventKey.Enter && n.includes("#")) {
                                        o()(null != e.current, "Input is handling keypress when not mounted");
                                        let a = n.indexOf("#"),
                                            s = e.current.selectionStart,
                                            l = t.key === h.KeyboardEventKey.Backspace || t.key === h.KeyboardEventKey.ArrowRight || t.key === h.KeyboardEventKey.ArrowLeft,
                                            i = t.which >= 48 && t.which <= 57;
                                        null != s && s > a && /^(.+?#\d{4})$/.test(n) && !l ? t.preventDefault() : null != s && s > a && !i && !l && t.preventDefault()
                                    }
                                },
                                onChange: e => {
                                    if (e.length <= 0) {
                                        l({
                                            type: "RESET"
                                        });
                                        return
                                    }
                                    let t = "",
                                        [, n] = e.split("#");
                                    null != n && (t = e + E.PLACEHOLDER_TAG.slice(null != n ? n.length + 1 : 0)), l({
                                        type: "HINT",
                                        text: t
                                    })
                                },
                                maxLength: 37,
                                autoFocus: !0,
                                autoComplete: "off",
                                name: "add-friend",
                                "data-lpignore": !0,
                                placeholder: C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-label": C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-invalid": null != N || void 0,
                                "aria-describedby": null != N ? g : I
                            }), null != c && (0, a.jsx)("div", {
                                className: _.addFriendHint,
                                "aria-hidden": !0,
                                children: c
                            }), (0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                disabled: !r,
                                type: "submit",
                                children: C.default.Messages.ADD_FRIEND_BUTTON
                            })]
                        })
                    }), null != N && (0, a.jsx)(u.FormText, {
                        role: "alert",
                        id: g,
                        type: u.FormText.Types.ERROR,
                        className: m.marginTop8,
                        children: N
                    }), null != A && (0, a.jsx)(u.FormText, {
                        role: "status",
                        type: u.FormText.Types.SUCCESS,
                        className: m.marginTop8,
                        children: A
                    })]
                })
            }
        },
        176299: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eF
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("266067"),
                o = n("613828"),
                u = n("990547"),
                d = n("608787"),
                c = n("873546"),
                f = n("442837"),
                E = n("481060"),
                h = n("711237"),
                C = n("532835"),
                _ = n("290297"),
                m = n("918854"),
                S = n("279240"),
                p = n("765717"),
                I = n("358221"),
                g = n("823748"),
                T = n("626421"),
                A = n("118379"),
                N = n("652515"),
                v = n("544978"),
                R = n("194729"),
                O = n("668940"),
                L = n("372900"),
                P = n("6039"),
                y = n("637853"),
                M = n("326145"),
                D = n("269675"),
                x = n("242601"),
                b = n("416568"),
                U = n("613609"),
                j = n("160404"),
                G = n("225675"),
                w = n("745052"),
                k = n("285865"),
                B = n("659971"),
                F = n("720734"),
                H = n("840780"),
                V = n("235555"),
                Y = n("746508"),
                W = n("179742"),
                K = n("270759"),
                z = n("210724"),
                q = n("905423"),
                Q = n("304445"),
                Z = n("210887"),
                X = n("592125"),
                J = n("271383"),
                $ = n("430824"),
                ee = n("944486"),
                et = n("933429"),
                en = n("823379"),
                ea = n("709054"),
                es = n("792125"),
                el = n("409292"),
                ei = n("316173"),
                er = n("256638"),
                eo = n("663701"),
                eu = n("410575"),
                ed = n("425369"),
                ec = n("715702"),
                ef = n("981631"),
                eE = n("176505"),
                eh = n("290511"),
                eC = n("689938"),
                e_ = n("516699");
            let em = () => (0, a.jsx)("div", {
                    className: e_.loader,
                    children: (0, a.jsx)(E.Spinner, {})
                }),
                eS = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("99387"), n.e("68614")]).then(n.bind(n, "650788")),
                    webpackId: "650788",
                    name: "GuildShopPage",
                    renderLoader: em
                }),
                ep = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("99387"), n.e("44798")]).then(n.bind(n, "998420")),
                    webpackId: "998420",
                    name: "GuildMemberApplicationReview",
                    renderLoader: em
                }),
                eI = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("99387"), n.e("60493")]).then(n.bind(n, "231588")),
                    webpackId: "231588",
                    name: "GuildHomePage",
                    renderLoader: em
                }),
                eg = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("99387"), n.e("85552"), n.e("44400")]).then(n.bind(n, "545918")),
                    webpackId: "545918",
                    name: "MemberSafetyPage",
                    renderLoader: em
                }),
                eT = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("75475"), n.e("58227"), n.e("38359"), n.e("51199")]).then(n.bind(n, "603072")),
                    webpackId: "603072",
                    name: "ChannelsAndRolesPage",
                    renderLoader: em
                }),
                eA = (0, d.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("75475"), n.e("19878"), n.e("38359"), n.e("50498")]).then(n.bind(n, "599263")),
                    webpackId: "599263",
                    name: "GuildOnboardingPage",
                    renderLoader: em
                }),
                eN = e => {
                    let {
                        match: t
                    } = e, n = (0, f.useStateFromStores)([X.default, ee.default], () => {
                        let e = ee.default.getChannelId();
                        return X.default.getChannel(e)
                    }), {
                        guildId: s,
                        channelId: l,
                        messageId: i
                    } = t.params, r = (0, f.useStateFromStores)([$.default], () => $.default.getGuild(s)), o = (0, f.useStateFromStores)([J.default], () => null == s ? null : J.default.getSelfMember(s)), u = (0, f.useStateFromStores)([j.default], () => {
                        if (null == s) return;
                        let e = j.default.getData(s);
                        if ((null == e ? void 0 : e.type) === G.ImpersonateType.SERVER_SHOP) switch (e.initialTab) {
                            case "role_subscriptions":
                                return v.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS;
                            case "guild_products":
                                return v.GuildShopTab.GUILD_PRODUCTS;
                            default:
                                return
                        }
                    }), d = (0, N.isEligibleForSubscriptionsInGuildShop)(s, "channel_renderer");
                    if (null != s && null != l && (0, eE.isStaticChannelRoute)(l)) switch (l) {
                        case eE.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
                            return d ? (0, a.jsx)(eS, {
                                guildId: s,
                                initialTab: v.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS
                            }) : (0, a.jsx)(D.default, {
                                guildId: s
                            });
                        case eE.StaticChannelRoute.GUILD_SHOP:
                            return (0, a.jsx)(eS, {
                                guildId: s,
                                productId: i,
                                initialTab: u
                            });
                        case eE.StaticChannelRoute.MEMBER_APPLICATIONS:
                            return (0, a.jsx)(ep, {
                                guildId: s
                            });
                        case eE.StaticChannelRoute.GUILD_HOME:
                            return (0, a.jsx)(eI, {
                                guildId: s
                            });
                        case eE.StaticChannelRoute.CHANNEL_BROWSER:
                            return (0, a.jsx)(eT, {
                                guildId: s,
                                selectedSection: eh.GuildOnboardingTab.BROWSE
                            });
                        case eE.StaticChannelRoute.GUILD_ONBOARDING:
                            return (0, a.jsx)(eA, {
                                guildId: s
                            });
                        case eE.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
                            return (0, a.jsx)(eT, {
                                guildId: s,
                                selectedSection: eh.GuildOnboardingTab.CUSTOMIZE
                            });
                        case eE.StaticChannelRoute.MEMBER_SAFETY:
                            return (0, a.jsx)(eg, {
                                guildId: s
                            });
                        default:
                            (0, en.assertNever)(l)
                    }
                    if ((0, y.isBlockedByOnboarding)(r, o)) return (0, a.jsx)(M.default, {
                        guildId: s,
                        channelId: l
                    });
                    if ((null == n ? void 0 : n.type) === ef.ChannelTypes.GUILD_STORE) {
                        let e = ea.default.cast(t.params.messageId);
                        return (0, a.jsx)(el.default, {
                            channel: n,
                            inputSkuId: e
                        }, n.id)
                    }
                    return (0, a.jsx)(g.default, {})
                },
                ev = s.memo(function() {
                    let {
                        guildId: e,
                        channelId: t
                    } = (0, q.default)(), n = (0, f.useStateFromStores)([ee.default], () => null != t ? t : ee.default.getChannelId(e));
                    return function() {
                        return window.location.pathname.startsWith(ef.Routes.GUILD_DISCOVERY)
                    }() ? (0, a.jsx)(O.default, {}) : null != e ? (0, a.jsx)(x.default, {
                        selectedChannelId: n,
                        guildId: e
                    }, e) : (0, a.jsx)(eo.default, {})
                });

            function eR(e) {
                let t = (0, q.default)(e => {
                    let {
                        guildId: t
                    } = e;
                    return t
                });
                return (0, a.jsx)(H.default, {
                    ...e,
                    guildId: t
                })
            }
            let eO = e => (0, a.jsx)(eN, {
                    ...e
                }),
                eL = e => {
                    let t = null != e && e.length > 0 && e.startsWith("?") ? e.split("?")[1] : null;
                    return (0, a.jsx)(R.default, {
                        searchRoute: t
                    })
                },
                eP = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(P.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                ey = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(U.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                eM = () => (0, a.jsx)(ed.default, {}),
                eD = () => (0, a.jsx)(ec.default, {}),
                ex = function() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return function(t) {
                        return (0, a.jsx)(A.default, {
                            isFullScreen: e,
                            ...t
                        })
                    }
                },
                eb = e => (0, a.jsx)(S.default, {
                    ...e
                }),
                eU = () => (0, a.jsx)(m.default, {}),
                ej = () => (0, a.jsx)(K.default, {}),
                eG = () => (0, a.jsx)(w.default, {}),
                ew = () => (0, a.jsx)(W.default, {}),
                ek = e => {
                    let {
                        match: t
                    } = e;
                    switch (t.params.feature) {
                        case "addFriends":
                            return (0, a.jsx)(K.default, {
                                initialSection: ef.FriendsSections.ADD_FRIEND
                            });
                        case "pendingFriends":
                            return (0, a.jsx)(K.default, {
                                initialSection: ef.FriendsSections.PENDING
                            });
                        case "sessionManagement":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.SETTINGS("sessions")
                            });
                        case "connections":
                            return (0, a.jsx)(o.Redirect, {
                                to: {
                                    pathname: ef.Routes.SETTINGS("connections"),
                                    search: e.location.search
                                }
                            });
                        case "family-center":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.FAMILY_CENTER
                            });
                        case "account-standing":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.SETTINGS("privacy-and-safety", "account-standing")
                            });
                        default:
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.ME
                            })
                    }
                };

            function eB(e) {
                let {
                    hasNotice: t,
                    sidebarTheme: n,
                    hideSidebar: s
                } = e;
                (0, C.useNullExperiment)(!0);
                let l = "app view user trigger debugging";
                h.UserTriggerAAExperiment.useExperiment({
                    location: l
                }, {
                    autoTrackExposure: !1
                }), h.UserTriggerAAExperiment.trackExposure({
                    location: l
                });
                let r = (0, f.useStateFromStores)([I.default], () => I.default.isFullscreenInContext());
                return s ? null : (0, a.jsxs)("div", {
                    className: i()(e_.sidebar, (0, es.getThemeClass)(n), {
                        [e_.hasNotice]: t,
                        [e_.fullWidth]: c.isMobile,
                        [e_.hidden]: r
                    }),
                    children: [(0, a.jsx)(ev, {}), (0, a.jsxs)("section", {
                        className: e_.panels,
                        "aria-label": eC.default.Messages.ACCOUNT_A11Y_LABEL,
                        children: [(0, a.jsx)(z.default, {}), (0, a.jsx)(V.default, {}), (0, a.jsx)(eu.default, {
                            section: ef.AnalyticsSections.ACTIVITY_PANEL,
                            children: (0, a.jsx)(eR, {
                                className: e_.activityPanel
                            })
                        }), (0, a.jsx)(eu.default, {
                            section: ef.AnalyticsSections.RTC_CONNECTION_PANEL,
                            children: (0, a.jsx)(Y.default, {})
                        }), (0, a.jsx)(eu.default, {
                            section: ef.AnalyticsSections.ACCOUNT_PANEL,
                            children: (0, a.jsx)(F.default, {})
                        })]
                    }), (0, a.jsx)(ei.default, {})]
                })
            }

            function eF() {
                var e;
                let t = (0, f.useStateFromStores)([et.default], () => et.default.hasNotice()),
                    n = (0, f.useStateFromStores)([Z.default], () => Z.default.darkSidebar ? ef.ThemeTypes.DARK : void 0),
                    l = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION("")));
                        return s.useEffect(() => Q.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION("")))
                        }), []), e
                    }(),
                    i = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")));
                        return s.useEffect(() => Q.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")))
                        }), []), e
                    }(),
                    d = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ef.Routes.GUILD_BOOSTING_MARKETING(":guildId"))) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    E = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ef.Routes.COLLECTIBLES_SHOP_FULLSCREEN)) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    h = (0, f.useStateFromStores)([B.default], () => B.default.getIsOpen()),
                    C = (0, o.useRouteMatch)([ef.Routes.CHANNEL(ef.ME, ":channelId"), ef.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")]),
                    m = (null == C ? void 0 : null === (e = C.params) || void 0 === e ? void 0 : e.channelId) === eE.StaticChannelRoute.GUILD_ONBOARDING,
                    S = s.useCallback(() => k.default.openSidebar(), []);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)("div", {
                        className: e_.container,
                        children: [h && !E && (0, a.jsx)(b.default, {
                            className: e_.guilds,
                            themeOverride: n
                        }), (0, a.jsx)(L.default.Provider, {
                            value: (null == C ? void 0 : C.params.guildId) === ef.ME ? void 0 : null == C ? void 0 : C.params.guildId,
                            children: (0, a.jsxs)("div", {
                                className: e_.base,
                                children: [c.isMobile ? null : (0, a.jsx)(er.default, {}), (0, a.jsxs)("div", {
                                    className: e_.content,
                                    children: [(0, a.jsx)(T.default, {}), (0, a.jsx)(eB, {
                                        hasNotice: t,
                                        sidebarTheme: n,
                                        hideSidebar: l || i || d || E || m || !h
                                    }), (0, a.jsx)(_.default.Provider, {
                                        value: S,
                                        children: (0, a.jsxs)(o.Switch, {
                                            children: [(0, a.jsx)(p.default, {
                                                path: ef.Routes.ACTIVITY,
                                                disableTrack: !0,
                                                children: (0, a.jsx)(o.Redirect, {
                                                    to: ef.Routes.ME
                                                })
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.ACTIVITIES_HAPPENING_NOW,
                                                render: eU,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.ACTIVITY_DETAILS(":applicationId"),
                                                render: eb,
                                                impressionName: u.ImpressionNames.ACTIVITY_DETAILS,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        application_id: t.params.applicationId
                                                    }
                                                }
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.ACTIVITIES,
                                                render: eU,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.APPLICATION_LIBRARY,
                                                render: eM,
                                                impressionName: u.ImpressionNames.APPLICATION_LIBRARY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.APPLICATION_STORE,
                                                render: eD,
                                                impressionName: u.ImpressionNames.APPLICATION_STORE,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP_FULLSCREEN,
                                                render: ex(!0),
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP,
                                                render: ex(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"),
                                                render: ex(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.MESSAGE_REQUESTS,
                                                render: eG,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.FAMILY_CENTER,
                                                render: ew,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.ME,
                                                exact: !0,
                                                render: ej,
                                                impressionName: u.ImpressionNames.FRIENDS,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: [ef.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), ef.Routes.CHANNEL(ef.ME, ":channelId"), ef.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")],
                                                render: eO,
                                                impressionName: u.ImpressionNames.GUILD_CHANNEL,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.GUILD_DISCOVERY,
                                                render: e => {
                                                    let {
                                                        location: t
                                                    } = e;
                                                    return eL(t.search)
                                                },
                                                impressionName: u.ImpressionNames.GUILD_DISCOVERY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"),
                                                render: eP,
                                                impressionName: u.ImpressionNames.GUILD_MEMBER_VERIFICATION,
                                                disableTrack: !0
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"),
                                                render: ey,
                                                impressionName: u.ImpressionNames.HUB_EMAIL_SIGNUP,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        has_invite: void 0 !== t.params.inviteCode
                                                    }
                                                }
                                            }), (0, a.jsx)(p.default, {
                                                path: ef.Routes.FEATURE(":feature"),
                                                exact: !0,
                                                render: ek,
                                                disableTrack: !0
                                            })]
                                        })
                                    })]
                                })]
                            })
                        })]
                    })
                })
            }
        },
        409292: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("613828"),
                i = n("442837"),
                r = n("493683"),
                o = n("112724"),
                u = n("108427"),
                d = n("184107"),
                c = n("410575"),
                f = n("613311"),
                E = n("601564"),
                h = n("981631"),
                C = n("597589");

            function _(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class m extends s.Component {
                componentDidMount() {
                    this.fetchStoreListing(), (0, u.trackAppUIViewed)("channel_store_listing")
                }
                render() {
                    return null != this.props.skuId ? (0, a.jsx)(c.default, {
                        page: h.AnalyticsPages.CHANNEL_STORE_LISTING,
                        root: !0,
                        children: (0, a.jsx)("div", {
                            className: C.applicationStore,
                            children: (0, a.jsx)(l.Route, {
                                path: "*",
                                render: this.renderApplicationListing
                            })
                        })
                    }) : null
                }
                constructor(...e) {
                    super(...e), _(this, "fetchStoreListing", e => {
                        let {
                            channel: t,
                            inputSkuId: n
                        } = this.props;
                        return null != e ? r.default.fetchChannelStoreListing(t.id, e) : null != n ? r.default.fetchChannelStoreListing(t.id, n) : r.default.fetchChannelStoreListing(t.id)
                    }), _(this, "renderApplicationListing", e => {
                        let {
                            location: t
                        } = e, {
                            channel: n,
                            skuId: s,
                            width: l
                        } = this.props;
                        return (0, a.jsx)(f.default, {
                            channel: n,
                            inputSkuId: s,
                            fetchStoreListing: this.fetchStoreListing,
                            location: t,
                            pageSize: (0, E.getPageSize)(l)
                        })
                    })
                }
            }
            t.default = (0, o.default)(i.default.connectStores([d.default], e => {
                let {
                    channel: t,
                    inputSkuId: n
                } = e;
                return {
                    skuId: null != n ? n : d.default.getSkuIdForChannel(t.id)
                }
            })(m))
        },
        316173: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("433517"),
                u = n("481060"),
                d = n("304761"),
                c = n("865427"),
                f = n("465670"),
                E = n("820254"),
                h = n("689938"),
                C = n("595609");
            let _ = "isHideDevBanner";
            t.default = () => {
                var e;
                let [t, n] = (0, s.useState)((null === (e = o.Storage.get(_, "false")) || void 0 === e ? void 0 : e.toString()) === "true"), l = (0, r.useStateFromStores)([d.default], () => {
                    var e;
                    return (0, c.probablyHasBuildOverride)() ? null === (e = d.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                });
                if (t) return null;
                let m = () => {
                        o.Storage.set(_, !0), n(!0)
                    },
                    S = () => (0, a.jsx)(u.Clickable, {
                        onClick: m,
                        className: C.closeButton,
                        "aria-label": h.default.Messages.DISMISS,
                        children: (0, a.jsx)(f.default, {
                            className: C.closeIcon
                        })
                    });
                return null != l ? (0, a.jsxs)("div", {
                    className: i()(C.devBanner, C.buildOverride),
                    children: [(0, a.jsx)(E.default, {
                        className: C.icon
                    }), h.default.Messages.BUILD_OVERRIDE, (0, a.jsx)(S, {})]
                }) : "staging" === window.GLOBAL_ENV.RELEASE_CHANNEL ? (0, a.jsxs)("div", {
                    className: i()(C.devBanner, C.staging),
                    children: [(0, a.jsx)(E.default, {
                        className: C.icon
                    }), h.default.Messages.DEV_NOTICE_STAGING.format({
                        buildNumber: "301037"
                    }), (0, a.jsx)(S, {})]
                }) : null
            }
        },
        663701: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eu
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("143927"),
                o = n("924826"),
                u = n("873546"),
                d = n("442837"),
                c = n("704215"),
                f = n("952265"),
                E = n("481060"),
                h = n("493683"),
                C = n("348600"),
                _ = n("257968"),
                m = n("367907"),
                S = n("770471"),
                p = n("158631"),
                I = n("143614"),
                g = n("463119"),
                T = n("377171"),
                A = n("243778"),
                N = n("922409"),
                v = n("899740"),
                R = n("28476"),
                O = n("880257"),
                L = n("631885"),
                P = n("457396"),
                y = n("51596"),
                M = n("905423"),
                D = n("155409"),
                x = n("210887"),
                b = n("695346"),
                U = n("283595"),
                j = n("699516"),
                G = n("923834"),
                w = n("55563"),
                k = n("774343"),
                B = n("517802"),
                F = n("436088"),
                H = n("427828"),
                V = n("916187"),
                Y = n("158010"),
                W = n("988951"),
                K = n("814225"),
                z = n("515753"),
                q = n("831218"),
                Q = n("339149"),
                Z = n("981631"),
                X = n("689938"),
                J = n("279174");
            let $ = e => {
                    let {
                        selected: t,
                        ...n
                    } = e, s = (0, o.useListItem)("friends"), l = (0, d.useStateFromStores)([j.default], () => j.default.getPendingCount()), i = (0, I.default)(), {
                        canViewBroadcasts: r
                    } = S.default.useExperiment({
                        location: "friends_tab_no_track"
                    }), u = (0, p.default)();
                    return (0, a.jsxs)(z.LinkButton, {
                        selected: t,
                        route: Z.Routes.FRIENDS,
                        icon: W.default,
                        text: X.default.Messages.FRIENDS,
                        onClick: () => {
                            m.default.trackWithMetadata(Z.AnalyticEvents.BROADCAST_LIST_VISITED, {
                                num_active_broadcasts: i.length,
                                friends_tab_clicked: !0,
                                is_broadcasting: u
                            })
                        },
                        ...n,
                        ...s,
                        children: [i.length > 0 && r && (0, a.jsx)(E.TextBadge, {
                            color: T.default.BG_BRAND,
                            text: (0, a.jsxs)("div", {
                                className: J.broadcastingBadge,
                                children: [(0, a.jsx)(F.default, {
                                    className: J.broadcastingIcon
                                }), (0, a.jsx)(E.Text, {
                                    variant: "text-xs/semibold",
                                    color: "always-white",
                                    children: i.length.toLocaleString()
                                })]
                            })
                        }), l > 0 ? (0, a.jsx)(E.NumberBadge, {
                            count: l
                        }) : null]
                    })
                },
                ee = e => {
                    let {
                        selected: t,
                        hideGameUpdateProgressIndicator: n,
                        ...s
                    } = e, l = (0, o.useListItem)("library");
                    return (0, a.jsx)(z.LinkButton, {
                        selected: t,
                        route: Z.Routes.APPLICATION_LIBRARY,
                        icon: H.default,
                        text: X.default.Messages.LIBRARY,
                        ...s,
                        ...l,
                        children: (0, a.jsx)(Q.default, {
                            className: i()(J.downloadProgressCircle, {
                                [J.hideGameUpdateProgressIndicator]: n
                            })
                        })
                    })
                },
                et = e => {
                    let {
                        selected: t,
                        route: n,
                        locationState: s,
                        ...l
                    } = e, r = (0, o.useListItem)("activities"), u = (0, d.useStateFromStores)([x.default], () => x.default.getState().theme), c = (0, _.useActivitiesWhatsNewCount)();
                    return (0, a.jsx)(z.LinkButton, {
                        selected: t,
                        route: n,
                        icon: B.default,
                        iconClassName: i()(J.activitiesBirthdayIcon, {
                            [J.activitiesBirthdayIconLight]: "light" === u
                        }),
                        text: X.default.Messages.EMBEDDED_ACTIVITIES_ACTIVITY_TAB_TITLE,
                        locationState: s,
                        ...l,
                        ...r,
                        children: c > 0 ? (0, a.jsx)(E.NumberBadge, {
                            count: c
                        }) : null
                    })
                },
                en = () => {
                    let e = (0, v.useMessageRequestsCount)(),
                        t = (0, v.useNewMessageRequestsCount)();
                    return e > 0 ? (0, a.jsx)(E.NumberBadge, {
                        count: e,
                        color: 0 === t ? T.default.ICON_MUTED : void 0
                    }) : null
                },
                ea = e => {
                    let {
                        selected: t
                    } = e, n = (0, o.useListItem)("messageRequests"), {
                        channelId: s
                    } = (0, N.useMessageRequestSidebarState)();
                    if (!(0, R.useShouldShowMessageRequestsRow)()) return null;
                    let l = null == s ? void 0 : () => h.default.preload(Z.ME, s);
                    return (0, a.jsx)(z.LinkButton, {
                        selected: t,
                        route: Z.Routes.MESSAGE_REQUESTS,
                        icon: V.default,
                        text: X.default.Messages.MESSAGE_REQUESTS,
                        onClick: l,
                        ...n,
                        children: (0, a.jsx)(en, {})
                    })
                },
                es = e => {
                    let {
                        selected: t
                    } = e, n = X.default.Messages.FAMILY_CENTER_SIDEBAR_TITLE, l = (0, o.useListItem)("family-center"), i = b.FamilyCenterEnabled.useSetting(), r = (0, O.default)(), [u, d] = s.useState(!0);
                    return i && r ? (0, a.jsx)(z.LinkButton, {
                        selected: t,
                        route: Z.Routes.FAMILY_CENTER,
                        icon: Y.default,
                        text: n,
                        onMouseEnter: () => {
                            d(!0)
                        },
                        onMouseLeave: () => {
                            d(!1)
                        },
                        interactiveClassName: J.familyCenterLinkButton,
                        ...l,
                        children: (0, a.jsx)(el, {
                            isParentHovered: u
                        })
                    }) : null
                },
                el = e => {
                    let {
                        isParentHovered: t
                    } = e, s = (0, L.usePendingRequestCount)();
                    return t ? (0, a.jsx)(z.CloseButton, {
                        onClick: () => {
                            (0, f.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("44153")]).then(n.bind(n, "760949"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        },
                        "aria-label": X.default.Messages.CLOSE
                    }) : s > 0 ? (0, a.jsx)("div", {
                        className: J.familyCenterPendingBadge,
                        children: (0, a.jsx)(E.NumberBadge, {
                            count: s
                        })
                    }) : (0, a.jsx)(A.default, {
                        contentTypes: [c.DismissibleContent.FAMILY_CENTER_NEW_BADGE],
                        children: e => {
                            let {
                                visibleContent: t
                            } = e;
                            return t === c.DismissibleContent.FAMILY_CENTER_NEW_BADGE ? (0, a.jsx)(E.TextBadge, {
                                text: X.default.Messages.NEW,
                                color: T.default.BG_BRAND
                            }) : null
                        }
                    })
                },
                ei = () => (0, y.show)("DM_SEARCH");

            function er(e) {
                switch (e) {
                    case Z.Routes.APPLICATION_LIBRARY:
                        return Z.AnalyticsPages.LIBRARY;
                    case Z.Routes.FRIENDS:
                        return Z.AnalyticsPages.FRIENDS_LIST;
                    case Z.Routes.COLLECTIBLES_SHOP:
                        return Z.AnalyticsPages.COLLECTIBLES_SHOP
                }
                if (e.startsWith(Z.Routes.APPLICATION_STORE)) return e === Z.Routes.APPLICATION_STORE ? Z.AnalyticsPages.STORE_DIRECTORY_HOME : e.startsWith(Z.Routes.APPLICATION_STORE) ? Z.AnalyticsPages.STORE_DIRECTORY_BROWSE : Z.AnalyticsPages.STORE_LISTING;
                return Z.AnalyticsPages.DM_CHANNEL
            }
            let eo = e => {
                let {
                    showLibrary: t,
                    hasLibraryApplication: n,
                    homeLink: s,
                    storeLink: l,
                    premiumTabSelected: o
                } = e, [d, c] = (0, M.default)(e => {
                    let {
                        channelId: t,
                        path: n
                    } = e;
                    return [t, n]
                }, r.default), {
                    enabled: f
                } = C.BirthdayActivitiesExperiment.useExperiment({
                    location: "a718d6_2"
                }, {
                    autoTrackExposure: !0
                });
                return (0, a.jsxs)("nav", {
                    className: J.privateChannels,
                    "aria-label": X.default.Messages.PRIVATE_CHANNELS_A11Y_LABEL,
                    children: [(0, a.jsx)(D.default, {
                        tutorialId: "direct-messages",
                        position: "right",
                        offsetX: -52,
                        children: (0, a.jsx)("div", {
                            className: i()(J.searchBar, {
                                [J.themedHeaderMobile]: u.isMobile
                            }),
                            children: (0, a.jsx)("button", {
                                type: "button",
                                className: i()(J.searchBarComponent, {
                                    [J.themedSearchBarMobile]: u.isMobile
                                }),
                                onClick: ei,
                                children: X.default.Messages.DM_SEARCH_PLACEHOLDER
                            })
                        })
                    }), (0, a.jsxs)(q.default, {
                        ...e,
                        version: c,
                        selectedChannelId: d,
                        showDMHeader: !0,
                        children: [(0, a.jsx)($, {
                            selected: null != c ? c === Z.Routes.FRIENDS : s === Z.Routes.FRIENDS
                        }, "friends"), n && t ? (0, a.jsx)(ee, {
                            selected: null == c ? null != s && s.startsWith(Z.Routes.APPLICATION_LIBRARY) : c.startsWith(Z.Routes.APPLICATION_LIBRARY),
                            hideGameUpdateProgressIndicator: s === Z.Routes.APPLICATION_LIBRARY
                        }, "library") : null, (0, a.jsx)(P.NitroTabButton, {
                            selected: null == c ? o : c.startsWith(Z.Routes.APPLICATION_STORE),
                            route: null == l || location.pathname.startsWith(Z.Routes.ACTIVITIES) || location.pathname.startsWith(Z.Routes.APPLICATION_STORE) ? Z.Routes.APPLICATION_STORE : l,
                            locationState: {
                                analyticsSource: {
                                    page: er(s),
                                    section: Z.AnalyticsSections.NAVIGATION,
                                    object: Z.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "premium"), f ? (0, a.jsx)(et, {
                            selected: null != c && c.startsWith(Z.Routes.ACTIVITIES) || null != s && s.startsWith(Z.Routes.ACTIVITIES),
                            route: Z.Routes.ACTIVITIES,
                            locationState: {
                                analyticsSource: {
                                    page: er(s),
                                    section: Z.AnalyticsSections.NAVIGATION,
                                    object: Z.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "activities") : null, (0, a.jsx)(ea, {
                            selected: null == c ? null != s && s.startsWith(Z.Routes.MESSAGE_REQUESTS) : c === Z.Routes.MESSAGE_REQUESTS
                        }, "message-requests"), (0, a.jsx)(g.CollectiblesShopButton, {
                            selected: c === Z.Routes.COLLECTIBLES_SHOP || (null == s ? void 0 : s.startsWith(Z.Routes.COLLECTIBLES_SHOP)),
                            locationState: {
                                analyticsSource: {
                                    page: er(s),
                                    section: Z.AnalyticsSections.NAVIGATION,
                                    object: Z.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "discord-shop"), (0, a.jsx)(es, {
                            selected: null != s && s.startsWith(Z.Routes.FAMILY_CENTER) || null != c && c.startsWith(Z.Routes.FAMILY_CENTER)
                        }, "family-center")]
                    })]
                })
            };

            function eu() {
                let e = (0, d.useStateFromStores)([k.default], () => k.default.getHomeLink()),
                    t = (0, d.useStateFromStores)([w.default], () => {
                        if (e === Z.Routes.APPLICATION_STORE) return !0;
                        let t = (0, K.getSKUIdFromURL)(e);
                        if (null != t) {
                            var n, a;
                            return null !== (a = null === (n = w.default.get(t)) || void 0 === n ? void 0 : n.premium) && void 0 !== a && a
                        }
                        return !1
                    }, [e]),
                    n = !b.DisableGamesTab.useSetting(),
                    {
                        theme: s
                    } = (0, d.useStateFromStoresObject)([x.default], () => ({
                        theme: x.default.theme
                    })),
                    l = (0, d.useStateFromStores)([U.default], () => U.default.hasLibraryApplication()),
                    i = (0, d.useStateFromStores)([G.default], () => G.default.getCurrentPath());
                return (0, a.jsx)(eo, {
                    theme: s,
                    showLibrary: n,
                    hasLibraryApplication: l,
                    storeLink: i,
                    homeLink: e,
                    premiumTabSelected: t
                })
            }
        },
        255952: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("692547"),
                u = n("481060"),
                d = n("730749"),
                c = n("427217"),
                f = n("246133"),
                E = n("383832"),
                h = n("474376"),
                C = n("695346"),
                _ = n("293273"),
                m = n("696202"),
                S = n("881201"),
                p = n("626135"),
                I = n("51144"),
                g = n("981631"),
                T = n("689938"),
                A = n("921665");

            function N(e) {
                let {
                    status: t,
                    description: n,
                    focused: s
                } = e;
                return (0, a.jsxs)("div", {
                    className: A.statusItem,
                    children: [(0, a.jsx)(u.Status, {
                        status: t,
                        className: A.icon,
                        size: 10,
                        color: s ? "currentColor" : void 0
                    }), (0, a.jsx)("div", {
                        className: A.status,
                        children: (0, I.humanizeStatus)(t)
                    }), null != n && (0, a.jsx)("div", {
                        className: A.description,
                        children: n
                    })]
                })
            }

            function v(e) {
                let {
                    customStatus: t
                } = e, n = e => {
                    e.stopPropagation(), C.CustomStatusSetting.updateSetting(void 0)
                };
                return null != t ? (0, a.jsx)("div", {
                    "aria-label": T.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                    children: (0, a.jsx)(c.default, {
                        className: null != t.emoji ? A.customStatusWithEmoji : A.customStatusItem,
                        activity: t,
                        emojiClassName: A.customEmoji,
                        textClassName: A.customText,
                        placeholderText: T.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        children: (0, a.jsx)(u.Tooltip, {
                            text: T.default.Messages.CUSTOM_STATUS_CLEAR_CUSTOM_STATUS,
                            children: e => (0, a.jsx)(u.Button, {
                                ...e,
                                className: A.clearStatusButton,
                                onClick: n,
                                look: u.Button.Looks.BLANK,
                                size: u.Button.Sizes.NONE,
                                tabIndex: -1,
                                "aria-hidden": !0,
                                children: (0, a.jsx)(m.default, {
                                    className: A.clearStatusIcon
                                })
                            })
                        })
                    })
                }) : (0, a.jsxs)("div", {
                    className: i()(A.statusItem, A.__invalid_customStatusContentIcon),
                    "aria-label": T.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS,
                    children: [(0, a.jsx)("div", {
                        className: A.customEmojiPlaceholder
                    }), (0, a.jsx)("div", {
                        className: A.status,
                        children: T.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS
                    })]
                })
            }

            function R(e) {
                let {
                    focused: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: i()(A.statusItem, A.statusItemNoPadding, A.__invalid_customStatusContentIcon, A.switchAccountsItem),
                    "aria-label": T.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                    children: [(0, a.jsx)(S.default, {
                        width: 18,
                        height: 18,
                        className: A.switchAccountsIcon,
                        color: t ? o.default.unsafe_rawColors.WHITE_500.css : "currentColor"
                    }), (0, a.jsx)("div", {
                        className: A.status,
                        children: T.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE
                    })]
                })
            }
            let O = e => {
                let {
                    customStatus: t,
                    onClose: l,
                    analyticsContext: i,
                    onSelect: r
                } = e, o = (0, h.useMultiAccountMenuItems)();
                s.useEffect(() => {
                    p.default.track(g.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != t,
                        location: i.location
                    })
                }, []);
                let d = e => {
                    (0, f.default)(e, void 0, {
                        location: i.location
                    })
                };
                return (0, a.jsxs)(u.Menu, {
                    navId: "status-picker",
                    variant: "fixed",
                    "aria-label": T.default.Messages.SET_STATUS,
                    onClose: l,
                    onSelect: r,
                    children: [(0, a.jsx)(u.MenuItem, {
                        id: "online",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(N, {
                                status: u.StatusTypes.ONLINE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.ONLINE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "idle",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(N, {
                                status: u.StatusTypes.IDLE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.IDLE)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "dnd",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(N, {
                                status: u.StatusTypes.DND,
                                description: T.default.Messages.STATUS_DND_HELP,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.DND)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "invisible",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(N, {
                                status: u.StatusTypes.INVISIBLE,
                                description: T.default.Messages.STATUS_INVISIBLE_HELPER,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.INVISIBLE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "custom-status",
                        keepItemStyles: !0,
                        render: () => (0, a.jsx)(v, {
                            customStatus: t
                        }),
                        action: () => {
                            (0, u.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("47484")]).then(n.bind(n, "211065"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    sourceAnalyticsContext: i
                                })
                            })
                        }
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "switch-account",
                        action: E.default,
                        label: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(R, {
                                focused: t
                            })
                        },
                        children: o
                    }, "switch-account")]
                })
            };
            t.default = (0, d.default)(e => {
                let t = (0, r.useStateFromStores)([_.default], () => _.default.getCustomStatusActivity()),
                    n = C.StatusSetting.useSetting();
                return (0, a.jsx)(O, {
                    ...e,
                    customStatus: t,
                    status: n
                })
            })
        },
        457094: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("593473"),
                i = n("266067"),
                r = n("613828"),
                o = n("442837"),
                u = n("481060"),
                d = n("893776"),
                c = n("943094"),
                f = n("749210"),
                E = n("287734"),
                h = n("401430"),
                C = n("230711"),
                _ = n("607070"),
                m = n("627845"),
                S = n("185666"),
                p = n("503737"),
                I = n("513202"),
                g = n("318891"),
                T = n("687751"),
                A = n("912471"),
                N = n("100527"),
                v = n("838134"),
                R = n("77987"),
                O = n("679891"),
                L = n("491575"),
                P = n("314533"),
                y = n("935347"),
                M = n("560067"),
                D = n("823169"),
                x = n("620360"),
                b = n("96051"),
                U = n("750995"),
                j = n("696287"),
                G = n("408026"),
                w = n("763916"),
                k = n("306721"),
                B = n("531551"),
                F = n("38618"),
                H = n("972830"),
                V = n("981283"),
                Y = n("584233"),
                W = n("15274"),
                K = n("434404"),
                z = n("543842"),
                q = n("879064"),
                Q = n("315964"),
                Z = n("495784"),
                X = n("975533"),
                J = n("377400"),
                $ = n("285865"),
                ee = n("659971"),
                et = n("929809"),
                en = n("122333"),
                ea = n("960275"),
                es = n("818765"),
                el = n("678492"),
                ei = n("269089"),
                er = n("380570"),
                eo = n("837689"),
                eu = n("367207"),
                ed = n("489977"),
                ec = n("329557"),
                ef = n("304445"),
                eE = n("893607"),
                eh = n("703656"),
                eC = n("298969"),
                e_ = n("719256"),
                em = n("6025"),
                eS = n("897473"),
                ep = n("377368"),
                eI = n("262702"),
                eg = n("639033"),
                eT = n("479313"),
                eA = n("911560"),
                eN = n("703016"),
                ev = n("171368"),
                eR = n("429974"),
                eO = n("332754"),
                eL = n("507468"),
                eP = n("357269"),
                ey = n("282506"),
                eM = n("444961"),
                eD = n("314897"),
                ex = n("433355"),
                eb = n("592125"),
                eU = n("896797"),
                ej = n("430824"),
                eG = n("819640"),
                ew = n("283595"),
                ek = n("944486"),
                eB = n("914010"),
                eF = n("695103"),
                eH = n("241890"),
                eV = n("897607"),
                eY = n("417363"),
                eW = n("900974"),
                eK = n("358085"),
                ez = n("998502"),
                eq = n("346329"),
                eQ = n("981631"),
                eZ = n("176505"),
                eX = n("701476");

            function eJ(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            n("117240"), n("801077"), n("967368"), n("272053"), n("974180"), n("574254"), n("551428"), n("55563"), n("455173"), n("882029"), n("959457"), n("653255"), n("663389"), n("25990"), n("778825"), n("999382"), n("388610"), n("533947"), n("277053"), n("371398"), n("141233"), n("471073"), n("628566");
            let e$ = !1;
            (0, A.initSessionHeartbeatScheduler)(), o.default.initialize(), eC.default.loadServer(), eK.isPlatformEmbedded && (ez.default.on("USER_SETTINGS_OPEN", () => {
                !eG.default.getLayers().includes(eQ.Layers.USER_SETTINGS) && C.default.open(eQ.UserSettingsSections.ACCOUNT)
            }), ez.default.on("LAUNCH_APPLICATION", (e, t) => {
                let n = ew.default.getActiveLibraryApplication(t);
                eq.playApplication(t, n, {
                    analyticsParams: {
                        location: {
                            page: eQ.AnalyticsPages.DIRECT,
                            object: eQ.AnalyticsObjects.WEB_URL
                        }
                    }
                })
            }));
            let e0 = o.default.connectStores([F.default, eU.default, eD.default], () => ({
                    isConnected: F.default.isConnected(),
                    defaultRoute: eU.default.defaultRoute,
                    defaultRouteFallback: eU.default.fallbackRoute,
                    token: eD.default.getToken()
                }))(class extends s.Component {
                    componentDidMount() {
                        let {
                            match: e
                        } = this.props;
                        null != e && null != e.params.inviteCode && (0, Y.doGuildOnboardingForPostAuthInvite)({
                            code: e.params.inviteCode
                        })
                    }
                    render() {
                        let {
                            isConnected: e,
                            defaultRoute: t,
                            token: n,
                            defaultRouteFallback: s
                        } = this.props;
                        if (null == n) return (0, a.jsx)(r.Redirect, {
                            to: eQ.Routes.DEFAULT_LOGGED_OUT
                        });
                        if (e) {
                            let e = e9(t);
                            return null == e || (e.params.guildId === eQ.ME || null != ej.default.getGuild(e.params.guildId)) && null != eb.default.getChannel(e.params.channelId) ? (0, a.jsx)(r.Redirect, {
                                to: t
                            }) : (0, a.jsx)(r.Redirect, {
                                to: s
                            })
                        }
                        return null
                    }
                }),
                e1 = (0, R.makeAuthenticated)(L.default, null, {
                    passProps: !1
                }),
                e4 = (0, R.makeAuthenticated)(v.default, null, {
                    passProps: !1
                }),
                e2 = [eQ.Routes.GUILD_BOOSTING_MARKETING(":guildId"), ...Array.from(eZ.StaticChannelRoutes).map(e => eQ.Routes.CHANNEL(":guildId", e))];

            function e7(e) {
                let {
                    guildId: t,
                    channelId: n = null,
                    messageId: a = null,
                    threadId: s = null
                } = e.params;
                return {
                    guildId: null != t ? t : eQ.ME,
                    channelId: n,
                    messageId: a,
                    threadId: s
                }
            }
            let e3 = [{
                path: [eQ.Routes.APP_WITH_INVITE_AND_GUILD_ONBOARDING(":inviteCode")],
                render(e) {
                    let {
                        match: t
                    } = e;
                    return (0, a.jsx)(e0, {
                        match: t
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.APP],
                render: () => (0, a.jsx)(e0, {}),
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.USERS(":id")],
                render: function(e) {
                    let {
                        match: t,
                        location: n
                    } = e, {
                        friend_token: s
                    } = (0, l.parse)(n.search), {
                        id: i
                    } = t.params;
                    return (0, H.addPostConnectionCallback)(() => (0, ev.openUserProfileModal)({
                        userId: i,
                        guildId: eQ.ME,
                        friendToken: s,
                        sourceAnalyticsLocations: [N.default.URI_SCHEME],
                        analyticsLocation: {
                            section: eQ.AnalyticsSections.DIRECT_ROUTE_ACCESS
                        }
                    })), (0, a.jsx)(r.Redirect, {
                        to: eU.default.defaultRoute
                    })
                }
            }, {
                path: [eQ.Routes.APPLICATION_LIBRARY_ACTION(":gameId", ":action")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        gameId: n,
                        action: s
                    } = t.params;
                    return eY.default.whenInitialized(() => {
                        ew.default.whenInitialized(() => {
                            switch (s) {
                                case "launch": {
                                    let e = ew.default.getActiveLibraryApplication(n);
                                    if (null == e) return;
                                    eq.playApplication(e.id, e, {
                                        analyticsParams: {
                                            location: {
                                                page: eQ.AnalyticsPages.DIRECT,
                                                object: eQ.AnalyticsObjects.WEB_URL
                                            }
                                        }
                                    });
                                    break
                                }
                                case "test-mode":
                                    eF.default.whenInitialized(() => h.authorizeAndSetTestModeApplication(n));
                                    break;
                                case "uninstall": {
                                    let e = ew.default.getActiveLibraryApplication(n);
                                    if (null == e) return;
                                    (0, c.uninstallBranchPrompt)(e.id, e.branchId, eQ.AnalyticsLocations.URI_SCHEME)
                                }
                            }
                        })
                    }), (0, a.jsx)(r.Redirect, {
                        to: eQ.Routes.APPLICATION_LIBRARY
                    })
                }
            }, {
                path: [eQ.Routes.GUILD_CREATE],
                render: function() {
                    return (0, H.addPostConnectionCallback)(() => M.default.openCreateGuildModal({
                        location: "External link"
                    })), (0, a.jsx)(r.Redirect, {
                        to: eU.default.defaultRoute
                    })
                }
            }, {
                path: [eQ.Routes.PICK_GUILD_SETTINGS(":section?", ":subsection?")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        section: n,
                        subsection: s
                    } = t.params, i = (0, l.parse)(location.search).feature;
                    return (0, H.addPostConnectionCallback)(() => q.openGuildSettingsPickerModal({
                        section: (0, z.default)(eQ.GuildSettingsSections, n),
                        subsection: (0, z.default)(eQ.GuildSettingsSubsections, s),
                        feature: i
                    })), (0, a.jsx)(r.Redirect, {
                        to: eU.default.defaultRoute
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.SETTINGS(":section", ":subsection?")],
                render: function(e) {
                    let {
                        location: t
                    } = e, n = (0, eP.default)(t.pathname);
                    return null != n && (0, H.addPostConnectionCallback)(() => C.default.open(n.section, n.subsection, {
                        openWithoutBackstack: !1,
                        impressionSource: n.source
                    })), (0, a.jsx)(r.Redirect, {
                        to: eU.default.defaultRoute
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.USER_GUILD_NOTIFICATION_SETTINGS(":guildId")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        guildId: s
                    } = t.params;
                    return (0, H.addPostConnectionCallback)(() => {
                        (0, u.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("5863"), n.e("53497")]).then(n.bind(n, "751212"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                guildId: s
                            })
                        })
                    }), (0, a.jsx)(r.Redirect, {
                        to: eQ.Routes.CHANNEL(s)
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.APPLICATION_LIBRARY_INVENTORY],
                render: function() {
                    return (0, H.addPostConnectionCallback)(() => C.default.open(eQ.UserSettingsSections.INVENTORY)), (0, a.jsx)(r.Redirect, {
                        to: eU.default.defaultRoute
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.WELCOME(":guildId?", ":channelId?")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        guildId: n,
                        channelId: s
                    } = t.params;
                    (0, et.setNewUser)(eX.NewUserTypes.MARKETING_UNCLAIMED);
                    let l = eQ.Routes.CHANNEL(n, s);
                    return (0, a.jsx)(r.Redirect, {
                        to: l
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.GUILD_EVENT_DETAILS(":guildId?", ":guildEventId")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        guildId: n,
                        guildEventId: s
                    } = t.params;
                    return (0, H.addPostConnectionCallback)(() => {
                        (0, W.openGuildEventDetails)({
                            eventId: s
                        })
                    }), (0, a.jsx)(r.Redirect, {
                        to: eQ.Routes.CHANNEL(n)
                    })
                },
                isSessionRequired: !0
            }, {
                path: [eQ.Routes.GUILD_SETTINGS(":guildId", ":section?", ":subsection?")],
                render: function(e) {
                    let {
                        match: t
                    } = e, {
                        guildId: n,
                        section: s,
                        subsection: l
                    } = t.params;
                    return (0, H.addPostConnectionCallback)(() => {
                        K.default.open(n, (0, z.default)(eQ.GuildSettingsSections, s), void 0, (0, z.default)(eQ.GuildSettingsSubsections, l))
                    }), (0, a.jsx)(r.Redirect, {
                        to: eQ.Routes.CHANNEL(n)
                    })
                },
                isSessionRequired: !0,
                isChatRoute: !0
            }, {
                path: [eQ.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), eQ.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?"), eQ.Routes.ACTIVITY, eQ.Routes.ACTIVITIES, eQ.Routes.ACTIVITIES_HAPPENING_NOW, eQ.Routes.ACTIVITY_DETAILS(":applicationId"), eQ.Routes.APPLICATION_LIBRARY, eQ.Routes.APPLICATION_STORE, eQ.Routes.MESSAGE_REQUESTS, eQ.Routes.COLLECTIBLES_SHOP, eQ.Routes.COLLECTIBLES_SHOP_FULLSCREEN, eQ.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"), eQ.Routes.GUILD_DISCOVERY, eQ.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"), eQ.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"), eQ.Routes.GUILD_BOOSTING_MARKETING(":guildId"), eQ.Routes.FEATURE(":feature"), eQ.Routes.FAMILY_CENTER],
                render: e1,
                isSessionRequired: !0,
                isChatRoute: !0
            }, {
                path: [eQ.Routes.APPLICATION_DIRECTORY],
                render: e4,
                isSessionRequired: !0
            }];

            function e9(e) {
                for (let {
                        path: t,
                        isChatRoute: n
                    }
                    of e3) {
                    if (!n) continue;
                    let a = (0, i.matchPath)(e, {
                        path: t
                    });
                    if (null != a) return a
                }
                return null
            }

            function e5(e) {
                let {
                    channelId: t,
                    guildId: n,
                    pathname: a
                } = e;
                if (!F.default.isConnected()) return;
                let {
                    location: s
                } = (0, eh.getHistory)();
                s.pathname === a && (null == eb.default.getChannel(t) ? (0, eh.replaceWith)(eQ.Routes.CHANNEL(n)) : (0, eh.replaceWith)(a))
            }
            class e8 extends s.PureComponent {
                componentDidMount() {
                    ez.default.setZoomFactor(_.default.zoom), eC.default.init(), O.default.initialize(), er.default.initialize(), G.default.initialize(), eM.default.initialize(), w.default.initialize(), eu.default.initialize(), X.default.initialize(), m.default.init(), B.default.init(), k.default.init(), en.default.initialize(), T.default.initialize(), U.default.initialize(), ed.default.initialize(), g.default.initialize(), ey.default.initialize(), ei.default.initialize(), I.default.initialize(), V.default.init(), Q.default.init(), eV.default.init(), eW.default.init(), p.default.initialize(), eN.default.init(), eH.default.init(), eO.default.init(), eI.default.initialize(), eg.default.initialize(), eR.default.initialize(), eL.default.init(), b.default.initialize(), S.default.initialize(), e_.default.initialize(), ep.default.initialize(), es.default.initialize(), ea.default.initialize(), el.default.initialize(), P.default.initialize(), Z.default.init({
                        hasModalOpen: u.hasAnyModalOpen,
                        openModal: () => (0, u.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "650233"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    }), x.default.init(), J.default.initialize(), ec.default.initialize(), eo.default.initialize(), D.default.initialize(), this.rewriterUnlisten = ef.default.addRouteRewriter(this.ensureChannelMatchesGuild), this.historyUnlisten = ef.default.addRouteChangeListener(this.handleHistoryChange)
                }
                componentWillUnmount() {
                    eM.default.terminate(), eu.default.terminate(), er.default.terminate(), O.default.terminate(), g.default.terminate(), ey.default.terminate(), I.default.terminate(), ed.default.terminate(), ei.default.terminate(), eR.default.terminate(), p.default.terminate(), b.default.terminate(), J.default.terminate(), S.default.terminate(), ec.default.terminate(), e_.default.terminate(), ep.default.terminate(), es.default.terminate(), ea.default.terminate(), el.default.terminate(), P.default.terminate(), eo.default.terminate(), D.default.terminate(), j.default.terminate(), this.historyUnlisten(), this.rewriterUnlisten()
                }
                handleHistoryChange(e) {
                    let {
                        pathname: t,
                        search: n
                    } = e;
                    ! function(e) {
                        if (F.default.isConnected() || F.default.isTryingToConnect()) return;
                        let t = eD.default.getToken();
                        if (null != t) null != function(e) {
                            for (let {
                                    path: t,
                                    isSessionRequired: n
                                }
                                of e3) {
                                if (!n) continue;
                                let a = (0, i.matchPath)(e, {
                                    path: t
                                });
                                if (null != a) return a
                            }
                            return null
                        }(e) && d.default.startSession(t)
                    }(t), ! function(e, t) {
                        let n = e9(e);
                        if (null == n) return;
                        let {
                            guildId: a,
                            channelId: s,
                            messageId: r,
                            threadId: o
                        } = e7(n), u = (0, eE.isValidGuildId)(a), d = (0, eE.isValidChannelId)(s), c = (0, eE.isValidChannelId)(o), h = eB.default.getGuildId(), C = h !== a;
                        if (u && C && f.default.selectGuild(a), u && d) {
                            let n = ek.default.getChannelId(h),
                                i = n !== s;
                            if (!e$ || C || i || null != r) {
                                e$ = !0, E.default.selectChannel({
                                    guildId: a,
                                    channelId: s,
                                    messageId: r
                                });
                                let {
                                    summaryId: e
                                } = (0, l.parse)(t);
                                null != e && eT.default.setSelectedSummary(s, e)
                            }
                            if (null != o && c) {
                                let e = ex.default.getCurrentSidebarChannelId(n) !== o,
                                    t = null != ex.default.getGuildSidebarState(a);
                                if (null != s && null != o && e) {
                                    if (t)(0, eh.replaceWith)(eQ.Routes.CHANNEL(a, o, r));
                                    else {
                                        let e = {
                                            type: eS.SidebarOpenDetailsType.THREAD
                                        };
                                        null != r && (e.initialMessageId = r), em.default.openThreadAsSidebar({
                                            guildId: a,
                                            baseChannelId: s,
                                            channelId: o,
                                            details: e
                                        })
                                    }
                                }
                            } else null != s && !i && em.default.closeChannelSidebar(s);
                            let u = ee.default.getIsOpen();
                            if (s === eZ.StaticChannelRoute.ROLE_SUBSCRIPTIONS) $.default.closeSidebar();
                            else if (C && u) {
                                let t = null == h && a === eQ.ME,
                                    n = e === eQ.Routes.GUILD_DISCOVERY;
                                t || n ? $.default.closeSidebar() : $.default.openSidebar()
                            } else(i && u || !C && !i) && $.default.closeSidebar()
                        } else {
                            var _;
                            if (_ = e, !e2.some(e => {
                                    var t;
                                    return (null === (t = (0, i.matchPath)(_, e)) || void 0 === t ? void 0 : t.isExact) === !0
                                }))(0, eh.replaceWith)(eU.default.fallbackRoute)
                        }
                    }(t, n)
                }
                ensureChannelMatchesGuild(e) {
                    if (!F.default.isConnected()) return null;
                    let {
                        pathname: t
                    } = e, n = e9(t);
                    if (null == n) return null;
                    let {
                        guildId: a,
                        channelId: s,
                        threadId: l
                    } = e7(n), i = (0, eE.isValidGuildId)(a) && a !== eQ.ME && a !== eQ.FAVORITES;
                    if (null != s && (0, eE.isValidChannelId)(s) && !(0, eZ.isStaticChannelRoute)(s) && i) {
                        let n = eb.default.getChannel(s);
                        if (null == n) eA.default.loadThread(s).then(() => e5({
                            channelId: s,
                            guildId: a,
                            pathname: t
                        }));
                        else if (n.guild_id !== a) return {
                            path: eQ.Routes.CHANNEL(a),
                            state: e.state
                        };
                        if (null != l) {
                            if (!((0, eE.isValidChannelId)(l) && !(0, eZ.isStaticChannelRoute)(s))) return null;
                            let n = eb.default.getChannel(l);
                            if (null == n) eA.default.loadThread(l).then(() => e5({
                                channelId: l,
                                guildId: a,
                                pathname: t
                            }));
                            else if ((null == n ? void 0 : n.parent_id) !== s) return em.default.closeChannelSidebar(s), {
                                path: eQ.Routes.CHANNEL(a, s),
                                state: e.state
                            }
                        }
                    }
                    return null
                }
                render() {
                    return (0, a.jsxs)(s.Fragment, {
                        children: [(0, a.jsxs)(r.Switch, {
                            children: [(0, a.jsx)(r.Redirect, {
                                exact: !0,
                                from: "/channels",
                                to: "/"
                            }), e3.map(e => {
                                let {
                                    path: t,
                                    render: n
                                } = e;
                                return (0, a.jsx)(r.Route, {
                                    path: t,
                                    render: n
                                }, t[0])
                            }), (0, a.jsx)(r.Redirect, {
                                to: "/"
                            })]
                        }), (0, a.jsx)(y.default, {})]
                    })
                }
                constructor(...e) {
                    super(...e), eJ(this, "historyUnlisten", () => {}), eJ(this, "rewriterUnlisten", () => {})
                }
            }
            t.default = e8
        },
        237919: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("481060"),
                u = n("570140"),
                d = n("287259"),
                c = n("819640"),
                f = n("490983"),
                E = n("799777"),
                h = n("5967"),
                C = n("346329"),
                _ = n("981631"),
                m = n("689938"),
                S = n("803844");

            function p(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class I extends s.Component {
                componentDidMount() {
                    document.addEventListener("keydown", this.handleKeyDown)
                }
                componentWillUnmount() {
                    u.default.wait(() => d.updateActiveRowKey(null)), document.removeEventListener("keydown", this.handleKeyDown)
                }
                reset() {
                    d.updateActiveRowKey(null), d.updateLibraryFilter("")
                }
                focusInput() {
                    let {
                        searchBarRef: e
                    } = this;
                    null != e && e.focus()
                }
                updateActiveRow(e) {
                    let {
                        applicationViewItems: t,
                        activeRowKey: n
                    } = this.props, a = t.findIndex(e => e.key === n), s = 0;
                    a >= 0 && (s = (a + e) % t.length) < 0 && (s = t.length - 1);
                    let l = t[s];
                    d.updateActiveRowKey(null != l ? l.key : null, !0)
                }
                render() {
                    let {
                        filterQuery: e
                    } = this.props, {
                        focused: t
                    } = this.state;
                    return (0, a.jsx)("div", {
                        className: i()({
                            [S.libraryFilter]: !0,
                            [S.focused]: t
                        }),
                        children: (0, a.jsx)(o.SearchBar, {
                            className: S.searchBar,
                            ref: this.setRef,
                            onChange: d.updateLibraryFilter,
                            onFocus: () => this.setState({
                                focused: !0
                            }),
                            onBlur: () => this.setState({
                                focused: !1
                            }),
                            name: "filter",
                            onClear: () => {
                                this.reset(), this.focusInput()
                            },
                            maxLength: 100,
                            query: e,
                            placeholder: m.default.Messages.APPLICATION_LIBRARY_FILTER_PLACEHOLDER
                        })
                    })
                }
                constructor(...e) {
                    super(...e), p(this, "searchBarRef", null), p(this, "state", {
                        focused: !1
                    }), p(this, "setRef", e => {
                        this.searchBarRef = e
                    }), p(this, "handleKeyDown", e => {
                        var t;
                        let {
                            activeRowKey: n,
                            hasModalOpen: a,
                            applicationViewItems: s
                        } = this.props, {
                            searchBarRef: l
                        } = this;
                        if (a || e.ctrlKey || e.altKey || e.metaKey || null == l) return;
                        let i = null === (t = (0, h.eventOwnerDocument)(e)) || void 0 === t ? void 0 : t.activeElement;
                        if (!(i !== l.inputRef.current && (0, h.isInputLikeElement)(i))) switch (e.which) {
                            case _.KeyboardKeys.ESCAPE:
                                e.target !== l.inputRef.current ? this.reset() : null != l.inputRef.current && l.blur();
                                break;
                            case _.KeyboardKeys.ENTER:
                                if (null != n) {
                                    e.preventDefault();
                                    let t = s.find(e => e.key === n);
                                    if (null == t) return;
                                    let a = t.libraryApplication;
                                    C.performDefaultLibraryApplicationAction(a, {
                                        analyticsParams: {
                                            source: _.AnalyticsLocations.APPLICATION_LIBRARY,
                                            location: {
                                                page: _.AnalyticsPages.LIBRARY,
                                                section: _.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                                object: _.AnalyticsObjects.BUTTON_CTA
                                            }
                                        }
                                    })
                                }
                                break;
                            case _.KeyboardKeys.ARROW_DOWN:
                            case _.KeyboardKeys.ARROW_UP:
                                e.preventDefault(), e.stopPropagation(), this.updateActiveRow(e.which === _.KeyboardKeys.ARROW_DOWN ? 1 : -1);
                                break;
                            default:
                                null != l.inputRef.current && e.target !== l.inputRef.current && l.focus()
                        }
                    })
                }
            }

            function g() {
                let e = (0, r.useStateFromStores)([c.default], () => c.default.hasLayers()),
                    t = (0, o.useModalsStore)(o.hasAnyModalOpenSelector);
                return (0, a.jsx)(I, {
                    activeRowKey: (0, r.useStateFromStores)([E.default], () => E.default.activeRowKey),
                    hasModalOpen: t || e,
                    filterQuery: (0, r.useStateFromStores)([f.default], () => f.default.applicationFilterQuery),
                    applicationViewItems: (0, r.useStateFromStores)([f.default], () => f.default.sortedFilteredLibraryApplicationViewItems)
                })
            }
        },
        957657: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("984370"),
                r = n("703656"),
                o = n("427828"),
                u = n("626135"),
                d = n("804739"),
                c = n("981631"),
                f = n("689938"),
                E = n("348817");
            let h = (0, d.isSupportedPlatform)() || !1;
            t.default = s.memo(function(e) {
                let {
                    currentRoute: t,
                    renderToolbar: n
                } = e, d = s.useContext(u.AnalyticsContext), C = h || t === c.Routes.APPLICATION_LIBRARY_SETTINGS;
                return (0, a.jsxs)(i.default, {
                    className: E.libraryHeader,
                    toolbar: null == n ? void 0 : n(),
                    children: [(0, a.jsx)(i.default.Icon, {
                        icon: o.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(i.default.Title, {
                        children: f.default.Messages.LIBRARY
                    }), (0, a.jsx)(i.default.Divider, {}), (0, a.jsxs)(l.TabBar, {
                        type: "top-pill",
                        selectedItem: t,
                        onItemSelect: function(e) {
                            e !== t && (0, r.transitionTo)(e, {
                                state: {
                                    analyticsSource: {
                                        ...d.location,
                                        section: c.AnalyticsSections.TABS,
                                        object: c.AnalyticsObjects.NAVIGATION_LINK
                                    }
                                }
                            })
                        },
                        children: [(0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY,
                            children: f.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                        }), C ? (0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY_SETTINGS,
                            children: f.default.Messages.SETTINGS
                        }) : null]
                    })]
                })
            })
        },
        425369: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("613828"),
                i = n("410575"),
                r = n("765717"),
                o = n("252618"),
                u = n("108427"),
                d = n("895991"),
                c = n("993977"),
                f = n("981631"),
                E = n("689938"),
                h = n("262090");

            function C() {
                return (0, a.jsxs)(l.Switch, {
                    children: [(0, a.jsx)(r.default, {
                        path: f.Routes.APPLICATION_LIBRARY_SETTINGS,
                        exact: !0,
                        children: (0, a.jsxs)(i.default, {
                            page: f.AnalyticsPages.LIBRARY_SETTINGS,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: E.default.Messages.SETTINGS
                            }), (0, a.jsx)(c.default, {})]
                        })
                    }), (0, a.jsx)(r.default, {
                        path: f.Routes.APPLICATION_LIBRARY,
                        children: (0, a.jsxs)(i.default, {
                            page: f.AnalyticsPages.LIBRARY,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: E.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                            }), (0, a.jsx)(d.default, {})]
                        })
                    })]
                })
            }
            t.default = s.memo(function() {
                return s.useEffect(() => {
                    (0, u.trackAppUIViewed)("application_library")
                }, []), (0, a.jsxs)("div", {
                    className: h.container,
                    children: [(0, a.jsx)(o.AppPageTitle, {
                        location: E.default.Messages.LIBRARY
                    }), (0, a.jsx)(C, {})]
                })
            })
        },
        645818: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("846519"),
                r = n("481060"),
                o = n("293245"),
                u = n("863969"),
                d = n("563593"),
                c = n("294934"),
                f = n("271322"),
                E = n("981631"),
                h = n("689938");
            let C = new Set([E.CloudSyncStateTypes.PUSHING, E.CloudSyncStateTypes.PULLING]),
                _ = Object.freeze({
                    [E.CloudSyncStateTypes.DONE]: u.default,
                    [E.CloudSyncStateTypes.PLANNING]: u.default,
                    [E.CloudSyncStateTypes.PREPARING]: u.default,
                    [E.CloudSyncStateTypes.PUSHING]: f.default,
                    [E.CloudSyncStateTypes.PULLING]: c.default,
                    [E.CloudSyncStateTypes.CONFLICT]: u.default,
                    [E.CloudSyncStateTypes.ERROR]: u.default
                });
            class m extends s.PureComponent {
                componentDidMount() {
                    this.getIsRecentlySynced() && this.setRecentlySyncedTimeout()
                }
                componentDidUpdate(e) {
                    null != this.props.cloudSyncState && this.props.cloudSyncState.type === E.CloudSyncStateTypes.DONE && null != this.props.cloudSyncState.timestamp && (null == e.cloudSyncState || null == e.cloudSyncState.timestamp) && this.setRecentlySyncedTimeout()
                }
                componentWillUnmount() {
                    this._doneTimer.stop()
                }
                setRecentlySyncedTimeout() {
                    this._doneTimer.start(2e3, () => this.forceUpdate())
                }
                getIsRecentlySynced() {
                    let {
                        cloudSyncState: e
                    } = this.props;
                    if (null != e && e.type === E.CloudSyncStateTypes.DONE) {
                        let t = e.timestamp;
                        return null != t && Date.now() - t <= 2e3
                    }
                    return !1
                }
                getStop(e, t) {
                    if (t) return 1;
                    if (e.type === E.CloudSyncStateTypes.PUSHING || e.type === E.CloudSyncStateTypes.PULLING) {
                        let {
                            progress: t,
                            total: n
                        } = e;
                        return t / n
                    }
                    return 0
                }
                getTooltip(e, t) {
                    switch (e.type) {
                        case E.CloudSyncStateTypes.DONE:
                            if (t) return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_DONE;
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case E.CloudSyncStateTypes.CONFLICT:
                        case E.CloudSyncStateTypes.ERROR:
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case E.CloudSyncStateTypes.PLANNING:
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PLANNING;
                        case E.CloudSyncStateTypes.PREPARING:
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PREPARING;
                        case E.CloudSyncStateTypes.PUSHING:
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PUSHING;
                        case E.CloudSyncStateTypes.PULLING:
                            return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PULLING;
                        default:
                            return null
                    }
                }
                render() {
                    let {
                        cloudSyncState: e,
                        libraryApplication: t,
                        className: n
                    } = this.props, s = null == e ? {
                        type: E.CloudSyncStateTypes.DONE
                    } : e, l = this.getIsRecentlySynced(), i = {};
                    (C.has(s.type) || l) && (i.gradientConfig = {
                        id: t.id,
                        startColor: "rgba(199, 208, 240, 1)",
                        stopColor: "rgba(114, 137, 218, 1)",
                        stop: this.getStop(s, l)
                    });
                    let o = l ? d.default : _[s.type];
                    return (0, a.jsx)(r.Tooltip, {
                        text: this.getTooltip(s, l),
                        children: e => (0, a.jsx)(o, {
                            className: n,
                            ...i,
                            ...e
                        })
                    })
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, n = "_doneTimer", a = new i.Timeout, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }
            t.default = l.default.connectStores([o.default], e => {
                let {
                    libraryApplication: t
                } = e;
                return {
                    cloudSyncState: o.default.getState(t.id, t.branchId)
                }
            })(m)
        },
        34305: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("325432"),
                o = n("391690"),
                u = n("714759"),
                d = n("285952"),
                c = n("546591"),
                f = n("424218"),
                E = n("358085"),
                h = n("998502"),
                C = n("689938"),
                _ = n("341972"),
                m = n("611273");

            function S(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class p extends s.PureComponent {
                renderDiskUsageCircle() {
                    let {
                        metadata: e
                    } = this.props;
                    return null != e && null != e.availableKB && null != e.totalKB ? (0, a.jsx)(u.default, {
                        total: e.totalKB,
                        used: e.totalKB - e.availableKB
                    }) : null
                }
                renderViewing() {
                    let e, t;
                    let {
                        path: n,
                        label: s,
                        editingPath: l,
                        isDefault: r,
                        metadata: u
                    } = this.props;
                    return null != u && (e = null != u.availableKB ? (0, f.formatSize)(u.availableKB, {
                        useKibibytes: !0
                    }) : null, t = null != u.totalKB ? (0, f.formatSize)(u.totalKB, {
                        useKibibytes: !0
                    }) : null), (0, a.jsxs)(d.default, {
                        className: _.installationPath,
                        align: d.default.Align.CENTER,
                        children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: _.__invalid_descriptionWrapper,
                            children: [(0, a.jsxs)(d.default, {
                                align: d.default.Align.CENTER,
                                children: [(0, a.jsx)(i.Heading, {
                                    className: _.rowTitle,
                                    variant: "heading-md/semibold",
                                    children: null != s ? s : o.default.getLabelFromPath(n)
                                }), r ? (0, a.jsx)("span", {
                                    className: _.defaultIndicator,
                                    children: C.default.Messages.DEFAULT
                                }) : null]
                            }), null != u && null != e && null != t ? (0, a.jsx)(c.default, {
                                className: _.rowBody,
                                hoverText: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_SPACE.format({
                                    available: e,
                                    total: t
                                }),
                                children: n
                            }) : (0, a.jsx)(i.Text, {
                                className: _.rowBody,
                                variant: "text-xs/normal",
                                children: n
                            })]
                        }), (0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            disabled: null != l,
                            color: i.Button.Colors.PRIMARY,
                            onClick: this.handleStartEditing,
                            children: C.default.Messages.EDIT
                        })]
                    })
                }
                renderEditing() {
                    let {
                        path: e,
                        hasGamesInstalledInPath: t
                    } = this.props, {
                        label: n,
                        isDefault: s
                    } = this.state;
                    return (0, a.jsx)(i.Card, {
                        editable: !0,
                        className: _.installationPathEditing,
                        children: (0, a.jsxs)(d.default, {
                            children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default.Child, {
                                children: [(0, a.jsx)(i.FormItem, {
                                    title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_NAME,
                                    children: (0, a.jsx)(i.TextInput, {
                                        value: n,
                                        placeholder: o.default.getLabelFromPath(e),
                                        onChange: this.handleLabelChange
                                    })
                                }), (0, a.jsx)(i.FormItem, {
                                    title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION,
                                    className: m.marginTop20,
                                    children: (0, a.jsx)(i.TextInput, {
                                        disabled: !0,
                                        value: e
                                    })
                                }), (0, a.jsx)(i.Checkbox, {
                                    type: i.Checkbox.Types.INVERTED,
                                    value: null != s ? s : this.props.isDefault,
                                    disabled: this.props.isDefault,
                                    className: _.defaultLocationCheckbox,
                                    onChange: this.handleToggleDefault,
                                    children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_MAKE_DEFAULT
                                }), (0, a.jsx)(i.FormDivider, {
                                    className: _.separator
                                }), (0, a.jsxs)(d.default, {
                                    children: [(0, a.jsx)(i.Button, {
                                        disabled: t || this.props.isDefault,
                                        size: i.Button.Sizes.SMALL,
                                        color: i.Button.Colors.RED,
                                        look: i.Button.Looks.OUTLINED,
                                        onClick: this.handleRemoveLocation,
                                        children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE
                                    }), (0, a.jsxs)(d.default, {
                                        justify: d.default.Justify.END,
                                        children: [(0, a.jsx)(i.Button, {
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.PRIMARY,
                                            look: i.Button.Looks.LINK,
                                            onClick: this.handleStopEditing,
                                            children: C.default.Messages.CANCEL
                                        }), (0, a.jsx)(i.Button, {
                                            disabled: e === this.props.path && n === this.props.label && s === this.props.isDefault,
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.GREEN,
                                            onClick: this.handleSaveChanges,
                                            children: C.default.Messages.SAVE
                                        })]
                                    })]
                                })]
                            })]
                        })
                    })
                }
                render() {
                    return this.props.editingPath === this.props.path ? this.renderEditing() : this.renderViewing()
                }
                constructor(...e) {
                    super(...e), S(this, "state", {
                        label: void 0,
                        isDefault: null
                    }), S(this, "handleStartEditing", () => {
                        let {
                            path: e,
                            label: t,
                            isDefault: n,
                            onToggleEditing: a
                        } = this.props;
                        a(e), this.setState({
                            label: t,
                            isDefault: n
                        })
                    }), S(this, "handleStopEditing", () => {
                        let {
                            onToggleEditing: e
                        } = this.props;
                        e(null), this.setState({
                            label: void 0,
                            isDefault: null
                        })
                    }), S(this, "handleRemoveLocation", () => {
                        (0, i.openModal)(e => (0, a.jsx)(i.ConfirmModal, {
                            ...e,
                            header: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            confirmText: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            cancelText: C.default.Messages.CANCEL,
                            onConfirm: () => {
                                this.handleStopEditing(), (0, r.removeInstallLocation)(this.props.path)
                            },
                            children: (0, a.jsx)(i.Text, {
                                variant: "text-md/normal",
                                children: C.default.Messages.USER_SETTINGS_GAMES_REMOVE_LOCATION_BODY
                            })
                        }))
                    }), S(this, "handleSaveChanges", () => {
                        (0, r.updateInstallLocation)(this.props.path, {
                            label: null != this.state.label ? this.state.label : this.props.label,
                            isDefault: null != this.state.isDefault ? this.state.isDefault : this.props.isDefault
                        }), this.handleStopEditing()
                    }), S(this, "handleLabelChange", e => {
                        this.setState({
                            label: e
                        })
                    }), S(this, "handleToggleDefault", () => {
                        this.setState({
                            isDefault: !this.state.isDefault
                        })
                    })
                }
            }
            class I extends s.PureComponent {
                componentDidMount() {
                    (0, r.fetchMetadata)(this.props.installationPaths.map(e => {
                        let {
                            path: t
                        } = e;
                        return t
                    }))
                }
                render() {
                    let {
                        installationPaths: e,
                        installationPathsMetadata: t,
                        defaultInstallationPath: n
                    } = this.props, {
                        editingPath: s
                    } = this.state;
                    return (0, a.jsxs)(i.FormSection, {
                        className: _.wrapper,
                        title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATIONS,
                        children: [e.map(e => {
                            let {
                                path: l,
                                label: i
                            } = e;
                            return (0, a.jsx)(p, {
                                path: l,
                                label: i,
                                metadata: t[l],
                                isDefault: n === l,
                                editingPath: s,
                                hasGamesInstalledInPath: o.default.hasGamesInstalledInPath(l),
                                onToggleEditing: this.handleToggleEditing
                            }, l)
                        }), (0, a.jsx)("div", {
                            className: _.buttonRowWrapper,
                            children: (0, a.jsx)(i.Button, {
                                disabled: !E.isPlatformEmbedded,
                                onClick: this.handleAddInstallationLocation,
                                size: i.Button.Sizes.SMALL,
                                children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_ADD
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), S(this, "state", {
                        editingPath: null
                    }), S(this, "handleAddInstallationLocation", () => {
                        h.default.showOpenDialog(["openDirectory"]).then(e => {
                            null != e && 0 !== e.length && null != e[0] && "undefined" !== e[0] && (0, r.addInstallLocation)(e[0])
                        })
                    }), S(this, "handleToggleEditing", e => {
                        this.setState({
                            editingPath: e
                        })
                    })
                }
            }
            t.default = l.default.connectStores([o.default], () => ({
                installationPaths: o.default.installationPaths,
                installationPathsMetadata: o.default.installationPathsMetadata,
                defaultInstallationPath: o.default.defaultInstallationPath
            }))(I)
        },
        895991: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("570140"),
                u = n("150063"),
                d = n("274616"),
                c = n("827837"),
                f = n("410575"),
                E = n("3570"),
                h = n("237919"),
                C = n("957657"),
                _ = n("665307"),
                m = n("530151"),
                S = n("981631"),
                p = n("186901"),
                I = n("47789");

            function g(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class T extends s.PureComponent {
                componentDidMount() {
                    u.setHomeLink(S.Routes.APPLICATION_LIBRARY), (0, E.deepLinkRouteIfLanded)(p.RPCDeepLinks.LIBRARY), o.default.wait(() => (0, d.fetchBranches)()), (0, c.fetchActivityStatistics)(), null != this._scrollToOnMount && null != this._scrollerRef.current && this.scrollToRow(this._scrollToOnMount, this._scrollToPadding)
                }
                renderToolbar() {
                    return (0, a.jsx)(h.default, {})
                }
                render() {
                    let {
                        includeUpdatesInScroller: e
                    } = this.state, t = (0, a.jsx)("div", {
                        children: (0, a.jsx)(f.default, {
                            section: S.AnalyticsSections.LIBRARY_INSTALL_MODULE,
                            children: (0, a.jsx)(m.default, {
                                onHeightTallerThanHalfViewportChange: this.handleHeightTallerThanHalfViewportChange
                            })
                        })
                    });
                    return (0, a.jsxs)(s.Fragment, {
                        children: [(0, a.jsx)(C.default, {
                            currentRoute: S.Routes.APPLICATION_LIBRARY,
                            renderToolbar: this.renderToolbar
                        }), e ? null : t, (0, a.jsxs)(r.AdvancedScrollerAuto, {
                            className: i()(I.container, I.scroller),
                            ref: this._scrollerRef,
                            children: [e ? t : null, (0, a.jsx)(f.default, {
                                section: S.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                children: (0, a.jsx)(_.default, {
                                    stickyHeader: !e,
                                    scrollToRow: this.scrollToRow
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), g(this, "_scrollerRef", s.createRef()), g(this, "_scrollToOnMount", void 0), g(this, "_scrollToPadding", 0), g(this, "state", {
                        includeUpdatesInScroller: !1
                    }), g(this, "handleHeightTallerThanHalfViewportChange", e => {
                        this.setState({
                            includeUpdatesInScroller: e
                        })
                    }), g(this, "scrollToRow", (e, t) => {
                        let n = this._scrollerRef.current;
                        null != n ? (e.focus(), n.scrollIntoViewRect({
                            start: t,
                            end: t
                        }), this._scrollToOnMount = null) : (this._scrollToOnMount = e, this._scrollToPadding = t)
                    })
                }
            }
        },
        993977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("58642"),
                o = n("695346"),
                u = n("490983"),
                d = n("285952"),
                c = n("465670"),
                f = n("626135"),
                E = n("630388"),
                h = n("804739"),
                C = n("957657"),
                _ = n("34305"),
                m = n("981631"),
                S = n("689938"),
                p = n("365326");

            function I(e) {
                let {
                    applicationViewItems: t,
                    restoreApplication: n
                } = e;
                if (0 === t.length) return null;
                let s = t.map(e => {
                    let t = e.libraryApplication.getDistributor();
                    return (0, a.jsxs)("div", {
                        className: p.hiddenLibraryApplication,
                        children: [(0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: p.hiddenLibraryApplicationContent,
                            children: [(0, a.jsx)("div", {
                                className: p.applicationName,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), null != t ? (0, a.jsx)("div", {
                                className: p.applicationSubText,
                                children: m.DistributorNames[t]
                            }) : null]
                        }), (0, a.jsx)(i.Clickable, {
                            className: p.restoreButton,
                            onClick: () => n(e.libraryApplication),
                            children: (0, a.jsx)(c.default, {
                                className: p.restoreIcon
                            })
                        })]
                    }, e.key)
                });
                return (0, a.jsxs)(i.FormSection, {
                    className: p.hiddenLibraryApplications,
                    children: [(0, a.jsx)(i.FormTitle, {
                        className: p.hiddenLibraryApplicationsTitle,
                        children: S.default.Messages.SETTINGS_GAMES_HIDDEN_LIBRARY_APPLICATIONS_LABEL
                    }), s]
                })
            }
            class g extends s.PureComponent {
                handleToggleShortcutDesktop(e) {
                    o.InstallShortcutDesktop.updateSetting(e)
                }
                handleToggleShortcutStartMenu(e) {
                    o.InstallShortcutStartMenu.updateSetting(e)
                }
                trackRestoreApplication(e, t) {
                    f.default.track(m.AnalyticEvents.APPLICATION_SETTINGS_UPDATED, {
                        hidden_enabled: t,
                        ...e.getAnalyticsData()
                    })
                }
                renderBody() {
                    let {
                        hiddenLibraryApplicationViewItems: e,
                        installShortcutDesktop: t,
                        installShortcutStartMenu: n
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        className: p.body,
                        children: [(0, h.isSupportedPlatform)() ? (0, a.jsxs)(s.Fragment, {
                            children: [(0, a.jsx)(i.FormSwitch, {
                                value: t,
                                onChange: this.handleToggleShortcutDesktop,
                                note: S.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP_NOTE,
                                children: S.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP
                            }), (0, a.jsx)(i.FormSwitch, {
                                value: n,
                                onChange: this.handleToggleShortcutStartMenu,
                                note: S.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU_NOTE,
                                children: S.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU
                            }), (0, a.jsx)(_.default, {})]
                        }) : null, (0, a.jsx)(I, {
                            restoreApplication: this.handleRestoreHiddenLibraryApplication,
                            applicationViewItems: e
                        })]
                    })
                }
                render() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(C.default, {
                            currentRoute: m.Routes.APPLICATION_LIBRARY_SETTINGS
                        }), (0, a.jsx)(i.ScrollerAuto, {
                            className: p.scroller,
                            children: this.renderBody()
                        })]
                    })
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, n = "handleRestoreHiddenLibraryApplication", a = e => {
                        let t = E.toggleFlag(e.getFlags(), m.LibraryApplicationFlags.HIDDEN);
                        r.updateFlags(e.id, e.branchId, t), this.trackRestoreApplication(e, E.hasFlag(t, m.LibraryApplicationFlags.HIDDEN))
                    }, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }

            function T() {
                let e = {
                    installShortcutDesktop: o.InstallShortcutDesktop.useSetting(),
                    installShortcutStartMenu: o.InstallShortcutStartMenu.useSetting(),
                    hiddenLibraryApplicationViewItems: (0, l.useStateFromStores)([u.default], () => u.default.hiddenLibraryApplicationViewItems)
                };
                return (0, a.jsx)(g, {
                    ...e
                })
            }
        },
        665307: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return F
                }
            }), n("411104"), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("120356"),
                r = n.n(i),
                o = n("613828"),
                u = n("442837"),
                d = n("846519"),
                c = n("477690"),
                f = n("481060"),
                E = n("570140"),
                h = n("239091"),
                C = n("287259"),
                _ = n("785547"),
                m = n("490983"),
                S = n("799777"),
                p = n("285952"),
                I = n("366695"),
                g = n("366966"),
                T = n("151011"),
                A = n("880008"),
                N = n("466111"),
                v = n("931003"),
                R = n("626135"),
                O = n("780570"),
                L = n("624138"),
                P = n("645818"),
                y = n("981631"),
                M = n("689938"),
                D = n("638920");

            function x(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let b = (0, L.cssValueToNumber)(c.default.GAME_LIST_ROW_MIN_HEIGHT),
                U = (0, L.cssValueToNumber)(c.default.GAME_LIST_LINKED_TO_GLOW_DURATION),
                j = Object.freeze({
                    [y.GameTableListKeys.PLATFORM]: "Platform",
                    [y.GameTableListKeys.LAST_PLAYED]: "Last Played",
                    [y.GameTableListKeys.NAME]: "Name"
                }),
                G = e => {
                    let {
                        flag: t,
                        icon: n,
                        item: a,
                        tooltip: l
                    } = e, i = a.libraryApplication.hasFlag(t);
                    return (0, s.jsx)(f.Tooltip, {
                        text: l,
                        children: e => (0, s.jsx)(n, {
                            className: r()(D.settingIcon, {
                                [D.hidden]: !i
                            }),
                            ...e
                        })
                    })
                },
                w = [{
                    key: y.GameTableListKeys.NAME,
                    renderHeader: () => M.default.Messages.GAME_LIBRARY_LIST_HEADER_NAME,
                    sort: !0,
                    cellClassName: D.nameCell,
                    bodyCellClassName: D.nameBodyCell,
                    render: e => (0, s.jsxs)(p.default, {
                        align: p.default.Align.CENTER,
                        children: [(0, s.jsx)(I.default, {
                            game: e.application,
                            size: I.default.Sizes.SMALL,
                            className: D.gameIcon
                        }), (0, s.jsxs)("div", {
                            className: D.nameCellInfo,
                            children: [(0, s.jsx)("div", {
                                className: D.nameCellText,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), e.libraryApplication.hasFlag(y.LibraryApplicationFlags.PREMIUM) ? (0, s.jsx)(f.Tooltip, {
                                text: M.default.Messages.PREMIUM_GAME,
                                children: e => (0, s.jsx)(N.default, {
                                    className: D.nitroIcon,
                                    ...e
                                })
                            }) : null]
                        })]
                    })
                }, {
                    key: y.GameTableListKeys.PLATFORM,
                    renderHeader: () => M.default.Messages.GAME_LIBRARY_LIST_HEADER_PLATFORM,
                    sort: !0,
                    cellClassName: D.platformCell,
                    bodyCellClassName: D.textCell,
                    render(e) {
                        let t = e.libraryApplication.getDistributor();
                        return (0, s.jsx)(p.default, {
                            align: p.default.Align.CENTER,
                            children: null != t ? y.DistributorNames[t] : M.default.Messages.GAME_LIBRARY_NOT_APPLICABLE
                        })
                    }
                }, {
                    key: y.GameTableListKeys.LAST_PLAYED,
                    renderHeader: () => M.default.Messages.GAME_LIBRARY_LIST_HEADER_LAST_PLAYED,
                    sort: !0,
                    cellClassName: D.lastPlayedCell,
                    bodyCellClassName: D.textCell,
                    render(e) {
                        let t;
                        return t = e.isRunning ? M.default.Messages.GAME_LIBRARY_LAST_PLAYED_PLAYING_NOW : e.isNew ? M.default.Messages.GAME_LIBRARY_NEW : 0 !== e.lastPlayed ? (0, s.jsx)(g.default, {
                            end: e.lastPlayed,
                            location: g.default.Locations.GAME_LIBRARY_LAST_PLAYED
                        }) : M.default.Messages.GAME_LIBRARY_LAST_PLAYED_NONE, (0, s.jsx)(p.default, {
                            align: p.default.Align.CENTER,
                            className: r()({
                                [D.lastPlayedCellNew]: e.isNew
                            }),
                            children: t
                        })
                    }
                }, {
                    key: y.GameTableListKeys.ACTIONS,
                    renderHeader: () => null,
                    cellClassName: D.actionsCell,
                    render(e, t, n) {
                        var a, i;
                        if (null == t) throw Error("No cell props defined.");
                        let o = e.key === t.activeRowKey;
                        return (0, s.jsxs)(l.Fragment, {
                            children: [(0, s.jsxs)("div", {
                                className: D.settingIcons,
                                children: [(0, s.jsx)(G, {
                                    flag: y.LibraryApplicationFlags.PRIVATE,
                                    item: e,
                                    icon: A.default,
                                    tooltip: M.default.Messages.GAME_LIBRARY_PRIVATE_TOOLTIP
                                }), (0, s.jsx)(G, {
                                    flag: y.LibraryApplicationFlags.OVERLAY_DISABLED,
                                    item: e,
                                    icon: v.default,
                                    tooltip: M.default.Messages.GAME_LIBRARY_OVERLAY_DISABLED_TOOLTIP
                                }), (0, s.jsx)(P.default, {
                                    className: r()(D.settingIcon, {
                                        [D.hidden]: !e.supportsCloudSync
                                    }),
                                    libraryApplication: e.libraryApplication
                                })]
                            }), (0, O.isUserEntitledToLibraryApplication)(e.libraryApplication) ? (0, s.jsx)(_.default, {
                                analyticsListSort: (a = t.sortKey, i = t.sortDirection, "".concat(j[a], " ").concat(i === y.TableSortDirections.ASCENDING ? "ASC" : "DESC")),
                                analyticsListIndex: n,
                                source: y.AnalyticsLocations.APPLICATION_LIBRARY,
                                libraryApplication: e.libraryApplication,
                                color: o ? f.Button.Colors.GREEN : f.Button.Colors.PRIMARY,
                                isPlayShiny: o && e.defaultAction === y.LibraryApplicationActions.PLAY,
                                size: D.actionButtonSize,
                                hideProgress: null != e.defaultAction,
                                onDropdownOpen: () => null != t && t.setActiveRowKey(e),
                                onDropdownClose: () => null != t && t.clearActiveRowKey()
                            }) : (0, s.jsx)("div", {
                                children: "deprecated!"
                            })]
                        })
                    }
                }],
                k = e => {
                    let {
                        item: t,
                        activeRowKey: n,
                        highlightedApplicationKey: a,
                        onMouseEnter: l,
                        onMouseLeave: i,
                        onContextMenu: o,
                        setRef: u,
                        ...d
                    } = e, c = t.key === n, f = t.key === a;
                    return (0, s.jsx)("div", {
                        className: r()({
                            [D.rowWrapperActive]: c && !f,
                            [D.rowWrapperGlow]: f,
                            [D.rowWrapper]: !c && !f,
                            [D.rowWrapperDim]: !c && !t.isLaunchable
                        }),
                        ref: e => u(e, t.key),
                        onMouseEnter: () => l(t),
                        onMouseLeave: i,
                        onContextMenu: e => o(e, t),
                        children: (0, s.jsx)("div", {
                            ...d
                        })
                    })
                };
            class B extends(a = l.PureComponent) {
                componentDidMount() {
                    let {
                        fetched: e
                    } = this.props;
                    e && (this.handleHighlightedApplicationKey(), this.trackViewed())
                }
                componentWillUnmount() {
                    this._didUnmount = !0
                }
                componentDidUpdate(e) {
                    !e.fetched && this.props.fetched && (this.handleHighlightedApplicationKey(), this.trackViewed());
                    let t = this.props.activeRowKey;
                    if (null != t && e.activeRowKey !== t && this.props.isNavigatingByKeyboard) {
                        let e = this._rowRefs[t];
                        null != e && (E.default.wait(h.closeContextMenu), this.props.scrollToRow(e, b))
                    }
                }
                handleHighlightedApplicationKey() {
                    let {
                        highlightedApplicationKey: e
                    } = this.state;
                    null != e && null != this._rowRefs[e] && (this.props.scrollToRow(this._rowRefs[e], b), new d.Timeout().start(U, () => {
                        !this._didUnmount && this.setState({
                            highlightedApplicationKey: null
                        })
                    }))
                }
                trackViewed() {
                    let e = {
                            num_applications_total: 0,
                            num_applications_discord: 0,
                            num_applications_steam: 0,
                            num_applications_battlenet: 0,
                            num_applications_twitch: 0,
                            num_applications_uplay: 0,
                            num_applications_origin: 0,
                            num_applications_gog: 0,
                            num_applications_epic: 0
                        },
                        {
                            analyticsContext: t,
                            applicationViewItems: n
                        } = this.props;
                    for (let t of n) {
                        switch (t.libraryApplication.getDistributor()) {
                            case y.Distributors.DISCORD:
                                e.num_applications_discord++;
                                break;
                            case y.Distributors.STEAM:
                                e.num_applications_steam++;
                                break;
                            case y.Distributors.BATTLENET:
                                e.num_applications_battlenet++;
                                break;
                            case y.Distributors.TWITCH:
                                e.num_applications_twitch++;
                                break;
                            case y.Distributors.UPLAY:
                                e.num_applications_uplay++;
                                break;
                            case y.Distributors.ORIGIN:
                                e.num_applications_origin++;
                                break;
                            case y.Distributors.GOG:
                                e.num_applications_gog++;
                                break;
                            case y.Distributors.EPIC:
                                e.num_applications_epic++
                        }
                        e.num_applications_total++
                    }
                    R.default.track(y.AnalyticEvents.LIBRARY_VIEWED, {
                        ...e,
                        load_id: t.loadId
                    })
                }
                handleSort(e, t) {
                    C.sortList(e, t)
                }
                renderImportHelp() {
                    let e;
                    let {
                        applicationViewItems: t,
                        filterQuery: n
                    } = this.props, a = t.length > 0;
                    return a ? null : (e = "" !== n ? M.default.Messages.APPLICATION_LIBRARY_EMPTY_SEARCH_DESCRIPTION.format({
                        query: n
                    }) : M.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_DESCRIPTION_NO_IMPORT, (0, s.jsxs)("div", {
                        className: a ? D.emptyStateSmall : D.emptyStateLarge,
                        children: [(0, s.jsx)("div", {
                            className: D.emptyWumpus
                        }), (0, s.jsx)(p.default, {
                            grow: 0,
                            shrink: a ? 1 : 0,
                            direction: p.default.Direction.VERTICAL,
                            children: (0, s.jsxs)("div", {
                                className: D.emptyStateText,
                                children: [(0, s.jsx)("div", {
                                    className: D.emptyStateHeader,
                                    children: M.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_HEADER
                                }), (0, s.jsx)("div", {
                                    className: D.emptyStateDescription,
                                    children: e
                                })]
                            })
                        })]
                    }))
                }
                render() {
                    let {
                        sortKey: e,
                        sortDirection: t,
                        applicationViewItems: n,
                        activeRowKey: a,
                        stickyHeader: i
                    } = this.props, {
                        overflowMenuRowKey: r,
                        highlightedApplicationKey: o
                    } = this.state;
                    return (0, s.jsxs)(l.Fragment, {
                        children: [n.length > 0 ? (0, s.jsx)(T.default, {
                            columns: w,
                            data: n,
                            sortData: !1,
                            rowComponent: k,
                            className: D.table,
                            headerClassName: i ? D.stickyHeader : D.header,
                            headerCellClassName: D.headerCell,
                            sortedHeaderCellClassName: D.headerCellSorted,
                            bodyCellClassName: D.bodyCell,
                            rowClassName: D.row,
                            sortKey: e,
                            sortDirection: t,
                            stickyHeader: i,
                            rowProps: {
                                activeRowKey: null != r ? r : a,
                                highlightedApplicationKey: o,
                                onMouseEnter: this.handleRowMouseEnter,
                                onMouseLeave: this.handleRowMouseLeave,
                                onContextMenu: this.handleApplicationContextMenu,
                                setRef: this.setRowRef
                            },
                            cellProps: {
                                activeRowKey: null != r ? r : a,
                                onContextMenu: this.handleApplicationContextMenu,
                                setActiveRowKey: this.setActiveRowKey,
                                clearActiveRowKey: this.clearActiveRowKey,
                                sortKey: e,
                                sortDirection: t
                            },
                            onSort: this.handleSort
                        }) : null, this.renderImportHelp()]
                    })
                }
                constructor(...e) {
                    super(...e), x(this, "_didUnmount", !1), x(this, "_rowRefs", {}), x(this, "state", {
                        overflowMenuRowKey: null,
                        highlightedApplicationKey: null != this.props.location.state ? this.props.location.state.applicationId : null
                    }), x(this, "setActiveRowKey", e => {
                        this.setState({
                            overflowMenuRowKey: e.key
                        })
                    }), x(this, "clearActiveRowKey", () => {
                        !this._didUnmount && this.setState({
                            overflowMenuRowKey: null
                        })
                    }), x(this, "handleRowMouseEnter", e => {
                        !this.props.isNavigatingByKeyboard && C.updateActiveRowKey(e.key)
                    }), x(this, "handleRowMouseLeave", () => {
                        !this.props.isNavigatingByKeyboard && C.updateActiveRowKey(null)
                    }), x(this, "setRowRef", (e, t) => {
                        this._rowRefs[t] = e
                    }), x(this, "handleApplicationContextMenu", (e, t) => {
                        this.setActiveRowKey(t);
                        let {
                            analyticsContext: a
                        } = this.props;
                        (0, h.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.e("98335").then(n.bind(n, "485292"));
                            return n => (0, s.jsx)(e, {
                                ...n,
                                applicationId: t.libraryApplication.id,
                                branchId: t.libraryApplication.branchId,
                                analyticsContext: a
                            })
                        }, {
                            onClose: this.clearActiveRowKey
                        })
                    })
                }
            }

            function F(e) {
                let t = l.useContext(R.AnalyticsContext),
                    n = (0, o.useLocation)(),
                    {
                        applicationViewItems: a,
                        filterQuery: i,
                        fetched: r
                    } = (0, u.useStateFromStoresObject)([m.default], () => ({
                        applicationViewItems: m.default.sortedFilteredLibraryApplicationViewItems,
                        filterQuery: m.default.applicationFilterQuery,
                        fetched: m.default.hasFetchedApplications
                    })),
                    {
                        sortKey: d,
                        sortDirection: c,
                        activeRowKey: f,
                        isNavigatingByKeyboard: E
                    } = (0, u.useStateFromStoresObject)([S.default], () => ({
                        sortKey: S.default.sortKey,
                        sortDirection: S.default.sortDirection,
                        activeRowKey: S.default.activeRowKey,
                        isNavigatingByKeyboard: S.default.isNavigatingByKeyboard
                    }));
                return (0, s.jsx)(B, {
                    ...e,
                    analyticsContext: t,
                    location: n,
                    applicationViewItems: a,
                    filterQuery: i,
                    fetched: r,
                    sortKey: d,
                    sortDirection: c,
                    activeRowKey: f,
                    isNavigatingByKeyboard: E
                })
            }
            x(B, "defaultProps", {
                stickyHeader: !1
            })
        },
        86826: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("44315"),
                r = n("285952"),
                o = n("441996"),
                u = n("353042"),
                d = n("689938"),
                c = n("325349");
            t.default = function(e) {
                var t;
                let {
                    title: n,
                    className: s,
                    color: f,
                    animate: E,
                    gradientStopColor: h,
                    getHistoricalTotalBytes: C
                } = e, _ = (0, i.useColorValue)(f).hex, m = null === (t = (0, i.useColorValue)(h)) || void 0 === t ? void 0 : t.hex;
                return (0, a.jsx)(u.default, {
                    getHistoricalTotalBytes: C,
                    children: (e, t, i) => {
                        var u;
                        return (0, a.jsx)("div", {
                            className: l()(c.monitor, s),
                            children: (0, a.jsxs)(r.default, {
                                align: r.default.Align.CENTER,
                                children: [(0, a.jsxs)(r.default, {
                                    className: c.text,
                                    direction: r.default.Direction.VERTICAL,
                                    children: [(0, a.jsx)("div", {
                                        className: c.title,
                                        children: n
                                    }), (0, a.jsx)("div", {
                                        className: c.rate,
                                        children: (u = e[e.length - 1] / t * 1e3) > 1e3 ? d.default.Messages.FILE_RATE_MB.format({
                                            size: Math.round(u / 1e3)
                                        }) : d.default.Messages.FILE_RATE_KB.format({
                                            size: Math.round(u)
                                        })
                                    })]
                                }), (0, a.jsx)("div", {
                                    className: c.overflowContainer,
                                    children: (0, a.jsx)(o.default, {
                                        data: e,
                                        maxValue: Math.max(Math.max.apply(null, e), 1e3),
                                        className: c.sparkChart,
                                        updateInterval: t,
                                        color: _,
                                        gradientStopColor: m,
                                        numUpdatesToShow: i,
                                        animate: E,
                                        pixelWidth: 600,
                                        pixelHeight: 48,
                                        lineWidth: 4
                                    })
                                })]
                            })
                        })
                    }
                })
            }
        },
        530151: function(e, t, n) {
            "use strict";
            n.r(t), n("411104"), n("47120"), n("724458"), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("392711"),
                o = n.n(r),
                u = n("442837"),
                d = n("692547"),
                c = n("780384"),
                f = n("481060"),
                E = n("570140"),
                h = n("239091"),
                C = n("51025"),
                _ = n("785547"),
                m = n("730749"),
                S = n("112724"),
                p = n("812206"),
                I = n("44315"),
                g = n("210887"),
                T = n("283595"),
                A = n("417363"),
                N = n("941128"),
                v = n("451478"),
                R = n("285952"),
                O = n("366695"),
                L = n("366966"),
                P = n("151011"),
                y = n("774832"),
                M = n("465670"),
                D = n("786048"),
                x = n("897353"),
                b = n("424218"),
                U = n("780570"),
                j = n("353042"),
                G = n("86826"),
                w = n("981631"),
                k = n("689938"),
                B = n("31931");

            function F(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let H = e => {
                    let {
                        className: t,
                        children: n,
                        onContextMenu: s,
                        item: l
                    } = e;
                    return (0, a.jsx)("div", {
                        className: t,
                        onContextMenu: e => s(e, l),
                        children: n
                    })
                },
                V = [d.default.unsafe_rawColors.BLUE_345.css, d.default.colors.INTERACTIVE_NORMAL.css],
                Y = e => {
                    let {
                        tooltip: t,
                        onClick: n,
                        icon: s
                    } = e;
                    return (0, a.jsx)(f.Tooltip, {
                        text: t,
                        children: e => {
                            let {
                                onMouseEnter: l,
                                onMouseLeave: i
                            } = e;
                            return (0, a.jsx)(f.Button, {
                                "aria-label": t,
                                className: B.actionButton,
                                innerClassName: B.actionButtonContents,
                                color: f.Button.Colors.PRIMARY,
                                size: f.Button.Sizes.ICON,
                                onClick: n,
                                onMouseEnter: l,
                                onMouseLeave: i,
                                children: (0, a.jsx)(s, {
                                    className: B.actionIcon
                                })
                            })
                        }
                    })
                };

            function W(e, t) {
                switch (t) {
                    case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                    case w.DispatchApplicationStages.PLANNING:
                    case w.DispatchApplicationStages.FINALIZING:
                    case w.DispatchApplicationStages.ALLOCATING_DISK:
                        return "".concat(e);
                    default:
                        return (0, b.formatSize)(e, {
                            useKibibytes: !0
                        })
                }
            }
            let K = {
                [w.LocalDispatchApplicationStates.INSTALLING]: {
                    [L.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [L.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [w.LocalDispatchApplicationStates.UPDATING]: {
                    [L.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [L.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [w.LocalDispatchApplicationStates.REPAIRING]: {
                    [L.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [L.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [L.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                }
            };

            function z(e, t, n, a, s) {
                let l = K[t],
                    i = null != l ? Object.keys(l) : [],
                    {
                        unit: r,
                        time: o
                    } = (0, L.getTimeAndUnit)(null != e ? e / 60 : null, i);
                if (null != l && null != r) {
                    let e = l[r];
                    return null != e ? e(n, a, s, o) : null
                }
                return null
            }

            function q(e) {
                let {
                    type: t,
                    stage: n,
                    percent: a,
                    progress: s,
                    total: l,
                    secondsRemaining: i
                } = e, r = W(l, n), o = W(s, n);
                switch (n) {
                    case w.DispatchApplicationStages.QUEUED:
                        if (0 === s) return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER_NO_TRANSITION;
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.PLANNING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PLANNING.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.ALLOCATING_DISK:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_ALLOCATING_DISK.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.PATCHING:
                        return z(i, t, a, o, r);
                    case w.DispatchApplicationStages.FINALIZING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINALIZING.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.PAUSING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.VERIFYING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_VERIFYING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_POST_INSTALL_SCRIPTS.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.REPAIRING:
                        if (t === w.LocalDispatchApplicationStates.REPAIRING) return z(i, t, a, o, r);
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_REPAIRING.format({
                            percent: a,
                            progress: o,
                            total: r
                        })
                }
                throw Error("Invalid Dispatch stage")
            }
            let Q = {
                NAME: "name",
                PROGRESS: "progress",
                ACTIONS: "actions"
            };
            class Z extends s.PureComponent {
                get isFocused() {
                    let {
                        cellProps: e
                    } = this.props;
                    return null != e && e.isFocused
                }
                renderBody(e) {
                    let {
                        percent: t,
                        foregroundColor: n,
                        foregroundGradientColor: s,
                        message: l
                    } = e;
                    return (0, a.jsxs)(R.default, {
                        direction: R.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(f.Progress, {
                            percent: t,
                            size: f.Progress.Sizes.SMALL,
                            foregroundColor: (0, I.getColor)(n),
                            foregroundGradientColor: null != s ? [(0, I.getColor)(s[0]), (0, I.getColor)(s[1])] : void 0,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: B.progressCellText,
                            children: null != l ? l : ""
                        })]
                    })
                }
                renderStackedProgress(e) {
                    let {
                        percents: t,
                        message: n
                    } = e;
                    return (0, a.jsxs)(R.default, {
                        direction: R.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(f.StackedProgress, {
                            percents: t,
                            size: f.Progress.Sizes.SMALL,
                            foregroundColors: V,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: B.progressCellText,
                            children: null != n ? n : ""
                        })]
                    })
                }
                renderFinished() {
                    let {
                        item: e
                    } = this.props;
                    return this.renderBody({
                        message: k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINISHED.format({
                            remove: () => C.removeFinished(e.applicationId, e.branchId)
                        }),
                        foregroundColor: (0, c.isThemeLight)(e.theme) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        percent: 100
                    })
                }
                renderQueued() {
                    let e, t;
                    let {
                        item: {
                            state: n,
                            theme: a
                        }
                    } = this.props;
                    if (null != n) {
                        let {
                            progress: a,
                            total: s,
                            stage: l
                        } = n;
                        if (null != a && null != s) {
                            let n = W(s, l),
                                i = W(a, l),
                                r = Math.floor(t = U.calculateProgressPercentage(a, s));
                            e = l === w.DispatchApplicationStages.PAUSING ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                                percent: r,
                                progress: i,
                                total: n
                            }) : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED.format({
                                percent: r,
                                progress: i,
                                total: n
                            })
                        }
                    }
                    return (null == t || null == e) && (t = 0, e = k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED_NO_TRANSITION), this.renderBody({
                        percent: t,
                        foregroundColor: (0, c.isThemeLight)(a) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        message: e
                    })
                }
                renderPaused() {
                    let {
                        item: {
                            state: e,
                            theme: t
                        }
                    } = this.props;
                    if (null == e) return null;
                    let {
                        progress: n,
                        total: a
                    } = e;
                    if (null == n || null == a) return null;
                    let s = U.calculateProgressPercentage(n, a),
                        l = 0 === n && 1 === a ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED_NO_TRANSITION : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED.format({
                            percent: Math.floor(s),
                            progress: (0, b.formatSize)(n),
                            total: (0, b.formatSize)(a)
                        });
                    return this.renderBody({
                        message: l,
                        foregroundColor: (0, c.isThemeLight)(t) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        percent: s
                    })
                }
                renderProgressPatching() {
                    return (0, a.jsx)(j.default, {
                        getHistoricalTotalBytes: A.default.getHistoricalTotalBytesWritten,
                        updateInterval: 5e3,
                        children: this.renderProgressPatchingBody
                    })
                }
                renderProgressDefault() {
                    let {
                        state: e
                    } = this.props.item;
                    if (null == e) return null;
                    let {
                        total: t,
                        progress: n,
                        stage: a,
                        type: s
                    } = e;
                    if (null == t || null == n || null == a) return null;
                    let l = U.calculateProgressPercentage(n, t),
                        i = Math.floor(l);
                    return this.renderBody({
                        percent: l,
                        message: q({
                            type: s,
                            stage: a,
                            percent: i,
                            progress: n,
                            total: t
                        }),
                        foregroundColor: w.Color.BLUE_345
                    })
                }
                renderProgress() {
                    let {
                        state: e
                    } = this.props.item;
                    switch (null != e ? e.stage : null) {
                        case w.DispatchApplicationStages.PATCHING:
                        case w.DispatchApplicationStages.REPAIRING:
                            return this.renderProgressPatching();
                        default:
                            return this.renderProgressDefault()
                    }
                }
                render() {
                    let {
                        item: e,
                        cellProps: t
                    } = this.props;
                    if (e.finished) return this.renderFinished();
                    if (e.index > 0) return this.renderQueued();
                    if (null != e.state && (e.state.type === w.LocalDispatchApplicationStates.UPDATING || e.state.type === w.LocalDispatchApplicationStates.REPAIRING || e.state.type === w.LocalDispatchApplicationStates.INSTALLING)) return null != t && t.paused ? this.renderPaused() : this.renderProgress();
                    return null
                }
                constructor(...e) {
                    super(...e), F(this, "renderProgressPatchingBody", (e, t) => {
                        let {
                            item: {
                                state: n
                            }
                        } = this.props;
                        if (null == n) return null;
                        let {
                            stage: a,
                            progress: s,
                            total: l,
                            type: i,
                            readerProgress: r
                        } = n;
                        if (null == s || null == l || null == a) return null;
                        let o = U.calculateProgressPercentage(s, l),
                            u = U.calculateProgressPercentage(null != r ? r : 0, l),
                            d = e[e.length - 1] / t * 1e3,
                            c = l - s,
                            f = q({
                                type: i,
                                stage: a,
                                percent: Math.floor(o),
                                progress: s,
                                total: l,
                                secondsRemaining: 0 !== d ? Math.max(1, c / d) : null
                            });
                        return this.renderStackedProgress({
                            percents: [o, u],
                            message: f
                        })
                    })
                }
            }
            let X = () => (0, a.jsx)(Y, {
                    icon: x.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_RESUME,
                    onClick: () => C.resume()
                }),
                J = () => (0, a.jsx)(Y, {
                    icon: D.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_PAUSE,
                    onClick: () => C.pause()
                }),
                $ = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(Y, {
                        icon: y.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_MOVE_UP,
                        onClick: () => C.moveUp(t.applicationId, t.branchId)
                    })
                },
                ee = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(Y, {
                        icon: M.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_REMOVE,
                        onClick: () => C.cancel(t.applicationId, t.branchId)
                    })
                },
                et = [{
                    key: Q.NAME,
                    cellClassName: B.nameCell,
                    render: e => (0, a.jsxs)(R.default, {
                        align: R.default.Align.CENTER,
                        children: [(0, a.jsx)(O.default, {
                            game: e.application,
                            className: B.__invalid_gameIcon,
                            size: O.default.Sizes.SMALL
                        }), (0, a.jsx)("div", {
                            className: B.nameCellText,
                            children: e.application.name
                        })]
                    })
                }, {
                    key: Q.PROGRESS,
                    cellClassName: B.progressCell,
                    headerCellClassName: B.progressCellHeader,
                    bodyCellClassName: B.progressCellBody,
                    render: (e, t) => (0, a.jsx)(Z, {
                        item: e,
                        cellProps: t
                    })
                }, {
                    key: Q.ACTIONS,
                    cellClassName: B.actionsCell,
                    render(e, t) {
                        let n, s;
                        return e.finished ? n = null != e.libraryApplication ? (0, a.jsx)(_.default, {
                            libraryApplication: e.libraryApplication,
                            size: f.Button.Sizes.SMALL,
                            className: B.gameActionButton,
                            source: w.AnalyticsLocations.APPLICATION_LIBRARY_UPDATES
                        }) : null : null != e.state ? e.state.type !== w.LocalDispatchApplicationStates.UP_TO_DATE && (n = e.index > 0 ? (0, a.jsx)($, {
                            item: e
                        }) : null != t && t.paused ? (0, a.jsx)(X, {}) : (0, a.jsx)(J, {
                            item: e
                        }), s = (0, a.jsx)(ee, {
                            item: e
                        })) : s = (0, a.jsx)(ee, {
                            item: e
                        }), (0, a.jsxs)(R.default, {
                            justify: R.default.Justify.END,
                            children: [n, s]
                        })
                    }
                }];
            class en extends s.PureComponent {
                componentDidMount() {
                    window.addEventListener("resize", this.throttledUpdateHeight)
                }
                componentDidUpdate(e) {
                    this.props.height !== e.height && this.throttledUpdateHeight()
                }
                componentWillUnmount() {
                    let {
                        applications: e
                    } = this.props;
                    e.forEach(e => {
                        e.finished && E.default.wait(() => {
                            C.removeFinished(e.applicationId, e.branchId)
                        })
                    }), window.removeEventListener("resize", this.throttledUpdateHeight), this.isUnmounted = !0
                }
                render() {
                    let {
                        applications: e,
                        paused: t,
                        isFocused: s,
                        theme: l,
                        analyticsContext: r
                    } = this.props;
                    return 0 === e.length ? null : (0, a.jsxs)("div", {
                        className: B.gameUpdates,
                        children: [(0, a.jsxs)("div", {
                            className: B.headerRow,
                            children: [(0, a.jsx)(G.default, {
                                className: i()(B.headerCell, B.networkProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_NETWORK,
                                getHistoricalTotalBytes: A.default.getHistoricalTotalBytesDownloaded,
                                color: w.Color.GREEN_360,
                                animate: s
                            }), (0, a.jsx)(G.default, {
                                className: i()(B.headerCell, B.diskProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_DISK,
                                getHistoricalTotalBytes: A.default.getHistoricalTotalBytesWritten,
                                color: w.Color.BLUE_345,
                                animate: s
                            })]
                        }), (0, a.jsx)(P.default, {
                            hasHeader: !1,
                            columns: et,
                            data: e,
                            className: B.table,
                            rowClassName: B.row,
                            rowComponent: H,
                            cellProps: {
                                paused: t,
                                isFocused: s,
                                theme: l
                            },
                            rowProps: {
                                onContextMenu: (e, t) => {
                                    var s, l, i;
                                    return s = e, l = t, i = r, void h.openContextMenuLazy(s, async () => {
                                        let {
                                            default: e
                                        } = await n.e("98335").then(n.bind(n, "485292"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            applicationId: l.applicationId,
                                            branchId: l.branchId,
                                            analyticsContext: i
                                        })
                                    })
                                }
                            },
                            bodyCellClassName: B.cell
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), F(this, "isUnmounted", !1), F(this, "isTallerThanHalfViewport", !1), F(this, "throttledUpdateHeight", o().throttle(() => {
                        if (this.isUnmounted) return;
                        let {
                            height: e,
                            onHeightTallerThanHalfViewportChange: t
                        } = this.props, n = e > window.innerHeight / 2;
                        this.isTallerThanHalfViewport !== n && (this.isTallerThanHalfViewport = n, t(n))
                    }, 1e3))
                }
            }

            function ea(e, t, n, a) {
                return e.reduce((e, s, l) => {
                    let {
                        applicationId: i,
                        branchId: r
                    } = s, o = n.getApplication(i), u = a.getState(i, r);
                    return null != o && e.push({
                        key: "".concat(i, ":").concat(r),
                        applicationId: i,
                        branchId: r,
                        state: u,
                        application: o,
                        libraryApplication: T.default.getLibraryApplication(i, r),
                        finished: t,
                        index: l
                    }), e
                }, [])
            }
            t.default = (0, S.default)(u.default.connectStores([p.default, A.default, N.default, g.default, v.default], () => {
                let e = ea(N.default.activeItems, !1, p.default, A.default);
                return {
                    applications: [...e, ...ea(N.default.finishedItems, !0, p.default, A.default)],
                    paused: N.default.paused,
                    isFocused: v.default.isFocused(),
                    theme: g.default.theme
                }
            })((0, m.default)(en)))
        },
        476669: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("239091"),
                r = n("129861"),
                o = n("285952"),
                u = n("307583");
            class d extends s.PureComponent {
                handleContextMenu(e, t) {
                    (0, i.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            user: t
                        })
                    })
                }
                renderUser(e) {
                    return null == e ? null : (0, a.jsxs)(o.default, {
                        className: u.user,
                        align: o.default.Align.CENTER,
                        onContextMenu: t => {
                            null != e && this.handleContextMenu(t, e)
                        },
                        children: [(0, a.jsx)(l.Avatar, {
                            src: e.getAvatarURL(void 0, 24),
                            "aria-label": e.username,
                            size: l.AvatarSizes.SIZE_24,
                            className: u.avatar
                        }), (0, a.jsx)(r.default, {
                            user: e,
                            className: u.tag,
                            usernameClass: u.username,
                            discriminatorClass: u.discriminator
                        })]
                    }, e.id)
                }
                render() {
                    let {
                        party: e,
                        header: t
                    } = this.props, n = e.map(e => this.renderUser(e));
                    return (0, a.jsxs)("div", {
                        className: u.userList,
                        children: [(0, a.jsx)("div", {
                            className: u.header,
                            children: t
                        }), (0, a.jsx)(l.ScrollerThin, {
                            className: u.content,
                            fade: !0,
                            children: n
                        })]
                    })
                }
            }
            t.default = d
        },
        512847: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return w
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("442837"),
                o = n("317381"),
                u = n("258609"),
                d = n("569545"),
                c = n("106301"),
                f = n("590415"),
                E = n("131704"),
                h = n("199902"),
                C = n("314897"),
                _ = n("592125"),
                m = n("430824"),
                S = n("131951"),
                p = n("292959"),
                I = n("19780"),
                g = n("944486"),
                T = n("606304"),
                A = n("979651"),
                N = n("938475"),
                v = n("823379"),
                R = n("557177"),
                O = n("981631");

            function L(e, t, n, a) {
                s.useEffect(() => {
                    let s = t(),
                        l = new r.BatchedStoreListener(e, () => {
                            let e = t(),
                                l = n(s, e);
                            null != l && !p.default.isSoundDisabled(l) && (0, R.playSound)(l, null != a ? a : .4), s = e
                        });
                    return l.attach("useSound"), () => l.detach()
                })
            }

            function P() {
                return L([S.default, g.default], () => ({
                    inVoiceChannel: null != g.default.getVoiceChannelId(),
                    selfMute: S.default.isSelfMute(),
                    selfDeaf: S.default.isSelfDeaf(),
                    audioPermissionReady: S.default.isNativeAudioPermissionReady(),
                    shouldSkipMuteUnmuteSound: S.default.shouldSkipMuteUnmuteSound()
                }), (e, t) => {
                    let {
                        inVoiceChannel: n,
                        selfMute: a,
                        selfDeaf: s,
                        audioPermissionReady: l,
                        shouldSkipMuteUnmuteSound: i
                    } = t;
                    if (e.selfDeaf !== s) return s ? "deafen" : "undeafen";
                    if (!!l) {
                        if ((n || e.audioPermissionReady) && e.selfMute !== a) {
                            if (i) {
                                S.default.notifyMuteUnmuteSoundWasSkipped();
                                return
                            }
                            return a ? "mute" : "unmute"
                        }
                    }
                }), null
            }

            function y() {
                return L([_.default, I.default, g.default, u.default], () => {
                    let e = _.default.getChannel(g.default.getVoiceChannelId()),
                        t = null == e ? void 0 : e.type,
                        n = null == e ? void 0 : e.getGuildId(),
                        a = I.default.getWasEverRtcConnected(),
                        s = I.default.getState();
                    return {
                        channelType: t,
                        guildId: n,
                        connected: s === O.RTCConnectionStates.RTC_CONNECTED,
                        connectHasStarted: !a && s !== O.RTCConnectionStates.DISCONNECTED || s === O.RTCConnectionStates.RTC_CONNECTED,
                        awaitingRemote: null != u.default.getAwaitingRemoteSessionInfo(),
                        connectedRemote: null != u.default.getRemoteSessionId()
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        connected: a,
                        connectHasStarted: s,
                        awaitingRemote: l,
                        connectedRemote: i
                    } = t, r = e.channelType, o = e.connectedRemote, u = e.connected, d = e.connectHasStarted;
                    if (!d && s || i && !o) {
                        if (null != n && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                        return "user_join"
                    }
                    if (u && !a) {
                        if (l || i || null != r && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(r)) return;
                        return "disconnect"
                    }
                }), null
            }

            function M() {
                return L([T.default], () => T.default.isCurrentUserSpeaking(), (e, t) => {
                    if (e !== t) {
                        let e = S.default.isSelfMute();
                        if (S.default.getMode() === O.InputModes.PUSH_TO_TALK && !e) return t ? "ptt_start" : "ptt_stop"
                    }
                }), null
            }

            function D() {
                return L([S.default], () => S.default.isSelfMutedTemporarily(), (e, t) => {
                    if (e !== t) {
                        let e = S.default.isSelfMute();
                        if (S.default.getMode() === O.InputModes.VOICE_ACTIVITY && !e) return t ? "ptt_stop" : "ptt_start"
                    }
                }), null
            }

            function x() {
                return L([A.default], () => A.default.userHasBeenMovedVersion, (e, t) => {
                    if (e !== t) return "user_moved"
                }), null
            }

            function b() {
                return L([g.default, A.default], () => {
                    let e = g.default.getVoiceChannelId();
                    if (null == e) return f.RequestToSpeakStates.NONE;
                    let t = A.default.getVoiceStateForChannel(e);
                    return (0, f.getAudienceRequestToSpeakState)(t)
                }, (e, t) => {
                    if (e !== t && t === f.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK) return "reconnect"
                }), null
            }

            function U() {
                return L([g.default, h.default, C.default, A.default, _.default], () => {
                    let e, t;
                    let n = g.default.getVoiceChannelId(),
                        a = C.default.getId();
                    let s = [],
                        l = null,
                        i = 0,
                        r = h.default.getAllActiveStreams();
                    if (null != n) {
                        let a = _.default.getChannel(n);
                        null != a && (e = a.type, t = N.default.countVoiceStatesForChannel(a.id) - (A.default.isInChannel(a.id) ? 1 : 0), s = h.default.getAllApplicationStreamsForChannel(a.id).map(e => e.ownerId))
                    }
                    let o = null;
                    return (null == (o = 1 === r.length ? r[0] : h.default.getCurrentUserActiveStream()) ? void 0 : o.state) === O.ApplicationStreamStates.CONNECTING && (o = null), null != o && (l = (0, d.encodeStreamKey)(o), i = h.default.getViewerIds(l).filter(e => e !== a).length), {
                        channelType: e,
                        voiceChannelId: n,
                        voiceChannelUserCount: t,
                        streamingUserIds: s,
                        singleActiveStreamKey: l,
                        singleActiveStreamViewerCount: i,
                        currentUserId: a,
                        allActiveStreams: r
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        voiceChannelId: a,
                        voiceChannelUserCount: s,
                        streamingUserIds: l,
                        singleActiveStreamKey: i,
                        singleActiveStreamViewerCount: r,
                        currentUserId: o
                    } = t;
                    if (e.voiceChannelId !== a || null == a || function(e) {
                            let t = _.default.getChannel(e);
                            if (null == t) return !1;
                            let n = t.getGuildId();
                            if (null == n) return !1;
                            let a = m.default.getGuild(n);
                            return null != a && a.afkChannelId === t.id
                        }(a) || null != n && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                    let u = null != i && e.singleActiveStreamKey === i,
                        d = l.some(t => !e.streamingUserIds.includes(t)),
                        c = e.allActiveStreams.map(e => e.ownerId),
                        f = e.streamingUserIds.some(e => !l.includes(e) && (e === o || c.includes(e)));
                    if (d) return "stream_started";
                    if (f) return "stream_ended";
                    if (e.singleActiveStreamViewerCount <= 25 && u && r > e.singleActiveStreamViewerCount) return "stream_user_joined";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s > e.voiceChannelUserCount) return "user_join";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s < e.voiceChannelUserCount) return "user_leave";
                    else if (e.singleActiveStreamViewerCount <= 25 && u && r < e.singleActiveStreamViewerCount) return "stream_user_left"
                }), null
            }

            function j() {
                return L([g.default, o.default, C.default], () => {
                    let e = g.default.getVoiceChannelId(),
                        t = g.default.getChannelId(),
                        n = o.default.getConnectedActivityChannelId(),
                        a = C.default.getId(),
                        s = (0, v.isNotNullish)(t) ? o.default.getEmbeddedActivitiesForChannel(t) : o.NO_ACTIVITIES,
                        l = (0, v.isNotNullish)(e) ? o.default.getEmbeddedActivitiesForChannel(e) : o.NO_ACTIVITIES,
                        i = (0, v.isNotNullish)(n) ? o.default.getEmbeddedActivitiesForChannel(n) : o.NO_ACTIVITIES;
                    return {
                        voiceChannelId: e,
                        currentUserId: a,
                        channelActivities: s,
                        connectedChannelActivities: i,
                        userConnectedActivity: (0, v.isNotNullish)(n) ? o.default.getSelfEmbeddedActivityForChannel(n) : null,
                        voiceChannelActivities: l
                    }
                }, (e, t) => {
                    let n, {
                        voiceChannelId: a,
                        currentUserId: s,
                        channelActivities: l,
                        connectedChannelActivities: i,
                        userConnectedActivity: r,
                        voiceChannelActivities: o
                    } = t;
                    let u = o.some(e => e.applicationId === (null == r ? void 0 : r.applicationId) && e.launchId === r.launchId);
                    if ((0, v.isNotNullish)(a)) {
                        let t = e.voiceChannelActivities.find(e => e.userIds.has(s)),
                            a = o.find(e => e.userIds.has(s));
                        e.voiceChannelActivities.length < o.length && (0, v.isNotNullish)(e.voiceChannelId) && (n = "activity_launch"), void 0 === a && (0, v.isNotNullish)(t) && (n = "activity_end"), void 0 === t && (0, v.isNotNullish)(a) && a.userIds.size > 1 && (n = "activity_user_join"), (0, v.isNotNullish)(a) && (0, v.isNotNullish)(t) && (a.userIds.size > t.userIds.size && (n = "activity_user_join"), a.userIds.size < t.userIds.size && (n = "activity_user_left"))
                    }
                    if (!u) {
                        e.connectedChannelActivities.length < i.length && e.channelActivities.length < l.length && (n = "activity_launch");
                        let t = e.userConnectedActivity;
                        null == r && (0, v.isNotNullish)(t) && (n = "activity_end"), (0, v.isNotNullish)(r) && (0, v.isNotNullish)(t) && (r.userIds.size > t.userIds.size && (n = "activity_user_join"), r.userIds.size < t.userIds.size && (n = "activity_user_left"))
                    }
                    return n
                }), null
            }

            function G() {
                return L([c.default, g.default], () => ({
                    hangStatus: c.default.getCurrentHangStatus(),
                    customHangStatus: c.default.getCustomHangStatus(),
                    inVoice: null != g.default.getVoiceChannelId()
                }), (e, t) => {
                    var n, a;
                    let {
                        hangStatus: s,
                        customHangStatus: l
                    } = t;
                    if (e.inVoice && (null != s && s !== e.hangStatus || null != l && (l.status !== (null === (n = e.customHangStatus) || void 0 === n ? void 0 : n.status) || !i().isEqual(l.emoji, null === (a = e.customHangStatus) || void 0 === a ? void 0 : a.emoji)))) return "hang_status_select"
                }, .15), null
            }

            function w() {
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(P, {}), (0, a.jsx)(y, {}), (0, a.jsx)(M, {}), (0, a.jsx)(D, {}), (0, a.jsx)(x, {}), (0, a.jsx)(U, {}), (0, a.jsx)(b, {}), (0, a.jsx)(j, {}), (0, a.jsx)(G, {})]
                })
            }
        },
        484957: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("270292");
            n.es(a, t)
        },
        813658: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("669297");
            n.es(a, t)
        },
        381837: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("492118");
            n.es(a, t)
        },
        128951: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("147211");
            n.es(a, t)
        },
        549080: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("930450");
            n.es(a, t)
        },
        685651: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("658374");
            n.es(a, t)
        },
        400354: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHeadphonesLottie: function() {
                    return r
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("709014");
            let i = {
                    deafen: {
                        name: "deafen",
                        start: 0,
                        duration: 70
                    },
                    undeafen: {
                        name: "undeafen",
                        start: 110,
                        duration: 70
                    },
                    hover_undeafened: {
                        name: "hover_undeafened",
                        start: 200,
                        duration: 70
                    },
                    hover_deafened: {
                        name: "hover_deafened",
                        start: 300,
                        duration: 70
                    }
                },
                r = e => {
                    let t = s.useRef(null),
                        r = s.useRef(e),
                        o = s.useMemo(() => () => {
                            null != t.current && t.current.play(e)
                        }, [e]),
                        u = s.useCallback(() => {
                            if (null == t.current) return;
                            let n = "deafen" === e ? "hover_undeafened" : "hover_deafened";
                            t.current.play(n)
                        }, [e]),
                        d = s.useCallback(() => {
                            if (null == t.current) return;
                            let n = "deafen" === e ? "hover_undeafened" : "hover_deafened";
                            t.current.stopIfPlaying(n)
                        }, [e]);
                    return {
                        events: {
                            onClick: o,
                            onMouseEnter: u,
                            onMouseLeave: d
                        },
                        play: o,
                        Component: s.useCallback(e => (0, a.jsx)(l.LottieIcon, {
                            ...e,
                            src: () => n.e("68449").then(n.t.bind(n, "406785", 19)),
                            ref: t,
                            initialAnimation: r.current,
                            markers: i
                        }), [])
                    }
                }
        },
        789639: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSettingsLottie: function() {
                    return r
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("709014");
            let i = {
                    all: {
                        name: "all",
                        start: 0,
                        duration: 66
                    }
                },
                r = () => {
                    let e = s.useRef(null),
                        t = s.useCallback(() => {
                            null != e.current && e.current.play("all")
                        }, []),
                        r = s.useCallback(() => {
                            null != e.current && e.current.play("all")
                        }, []),
                        o = s.useCallback(() => {
                            null != e.current && e.current.stopIfPlaying("all")
                        }, []);
                    return {
                        events: {
                            onMouseEnter: r,
                            onMouseLeave: o
                        },
                        play: t,
                        Component: s.useCallback(t => (0, a.jsx)(l.LottieIcon, {
                            ...t,
                            src: () => n.e("2199").then(n.t.bind(n, "71307", 19)),
                            ref: e,
                            markers: i
                        }), [])
                    }
                }
        },
        923462: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSoundboardLottie: function() {
                    return r
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("709014");
            let i = {
                    all: {
                        name: "all",
                        start: 0,
                        duration: 66
                    }
                },
                r = () => {
                    let e = s.useRef(null),
                        t = s.useCallback(() => {
                            null != e.current && e.current.play("all")
                        }, []),
                        r = s.useCallback(() => {
                            null != e.current && e.current.play("all")
                        }, []),
                        o = s.useCallback(() => {
                            null != e.current && e.current.stopIfPlaying("all")
                        }, []);
                    return {
                        events: {
                            onClick: t,
                            onMouseEnter: r,
                            onMouseLeave: o
                        },
                        play: t,
                        Component: s.useCallback(t => (0, a.jsx)(l.LottieIcon, {
                            ...t,
                            src: () => n.e("66944").then(n.t.bind(n, "166174", 19)),
                            ref: e,
                            markers: i
                        }), [])
                    }
                }
        },
        382600: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useWaveformLottie: function() {
                    return r
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("709014");
            let i = {
                    disable: {
                        name: "disable",
                        start: 0,
                        duration: 70
                    },
                    enable: {
                        name: "enable",
                        start: 100,
                        duration: 70
                    },
                    hover_enabled: {
                        name: "hover_enabled",
                        start: 200,
                        duration: 70
                    },
                    hover_disabled: {
                        name: "hover_disabled",
                        start: 300,
                        duration: 70
                    }
                },
                r = e => {
                    let t = s.useRef(null),
                        r = s.useRef(e),
                        o = s.useMemo(() => () => {
                            null != t.current && t.current.play(e)
                        }, [e]),
                        u = s.useCallback(() => {
                            if (null == t.current) return;
                            let n = "enable" === e ? "hover_disabled" : "hover_enabled";
                            t.current.play(n)
                        }, [e]),
                        d = s.useCallback(() => {
                            if (null == t.current) return;
                            let n = "enable" === e ? "hover_disabled" : "hover_enabled";
                            t.current.stopIfPlaying(n)
                        }, [e]);
                    return {
                        events: {
                            onClick: o,
                            onMouseEnter: u,
                            onMouseLeave: d
                        },
                        play: o,
                        Component: s.useCallback(e => (0, a.jsx)(l.LottieIcon, {
                            ...e,
                            src: () => n.e("7584").then(n.t.bind(n, "883488", 19)),
                            ref: t,
                            initialAnimation: r.current,
                            markers: i
                        }), [])
                    }
                }
        },
        785697: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanCurrentUserViewDisableUnsafeGuildSettingsNotice: function() {
                    return u
                },
                useIsMassMentionsDefaultDisabledExperiment: function() {
                    return o
                }
            });
            var a = n("442837"),
                s = n("818083"),
                l = n("496675"),
                i = n("981631");
            let r = (0, s.createExperiment)({
                kind: "guild",
                id: "2022-11_default_disable_mass_mention",
                label: "Disable mass mentions for communities by default",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function o(e) {
                return r.useExperiment({
                    guildId: e,
                    location: "dd4beb_1"
                }, {
                    autoTrackExposure: !0
                })
            }

            function u(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.can(i.Permissions.MANAGE_GUILD, e)),
                    {
                        enabled: s
                    } = r.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : i.EMPTY_STRING_SNOWFLAKE_ID,
                        location: "dd4beb_3"
                    }, {
                        autoTrackExposure: !0
                    });
                if (null == e) return !1;
                let o = e.hasFeature(i.GuildFeatures.COMMUNITY);
                return n && o && s
            }
        },
        711237: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserTriggerAAExperiment: function() {
                    return l
                },
                useGlobalTriggerDebugging: function() {
                    return r
                }
            });
            var a = n("818083"),
                s = n("987338");
            let l = (0, a.createExperiment)({
                    kind: "user",
                    id: s.userTriggerExperimentId,
                    label: "Trigger Debugging User AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                i = (0, a.createExperiment)({
                    kind: "guild",
                    id: s.guildTriggerExperimentId,
                    label: "Trigger Debugging Guild AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                r = e => {
                    let t = "guild trigger debug",
                        n = "user trigger debug";
                    i.useExperiment({
                        location: t,
                        guildId: e
                    }, {
                        autoTrackExposure: !1
                    }), i.trackExposure({
                        location: t,
                        guildId: e
                    }), l.useExperiment({
                        location: n
                    }, {
                        autoTrackExposure: !1
                    }), l.trackExposure({
                        location: n
                    })
                }
        },
        532835: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useNullExperiment: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_null_experiment",
                label: "Null Experiment",
                defaultConfig: {
                    inUse: !1
                },
                treatments: [{
                    id: 1,
                    label: "On",
                    config: {
                        inUse: !0
                    }
                }]
            });

            function s() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return a.useExperiment({
                    location: "a9e81b_1"
                }, {
                    autoTrackExposure: e
                })
            }
        },
        650598: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationAAEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-03_mute_block_aa",
                label: "Safety Consumer Education Block/Mute - A/A",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "34e1bc_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        941129: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationBlockMuteBucket: function() {
                    return l
                },
                useIsSafetyConsumerEducationBlockMuteEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-01_consumer_education_launch",
                label: "Safety Consumer Education Launch - Block/Mute",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "b85a21_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }

            function l() {
                return a.useExperiment({
                    location: "b85a21_2"
                }, {
                    autoTrackExposure: !1
                }).bucket
            }
        },
        826004: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationReportingEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_consumer_education_launch__reporting",
                label: "Consumer Education Launch - Reporting",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Reporting",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "183c74_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        83200: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsDmSpamFilterCoachmarkEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_dm_spam_filter_coachmark",
                label: "Safety DM Spam Filter Coachmark rollout",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "acbeda_1"
                }, {
                    autoTrackExposure: !1
                }).enabled
            }
        },
        183126: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsRejectAllMessageRequestsEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-01_clear_all_message_requests",
                label: "Safety Experience Reject All Message Requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "c10bec_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        507885: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s = n("442837"),
                l = n("570140"),
                i = n("701488");

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let o = new Set,
                u = new Set([i.WhatsNewSection.DISCORD_TURNS_8]);
            class d extends(a = s.default.PersistedStore) {
                initialize(e) {
                    null != e && (Array.isArray(e.acknowledged) && (o = new Set(e.acknowledged)), Array.isArray(e.opened) && (u = new Set(e.opened)))
                }
                getState() {
                    return {
                        acknowledged: o,
                        opened: u
                    }
                }
                getOpened() {
                    return u
                }
                getAcknowledged() {
                    return o
                }
                isOpened(e) {
                    return u.has(e)
                }
                isAcknowledged(e) {
                    return o.has(e)
                }
            }
            r(d, "displayName", "ActivitiesWhatsNewStore"), r(d, "persistKey", "ActivitiesWhatsNewStore"), t.default = new d(l.default, {
                ACTIVITIES_WHATS_NEW_ACKNOWLEDGE_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    o.add(t)
                },
                ACTIVITIES_WHATS_NEW_MARK_OPENED_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    u.add(t)
                }
            })
        },
        379146: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesGdmTile: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_whats_new_gdm_tile",
                label: "Birthday Activities Whats New GDM Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable GDM tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        273003: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesJamspaceTile: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_jamspace_tile",
                label: "Birthday Activities Whats New Jamspace Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Jamspace tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        754332: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPokerTile: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-05_birthday_activities_poker",
                label: "Birthday Activities Poker Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Poker tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        140863: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPuttPartyTile: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_putt_party_tile",
                label: "Birthday Activities Whats New Putt Party Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Putt Party tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        573979: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a, s, l, i, r = n("358085");

            function o(e) {
                if ((0, r.isIOS)()) return e;
                if (!(0, r.isAndroid)()) return -1;
                switch (e) {
                    case 0:
                        return 0;
                    case 1:
                    case 2:
                        return 1;
                    case 3:
                        return 2;
                    case 4:
                    case 5:
                    case 6:
                        return 3;
                    default:
                        return -1
                }
            }(a = l || (l = {}))[a.UNHANDLED = -1] = "UNHANDLED", a[a.NOMINAL = 0] = "NOMINAL", a[a.FAIR = 1] = "FAIR", a[a.SERIOUS = 2] = "SERIOUS", a[a.CRITICAL = 3] = "CRITICAL", (s = i || (i = {}))[s.NONE = 0] = "NONE", s[s.LIGHT = 1] = "LIGHT", s[s.MODERATE = 2] = "MODERATE", s[s.SEVERE = 3] = "SEVERE", s[s.CRITICAL = 4] = "CRITICAL", s[s.EMERGENCY = 5] = "EMERGENCY", s[s.SHUTDOWN = 6] = "SHUTDOWN"
        },
        257968: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getActivitiesWhatsNewCount: function() {
                    return c
                },
                useActivitiesWhatsNewCount: function() {
                    return d
                }
            });
            var a = n("442837"),
                s = n("507885"),
                l = n("379146"),
                i = n("273003"),
                r = n("754332"),
                o = n("140863"),
                u = n("701488");

            function d() {
                return (0, a.useStateFromStores)([s.default], () => c(s.default))
            }

            function c(e) {
                let t = 0,
                    n = e.getAcknowledged();
                return l.ExperimentBirthdayActivitiesGdmTile.getCurrentConfig({
                    location: "1d9280_2"
                }).enabled && !n.has(u.WhatsNewSection.GDM_ACTIVITIES) && t++, o.ExperimentBirthdayActivitiesPuttPartyTile.getCurrentConfig({
                    location: "1d9280_3"
                }).enabled && !n.has(u.WhatsNewSection.PUTT_PARTY) && t++, i.ExperimentBirthdayActivitiesJamspaceTile.getCurrentConfig({
                    location: "1d9280_4"
                }).enabled && !n.has(u.WhatsNewSection.JAMSPACE) && t++, r.ExperimentBirthdayActivitiesPokerTile.getCurrentConfig({
                    location: "1d9280_5"
                }).enabled && !n.has(u.WhatsNewSection.POKER) && t++, !n.has(u.WhatsNewSection.DISCORD_TURNS_8) && t <= 0 && t++, t
            }
        },
        596223: function(e, t, n) {
            "use strict";

            function a(e, t) {
                return null != e.application_id && null == t.getApplicationActivity(e.application_id, !1)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        258220: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ACTIVITY_ENCOURAGES_HW_ACCELERATION: function() {
                    return h
                },
                default: function() {
                    return C
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("153867"),
                r = n("835473"),
                o = n("285952"),
                u = n("626135"),
                d = n("998502"),
                c = n("981631"),
                f = n("689938"),
                E = n("132417");
            let h = "Activity Encourages Hardware Acceleration";

            function C(e) {
                var t;
                let {
                    applicationId: n,
                    ...C
                } = e, [_, m] = s.useState(!1), [S] = (0, r.default)([n]), p = null !== (t = null == S ? void 0 : S.name) && void 0 !== t ? t : "This Activity";
                s.useEffect(() => {
                    u.default.track(c.AnalyticEvents.OPEN_MODAL, {
                        type: h
                    })
                }, []);
                let I = () => {
                    let e = "temporary";
                    _ && (e = "permanent", i.default.updatedUnsyncedSettings({
                        disableActivityHardwareAccelerationPrompt: !0
                    })), u.default.track(c.AnalyticEvents.MODAL_DISMISSED, {
                        type: h,
                        dismiss_type: e
                    }), C.onClose()
                };
                return (0, a.jsxs)(l.ModalRoot, {
                    className: E.root,
                    "aria-label": f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE,
                    ...C,
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        children: [(0, a.jsx)(l.Text, {
                            className: E.__invalid_header,
                            variant: "text-lg/normal",
                            children: f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE
                        }), (0, a.jsx)(l.ModalCloseButton, {
                            onClick: I,
                            className: E.closeButton
                        })]
                    }), (0, a.jsx)(l.ModalContent, {
                        className: E.content,
                        children: (0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            className: E.__invalid_ratingBody,
                            children: f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_BODY.format({
                                applicationName: p
                            })
                        })
                    }), (0, a.jsxs)(l.ModalFooter, {
                        className: E.footer,
                        direction: o.default.Direction.HORIZONTAL,
                        children: [(0, a.jsx)(l.Checkbox, {
                            type: l.Checkbox.Types.INVERTED,
                            size: 18,
                            value: _,
                            onChange: () => m(!_),
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-sm/normal",
                                children: f.default.Messages.DONT_SHOW_AGAIN
                            })
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.PRIMARY,
                            onClick: I,
                            children: f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_NO_THANKS
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.BRAND,
                            onClick: () => {
                                u.default.track(c.AnalyticEvents.ACTIVITY_ENABLE_HARDWARE_ACCELERATION, {
                                    application_id: n
                                }), d.default.setEnableHardwareAcceleration(!0)
                            },
                            children: f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_TURN_IT_ON
                        })]
                    })]
                })
            }
        },
        918854: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("663993");
            t.default = (0, a.makeLazy)({
                createPromise: () => Promise.all([n.e("99387"), n.e("54441"), n.e("77485")]).then(n.bind(n, "495810")),
                webpackId: "495810"
            })
        },
        279240: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("663993");
            t.default = (0, a.makeLazy)({
                createPromise: () => Promise.all([n.e("99387"), n.e("99182"), n.e("77721")]).then(n.bind(n, "139230")),
                webpackId: "139230"
            })
        },
        813615: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("789020");
            var a = n("928518"),
                s = n("630388"),
                l = n("917107"),
                i = n("981631");

            function r(e, t) {
                var n;
                let r = (0, s.hasFlag)(null !== (n = e.flags) && void 0 !== n ? n : 0, i.ApplicationFlags.EMBEDDED),
                    o = a.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                return r && o && (0, l.default)(t)
            }
        },
        230487: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("740492"),
                i = n("626135"),
                r = n("358085"),
                o = n("998502"),
                u = n("258220"),
                d = n("981631");
            let c = "activity-hardware-acceleration-modal";

            function f(e) {
                !l.default.disableActivityHardwareAccelerationPrompt && r.isPlatformEmbedded && !o.default.getEnableHardwareAcceleration() && (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await Promise.resolve().then(n.bind(n, "258220"));
                    return n => (0, a.jsx)(t, {
                        applicationId: e,
                        ...n
                    })
                }, {
                    modalKey: c,
                    onCloseRequest: () => {
                        i.default.track(d.AnalyticEvents.MODAL_DISMISSED, {
                            type: u.ACTIVITY_ENCOURAGES_HW_ACCELERATION
                        }), (0, s.closeModal)(c)
                    }
                })
            }
        },
        838195: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openActivityShareMomentModal: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("522474"),
                i = n("981631");

            function r(e) {
                let {
                    applicationId: t,
                    channelId: r,
                    mediaUrl: o
                } = e, u = l.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT) ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT;
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await Promise.all([n.e("99387"), n.e("4530")]).then(n.bind(n, "899201"));
                    return n => (0, a.jsx)(e, {
                        applicationId: t,
                        channelId: r,
                        mediaUrl: o,
                        ...n
                    })
                }, {
                    modalKey: "activity-share-moment-modal",
                    contextKey: u
                })
            }
        },
        622822: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                userNeedsAgeGate: function() {
                    return i
                }
            });
            var a = n("594174"),
                s = n("709054");
            let l = new Date("06/16/2020");

            function i() {
                let e = a.default.getCurrentUser();
                return null != e && s.default.extractTimestamp(e.id) > l.getTime() && !e.isClaimed() && null == e.nsfwAllowed
            }
        },
        687751: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770"),
                r = n("592125"),
                o = n("944486"),
                u = n("914010"),
                d = n("594174"),
                c = n("758119"),
                f = n("920644"),
                E = n("208381"),
                h = n("723359"),
                C = n("981631");

            function _(e, t) {
                var n;
                if (null == e) return;
                let a = d.default.getCurrentUser();
                (null === (n = r.default.getChannel(t)) || void 0 === n ? void 0 : n.isNSFW()) && null != a && null == a.nsfwAllowed && (0, c.openAgeGateModal)(h.AgeGateSource.NSFW_CHANNEL)
            }
            class m extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.subscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.subscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.subscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.subscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.unsubscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.unsubscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.unsubscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.unsubscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    _(t, n)
                }
                handleConnectionOpen() {
                    let e = u.default.getGuildId();
                    _(e, o.default.getChannelId())
                }
                handleAgeGateModalOpen(e) {
                    let {
                        source: t
                    } = e;
                    (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("1716")]).then(n.bind(n, "746882"));
                        return n => (0, a.jsx)(e, {
                            source: t,
                            ...n
                        })
                    }, {
                        modalKey: h.EXISTING_USER_AGE_GATE_MODAL_KEY,
                        onCloseRequest: C.NOOP
                    })
                }
                handleAgeGateSuccess() {
                    (0, s.updateModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(E.default, {
                        ...e
                    }))
                }
                handleAgeGateFailure(e) {
                    let {
                        underageMessage: t
                    } = e;
                    (0, s.updateModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(f.default, {
                        underageMessage: t,
                        ...e
                    }))
                }
                handleAgeGateModalClose() {
                    (0, s.closeModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY)
                }
            }
            t.default = new m
        },
        920644: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("990547"),
                l = n("481060"),
                i = n("703656"),
                r = n("153124"),
                o = n("63063"),
                u = n("758119"),
                d = n("981631"),
                c = n("689938"),
                f = n("784425");

            function E() {
                (0, u.closeAgeGateModal)(), (0, i.transitionTo)(d.Routes.LOGIN)
            }

            function h(e) {
                let {
                    underageMessage: t,
                    transitionState: i
                } = e, u = (0, r.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: i,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": u,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE_UNDERAGE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: f.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("231443"),
                                className: f.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: f.title,
                                id: u,
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_HEADER
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: f.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_BODY.format({
                                    underageMessage: null != t ? t : c.default.Messages.AGE_GATE_UNDERAGE_BODY_DEFAULT_REG_MESSAGE,
                                    helpURL: o.default.getArticleURL(d.HelpdeskArticles.AGE_GATE)
                                })
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: f.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_BODY_DELETION_WITH_DAYS.format({
                                    days: 30
                                })
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: E,
                            children: c.default.Messages.AGE_GATE_UNDERAGE_BACK_TO_LOGIN
                        })
                    })]
                })
            }
        },
        208381: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("990547"),
                l = n("481060"),
                i = n("153124"),
                r = n("758119"),
                o = n("689938"),
                u = n("760816");

            function d(e) {
                let {
                    transitionState: t
                } = e, d = (0, i.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: t,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": d,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: u.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("863181"),
                                className: u.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: u.title,
                                id: d,
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: u.subtitle,
                                variant: "text-sm/normal",
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED_BODY
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: function() {
                                (0, r.closeAgeGateModal)()
                            },
                            autoFocus: !0,
                            children: o.default.Messages.CLOSE
                        })
                    })]
                })
            }
        },
        912471: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                initSessionHeartbeatScheduler: function() {
                    return R
                }
            }), n("411104");
            var a = n("433517"),
                s = n("570140"),
                l = n("188471"),
                i = n("581567"),
                r = n("594190"),
                o = n("19780"),
                u = n("626135"),
                d = n("70956"),
                c = n("848479"),
                f = n("960048"),
                E = n("844889"),
                h = n("981631");
            let C = "LATEST_HEARTBEAST_EVENT_TIMESTAMP",
                _ = null,
                m = null,
                S = null,
                p = !1;
            async function I() {
                if (p) return;
                p = !0, (0, E.setSessionExtendingEnabled)(!0), f.default.addBreadcrumb({
                    message: "Start Analytics Heartbeat"
                });
                let e = await a.Storage.getAfterRefresh(C).then(E.timestampOrZero);
                if (!p) return;
                let t = Date.now(),
                    n = 15 * d.default.Millis.MINUTE + e - t;
                n > d.default.Millis.HOUR && f.default.addBreadcrumb({
                    message: "Received invalid Date.now() when generating a heartbeat. Date.now() = ".concat(t, ", timeUntilNextHeartbeat = ").concat(n, ", latestHeartbeatEventTimestamp = ").concat(e)
                }), e > t && (n = 0), f.default.addBreadcrumb({
                    message: "Received Last Heartbeat Event Timestamp. Time Until Next Heartbeat: ".concat(n / 1e3, " seconds. Scheduling Heartbeat")
                }), g(!1), m = setTimeout(() => {
                    T(), _ = setInterval(() => {
                        T()
                    }, 15 * d.default.Millis.MINUTE)
                }, Math.max(n, 0))
            }

            function g() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                null != m && (clearTimeout(m), m = null), null != _ && (clearInterval(_), _ = null), null != S && e && (f.default.addBreadcrumb({
                    message: "Heartbeat correctly scheduled. Clearing 10s check timeout"
                }), clearTimeout(S), S = null)
            }
            async function T() {
                let e = Date.now(),
                    t = await (0, E.getSession)(),
                    n = Date.now();
                if (null == t) {
                    f.default.captureException(Error("Null session when tracking session heartbeat. Waited ".concat(n - e, "ms")));
                    return
                }
                if (!p) {
                    f.default.captureException(Error("Heartbeat scheduler not started when tracking session heartbeat.")), g();
                    return
                }
                f.default.addBreadcrumb({
                    message: "Tracking Heartbeat",
                    data: {
                        initialized: t.initialized
                    }
                });
                let s = {
                        client_heartbeat_initialization_timestamp: t.initialized,
                        client_heartbeat_version: 17
                    },
                    o = c.default.getMemoryUsageElectronRenderer();
                null != o && (s.client_heartbeat_renderer_memory = o);
                let d = c.default.getMemoryUsageElectronRendererUsedHeapSize();
                null != d && (s.client_heartbeat_renderer_memory_used_heap = d);
                {
                    let e = r.default.getCurrentGameForAnalytics();
                    null != e && (s.client_heartbeat_current_game_id = e.id, s.client_heartbeat_current_game_name = e.name, s.client_heartbeat_current_game_executable = (0, i.removeExecutablePathPrefix)(e.exePath), s.client_heartbeat_current_game_distributor = e.distributor)
                }
                u.default.track(h.AnalyticEvents.CLIENT_HEARTBEAT, s), a.Storage.set(C, Date.now().toString()), (0, l.drainClickstream)()
            }
            let A = null,
                N = !0;

            function v() {
                if (N || null != A && A !== h.RTCConnectionStates.DISCONNECTED && A !== h.RTCConnectionStates.RTC_DISCONNECTED) try {
                    I()
                } catch (e) {
                    f.default.captureException(e)
                } else !p || (p = !1, f.default.addBreadcrumb({
                    message: "Stopping Analytics Heartbeat"
                }), (0, E.setSessionExtendingEnabled)(!1), g(), (0, l.drainClickstream)())
            }

            function R() {
                f.default.addBreadcrumb({
                    message: "Initializing SessionHeartbeatScheduler"
                }), o.default.addChangeListener(L), s.default.subscribe("WINDOW_FOCUS", P), s.default.subscribe("APP_STATE_UPDATE", y), s.default.subscribe("LOGIN_SUCCESS", O), v()
            }

            function O() {
                T()
            }

            function L() {
                let e = o.default.getState();
                A !== e && (A = e, v())
            }

            function P(e) {
                let {
                    focused: t
                } = e;
                N = t, v()
            }

            function y(e) {
                let {
                    state: t
                } = e;
                N = t === h.AppStates.ACTIVE, v()
            }
        },
        360347: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("699516"),
                s = n("453542");

            function l() {
                return {
                    num_friends: a.default.getFriendCount(),
                    num_outgoing_requests: a.default.getOutgoingCount(),
                    num_incoming_requests: a.default.getPendingCount(),
                    ...(0, s.getNowPlayingAnalytics)()
                }
            }
        },
        176881: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("626135"),
                s = n("188471"),
                l = n("360347"),
                i = n("981631");

            function r(e) {
                var t, n, r;
                let {
                    tab_opened: o,
                    source: u
                } = e, d = (0, l.default)();
                a.default.track(i.AnalyticEvents.FRIENDS_LIST_VIEWED, {
                    tab_opened: o,
                    source: u,
                    ...d
                }), (0, s.trackClickstream)(i.AnalyticEvents.FRIENDS_LIST_VIEWED_CLICKSTREAM, {
                    tab_opened: null != o ? o : "tabless",
                    num_friends: null !== (t = d.num_friends) && void 0 !== t ? t : 0,
                    now_playing_visible: null !== (n = d.now_playing_visible) && void 0 !== n && n,
                    now_playing_num_cards: null !== (r = d.now_playing_num_cards) && void 0 !== r ? r : 0
                })
            }
        },
        515550: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("230711"),
                i = n("100527"),
                r = n("906732"),
                o = n("170671"),
                u = n("465670"),
                d = n("981631"),
                c = n("921944"),
                f = n("689938"),
                E = n("693063");

            function h(e) {
                let {
                    markAsDismissed: t
                } = e, {
                    analyticsLocations: n
                } = (0, r.default)(i.default.APP_ICON_NEW_STYLES_COACHMARK);
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("div", {
                        className: E.banner
                    }), (0, a.jsx)(s.Button, {
                        "aria-label": f.default.Messages.CLOSE,
                        look: s.Button.Looks.BLANK,
                        size: s.Button.Sizes.NONE,
                        onClick: () => {
                            t(c.ContentDismissActionType.USER_DISMISS)
                        },
                        className: E.closeButton,
                        children: (0, a.jsx)(u.default, {
                            width: 16,
                            height: 16,
                            className: E.closeIcon,
                            color: "white"
                        })
                    }), (0, a.jsxs)("div", {
                        className: E.body,
                        children: [(0, a.jsx)(s.Heading, {
                            variant: "heading-md/extrabold",
                            className: E.text,
                            children: f.default.Messages.APP_ICON_NEW_STYLES_HEADER
                        }), (0, a.jsxs)("div", {
                            className: E.poweredByNitroContainer,
                            children: [(0, a.jsx)(o.default, {
                                className: E.icon,
                                isSelected: !0
                            }), (0, a.jsx)(s.Text, {
                                variant: "text-xxs/medium",
                                className: E.text,
                                children: f.default.Messages.POWERED_BY_NITRO
                            })]
                        }), (0, a.jsx)(s.Text, {
                            variant: "text-sm/medium",
                            className: E.text,
                            children: f.default.Messages.APP_ICON_NEW_STYLES_BODY
                        })]
                    }), (0, a.jsx)(s.Button, {
                        className: E.cta,
                        look: s.Button.Looks.FILLED,
                        color: s.Button.Colors.CUSTOM,
                        onClick: () => {
                            t(c.ContentDismissActionType.TAKE_ACTION), l.default.open(d.UserSettingsSections.APPEARANCE, null, {
                                openWithoutBackstack: !0,
                                analyticsLocations: n
                            })
                        },
                        children: f.default.Messages.APP_ICON_NEW_STYLES_CTA
                    }), (0, a.jsx)("div", {
                        className: E.pointer
                    })]
                })
            }
        },
        141233: function(e, t, n) {
            "use strict";
            n.r(t), n("40455"), n("430198"), n("353926"), n("893966"), n("734307"), n("803141"), n("355298"), n("333984"), n("914788"), n("869765"), n("621853"), n("706454"), n("210887"), n("581883"), n("592125"), n("324067"), n("984933"), n("271383"), n("93093"), n("888369"), n("430824"), n("375954"), n("496675"), n("306680"), n("771845"), n("9156"), n("594174"), n("55589")
        },
        371398: function(e, t, n) {
            "use strict";
            n.r(t), n("590965"), n("317381"), n("40455"), n("458772"), n("368321"), n("541099"), n("174212"), n("213459"), n("998698"), n("812206"), n("344532"), n("292584"), n("758182"), n("358221"), n("12498"), n("430198"), n("719247"), n("146282"), n("281320"), n("339085"), n("174065"), n("353926"), n("735020"), n("774863"), n("238349"), n("660189"), n("682474"), n("581036"), n("208970"), n("5254"), n("669764"), n("317632"), n("420491"), n("972830"), n("487419"), n("223606"), n("580079"), n("937111"), n("893966"), n("45966"), n("819553"), n("240864"), n("408042"), n("289393"), n("687476"), n("924301"), n("734307"), n("803141"), n("41776"), n("410473"), n("48929"), n("584731"), n("748902"), n("355298"), n("333984"), n("726745"), n("140155"), n("109497"), n("601992"), n("541692"), n("502087"), n("628566"), n("823385"), n("455199"), n("807092"), n("869765"), n("359119"), n("768419"), n("565799"), n("88751"), n("742738"), n("427679"), n("926491"), n("765104"), n("601070"), n("344185"), n("920303"), n("569471"), n("159299"), n("260483"), n("144140"), n("10401"), n("151662"), n("706454"), n("210887"), n("581883"), n("243852"), n("450795"), n("543882"), n("199902"), n("314897"), n("523746"), n("680089"), n("237904"), n("439170"), n("624453"), n("184107"), n("592125"), n("58468"), n("553795"), n("480294"), n("906467"), n("857192"), n("703558"), n("831506"), n("82142"), n("165630"), n("486472"), n("324067"), n("984933"), n("650774"), n("720202"), n("271383"), n("93093"), n("888369"), n("430824"), n("797316"), n("607744"), n("674985"), n("341165"), n("131951"), n("542578"), n("375954"), n("722086"), n("649974"), n("209590"), n("496675"), n("571474"), n("158776"), n("358652"), n("544610"), n("878884"), n("19780"), n("306680"), n("699516"), n("768119"), n("944486"), n("914010"), n("885110"), n("797258"), n("771845"), n("606304"), n("215427"), n("959457"), n("558724"), n("111583"), n("62817"), n("9156"), n("23434"), n("594174"), n("33039"), n("979651"), n("351402"), n("192513"), n("456065"), n("173747"), n("55589"), n("938475"), n("974042"), n("417363"), n("941128"), n("556296"), n("974180"), n("808506"), n("237997")
        },
        838134: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("613828"),
                i = n("608787"),
                r = n("765717"),
                o = n("981631");
            let u = s.lazy(() => (0, i.importWithRetry)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("29549"), n.e("31605"), n.e("6380"), n.e("4970"), n.e("18101"), n.e("81539"), n.e("11256"), n.e("27128"), n.e("17278")]).then(n.bind(n, "753450")),
                    webpackId: "753450"
                })),
                d = s.lazy(() => (0, i.importWithRetry)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("6380"), n.e("4970"), n.e("18101"), n.e("27128"), n.e("14339")]).then(n.bind(n, "74438")),
                    webpackId: "74438"
                })),
                c = s.lazy(() => (0, i.importWithRetry)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("6380"), n.e("4970"), n.e("18101"), n.e("27128"), n.e("98067")]).then(n.bind(n, "675869")),
                    webpackId: "675869"
                }));

            function f() {
                return (0, a.jsxs)(l.Switch, {
                    children: [(0, a.jsx)(r.default, {
                        path: o.Routes.APPLICATION_DIRECTORY,
                        exact: !0,
                        component: d
                    }), (0, a.jsx)(r.default, {
                        path: o.Routes.APPLICATION_DIRECTORY_SEARCH,
                        component: c
                    }), (0, a.jsx)(r.default, {
                        path: o.Routes.APPLICATION_DIRECTORY_PROFILE_SECTION(":applicationId", ":section?"),
                        component: u
                    })]
                })
            }
        },
        857458: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRedirectPath: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("266067"),
                l = n("860911"),
                i = n("981631"),
                r = n("188785");

            function o() {
                let e = location.pathname + location.search;
                return r.CONFERENCE_MODE_ENABLED ? i.Routes.REGISTER : (0, l.getLoginPath)(e, !1)
            }
            t.default = function() {
                return (0, a.jsx)(s.Redirect, {
                    to: o()
                })
            }
        },
        77987: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                makeAuthenticated: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("314897"),
                l = n("449934"),
                i = n("857458"),
                r = n("981631");

            function o(e, t) {
                var n, o;
                let u = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                    passProps: !0
                };

                function d(n) {
                    if (!(0, l.isAuthenticated)() && s.default.getLoginStatus() !== r.LoginStates.LOGGING_IN && s.default.allowLogoutRedirect()) return null != t ? (0, a.jsx)(t, {
                        renderRedirect: (0, a.jsx)(i.default, {})
                    }) : (0, a.jsx)(i.default, {});
                    return (0, a.jsx)(e, {
                        ...u.passProps ? n : null
                    })
                }
                return d.displayName = "Authenticated(".concat(null !== (o = null !== (n = e.displayName) && void 0 !== n ? n : e.name) && void 0 !== o ? o : "<Unknown>", ")"), d
            }
        },
        821982: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("768581"),
                s = n("1585");
            t.default = (e, t, n) => (0, a.getAvatarDecorationURL)({
                avatarDecoration: {
                    asset: e
                },
                size: (0, s.getDecorationSizeForAvatarSize)(t),
                canAnimate: n
            })
        },
        498058: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("470079"),
                s = n("442837"),
                l = n("592125"),
                i = n("594174"),
                r = n("292584"),
                o = n("158631");

            function u(e) {
                var t;
                let n = (0, s.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    u = (0, s.useStateFromStores)([l.default], () => l.default.getChannel(e)),
                    d = (0, s.useStateFromStores)([r.default], () => null != e ? r.default.getBroadcastByChannel(e) : null),
                    c = (0, o.default)(),
                    f = a.useMemo(() => {
                        var e, t;
                        return null !== (t = null == u ? void 0 : null === (e = u.recipients) || void 0 === e ? void 0 : e.map(e => i.default.getUser(e)).filter(e => null != e && e.id !== (null == d ? void 0 : d.userId))) && void 0 !== t ? t : []
                    }, [null == d ? void 0 : d.userId, null == u ? void 0 : u.recipients]);
                return null == n ? [] : c ? f : null !== (t = f.length > 0 ? [n].concat(f) : null == d ? void 0 : d.viewers) && void 0 !== t ? t : []
            }
        },
        106674: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("692547"),
                r = n("481060"),
                o = n("287734"),
                u = n("872810"),
                d = n("367907"),
                c = n("835473"),
                f = n("871118"),
                E = n("543882"),
                h = n("314897"),
                C = n("944486"),
                _ = n("594174"),
                m = n("366695"),
                S = n("372662"),
                p = n("632184"),
                I = n("602623"),
                g = n("51144"),
                T = n("498058"),
                A = n("158631"),
                N = n("143614"),
                v = n("981631"),
                R = n("70722"),
                O = n("689938"),
                L = n("267071");

            function P(e) {
                let {
                    users: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: L.viewers,
                    children: [(0, a.jsx)(p.default, {
                        width: 16,
                        height: 16,
                        color: i.default.colors.HEADER_PRIMARY.css
                    }), (0, a.jsx)(I.default, {
                        showUserPopout: !0,
                        useFallbackUserForPopout: !0,
                        users: t,
                        max: 6,
                        size: I.Sizes.SIZE_24
                    })]
                })
            }

            function y(e) {
                var t;
                let {
                    broadcast: n
                } = e, {
                    userId: i,
                    applicationId: p,
                    channelId: I,
                    streamKey: y
                } = n, [M, D] = s.useState(!1), x = (0, l.useStateFromStores)([_.default], () => _.default.getUser(i)), [b] = (0, c.default)([p]), U = null !== (t = g.default.getGlobalName(x)) && void 0 !== t ? t : g.default.getUserTag(x), j = (0, N.default)(), G = (0, l.useStateFromStores)([E.default], () => E.default.getPreviewURL(null, I, i)), w = (0, l.useStateFromStores)([C.default], () => C.default.getVoiceChannelId()), k = (0, A.default)(), B = (0, T.default)(I);
                if (s.useEffect(() => {
                        M && w === I && D(!1)
                    }, [w, M, I]), null == x || null == U) return null;
                let {
                    buttonColor: F,
                    buttonCTA: H,
                    disabled: V
                } = function(e, t) {
                    let n = h.default.getId(),
                        a = t.some(e => e.id === n) || e === n,
                        s = t.length >= v.MAX_GROUP_DM_BROADCAST_PARTICIPANTS;
                    return {
                        buttonColor: s ? r.ButtonColors.RED : r.ButtonColors.GREEN,
                        buttonCTA: s ? O.default.Messages.BROADCAST_FULL : a ? O.default.Messages.VIEW_BROADCAST : O.default.Messages.JOIN_BROADCAST,
                        disabled: s
                    }
                }(i, B);
                return (0, a.jsxs)("div", {
                    className: L.container,
                    children: [(0, a.jsx)(r.Avatar, {
                        size: r.AvatarSizes.SIZE_32,
                        src: x.getAvatarURL(null, 32),
                        "aria-label": U
                    }), (0, a.jsxs)("div", {
                        className: L.details,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/semibold",
                            children: U
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-sm/medium",
                            color: "header-secondary",
                            children: null != b ? O.default.Messages.STREAMING.format({
                                name: b.name
                            }) : O.default.Messages.STREAMING_A_GAME
                        }), (0, a.jsxs)("div", {
                            className: L.activity,
                            children: [B.length > 0 && (0, a.jsx)(P, {
                                users: B
                            }), (0, a.jsxs)(r.Button, {
                                onClick: () => {
                                    if (w === I) {
                                        o.default.selectPrivateChannel(I);
                                        return
                                    }
                                    D(!0), (0, u.joinPrivateChannelAndWatchStream)(I, y), d.default.trackWithMetadata(v.AnalyticEvents.BROADCAST_VIEWED, {
                                        num_active_broadcasts: j.length,
                                        broadcast_position: j.findIndex(e => e.userId === i) + 1,
                                        is_broadcasting: k,
                                        broadcast_channel_id: I
                                    })
                                },
                                color: F,
                                size: r.ButtonSizes.SMALL,
                                className: L.button,
                                disabled: V,
                                innerClassName: L.innerButton,
                                children: [(0, a.jsx)(S.default, {
                                    width: 16,
                                    height: 16
                                }), H]
                            })]
                        })]
                    }), null != G ? (0, a.jsx)(f.default, {
                        className: L.stream,
                        stream: {
                            streamType: R.StreamTypes.CALL,
                            ownerId: i,
                            channelId: I
                        }
                    }) : (0, a.jsx)(m.default, {
                        game: b,
                        size: m.default.Sizes.LARGE,
                        className: L.gameIcon
                    })]
                })
            }
        },
        205976: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("481060"),
                i = n("436088"),
                r = n("770471"),
                o = n("143614"),
                u = n("106674"),
                d = n("787740"),
                c = n("689938"),
                f = n("421983");

            function E() {
                let {
                    canViewBroadcasts: e
                } = r.default.useExperiment({
                    location: "broadcast_list_no_track"
                }, {
                    autoTrackExposure: !1
                }), t = (0, o.default)();
                return 0 === t.length ? null : (r.default.trackExposure({
                    location: "broadcast_list"
                }), e) ? (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("div", {
                        className: f.header,
                        children: (0, a.jsxs)("div", {
                            className: f.inline,
                            children: [(0, a.jsx)(i.default, {
                                color: s.default.colors.HEADER_PRIMARY.css,
                                height: 20,
                                width: 20
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: c.default.Messages.LIVE_BROADCASTS
                            }), (0, a.jsx)(d.default, {}), (0, a.jsxs)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: ["— ", t.length.toLocaleString()]
                            })]
                        })
                    }), t.map(e => (0, a.jsx)(u.default, {
                        broadcast: e
                    }, e.userId))]
                }) : null
            }
        },
        571250: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("689938");

            function s(e, t, n) {
                return n ? a.default.Messages.CONSOLE_CONNECTING_DISABLED : t ? a.default.Messages.SERVER_DEAFENED_DIALOG_TITLE : e ? a.default.Messages.UNDEAFEN : a.default.Messages.DEAFEN
            }
        },
        679891: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("846027"),
                l = n("317770"),
                i = n("594190"),
                r = n("928518"),
                o = n("131951"),
                u = n("451478"),
                d = n("981631"),
                c = n("65154");

            function f(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let E = new Set,
                h = new Set,
                C = null;

            function _() {
                for (let e of E) s.default.setDisableLocalVideo(e, d.VideoToggleState.MANUAL_ENABLED, c.MediaEngineContextTypes.DEFAULT, !1);
                h.clear(), E.clear()
            }
            class m extends l.default {
                _initialize() {
                    a.default.subscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.subscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.subscribe("WINDOW_VISIBILITY_CHANGE", this.handleWindowVisibilityChange), a.default.subscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), r.default.addChangeListener(this.handlePopoutChange)
                }
                _terminate() {
                    a.default.unsubscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.unsubscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.unsubscribe("WINDOW_VISIBILITY_CHANGE", this.handleWindowVisibilityChange), a.default.unsubscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), r.default.removeChangeListener(this.handlePopoutChange), _(), C = null
                }
                handleIncomingVideo(e) {
                    let {
                        userId: t,
                        context: n,
                        streamId: a
                    } = e;
                    if (n !== c.MediaEngineContextTypes.DEFAULT || null == a) return;
                    let l = null != i.default.getVisibleGame(),
                        f = u.default.isVisible(),
                        C = r.default.getWindowVisible(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
                        _ = o.default.isLocalVideoDisabled(t, n),
                        m = h.has(t);
                    l && !f && !C && !_ && !m && (E.add(t), s.default.setDisableLocalVideo(t, d.VideoToggleState.DISABLED, n, !1))
                }
                handleManualLocalVideoToggle(e) {
                    let {
                        userId: t,
                        persist: n
                    } = e;
                    n && (h.add(t), E.delete(t))
                }
                constructor(...e) {
                    super(...e), f(this, "handleWindowVisibilityChange", e => {
                        let {
                            visible: t
                        } = e;
                        t && _()
                    }), f(this, "handleVoiceChannelSelect", e => {
                        let {
                            channelId: t
                        } = e;
                        t !== C && (_(), C = t)
                    }), f(this, "handlePopoutChange", () => {
                        r.default.getWindowVisible(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT) && _()
                    })
                }
            }
            t.default = new m
        },
        55311: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("846027"),
                i = n("468026"),
                r = n("689938");

            function o(e) {
                if (e) {
                    (0, s.openModal)(e => (0, a.jsx)(i.default, {
                        ...e,
                        title: r.default.Messages.SERVER_DEAFENED_DIALOG_TITLE,
                        body: r.default.Messages.SERVER_DEAFENED_DIALOG_BODY
                    }));
                    return
                }
                l.default.toggleSelfDeaf()
            }
        },
        320149: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("541716"),
                o = n("910611"),
                u = n("355298"),
                d = n("333984"),
                c = n("26373"),
                f = n("486622"),
                E = n("718538"),
                h = n("359110"),
                C = n("6025"),
                _ = n("433355"),
                m = n("465670"),
                S = n("502568"),
                p = n("933557"),
                I = n("287746"),
                g = n("689938"),
                T = n("838190"),
                A = n("539077");

            function N(e) {
                let {
                    channel: t,
                    baseChannelId: n
                } = e, N = (0, p.default)(t), v = (0, c.useListHasSingleMessageRequest)(), R = (0, c.useListHasSingleSpamMessageRequest)(), O = (0, l.useStateFromStores)([u.default], () => u.default.isMessageRequest(t.id)), L = (0, l.useStateFromStores)([d.default], () => d.default.isSpam(t.id)), P = (0, E.useLongestChannelMessageBeforeReply)(t.id, t.getRecipientId()), y = s.useCallback(() => {
                    C.default.closeChannelSidebar(_.MESSAGE_REQUESTS_BASE_CHANNEL_ID), O && v && (0, h.transitionToChannel)(t.id), L && R && (0, h.transitionToChannel)(t.id)
                }, [t.id, L, R, O, v]), M = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(g.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE))
                }, []), {
                    markAsNotSpam: D
                } = (0, f.useMessageRequestActions)({
                    onAcceptSuccess: y,
                    onError: M
                });
                if (null == t || !t.isDM()) return null;
                let x = [(0, a.jsx)(S.default.Icon, {
                    icon: m.default,
                    tooltip: g.default.Messages.CLOSE,
                    onClick: () => C.default.closeChannelSidebar(n)
                }, "close")];
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(S.default, {
                        toolbar: x,
                        "aria-label": g.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                        children: (0, o.renderTitle)({
                            channel: t,
                            channelName: N,
                            inSidebar: !0
                        })
                    }), L && (0, a.jsxs)("div", {
                        className: A.hamBanner,
                        children: [(0, a.jsx)(i.Text, {
                            className: A.__invalid_hamBannerText,
                            variant: "text-sm/normal",
                            children: g.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_HEADER
                        }), (0, a.jsx)(i.Button, {
                            className: A.hamBannerButton,
                            size: i.ButtonSizes.SMALL,
                            onClick: () => D(t, P),
                            children: g.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_BUTTON
                        })]
                    }), (0, a.jsx)("div", {
                        className: T.chat,
                        children: (0, a.jsx)(I.default, {
                            channel: t,
                            guild: null,
                            chatInputType: r.ChatInputTypes.SIDEBAR
                        }, t.id)
                    })]
                })
            }
        },
        626421: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("399606"),
                o = n("243778"),
                u = n("914010"),
                d = n("566840"),
                c = n("921944"),
                f = n("106315");
            let E = s.memo(function(e) {
                var t, n, l;
                let {
                    state: r,
                    markAsDismissed: o
                } = e, {
                    name: u,
                    guildId: d,
                    boundingRect: c
                } = r, E = s.useMemo(() => {
                    var e, t, n;
                    return e = 0, t = 0, n = 0, null
                }, [u, d, o]);
                if (null == E) return null;
                return (0, a.jsx)("div", {
                    className: i()(f.upsell, !(null != (t = c) && !(t.y < 0)) && f.hidden),
                    style: (n = 0, null == (l = c) ? {} : {
                        top: l.top,
                        left: l.right - l.x
                    }),
                    children: E
                })
            });

            function h() {
                let e = (0, r.useStateFromStores)([u.default], () => u.default.getGuildId()),
                    t = (0, d.useChannelListUpsells)(e),
                    [n, s] = (0, o.useSelectedDismissibleContent)(Object.values(t).filter(e => {
                        let {
                            disabled: t
                        } = e;
                        return !t
                    }).map(e => {
                        let {
                            name: t
                        } = e;
                        return t
                    }), c.DismissibleContentGroupName.SIDEBAR);
                if (null == n) return null;
                let l = t[n];
                return null == l ? null : (0, a.jsx)("div", {
                    className: f.container,
                    children: (0, a.jsx)(E, {
                        state: l,
                        markAsDismissed: s
                    })
                })
            }
        },
        986332: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useChannelNoticeRedesignExperiment: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2022-12_channel_notice_redesign",
                label: "Channel Notice Redesign",
                defaultConfig: {
                    showRedesignedChannelNotice: !1,
                    showRedesignedLiveChannelNotice: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show Redesigned Channel Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !1
                    }
                }, {
                    id: 2,
                    label: "Show Redesigned Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !1,
                        showRedesignedLiveChannelNotice: !0
                    }
                }, {
                    id: 3,
                    label: "Show Redesigned Channel Notices & Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !0
                    }
                }]
            });

            function s() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    {
                        showRedesignedChannelNotice: t,
                        showRedesignedLiveChannelNotice: n
                    } = a.useExperiment({
                        location: "c0d6eb_1"
                    }, {
                        autoTrackExposure: e
                    });
                return {
                    showRedesignedChannelNotice: t,
                    showRedesignedLiveChannelNotice: n
                }
            }
        },
        122611: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("704215"),
                r = n("433517"),
                o = n("963202"),
                u = n("824991"),
                d = n("705348"),
                c = n("243778"),
                f = n("360453"),
                E = n("377743"),
                h = n("834743"),
                C = n("862099"),
                _ = n("704631"),
                m = n("819792"),
                S = n("919285"),
                p = n("118470"),
                I = n("413307"),
                g = n("849688"),
                T = n("374023"),
                A = n("661599"),
                N = n("923608"),
                v = n("617899"),
                R = n("8521"),
                O = n("760326"),
                L = n("536687"),
                P = n("652785"),
                y = n("981631"),
                M = n("921944");

            function D(e) {
                e.stopPropagation()
            }

            function x(e) {
                var t;
                let {
                    guild: n
                } = e, [f, C] = s.useState(null !== (t = r.Storage.get(P.LAST_HIDDEN_CHANNEL_NOTICE)) && void 0 !== t ? t : 0), m = e => {
                    r.Storage.set(P.LAST_HIDDEN_CHANNEL_NOTICE, e), C(e)
                }, {
                    defaultGameId: S,
                    enableClanCreation: p
                } = (0, o.useClanPrepilotExperimentForGuild)({
                    guild: n,
                    location: "ChannelNoticesGuard",
                    includeConverted: !1
                }), I = (0, l.useStateFromStoresArray)(P.CHANNEL_NOTICE_STORES, () => P.CHANNEL_NOTICES.filter(e => {
                    let {
                        type: t,
                        store: a
                    } = e;
                    if (t === y.ChannelNoticeTypes.CLAN_ADMIN_UPSELL) return p;
                    return null == a ? void 0 : a.channelNoticePredicate(n, f)
                }).map(e => e.dismissibleContentType));
                return (0, a.jsx)(c.default, {
                    contentTypes: I,
                    groupName: M.DismissibleContentGroupName.CHANNEL_NOTICES,
                    children: e => {
                        let {
                            visibleContent: t,
                            markAsDismissed: s
                        } = e, l = () => {
                            m(Date.now()), s(M.ContentDismissActionType.UNKNOWN)
                        }, r = (() => {
                            switch (t) {
                                case i.DismissibleContent.CHANNEL_NOTICE_HUBLINK:
                                    return (0, a.jsx)(_.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_INVITE:
                                    return (0, a.jsx)(v.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION:
                                    return (0, a.jsx)(h.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER:
                                    return (0, a.jsx)(O.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER:
                                    return (0, a.jsx)(E.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE:
                                    return (0, a.jsx)(N.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.LINKED_ROLE_ADMIN_GUILD:
                                    return (0, a.jsx)(d.default, {
                                        guild: n,
                                        markAsDismissed: () => s(M.ContentDismissActionType.UNKNOWN)
                                    });
                                case i.DismissibleContent.CHANNEL_LIST_CLAN_ADMIN_UPSELL:
                                    return (0, a.jsx)(u.default, {
                                        guild: n,
                                        markAsDismissed: l,
                                        defaultGameId: S
                                    });
                                default:
                                    return null
                            }
                        })();
                        return null == r ? null : (0, a.jsx)("div", {
                            onContextMenu: D,
                            children: r
                        })
                    }
                })
            }
            t.default = e => {
                let {
                    guild: t
                } = e;
                switch ((0, L.default)(t)) {
                    case L.ConnectedChannelNotices.ENABLE_PUBLIC_GUILD:
                        return (0, a.jsx)(I.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.APPLIED_GUILD_BOOST_GRACE_PERIOD:
                        return (0, a.jsx)(f.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.MAX_MEMBER_COUNT:
                        return (0, a.jsx)(R.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.GUILD_LIVE_CHANNEL:
                        return (0, a.jsx)(C.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.GUILD_MFA_WARNING:
                        return (0, a.jsx)(A.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.COMMANDS_MIGRATION:
                        return (0, a.jsx)(S.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.APPLICATION_SUBSCRIPTION_EXPIRATION:
                        return (0, a.jsx)(p.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.HUB_STUDY_ROOM:
                        return (0, a.jsx)(m.default, {
                            guild: t
                        });
                    case L.ConnectedChannelNotices.SIGNUP:
                        return (0, a.jsx)(g.default, {
                            guild: t
                        })
                }
                return T.ProcessArgs.isDisallowPopupsSet() ? null : (0, a.jsx)(x, {
                    guild: e.guild
                })
            }
        },
        652785: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CHANNEL_NOTICES: function() {
                    return E
                },
                CHANNEL_NOTICE_STORES: function() {
                    return h
                },
                LAST_HIDDEN_CHANNEL_NOTICE: function() {
                    return f
                }
            });
            var a = n("704215"),
                s = n("823385"),
                l = n("327689"),
                i = n("421176"),
                r = n("989695"),
                o = n("456065"),
                u = n("683743"),
                d = n("823379"),
                c = n("981631");
            let f = "lastHiddenChannelNotice",
                E = [{
                    type: c.ChannelNoticeTypes.CLAN_ADMIN_UPSELL,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_LIST_CLAN_ADMIN_UPSELL
                }, {
                    type: c.ChannelNoticeTypes.GUILD_BOOSTING,
                    store: i.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION
                }, {
                    type: c.ChannelNoticeTypes.GUILD_BANNER,
                    store: l.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER
                }, {
                    type: c.ChannelNoticeTypes.INVITE,
                    store: u.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_INVITE
                }, {
                    type: c.ChannelNoticeTypes.HUB_LINK,
                    store: o.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_HUBLINK
                }, {
                    type: c.ChannelNoticeTypes.QUICKSWITCHER,
                    store: s.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER
                }, {
                    type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL,
                    store: r.default,
                    dismissibleContentType: a.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                }, {
                    type: c.ChannelNoticeTypes.LINKED_ROLES_ADMIN,
                    dismissibleContentType: a.DismissibleContent.LINKED_ROLE_ADMIN_GUILD
                }],
                h = E.map(e => e.store).filter(d.isNotNullish)
        },
        661599: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("230711"),
                i = n("82950"),
                r = n("981631"),
                o = n("689938"),
                u = n("510342");
            class d extends s.PureComponent {
                render() {
                    return (0, a.jsx)(i.default, {
                        guild: this.props.guild,
                        onClick: () => l.default.open(r.UserSettingsSections.ACCOUNT),
                        message: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_MESSAGE_WITH_SPACING.format(),
                        cta: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_RESOLVE_BUTTON,
                        trackingSource: r.ChannelNoticeCtaSources.GUILD_MFA_WARNING,
                        type: r.ChannelNoticeTypes.MFA_WARNING,
                        image: u,
                        imageMarginX: 54,
                        undismissable: !0
                    })
                }
            }
            t.default = d
        },
        923608: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("704215"),
                i = n("605236"),
                r = n("150340"),
                o = n("434404"),
                u = n("626135"),
                d = n("428695"),
                c = n("981631"),
                f = n("921944"),
                E = n("689938");
            t.default = e => {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                s.useEffect(() => {
                    (0, i.requestMarkDismissibleContentAsShown)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                }, []);
                let h = s.useCallback(() => {
                        o.default.open(t.id, c.GuildSettingsSections.ONBOARDING), u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                            type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                            action: "primary"
                        }), (0, i.markDismissibleContentAsDismissed)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE, {
                            dismissAction: f.ContentDismissActionType.PRIMARY
                        }), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                    }, [t.id]),
                    C = s.useCallback(() => {
                        u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                            type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                            action: "dismiss"
                        }), n(f.ContentDismissActionType.UNKNOWN), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                    }, [t.id, n]);
                return (0, a.jsx)(d.default, {
                    guild: t,
                    onDismissed: C,
                    onClick: h,
                    title: E.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_TITLE,
                    message: E.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_MESSAGE,
                    cta: E.default.Messages.CHECK_IT_OUT,
                    trackingSource: c.ChannelNoticeCtaSources.GUILD_ONBOARDING_UPSELL_NOTICE,
                    type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL
                })
            }
        },
        617899: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("904245"),
                r = n("944486"),
                o = n("82950"),
                u = n("981631"),
                d = n("921944"),
                c = n("689938"),
                f = n("589148");

            function E(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class h extends s.PureComponent {
                render() {
                    let e = "".concat(c.default.Messages.INVITE_NOTICE_MESSAGE, "\n").concat(c.default.Messages.INVITE_NOTICE_MESSAGE_PART_2);
                    return (0, a.jsx)(o.default, {
                        guild: this.props.guild,
                        onDismissed: this.handleClose,
                        onClick: this.handleInvite,
                        message: e,
                        cta: c.default.Messages.INVITE_PEOPLE,
                        trackingSource: u.ChannelNoticeCtaSources.INVITE_NOTICE,
                        type: u.ChannelNoticeTypes.INVITE,
                        image: f,
                        imageMarginX: 46
                    })
                }
                constructor(...e) {
                    super(...e), E(this, "handleInvite", () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, l.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await Promise.all([n.e("99387"), n.e("7654")]).then(n.bind(n, "560114"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guild: e,
                                source: u.InstantInviteSources.INVITE_NOTICE
                            })
                        })
                    }), E(this, "handleClose", () => {
                        let e = r.default.getChannelId();
                        this.props.markAsDismissed(d.ContentDismissActionType.UNKNOWN), null != e && i.default.sendBotMessage(e, c.default.Messages.HOW_TO_INVITE_OTHERS.format({
                            invitePeople: c.default.Messages.INVITE_PEOPLE
                        }))
                    })
                }
            }
            t.default = h
        },
        662842: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return Y
                }
            }), n("47120");
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("120356"),
                o = n.n(r),
                u = n("442837"),
                d = n("692547"),
                c = n("481060"),
                f = n("232567"),
                E = n("100527"),
                h = n("471445"),
                C = n("15274"),
                _ = n("924301"),
                m = n("504160"),
                S = n("151864"),
                p = n("725436"),
                I = n("497656"),
                g = n("554747"),
                T = n("230900"),
                A = n("854698"),
                N = n("703656"),
                v = n("922482"),
                R = n("565799"),
                O = n("501655"),
                L = n("427679"),
                P = n("448206"),
                y = n("484459"),
                M = n("103575"),
                D = n("496675"),
                x = n("594174"),
                b = n("465670"),
                U = n("242315"),
                j = n("662868"),
                G = n("393112"),
                w = n("170039"),
                k = n("898140"),
                B = n("981631"),
                F = n("765305"),
                H = n("689938"),
                V = n("53116");
            (s = a || (a = {}))[s.STAGE = 0] = "STAGE", s[s.EVENT_EXTERNAL = 1] = "EVENT_EXTERNAL", s[s.EVENT_VOICE = 2] = "EVENT_VOICE", s[s.STUDY_ROOM = 3] = "STUDY_ROOM";

            function Y(e) {
                let {
                    guild: t,
                    isStudyRoomNotice: n = !1
                } = e, a = (0, I.useActiveEventOrStageInstanceChannel)(t.id), s = (0, g.useGuildActiveEvent)(t.id), r = (0, u.useStateFromStores)([L.default], () => L.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: Y,
                    isEventNoticeHidden: W
                } = (0, u.useStateFromStoresObject)([S.default], () => ({
                    isStageNoticeHidden: S.default.isLiveChannelNoticeHidden({
                        stageId: null == r ? void 0 : r.id
                    }),
                    isEventNoticeHidden: S.default.isLiveChannelNoticeHidden({
                        eventId: null == s ? void 0 : s.id
                    })
                }), [r, s]), K = null == a ? void 0 : a.id, z = (0, u.useStateFromStoresArray)([R.default], () => [...new Set(R.default.getMutableParticipants(K, O.StageChannelParticipantNamedIndex.SPEAKER).map(e => e.user))], [K]), q = (0, u.useStateFromStores)([R.default], () => null != K ? R.default.getParticipantCount(K, O.StageChannelParticipantNamedIndex.AUDIENCE) : 0, [K]), Q = (0, u.useStateFromStores)([D.default], () => D.default.can(B.Permissions.CONNECT, a)), Z = (0, P.default)(null == a ? void 0 : a.id), X = null == s ? void 0 : s.creator_id, J = (0, u.useStateFromStores)([x.default], () => x.default.getUser(X), [X]);
                i.useEffect(() => {
                    null != X && (0, f.getUser)(X)
                }, [X]);
                let {
                    noticeType: $,
                    title: ee,
                    location: et,
                    locationIcon: en,
                    canListenIn: ea,
                    buttonText: es,
                    users: el,
                    overflowUsers: ei,
                    onClose: er
                } = i.useMemo(() => (function(e) {
                    let {
                        guildEvent: t,
                        stageInstance: n,
                        activeChannel: a,
                        canConnect: s,
                        myRole: i,
                        eventCreator: r,
                        speakers: o,
                        listenerCount: u,
                        isEventNoticeHidden: d,
                        isStageNoticeHidden: f,
                        isStudyRoomNotice: E
                    } = e, C = null != n && null != a && !f, S = null != t ? (0, A.getNextRecurrenceIdInEvent)(t) : null;
                    if (E && null != a) {
                        let e = (0, h.getChannelIconComponent)(a);
                        return {
                            noticeType: 3,
                            title: "\uD83D\uDCDA☕ ".concat(a.name),
                            location: H.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                            locationIcon: null != e ? (0, l.jsx)(e, {
                                width: 16,
                                height: 16,
                                className: V.locationIcon
                            }) : null,
                            canListenIn: s,
                            buttonText: H.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                            users: [],
                            overflowUsers: null
                        }
                    }
                    if (null == t || d) {
                        if (C) {
                            let e = H.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == i ? void 0 : i.speaker) ? e = H.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != i && (e = H.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: 0,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(w.default, {
                                    width: 16,
                                    height: 16,
                                    className: V.locationIcon
                                }),
                                canListenIn: s,
                                buttonText: e,
                                onClose: () => (0, m.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: o.length > 5 ? o.slice(0, 5) : o,
                                overflowUsers: u < 1 ? null : (0, l.jsxs)("div", {
                                    className: V.pill,
                                    children: [(0, l.jsx)(U.default, {
                                        width: 12,
                                        height: 12,
                                        className: V.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: V.pillLabel,
                                        children: u
                                    })]
                                })
                            }
                        }
                    } else {
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.STAGE_INSTANCE && C) {
                            let e = H.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == i ? void 0 : i.speaker) ? e = H.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != i && (e = H.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: 0,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(w.default, {
                                    width: 16,
                                    height: 16,
                                    className: V.locationIcon
                                }),
                                canListenIn: s,
                                buttonText: e,
                                onClose: () => (0, m.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: o.length > 5 ? o.slice(0, 5) : o,
                                overflowUsers: u < 1 ? null : (0, l.jsxs)("div", {
                                    className: V.pill,
                                    children: [(0, l.jsx)(U.default, {
                                        width: 12,
                                        height: 12,
                                        className: V.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: V.pillLabel,
                                        children: u
                                    })]
                                })
                            }
                        }
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.EXTERNAL) {
                            let e = (0, T.getLocationFromEvent)(t);
                            if (null == e) return {
                                noticeType: null
                            };
                            let n = _.default.getUserCount(t.id, S);
                            return {
                                noticeType: 1,
                                title: t.name,
                                location: (0, p.guildEventDetailsParser)(e, !0),
                                locationIcon: (0, l.jsx)(G.default, {
                                    width: 16,
                                    height: 16,
                                    className: V.locationIcon
                                }),
                                canListenIn: !1,
                                buttonText: H.default.Messages.GUILD_EVENT_DETAILS_INFO_TAB_TITLE,
                                onClose: () => (0, m.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == r ? [] : [r],
                                overflowUsers: n < 1 ? null : (0, l.jsxs)("div", {
                                    className: V.pill,
                                    children: [(0, l.jsx)(k.default, {
                                        width: 12,
                                        height: 12,
                                        className: V.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: V.pillLabel,
                                        children: n
                                    })]
                                })
                            }
                        } else if (t.entity_type === F.GuildScheduledEventEntityTypes.VOICE && null != a) {
                            let e = (0, h.getChannelIconComponent)(a),
                                n = _.default.getUserCount(t.id, S);
                            return {
                                noticeType: 2,
                                title: t.name,
                                location: a.name,
                                locationIcon: null != e ? (0, l.jsx)(e, {
                                    width: 16,
                                    height: 16,
                                    className: V.locationIcon
                                }) : null,
                                canListenIn: s,
                                buttonText: H.default.Messages.GUILD_EVENT_JOIN,
                                onClose: () => (0, m.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == r ? [] : [r],
                                overflowUsers: n < 1 ? null : (0, l.jsxs)("div", {
                                    className: V.pill,
                                    children: [(0, l.jsx)(k.default, {
                                        width: 12,
                                        height: 12,
                                        className: V.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: V.pillLabel,
                                        children: n
                                    })]
                                })
                            }
                        }
                    }
                    return {
                        noticeType: null
                    }
                })({
                    guildEvent: s,
                    stageInstance: r,
                    activeChannel: a,
                    canConnect: Q,
                    myRole: Z,
                    eventCreator: J,
                    speakers: z,
                    listenerCount: q,
                    isEventNoticeHidden: W,
                    isStageNoticeHidden: Y,
                    isStudyRoomNotice: n
                }), [s, r, a, Q, Z, J, z, q, W, Y, n]);
                return null == $ ? null : (0, l.jsxs)("div", {
                    className: V.container,
                    children: [null != er ? (0, l.jsx)(c.Clickable, {
                        onClick: er,
                        className: V.close,
                        "aria-label": H.default.Messages.DISMISS,
                        children: (0, l.jsx)(b.default, {
                            className: V.closeIcon
                        })
                    }) : null, (0, l.jsxs)("div", {
                        className: V.header,
                        children: [(0, l.jsx)(j.default, {
                            color: d.default.unsafe_rawColors.GREEN_230.css,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(c.Text, {
                            variant: "text-xs/semibold",
                            color: "text-positive",
                            children: H.default.Messages.LIVE
                        })]
                    }), (el.length > 0 || null != ei) && (0, l.jsxs)("div", {
                        className: V.participants,
                        children: [el.map(e => (0, l.jsx)(c.Popout, {
                            preload: () => (0, y.maybeFetchUserProfileForPopout)(e, {
                                guildId: t.id
                            }),
                            renderPopout: n => (0, l.jsx)(M.default, {
                                ...n,
                                location: "LiveChannelNotice",
                                userId: e.id,
                                guildId: t.id,
                                newAnalyticsLocations: [E.default.AVATAR]
                            }),
                            position: "right",
                            children: n => (0, l.jsx)(c.Avatar, {
                                ...n,
                                src: e.getAvatarURL(t.id, 24),
                                "aria-label": e.username,
                                size: c.AvatarSizes.SIZE_24,
                                className: V.avatar
                            })
                        }, e.id)), ei]
                    }), (0, l.jsx)(c.Text, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        className: o()(V.title, V.live),
                        children: ee
                    }), (0, l.jsxs)("div", {
                        className: V.locationContainer,
                        children: [en, (0, l.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            className: V.location,
                            children: et
                        })]
                    }), ea || 1 === $ ? (0, l.jsx)(c.Button, {
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.GREEN,
                        onClick: () => {
                            if (ea) null != a && null != a.getGuildId() && ((0, v.connectAndOpen)(a), (0, N.transitionToGuild)(a.getGuildId(), a.id));
                            else {
                                if (null == s) return;
                                (0, C.openGuildEventDetails)({
                                    eventId: s.id
                                })
                            }
                        },
                        className: V.button,
                        fullWidth: !0,
                        children: es
                    }) : null]
                })
            }
        },
        8521: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("949389"),
                i = n("63063"),
                r = n("82950"),
                o = n("981631"),
                u = n("689938"),
                d = n("511189");
            t.default = e => {
                let {
                    guild: t
                } = e, n = s.useCallback(() => {
                    (0, l.hideMaxMemberCountChannelNotice)(t.id)
                }, [t.id]);
                return (0, a.jsx)(r.default, {
                    guild: t,
                    onDismissed: n,
                    message: u.default.Messages.NOTICE_CHANNEL_MAX_MEMBERS_CAP_REACHED_MESSAGE.format({
                        maxMemberCount: t.maxMembers,
                        maxMembersUrl: i.default.getArticleURL(o.HelpdeskArticles.MAX_MEMBERS)
                    }),
                    type: o.ChannelNoticeTypes.MAX_MEMBER_COUNT,
                    image: d,
                    imageMarginX: 61
                })
            }
        },
        82950: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("481060"),
                o = n("367907"),
                u = n("465670"),
                d = n("626135"),
                c = n("986332"),
                f = n("428695"),
                E = n("981631"),
                h = n("689938"),
                C = n("361114");
            let _ = i().debounce(o.default.trackWithMetadata, 500),
                m = e => {
                    let {
                        guild: t,
                        title: n,
                        message: l,
                        image: i,
                        type: c,
                        imageMarginX: f,
                        imageMarginTop: m,
                        trackingSource: S,
                        undismissable: p,
                        onDismissed: I,
                        onClick: g,
                        cta: T,
                        ctaColor: A
                    } = e;
                    s.useEffect(() => {
                        _(E.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                            notice_type: c,
                            guild_id: t.id
                        })
                    }, [t.id, c]);
                    let N = null;
                    "function" == typeof T ? N = T() : null != T && (N = (0, a.jsx)(r.Button, {
                        className: C.btn,
                        size: r.Button.Sizes.SMALL,
                        onClick: () => {
                            null != c && d.default.track(E.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                source: S,
                                guild_id: t.id,
                                notice_type: c
                            }), null == g || g()
                        },
                        fullWidth: !0,
                        color: A,
                        children: T
                    }));
                    let v = null != f ? "".concat(f, "px") : "16px";
                    return (0, a.jsxs)("div", {
                        className: C.channelNotice,
                        children: [!0 === p ? null : (0, a.jsx)(r.Clickable, {
                            onClick: () => {
                                o.default.trackWithMetadata(E.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: c
                                }), null == I || I()
                            },
                            className: C.close,
                            "aria-label": h.default.Messages.DISMISS,
                            children: (0, a.jsx)(u.default, {
                                className: C.closeIcon
                            })
                        }), (0, a.jsx)("div", {
                            className: C.imageContainer,
                            style: {
                                marginTop: "".concat(m, "px"),
                                marginLeft: v,
                                marginRight: v
                            },
                            children: (0, a.jsx)("img", {
                                className: C.image,
                                src: i,
                                alt: ""
                            })
                        }), (0, a.jsxs)("div", {
                            className: C.message,
                            children: [null != n ? (0, a.jsx)(r.Heading, {
                                variant: "heading-md/semibold",
                                className: C.title,
                                children: n
                            }) : null, (0, a.jsx)(r.Text, {
                                variant: "text-sm/normal",
                                children: l
                            }), N]
                        })]
                    })
                };
            t.default = function(e) {
                let {
                    showRedesignedChannelNotice: t
                } = (0, c.useChannelNoticeRedesignExperiment)(!0);
                return t ? (0, a.jsx)(f.default, {
                    ...e
                }) : (0, a.jsx)(m, {
                    ...e
                })
            }
        },
        760326: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("561716"),
                i = n("51596"),
                r = n("82950"),
                o = n("981631"),
                u = n("921944"),
                d = n("689938"),
                c = n("932478");
            t.default = e => {
                let t = l.QUICKSWITCHER_SHOW.binds["0"].split("+").map(e => null != s.PRETTY_KEYS[e] ? (0, s.PRETTY_KEYS)[e]() : e).join(" + ").toUpperCase();
                return (0, a.jsx)(r.default, {
                    guild: e.guild,
                    onDismissed: () => e.markAsDismissed(u.ContentDismissActionType.UNKNOWN),
                    onClick: () => (0, i.show)("CHANNEL_NOTICE"),
                    message: d.default.Messages.QUICKSWITCHER_NOTICE,
                    cta: t,
                    trackingSource: o.ChannelNoticeCtaSources.QUICK_SWITCHER_NOTICE,
                    type: o.ChannelNoticeTypes.QUICKSWITCHER,
                    image: c,
                    imageMarginX: 50
                })
            }
        },
        536687: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ConnectedChannelNotices: function() {
                    return s
                },
                default: function() {
                    return N
                }
            });
            var a, s, l = n("470079"),
                i = n("442837"),
                r = n("179360"),
                o = n("897285"),
                u = n("300213"),
                d = n("554747"),
                c = n("499137"),
                f = n("929507"),
                E = n("270144"),
                h = n("400271"),
                C = n("678513"),
                _ = n("899667"),
                m = n("496675"),
                S = n("541566"),
                p = n("192513"),
                I = n("255791"),
                g = n("70956"),
                T = n("267642"),
                A = n("981631");

            function N(e) {
                var t;
                let n = null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : A.EMPTY_STRING_SNOWFLAKE_ID,
                    {
                        lastFetchedAt: a
                    } = (0, i.useStateFromStoresObject)([_.default], () => ({
                        appliedGuildBoosts: _.default.getAppliedGuildBoostsForGuild(n),
                        lastFetchedAt: _.default.getLastFetchedAtForGuild(n)
                    })),
                    {
                        lastDismissedGracePeriod: s,
                        isGracePeriodVisible: N
                    } = (0, i.useStateFromStoresObject)([S.default], () => ({
                        lastDismissedGracePeriod: S.default.getLastDismissedGracePeriodForGuild(n),
                        isGracePeriodVisible: S.default.isVisible(n)
                    })),
                    v = (0, i.useStateFromStores)([h.default], () => h.default.isVisible(e)),
                    R = (0, i.useStateFromStores)([I.default], () => I.default.isVisible(e)),
                    O = (0, i.useStateFromStores)([m.default], () => m.default.can(A.Permissions.ADMINISTRATOR, e)),
                    L = null != s && Date.now() - s <= A.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY,
                    P = null != e ? e.premiumSubscriberCount : 0,
                    y = (0, T.getGuildTierFromAppliedBoostCount)(P, n) !== A.BoostedGuildTiers.NONE,
                    M = null != a && Date.now() - a <= 432e5,
                    D = !M && !L && O && y,
                    x = (0, u.useGuildHasLiveChannelNotice)(n),
                    b = (0, i.useStateFromStores)([p.default], () => p.default.isVisible(e)),
                    U = f.default.useShouldShowChannelNotice(n),
                    j = (0, E.useUnseenEndedApplicationSubscriptionEntitlements)(e),
                    {
                        enableStudyGroup: G
                    } = (0, c.useHubStudyGroupExperiment)(e),
                    w = j.length > 0,
                    k = G && !(null == e ? void 0 : e.hasFeature(A.GuildFeatures.HUB)),
                    B = (0, d.useGuildUpcomingEventsNotice)(n),
                    F = (0, i.useStateFromStores)([C.default], () => null != C.default.getActiveGuildSignUp(n));
                if (l.useEffect(() => {
                        o.default.getGuildEventsForCurrentUser(n)
                    }, [n]), l.useEffect(() => {
                        let e = -1;
                        return D && (e = window.setTimeout(() => {
                            null != n && (0, r.fetchAppliedGuildBoostsForGuild)(n)
                        }, 30 * Math.random() * g.default.Millis.SECOND)), () => {
                            window.clearTimeout(e)
                        }
                    }, [n, D]), v) return 0;
                if (N) return 1;
                if (R) return 2;
                else if (x || null != B) return 3;
                else if (b) return 4;
                else if (U) return 5;
                else if (w) return 6;
                else if (k) return 7;
                else if (F) return 8;
                return null
            }(a = s || (s = {}))[a.ENABLE_PUBLIC_GUILD = 0] = "ENABLE_PUBLIC_GUILD", a[a.APPLIED_GUILD_BOOST_GRACE_PERIOD = 1] = "APPLIED_GUILD_BOOST_GRACE_PERIOD", a[a.MAX_MEMBER_COUNT = 2] = "MAX_MEMBER_COUNT", a[a.GUILD_LIVE_CHANNEL = 3] = "GUILD_LIVE_CHANNEL", a[a.GUILD_MFA_WARNING = 4] = "GUILD_MFA_WARNING", a[a.COMMANDS_MIGRATION = 5] = "COMMANDS_MIGRATION", a[a.APPLICATION_SUBSCRIPTION_EXPIRATION = 6] = "APPLICATION_SUBSCRIPTION_EXPIRATION", a[a.HUB_STUDY_ROOM = 7] = "HUB_STUDY_ROOM", a[a.SIGNUP = 8] = "SIGNUP", a[a.CLAN_UPSELL = 9] = "CLAN_UPSELL"
        },
        491575: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("512722"),
                i = n.n(l),
                r = n("481060"),
                o = n("176299"),
                u = n("512847"),
                d = n("612226"),
                c = n("714338"),
                f = n("607070"),
                E = n("317858"),
                h = n("635395"),
                C = n("5560"),
                _ = n("451478"),
                m = n("585483"),
                S = n("145604"),
                p = n("718813"),
                I = n("981631"),
                g = n("796163");
            t.default = s.memo(function() {
                let e = s.useRef(null),
                    t = s.useCallback(t => {
                        let {
                            duration: n,
                            intensity: a
                        } = t;
                        if (f.default.useReducedMotion || !_.default.isFocused()) return;
                        let {
                            current: s
                        } = e;
                        i()(null != s, "Shakeable is shaken when not mounted"), s.shake(n, a)
                    }, []);
                return s.useEffect(() => (c.default.setLayout(d.default), c.default.enable(), () => c.default.disable()), []), s.useEffect(() => (m.ComponentDispatch.subscribe(I.ComponentActions.SHAKE_APP, t), () => {
                    m.ComponentDispatch.unsubscribe(I.ComponentActions.SHAKE_APP, t)
                }), [t]), (0, E.default)(), (0, a.jsxs)(r.Shakeable, {
                    ref: e,
                    className: g.app,
                    children: [(0, a.jsx)(p.default, {
                        className: g.layers,
                        children: (0, a.jsx)(o.default, {})
                    }), (0, a.jsx)(h.default, {}), (0, a.jsx)(u.default, {}), (0, a.jsx)(S.default, {}), (0, a.jsx)(C.default, {}), (0, a.jsx)(r.DnDKeyboardHelpBar, {})]
                })
            })
        },
        145604: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return z
                }
            }), n("789020"), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("224706"),
                r = n("593472"),
                o = n("603113"),
                u = n("367907"),
                d = n("731429"),
                c = n("188471"),
                f = n("176881"),
                E = n("318885"),
                h = n("358221"),
                C = n("710845"),
                _ = n("581567"),
                m = n("594190"),
                S = n("38618"),
                p = n("501640"),
                I = n("924301"),
                g = n("734307"),
                T = n("355298"),
                A = n("427679"),
                N = n("695346"),
                v = n("592125"),
                R = n("77498"),
                O = n("271383"),
                L = n("430824"),
                P = n("131951"),
                y = n("375954"),
                M = n("19780"),
                D = n("944486"),
                x = n("914010"),
                b = n("885110"),
                U = n("9156"),
                j = n("594174"),
                G = n("774343"),
                w = n("974042"),
                k = n("808506"),
                B = n("626135"),
                F = n("630388"),
                H = n("823379"),
                V = n("998502"),
                Y = n("981631"),
                W = n("987650");
            class K extends s.PureComponent {
                componentDidMount() {
                    let {
                        selectedChannelId: e,
                        connected: t,
                        isNSFWChannel: n,
                        isTextInVoice: a
                    } = this.props;
                    t && null != e && ((0, u.trackWithMetadata)(Y.AnalyticEvents.CHANNEL_OPENED, {
                        ...(0, u.getChannelOpenedMetadata)(e)
                    }), (0, c.trackClickstream)(Y.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM, {
                        channelId: e
                    }), a && (0, u.trackWithMetadata)(Y.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                        channel_is_nsfw: n
                    }))
                }
                componentDidUpdate(e) {
                    var t, n, a;
                    let {
                        voiceChannelId: s,
                        voiceChannelGuildId: l,
                        voiceChannelType: o,
                        voiceChannelBitrate: S,
                        videoEnabled: p,
                        isScreenSharing: T,
                        runningGame: O,
                        runningGamePid: P,
                        selectedChannelId: D,
                        selectedGuildId: j,
                        connected: G,
                        homeLink: w,
                        friendsTabSection: K,
                        isNSFWChannel: z,
                        isMemberPending: q,
                        hasPreviewEnabled: Q,
                        postableChannelCount: Z,
                        isTextInVoice: X,
                        numMessageRequests: J
                    } = this.props;
                    if (e.voiceChannelId !== s && null != e.voiceChannelId) {
                        let t = m.default.getCurrentGameForAnalytics(),
                            n = null != t ? t.name : "",
                            a = A.default.getStageInstanceByChannel(e.voiceChannelId),
                            s = I.default.getActiveEventByChannel(e.voiceChannelId);
                        B.default.track(Y.AnalyticEvents.LEAVE_VOICE_CHANNEL, {
                            channel_id: e.voiceChannelId,
                            channel_type: e.voiceChannelType,
                            channel_bitrate: e.voiceChannelBitrate,
                            guild_id: e.voiceChannelGuildId,
                            rtc_connection_id: M.default.getRTCConnectionId(),
                            game_name: n,
                            duration: M.default.getDuration(),
                            game_platform: this.props.gamePlatform,
                            game_id: this.props.gameId,
                            media_session_id: M.default.getMediaSessionId(),
                            stage_instance_id: null == a ? void 0 : a.id,
                            guild_scheduled_event_id: null == s ? void 0 : s.id,
                            ...(0, u.getVoiceStateMetadata)(e.voiceChannelGuildId, e.voiceChannelId, e.videoEnabled),
                            ...M.default.getVoiceStateStats(),
                            ...h.default.getSelectedParticipantStats(e.voiceChannelId)
                        })
                    }
                    if (e.voiceChannelId !== s && null != s) {
                        let e = m.default.getCurrentGameForAnalytics(),
                            t = null != e ? e.name : "",
                            n = A.default.getStageInstanceByChannel(s),
                            a = I.default.getActiveEventByChannel(s);
                        (0, u.trackWithMetadata)(Y.AnalyticEvents.CHANNEL_OPENED, {
                            ...(0, u.getChannelOpenedMetadata)(s)
                        }), (0, c.trackClickstream)(Y.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM, {
                            channelId: s
                        }), B.default.track(Y.AnalyticEvents.JOIN_VOICE_CHANNEL, {
                            channel_id: s,
                            channel_type: o,
                            channel_bitrate: S,
                            guild_id: l,
                            game_name: t,
                            game_platform: this.props.gamePlatform,
                            game_id: this.props.gameId,
                            stage_instance_id: null == n ? void 0 : n.id,
                            guild_scheduled_event_id: null == a ? void 0 : a.id,
                            ...(0, u.getCustomStatusMetadata)(l, s),
                            ...(0, u.getVoiceStateMetadata)(l, s, p)
                        })
                    }
                    if (e.runningGame !== O && null != O && !O.isLauncher) {
                        let e = R.default.getGameByName(O.name),
                            t = m.default.getOverrideForGame(O),
                            n = L.default.getGuildIds(),
                            a = N.ActivityRestrictedGuilds.getSetting(),
                            s = n.filter(e => !a.includes(e)).slice(0, 200),
                            l = null;
                        l = null != t ? "custom_override" : null != e ? "verified_game" : "launcher";
                        let o = (0, m.getOverlayGameStatus)(O);
                        if (setTimeout(() => {
                                var t;
                                let n = V.default.GetWindowFullscreenTypeByPid(O.pid, O.name, O.fullscreenType),
                                    {
                                        gameName: a,
                                        gameId: i,
                                        exe: u,
                                        distributor: d
                                    } = (0, _.getRunningGameAnalytics)(O);
                                B.default.track(Y.AnalyticEvents.LAUNCH_GAME, {
                                    game: a,
                                    game_id: i,
                                    verified: null != e && (0, _.isVerifiedGameExecutable)(u, null == e ? void 0 : e.executables),
                                    elevated: O.elevated,
                                    is_launcher: null !== (t = null == O ? void 0 : O.isLauncher) && void 0 !== t && t,
                                    game_platform: Y.ActivityGamePlatforms.DESKTOP,
                                    detection_method: l,
                                    distributor: d,
                                    is_overlay_enabled: k.default.enabled,
                                    is_overlay_game_enabled: o.enabled,
                                    is_overlay_game_source: o.source,
                                    fullscreen_type: r.RunningProcessFullscreenType[n],
                                    overlay_method: W.OverlayMethod[o.overlayMethod],
                                    activity_status_enabled: N.ShowCurrentGame.getSetting(),
                                    activity_status_shared_guilds: s,
                                    current_user_status: b.default.getStatus(),
                                    game_detection_enabled: (0, m.isDetectionEnabled)(O),
                                    executable_path: u
                                })
                            }, 1e4), null != O.name && null != P && R.default.shouldReport(O.name)) {
                            let e = O.name;
                            i.default.identifyGame(P, e).then(e => i.default.reportUnverifiedGame(e)).catch(e => new C.default("AutoAnalytics").error("Cannot identify game", e))
                        }
                    }
                    if ((e.videoEnabled !== p || e.isScreenSharing !== T) && null != s) {
                        let e = "none",
                            t = [T ? "screen" : null, p ? "camera" : null].filter(H.isNotNullish),
                            n = null;
                        T ? (e = "screen", n = (0, E.getDesktopSourceMetadata)()) : p && (e = "camera"), B.default.track(Y.AnalyticEvents.VIDEO_INPUT_TOGGLED, {
                            video_input_type: e,
                            video_toggle_source: __OVERLAY__ ? "overlay" : "app",
                            enabled_inputs: t,
                            preview_enabled: N.AlwaysPreviewVideo.getSetting(),
                            ...n,
                            ...this.getGameMetadata(),
                            ...(0, u.collectVoiceAnalyticsMetadata)(s)
                        })
                    }
                    if (G && null != j && (j !== e.selectedGuildId || !e.connected || q && !e.isMemberPending)) {
                        let e = {
                            ...q ? {
                                is_pending: q,
                                preview_enabled: Q
                            } : {},
                            postable_channels: Z,
                            premium_progress_bar_enabled: null !== (n = null === (t = L.default.getGuild(x.default.getGuildId())) || void 0 === t ? void 0 : t.premiumProgressBarEnabled) && void 0 !== n && n,
                            viewing_all_channels: !U.default.isOptInEnabled(j),
                            num_recent_channels: g.default.recentsChannelCount(j)
                        };
                        (0, u.trackWithMetadata)(Y.AnalyticEvents.GUILD_VIEWED, e), (0, c.trackClickstream)(Y.AnalyticEvents.GUILD_VIEWED_CLICKSTREAM, {
                            guildId: j
                        })
                    } else G && null == j && w === Y.Routes.FRIENDS && (!e.connected || K !== e.friendsTabSection || w !== e.homeLink) ? (0, f.default)({
                        tab_opened: K
                    }) : G && null == j && w === Y.Routes.MESSAGE_REQUESTS && (!e.connected || w !== e.homeLink) && !this.isMessageRequestsInitialized && (this.isMessageRequestsInitialized = !0, B.default.track(Y.AnalyticEvents.MESSAGE_REQUESTS_INITIALIZED, {
                        num_message_requests: J
                    }));
                    if (G && null != D && (!e.connected || D !== e.selectedChannelId || j !== e.selectedGuildId)) {
                        let t = e.selectedChannelId,
                            n = v.default.getChannel(t),
                            s = L.default.getGuild(null == n ? void 0 : n.getGuildId());
                        if (null != t && null != n && null != s && s.publicUpdatesChannelId === t) {
                            let e = y.default.getMessages(t),
                                l = e.toArray().reverse().find(e => {
                                    var t;
                                    return (0, F.hasFlag)(e.flags, Y.MessageFlags.IS_CROSSPOST) && (null === (t = e.messageReference) || void 0 === t ? void 0 : t.guild_id) === "667560445975986187"
                                });
                            B.default.track(Y.AnalyticEvents.ACK_COMMUNITY_MESSAGES, {
                                last_message_id: null == l ? void 0 : l.id,
                                last_message_reference_message_id: null == l ? void 0 : null === (a = l.messageReference) || void 0 === a ? void 0 : a.message_id,
                                messages_loaded: e.hasFetched,
                                ...(0, u.collectChannelAnalyticsMetadata)(n),
                                ...(0, u.collectGuildAnalyticsMetadata)(s.id)
                            })
                        }
                        let l = (0, d.collectThreadMetadata)(v.default.getChannel(D), !0);
                        (0, u.trackWithMetadata)(Y.AnalyticEvents.CHANNEL_OPENED, {
                            ...l,
                            ...(0, u.getChannelOpenedMetadata)(D)
                        }), (0, c.trackClickstream)(Y.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM, {
                            channelId: D
                        }), X && (0, u.trackWithMetadata)(Y.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                            channel_is_nsfw: z
                        })
                    }
                }
                getGameMetadata() {
                    return {
                        game_platform: this.props.gamePlatform,
                        game_name: this.props.gameName,
                        game_exe_name: this.props.gameExeName,
                        game_id: this.props.gameId
                    }
                }
                render() {
                    return null
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, a = !1, (n = "isMessageRequestsInitialized") in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }

            function z() {
                let [e, t] = (0, l.useStateFromStoresArray)([D.default], () => [D.default.getVoiceChannelId(), D.default.getChannelId()], []), n = (0, l.useStateFromStores)([v.default], () => v.default.getChannel(t), [t]), s = (0, l.useStateFromStores)([h.default], () => (null == n ? void 0 : n.id) != null && h.default.getChatOpen(n.id), [n]), i = null == n ? void 0 : n.nsfw, r = (0, l.useStateFromStores)([v.default], () => v.default.getChannel(e), [e]), u = (0, l.useStateFromStores)([x.default], () => x.default.getGuildId(), []), d = (0, l.useStateFromStores)([L.default], () => L.default.getGuild(u), [u]), c = (0, l.useStateFromStores)([j.default], () => j.default.getCurrentUser(), []), f = (0, l.useStateFromStores)([O.default], () => {
                    var e, t;
                    return null != c && null != u && null !== (t = null === (e = O.default.getMember(u, c.id)) || void 0 === e ? void 0 : e.isPending) && void 0 !== t && t
                }, [c, u]), E = (0, l.useStateFromStores)([w.default], () => w.default.getState().section, []), C = (0, l.useStateFromStores)([G.default], () => G.default.getHomeLink(), []), _ = (0, l.useStateFromStores)([S.default], () => S.default.isConnected(), []), [I, g] = (0, l.useStateFromStoresArray)([P.default], () => [P.default.isVideoEnabled(), P.default.isScreenSharing()], []), A = (0, l.useStateFromStores)([b.default], () => b.default.getPrimaryActivity(), []), N = (0, l.useStateFromStores)([m.default], () => m.default.getCurrentGameForAnalytics(), []), R = (0, p.default)(u), y = (0, l.useStateFromStores)([T.default], () => T.default.getMessageRequestsCount(), []), M = {
                    selectedChannelId: t,
                    isNSFWChannel: i,
                    selectedGuildId: u,
                    friendsTabSection: E,
                    homeLink: C,
                    connected: _,
                    videoEnabled: I,
                    isScreenSharing: g,
                    voiceChannelId: null == r ? void 0 : r.id,
                    voiceChannelGuildId: null == r ? void 0 : r.getGuildId(),
                    voiceChannelType: null == r ? void 0 : r.type,
                    voiceChannelBitrate: null == r ? void 0 : r.bitrate,
                    runningGame: N,
                    runningGamePid: null != N ? N.pid : null,
                    gamePlatform: (0, o.default)(A),
                    gameName: null != A ? A.name : null,
                    gameId: null != A ? A.application_id : null,
                    gameExeName: null != N ? N.exeName : null,
                    hasPreviewEnabled: null == d ? void 0 : d.features.has(Y.GuildFeatures.PREVIEW_ENABLED),
                    isMemberPending: f,
                    postableChannelCount: R,
                    isTextInVoice: s,
                    numMessageRequests: y
                };
                return (0, a.jsx)(K, {
                    ...M
                })
            }
        },
        718813: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            }), n("653041");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("120356"),
                r = n.n(i),
                o = n("748780"),
                u = n("442837"),
                d = n("215569"),
                c = n("481060"),
                f = n("37234"),
                E = n("134616"),
                h = n("714338"),
                C = n("663993"),
                _ = n("210887"),
                m = n("819640"),
                S = n("725568"),
                p = n("585483"),
                I = n("792125"),
                g = n("981631"),
                T = n("529542");

            function A(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let N = (0, C.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("40326"), n.e("23357"), n.e("49368"), n.e("19503"), n.e("15972"), n.e("12013"), n.e("6416"), n.e("43906"), n.e("32776"), n.e("95900"), n.e("33053"), n.e("8016"), n.e("49146"), n.e("68136"), n.e("76540"), n.e("22646"), n.e("4934"), n.e("87624"), n.e("36861"), n.e("43331"), n.e("18824"), n.e("30419"), n.e("35522"), n.e("5528"), n.e("31649"), n.e("79618")]).then(n.bind(n, "989804")),
                    webpackId: "989804",
                    name: "UserSettings"
                }),
                v = (0, C.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("7654"), n.e("33053"), n.e("85093"), n.e("78587")]).then(n.bind(n, "869779")),
                    webpackId: "869779",
                    name: "ChannelSettings"
                }),
                R = (0, C.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("40326"), n.e("23357"), n.e("15972"), n.e("12013"), n.e("6416"), n.e("43906"), n.e("32776"), n.e("95900"), n.e("4934"), n.e("87624"), n.e("43331"), n.e("30006")]).then(n.bind(n, "838819")),
                    webpackId: "838819",
                    name: "CollectiblesShop"
                }),
                O = (0, C.makeLazy)({
                    createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("7654"), n.e("33053"), n.e("49146"), n.e("75475"), n.e("85093"), n.e("85552"), n.e("58227"), n.e("43502")]).then(n.bind(n, "994763")),
                    webpackId: "994763",
                    name: "GuildSettings"
                }),
                L = {
                    [g.Layers.USER_SETTINGS]: () => (0, s.jsx)(N, {}),
                    [g.Layers.CHANNEL_SETTINGS]: () => (0, s.jsx)(v, {}),
                    [g.Layers.GUILD_SETTINGS]: () => (0, s.jsx)(O, {}),
                    [g.Layers.COLLECTIBLES_SHOP]: () => (0, s.jsx)(R, {})
                },
                P = "SHOWN",
                y = "HIDDEN",
                M = {
                    friction: 10,
                    tension: 100
                };

            function D() {
                return l.useEffect(() => (h.default.enable(), h.default.enableTemp(E.SETTINGS_LAYERS_LAYOUT), () => h.default.disableTemp()), []), null
            }
            class x extends(a = l.PureComponent) {
                static getDerivedStateFromProps(e, t) {
                    return e.mode !== t.mode ? {
                        animating: !0,
                        mode: e.mode
                    } : null
                }
                componentDidUpdate(e) {
                    let {
                        mode: t
                    } = this.props, {
                        mode: n
                    } = e;
                    if (t !== n) {
                        if (t === P && n === y) return this.animateIn();
                        if (t === y && n === P) return this.animateUnder()
                    }
                }
                componentWillEnter(e) {
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    n.setValue(1.1), t.setValue(0), e(), this.setState({
                        animating: !0
                    }, () => this.animateIn())
                }
                componentWillLeave(e) {
                    this.setState({
                        animating: !0
                    }, () => this.animateOut(e))
                }
                animateIn(e) {
                    u.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    o.default.parallel([o.default.spring(t, {
                        toValue: 1,
                        ...M
                    }), o.default.spring(n, {
                        toValue: 1,
                        ...M
                    })]).start(() => this.animateComplete(e))
                }
                animateOut(e) {
                    u.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    p.ComponentDispatch.dispatch(g.ComponentActions.LAYER_POP_START), o.default.parallel([o.default.spring(t, {
                        toValue: 0,
                        ...M
                    }), o.default.spring(n, {
                        toValue: 1.1,
                        ...M
                    })]).start(() => {
                        e(), p.ComponentDispatch.dispatch(g.ComponentActions.LAYER_POP_COMPLETE)
                    })
                }
                animateUnder() {
                    u.default.Emitter.pause(500);
                    let {
                        opacity: e,
                        scale: t
                    } = this.state;
                    o.default.parallel([o.default.spring(e, {
                        toValue: 0,
                        ...M
                    }), o.default.spring(t, {
                        toValue: .93,
                        ...M
                    })]).start(() => this.animateComplete())
                }
                animateComplete(e) {
                    this.setState({
                        animating: !1
                    }, e)
                }
                render() {
                    let {
                        animating: e
                    } = this.state, {
                        mode: t,
                        children: n,
                        baseLayer: a,
                        ...l
                    } = this.props, i = e || t === y ? this.getAnimatedStyle() : null, u = (0, s.jsx)(o.default.div, {
                        ref: e => this.containerRef.current = null != e ? e.refs.node : void 0,
                        "aria-hidden": t === y,
                        className: r()(T.layer, {
                            [T.baseLayer]: a,
                            [T.animating]: e,
                            "stop-animations": t === y
                        }),
                        style: i,
                        ...l,
                        children: n
                    });
                    return a ? u : (0, s.jsx)(c.FocusLock, {
                        containerRef: this.containerRef,
                        children: u
                    })
                }
                getAnimatedStyle() {
                    let {
                        opacity: e,
                        scale: t
                    } = this.state, {
                        reducedMotion: n
                    } = this.context;
                    return {
                        opacity: e,
                        transform: n.enabled ? void 0 : [{
                            scale: t
                        }, {
                            translateZ: 0
                        }]
                    }
                }
                constructor(e) {
                    super(e), A(this, "containerRef", l.createRef());
                    let t = 1,
                        n = 1;
                    e.mode === y && (t = .93, n = 0), this.state = {
                        animating: !1,
                        scale: new o.default.Value(t),
                        opacity: new o.default.Value(n),
                        mode: e.mode
                    }
                }
            }
            A(x, "defaultProps", {
                baseLayer: !1
            }), A(x, "contextType", c.AccessibilityPreferencesContext);
            class b extends l.PureComponent {
                componentDidMount() {
                    p.ComponentDispatch.subscribe(g.ComponentActions.LAYER_POP_ESCAPE_KEY, f.popLayer)
                }
                componentWillUnmount() {
                    p.ComponentDispatch.unsubscribe(g.ComponentActions.LAYER_POP_ESCAPE_KEY, f.popLayer)
                }
                renderLayers() {
                    let {
                        children: e,
                        layers: t,
                        hasFullScreenLayer: n
                    } = this.props, {
                        length: a
                    } = t, l = [];
                    return l.push((0, s.jsx)(x, {
                        mode: 0 !== a || n ? y : P,
                        baseLayer: !0,
                        children: e
                    }, "layer-base")), t.forEach((e, t) => l.push(this.renderComponent(e, t, a))), l
                }
                renderComponent(e, t, n) {
                    let a;
                    return a = "string" == typeof e ? L[e]() : (0, s.jsx)(e, {}), (0, s.jsxs)(x, {
                        mode: t === n - 1 ? P : y,
                        children: [(0, s.jsx)(D, {}), a]
                    }, "layer-".concat(t))
                }
                renderArtisanalHack() {
                    return (0, s.jsx)("div", {
                        className: r()(T.bg, (0, I.getThemeClass)(this.props.sidebarTheme))
                    })
                }
                render() {
                    return (0, s.jsxs)(s.Fragment, {
                        children: [this.renderArtisanalHack(), (0, s.jsx)(d.TransitionGroup, {
                            component: "div",
                            className: r()(T.layers, this.props.className),
                            children: this.renderLayers()
                        })]
                    })
                }
            }

            function U(e) {
                let t = (0, u.useStateFromStores)([_.default], () => _.default.darkSidebar) ? g.ThemeTypes.DARK : void 0,
                    n = (0, u.useStateFromStores)([m.default], () => m.default.getLayers()),
                    a = (0, S.useFullScreenLayerStore)(e => e.fullScreenLayers.length > 0);
                return (0, s.jsx)(b, {
                    ...e,
                    sidebarTheme: t,
                    layers: n,
                    hasFullScreenLayer: a
                })
            }
        },
        546735: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useClanSetupModalNavigation: function() {
                    return i
                }
            });
            var a = n("470079"),
                s = n("246364"),
                l = n("308083");

            function i(e) {
                let {
                    progress: t,
                    updateCurrentStep: n
                } = e, {
                    currentStep: i,
                    gameApplicationIds: r,
                    playstyle: o,
                    interests: u,
                    description: d,
                    tag: c,
                    verificationForm: f
                } = t, E = a.useMemo(() => null != f && f.formFields.some(e => !(0, s.isTermsFormField)(e)), [f]), h = a.useMemo(() => Array.from(u).filter(e => !l.ALL_TRAITS_SET.has(e) && !l.LANGUAGES_SET.has(e)), [u]), C = a.useCallback(() => {
                    n(i + 1)
                }, [i, n]), _ = a.useCallback(() => {
                    n(i - 1)
                }, [i, n]), m = a.useCallback(e => n(e), [n]), S = a.useMemo(() => {
                    switch (i) {
                        case l.ClanSetupSteps.GAMES:
                            return 0 === r.size;
                        case l.ClanSetupSteps.PLAYSTYLE:
                            return o === l.ClanPlaystyles.NONE;
                        case l.ClanSetupSteps.INTERESTS:
                            return h.length < 3;
                        case l.ClanSetupSteps.DESCRIPTION:
                            return 0 === d.length;
                        case l.ClanSetupSteps.CUSTOMIZE_TAG_BADGE:
                            return c.length < 2;
                        case l.ClanSetupSteps.MEMBER_APPLICATION:
                            return !E;
                        default:
                            return !1
                    }
                }, [i, d.length, r.size, E, h.length, o, c.length]), p = 0 === i;
                return a.useMemo(() => ({
                    onStepClick: m,
                    onNextClick: C,
                    onBackClick: _,
                    isNextDisabled: S,
                    isBackDisabled: p
                }), [p, S, _, C, m])
            }
        },
        603839: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("392711"),
                o = n("920906"),
                u = n("442837"),
                d = n("481060"),
                c = n("607070"),
                f = n("207796"),
                E = n("729017"),
                h = n("889711"),
                C = n("931240"),
                _ = n("970606"),
                m = n("963202"),
                S = n("650461"),
                p = n("432632"),
                I = n("35313"),
                g = n("284019"),
                T = n("672775"),
                A = n("601463"),
                N = n("192565"),
                v = n("641037"),
                R = n("689938"),
                O = n("590190");
            let L = {
                mass: 1,
                tension: 600,
                friction: 60,
                clamp: !0
            };

            function P(e) {
                let {
                    guildId: t,
                    onClose: n
                } = e, l = (0, u.useStateFromStores)([c.default], () => c.default.useReducedMotion), P = (0, S.useDefaultClanProgress)(), {
                    progress: y,
                    errors: M,
                    submitting: D
                } = (0, u.useStateFromStoresObject)([S.default], () => {
                    var e, n, a, s;
                    return {
                        progress: null !== (s = null === (e = S.default.getStateForGuild(t)) || void 0 === e ? void 0 : e.progress) && void 0 !== s ? s : P,
                        errors: null === (n = S.default.getStateForGuild(t)) || void 0 === n ? void 0 : n.errors,
                        submitting: null === (a = S.default.getStateForGuild(t)) || void 0 === a ? void 0 : a.submitting
                    }
                }), x = (0, p.useDefaultGameIdForClan)(t, "ClanSetupModal"), b = s.useMemo(() => (0, v.getClanSetupProgressSteps)(M), [M]), [U, j] = s.useState(!1), [G, w] = s.useState(window.innerWidth), [k, B] = s.useState(1), [F, H] = s.useState(!0), V = (0, I.useFullScreenModalAnimationStyle)(), Y = (0, o.useSpring)({
                    opacity: k,
                    config: L,
                    onStart: () => H(!0),
                    onRest: () => H(1 === k),
                    immediate: l
                }), W = (0, o.useSpring)({
                    transform: "translateX(".concat(1 === k ? 0 : -1 * (G - 380) / 2 + 190, "px)"),
                    config: L,
                    immediate: l
                }), K = (0, o.useTransition)(0 === k, {
                    from: {
                        opacity: 0
                    },
                    enter: {
                        opacity: 1,
                        delay: 500
                    },
                    config: L,
                    immediate: l
                }), z = (0, o.useTransition)(0 === k, {
                    from: {
                        opacity: 0
                    },
                    enter: {
                        opacity: 1
                    },
                    leave: {
                        opacity: 0
                    },
                    config: L,
                    immediate: l
                }), q = s.useCallback(e => {
                    if (e === b.length) B(0), (0, _.trackConvertStepViewed)(t, "signature");
                    else if (0 === k) B(1);
                    else {
                        var n;
                        C.updateClanSetup(t, {
                            currentStep: e,
                            furthestStep: Math.max(null !== (n = y.furthestStep) && void 0 !== n ? n : 0, e)
                        })
                    }
                }, [k, t, y.furthestStep, b.length]);
                s.useEffect(() => {
                    (0, _.trackConvertStepViewed)(t, (0, _.getProgressStepAnalyticsName)(y.currentStep))
                }, [t, y.currentStep]), s.useEffect(() => {
                    let e = (0, h.getResizeObserver)((0, r.debounce)(() => w(window.innerWidth), 250));
                    return (0, h.watch)(e, document.body), () => (0, h.unwatch)(e, document.body)
                }, [k, F]), s.useEffect(() => {
                    null != x && (0, C.updateClanSetup)(t, {
                        requiredGameId: x
                    })
                }, [x, t]);
                let Q = s.useMemo(() => null != M && Object.values(M).some(e => null != e), [M]),
                    Z = s.useMemo(() => null != M && Object.values(M).length > 0 ? (0, v.getClanSetupProgressSteps)(M).find(e => e.hasError) : null, [M]),
                    X = s.useCallback(() => {
                        B(1), C.updateClanSetup(t, {
                            currentStep: null == Z ? void 0 : Z.index
                        })
                    }, [null == Z ? void 0 : Z.index, t]),
                    {
                        guilds: J
                    } = (0, m.useClanPrepilotExperimentForAllGuilds)({
                        location: "ClanDiscoveryAdminContainer",
                        includeConverted: !1
                    }),
                    {
                        enableApplication: $
                    } = (0, m.useClanPrePilotApplicationExperiment)("ClanDiscoveryAdminContainer"),
                    ee = s.useCallback(() => {
                        0 === J.filter(e => e.id !== t).length && $ ? (0, f.setClanDiscoveryMode)(f.ClanDiscoveryMode.GET_STARTED) : (0, f.setClanDiscoveryMode)(f.ClanDiscoveryMode.ADMIN_UPSELL)
                    }, [J, t, $]),
                    et = s.useCallback(() => {
                        (0, v.submitClanSetup)({
                            guildId: t,
                            onSuccess: () => {
                                ee(), n()
                            },
                            progress: y
                        })
                    }, [t, y, ee, n]),
                    en = s.useRef(null),
                    ea = null != Z ? (0, a.jsxs)("div", {
                        className: O.tooltipContents,
                        children: [(0, a.jsx)(E.default, {
                            className: O.errorIcon
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(d.Text, {
                                variant: "text-sm/medium",
                                color: "header-primary",
                                children: R.default.Messages.CLAN_SUBMIT_ERROR_TITLE
                            }), (0, a.jsx)(d.Text, {
                                variant: "text-xs/normal",
                                color: "text-muted",
                                children: R.default.Messages.CLAN_SUBMIT_ERROR_TEXT.format({
                                    backHook: (e, t) => (0, a.jsx)(d.Anchor, {
                                        className: O.errorLink,
                                        onClick: X,
                                        children: e
                                    }, t)
                                })
                            })]
                        })]
                    }) : null;
                return (0, a.jsx)(o.animated.div, {
                    ref: en,
                    style: V,
                    className: O.modal,
                    children: (0, a.jsxs)(d.FocusRingScope, {
                        containerRef: en,
                        children: [(0, a.jsx)(d.Button, {
                            className: O.close,
                            look: d.Button.Looks.OUTLINED,
                            size: d.Button.Sizes.MEDIUM,
                            color: d.Button.Colors.PRIMARY,
                            onClick: n,
                            children: R.default.Messages.CLAN_SETUP_MODAL_SAVE_AND_QUIT
                        }), (0, a.jsxs)("div", {
                            className: O.content,
                            children: [(0, a.jsxs)("div", {
                                className: O.panel,
                                children: [(0, a.jsx)(o.animated.div, {
                                    style: Y,
                                    className: i()(O.stepsContainer, {
                                        [O.hidden]: !F
                                    }),
                                    children: (0, a.jsx)(N.default, {
                                        guildId: t
                                    })
                                }), (0, a.jsx)("div", {
                                    className: i()(O.navigationContainer, {
                                        [O.elevatedNavigationContainer]: !F
                                    }),
                                    children: (0, a.jsx)(T.default, {
                                        steps: b,
                                        progress: y,
                                        updateCurrentStep: q,
                                        animationStyle: Y,
                                        animationClassName: i()({
                                            [O.hidden]: !F
                                        })
                                    })
                                })]
                            }), (0, a.jsx)(o.animated.div, {
                                style: Y,
                                className: i()(O.divider, {
                                    [O.hidden]: !F,
                                    [O.dividerResponsive]: F
                                })
                            }), (0, a.jsx)(o.animated.div, {
                                style: W,
                                className: i()(O.sidebar, {
                                    [O.sidebarResponsive]: F
                                }),
                                children: (0, a.jsx)(A.default, {
                                    guildId: t,
                                    signed: U,
                                    setSigned: F ? void 0 : j,
                                    sidebarWidth: 380,
                                    windowWidth: G,
                                    transition: K,
                                    brandPrimaryColor: y.brandPrimaryColor
                                })
                            })]
                        }), z((e, t) => t && (0, a.jsx)(o.animated.div, {
                            style: e,
                            className: O.submit,
                            children: (0, a.jsx)(d.Tooltip, {
                                color: d.Tooltip.Colors.GREY,
                                tooltipClassName: O.tooltip,
                                text: ea,
                                "aria-label": null != Z ? R.default.Messages.CLAN_SUBMIT_ERROR_TITLE : void 0,
                                shouldShow: null != Z,
                                forceOpen: null != Z,
                                children: e => (0, a.jsx)(g.default, {
                                    ...e,
                                    themeColor: y.brandPrimaryColor,
                                    disabled: !U || Q,
                                    submitting: D,
                                    look: d.Button.Looks.FILLED,
                                    size: d.Button.Sizes.MEDIUM,
                                    color: d.Button.Colors.BRAND,
                                    onClick: et,
                                    children: R.default.Messages.FINISH
                                })
                            })
                        }))]
                    })
                })
            }
        },
        672775: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("546735"),
                l = n("754961"),
                i = n("590190");

            function r(e) {
                let {
                    steps: t,
                    progress: n,
                    updateCurrentStep: r,
                    animationStyle: o,
                    animationClassName: u
                } = e, {
                    onStepClick: d,
                    onNextClick: c,
                    onBackClick: f,
                    isNextDisabled: E,
                    isBackDisabled: h
                } = (0, s.useClanSetupModalNavigation)({
                    progress: n,
                    updateCurrentStep: r
                }), {
                    currentStep: C,
                    furthestStep: _,
                    brandPrimaryColor: m
                } = n;
                return (0, a.jsxs)("div", {
                    className: i.navigation,
                    children: [(0, a.jsx)(l.ClanSetupProgress, {
                        animationStyle: o,
                        className: u,
                        steps: t,
                        currentStepIndex: C,
                        furthestStepIndex: _,
                        onStepClick: d,
                        stepFillColor: m
                    }), (0, a.jsx)(l.ClanSetupProgressButtons, {
                        isBackDisabled: h,
                        isNextDisabled: E,
                        onNextClick: c,
                        onBackClick: f,
                        nextButtonBackgroundColor: m,
                        nextButtonClassName: u,
                        nextButtonAnimationStyle: o
                    })]
                })
            }
        },
        601463: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("481060"),
                r = n("532490"),
                o = n("620929"),
                u = n("689938"),
                d = n("590190");

            function c(e) {
                let {
                    guildId: t,
                    signed: n,
                    setSigned: c,
                    sidebarWidth: f,
                    windowWidth: E,
                    transition: h,
                    brandPrimaryColor: C
                } = e, _ = s.useMemo(() => (E - f) / 2, [f, E]);
                return (0, a.jsxs)("div", {
                    className: d.sidebarContent,
                    children: [h((e, t) => t && (0, a.jsx)(l.animated.div, {
                        className: d.sidebarLeftDecorationContainer,
                        style: {
                            opacity: e.opacity,
                            transform: e.opacity.to([0, 1], [40, 0]).to(e => "translateY(".concat(e, "px)")),
                            width: _
                        },
                        children: (0, a.jsxs)("div", {
                            className: d.sidebarLeftDecoration,
                            style: {
                                width: _
                            },
                            children: [(0, a.jsx)(i.Heading, {
                                variant: "heading-xxl/medium",
                                children: u.default.Messages.CLAN_SETUP_SIGN_TITLE
                            }), (0, a.jsx)(i.Text, {
                                variant: "text-md/normal",
                                color: "text-muted",
                                children: u.default.Messages.CLAN_SETUP_SIGN_SUBTITLE
                            })]
                        })
                    })), (0, a.jsx)("div", {
                        className: d.charterScrollContainer,
                        children: (0, a.jsx)(o.default, {
                            guildId: t,
                            canSignCharter: null != c,
                            onSignCharter: () => null == c ? void 0 : c(!n),
                            signHintPosition: r.SignHintPosition.RIGHT,
                            primaryColor: C,
                            className: d.charterScroll,
                            fullHeight: !0
                        })
                    })]
                })
            }
        },
        192565: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("224706"),
                r = n("931240"),
                o = n("650461"),
                u = n("94963"),
                d = n("745628"),
                c = n("950279"),
                f = n("796918"),
                E = n("513532"),
                h = n("741595"),
                C = n("974842"),
                _ = n("363915"),
                m = n("359380"),
                S = n("308083"),
                p = n("689938");

            function I(e) {
                let t = (0, o.useDefaultClanProgress)(),
                    {
                        progress: n,
                        errors: a
                    } = (0, l.useStateFromStoresObject)([o.default], () => {
                        var n;
                        let a = o.default.getStateForGuild(e);
                        return {
                            progress: null !== (n = a.progress) && void 0 !== n ? n : t,
                            errors: a.errors
                        }
                    });
                return {
                    progress: n,
                    errors: a,
                    handleClanUpdate: s.useCallback(t => r.updateClanSetup(e, t), [e])
                }
            }
            let g = {
                [S.ClanSetupSteps.GAMES]: function(e) {
                    let {
                        guildId: t
                    } = e;
                    s.useEffect(() => {
                        i.default.getDetectableGames()
                    }, []);
                    let {
                        progress: n,
                        errors: l,
                        handleClanUpdate: r
                    } = I(t);
                    return (0, a.jsx)(c.default, {
                        title: p.default.Messages.CLAN_SETUP_GAMES_TITLE,
                        description: p.default.Messages.CLAN_SETUP_GAMES_SUBTITLE,
                        handleUpdate: e => r({
                            gameApplicationIds: e
                        }),
                        gameApplicationIds: n.gameApplicationIds,
                        requiredGameId: n.requiredGameId,
                        error: null == l ? void 0 : l.gameApplicationIds
                    })
                },
                [S.ClanSetupSteps.PLAYSTYLE]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        errors: s,
                        handleClanUpdate: l
                    } = I(t);
                    return (0, a.jsx)(h.default, {
                        title: p.default.Messages.CLAN_SETUP_PLAYSTYLE_TITLE,
                        description: p.default.Messages.CLAN_SETUP_PLAYSTYLE_SUBTITLE,
                        handleUpdate: e => l({
                            playstyle: e
                        }),
                        playstyle: n.playstyle,
                        error: null == s ? void 0 : s.playstyle
                    })
                },
                [S.ClanSetupSteps.UTILITY_TRAITS]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        handleClanUpdate: s
                    } = I(t);
                    return (0, a.jsx)(m.default, {
                        guildId: t,
                        title: p.default.Messages.CLAN_SETUP_UTILITY_TRAITS_TITLE,
                        description: p.default.Messages.CLAN_SETUP_UTILITY_TRAITS_SUBTITLE,
                        handleUpdate: e => s({
                            interests: e
                        }),
                        requiredGameId: n.requiredGameId,
                        progress: n
                    })
                },
                [S.ClanSetupSteps.INTERESTS]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        errors: s,
                        handleClanUpdate: l
                    } = I(t);
                    return (0, a.jsx)(f.default, {
                        guildId: t,
                        handleUpdate: l,
                        progress: n,
                        error: null == s ? void 0 : s.interests
                    })
                },
                [S.ClanSetupSteps.DESCRIPTION]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        errors: s,
                        handleClanUpdate: l
                    } = I(t);
                    return (0, a.jsx)(d.default, {
                        guildId: t,
                        handleUpdate: l,
                        progress: n,
                        errors: s
                    })
                },
                [S.ClanSetupSteps.CUSTOMIZE_TAG_BADGE]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        errors: s,
                        handleClanUpdate: l
                    } = I(t);
                    return (0, a.jsx)(C.default, {
                        handleUpdate: l,
                        tag: n.tag,
                        error: null == s ? void 0 : s.tag,
                        badge: n.badgeKind,
                        primaryColor: n.badgePrimaryColor,
                        secondaryColor: n.badgeSecondaryColor,
                        furthestStep: n.furthestStep
                    })
                },
                [S.ClanSetupSteps.CUSTOMIZE_BANNER]: function(e) {
                    let {
                        guildId: t
                    } = e, {
                        progress: n,
                        handleClanUpdate: s
                    } = I(t);
                    return (0, a.jsx)(u.default, {
                        handleUpdate: s,
                        progress: n,
                        guildId: t
                    })
                },
                [S.ClanSetupSteps.MEMBER_APPLICATION]: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return (0, a.jsx)(E.default, {
                        guildId: t
                    })
                }
            };

            function T(e) {
                return e.currentStep.toString()
            }

            function A(e) {
                let t = g[e.currentStep];
                return (0, a.jsx)(t, {
                    guildId: e.guildId
                })
            }

            function N(e) {
                let {
                    guildId: t
                } = e, n = (0, o.useDefaultClanProgress)(), i = (0, l.useStateFromStores)([o.default], () => {
                    var e, a, s;
                    return null !== (s = null === (a = o.default.getStateForGuild(t)) || void 0 === a ? void 0 : null === (e = a.progress) || void 0 === e ? void 0 : e.currentStep) && void 0 !== s ? s : n.currentStep
                }), r = s.useMemo(() => [{
                    currentStep: i,
                    guildId: t
                }], [i, t]);
                return (0, a.jsx)(_.default, {
                    currentStep: i,
                    items: r,
                    renderItem: A,
                    getItemKey: T
                })
            }
        },
        754961: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClanSetupProgress: function() {
                    return m
                },
                ClanSetupProgressButtons: function() {
                    return S
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("920906"),
                o = n("442837"),
                u = n("481060"),
                d = n("607070"),
                c = n("729017"),
                f = n("603368"),
                E = n("284019"),
                h = n("689938"),
                C = n("954834");

            function _(e) {
                let {
                    index: t,
                    onClick: n,
                    name: l,
                    isActive: E,
                    animate: _,
                    fillBackgroundColor: m,
                    hasError: S
                } = e, p = (0, o.useStateFromStores)([d.default], () => d.default.useReducedMotion), I = (0, u.useToken)(u.tokens.colors.BG_SURFACE_OVERLAY), g = s.useMemo(() => (0, f.getClanPrimaryButtonStyles)(m, I.hex()), [m, I]), T = null != g, A = (0, r.useSpring)({
                    transform: E ? "translateX(0%)" : "translateX(-100%)",
                    config: {
                        ...r.config.stiff,
                        clamp: !0
                    },
                    immediate: p || !_
                }), N = (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(u.Text, {
                        variant: "text-sm/medium",
                        color: "header-primary",
                        children: h.default.Messages.CLAN_SUBMIT_ERROR_TITLE
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children: h.default.Messages.CLAN_SUBMIT_ERROR_SUBTITLE
                    })]
                });
                return (0, a.jsx)(u.Tooltip, {
                    color: S ? u.Tooltip.Colors.GREY : u.Tooltip.Colors.BRAND,
                    text: S ? N : l,
                    "aria-label": S ? h.default.Messages.CLAN_SUBMIT_ERROR_TITLE : l,
                    shouldShow: null != n,
                    tooltipStyle: g,
                    tooltipClassName: i()(C.progressStepTooltip, {
                        [C.progressStepTooltipCustomColors]: !S && null != g
                    }),
                    children: e => (0, a.jsxs)(u.Clickable, {
                        ...e,
                        "aria-label": h.default.Messages.STEP_NUMBER.format({
                            number: t
                        }),
                        tabIndex: null == n ? -1 : void 0,
                        onClick: n,
                        className: C.progressStepWrapper,
                        children: [S && (0, a.jsx)(c.default, {
                            className: C.errorIcon
                        }), (0, a.jsx)("div", {
                            className: C.progressStep,
                            children: (0, a.jsx)(r.animated.div, {
                                style: {
                                    ...A,
                                    ...g
                                },
                                className: i()(C.progressStepFill, {
                                    [C.customProgressStepFill]: T
                                })
                            })
                        })]
                    })
                })
            }

            function m(e) {
                let {
                    steps: t,
                    currentStepIndex: n,
                    furthestStepIndex: s,
                    onStepClick: l,
                    stepFillColor: o,
                    animationStyle: u,
                    className: d
                } = e;
                return (0, a.jsx)(r.animated.div, {
                    style: u,
                    className: i()(C.progressContainer, d),
                    children: t.map(e => {
                        let {
                            index: t,
                            name: i,
                            hasError: r
                        } = e;
                        return (0, a.jsx)(_, {
                            name: i,
                            onClick: t <= s ? () => l(t) : void 0,
                            isActive: t <= n,
                            hasError: r,
                            index: t,
                            fillBackgroundColor: o,
                            animate: n === t || n + 1 === t
                        }, i)
                    })
                })
            }

            function S(e) {
                let {
                    className: t,
                    isBackDisabled: n,
                    isNextDisabled: s,
                    onNextClick: l,
                    onBackClick: o,
                    nextButtonBackgroundColor: d,
                    nextButtonClassName: c,
                    nextButtonAnimationStyle: f
                } = e;
                return (0, a.jsxs)("div", {
                    className: i()(C.buttonsContainer, t),
                    children: [(0, a.jsx)(u.Button, {
                        look: u.Button.Looks.OUTLINED,
                        size: u.Button.Sizes.MEDIUM,
                        color: u.Button.Colors.PRIMARY,
                        onClick: o,
                        disabled: n,
                        children: h.default.Messages.BACK
                    }), (0, a.jsx)(r.animated.div, {
                        style: f,
                        children: (0, a.jsx)(E.default, {
                            className: c,
                            themeColor: d,
                            color: u.Button.Colors.BRAND,
                            look: u.Button.Looks.FILLED,
                            size: u.Button.Sizes.MEDIUM,
                            onClick: l,
                            disabled: s,
                            children: h.default.Messages.NEXT
                        })
                    })]
                })
            }
        },
        363915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("442837"),
                r = n("481060"),
                o = n("607070"),
                u = n("106156");
            let d = {
                    mass: 1,
                    tension: 300,
                    friction: 60,
                    clamp: !0
                },
                c = {
                    mass: 1,
                    tension: 600,
                    friction: 60,
                    clamp: !0
                };

            function f(e) {
                var t, n, s, f;
                let {
                    state: E,
                    direction: h,
                    cleanUp: C,
                    children: _
                } = e, m = (0, i.useStateFromStores)([o.default], () => o.default.useReducedMotion);
                let S = (0, l.useSpring)((t = E, n = h, s = C, f = m, t === r.TransitionStates.MOUNTED ? {
                    from: {
                        opacity: 0,
                        transform: "translateY(40px) translateX(0px)"
                    },
                    to: {
                        opacity: 1,
                        transform: "translateY(0px) translateX(0px)"
                    },
                    config: d,
                    delay: 500,
                    immediate: f
                } : t === r.TransitionStates.ENTERED ? {
                    from: {
                        opacity: 0,
                        transform: "translateY(0px) translateX(".concat(-1 === n ? -40 : 40, "px)")
                    },
                    to: {
                        opacity: 1,
                        transform: "translateY(0px) translateX(0px)"
                    },
                    config: c,
                    delay: 500,
                    immediate: f
                } : {
                    from: {
                        opacity: 1,
                        transform: "translateY(0px) translateX(0px)"
                    },
                    to: {
                        opacity: 0,
                        transform: "translateY(0px) translateX(".concat(-1 === n ? 40 : -40, "px))")
                    },
                    config: c,
                    immediate: f,
                    onRest: () => {
                        s()
                    }
                }));
                return (0, a.jsx)(l.animated.div, {
                    style: S,
                    className: u.step,
                    children: (0, a.jsx)(r.ScrollerThin, {
                        className: u.scroller,
                        children: _
                    })
                })
            }

            function E(e) {
                let {
                    currentStep: t,
                    renderItem: n,
                    items: l,
                    getItemKey: i
                } = e, o = s.useRef(t - 1);
                s.useEffect(() => {
                    o.current = t
                }, [t]);
                let d = s.useMemo(() => null == o.current || t === o.current ? 0 : o.current < t ? 1 : -1, [t]),
                    c = s.useCallback((e, t, s, l) => (0, a.jsx)(f, {
                        state: s,
                        cleanUp: l,
                        direction: d,
                        children: n(t)
                    }, e), [d, n]);
                return (0, a.jsx)("div", {
                    className: u.stepsTransitionGroup,
                    children: (0, a.jsx)(r.TransitionGroup, {
                        items: l,
                        renderItem: c,
                        getItemKey: i
                    })
                })
            }
        },
        641037: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getClanSetupProgressSteps: function() {
                    return o
                },
                submitClanSetup: function() {
                    return u
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("931240"),
                i = n("308083"),
                r = n("689938");

            function o(e) {
                return [{
                    index: i.ClanSetupSteps.GAMES,
                    name: r.default.Messages.CLAN_SETUP_GAMES_STEP,
                    hasError: (null == e ? void 0 : e.gameApplicationIds) != null
                }, {
                    index: i.ClanSetupSteps.PLAYSTYLE,
                    name: r.default.Messages.CLAN_SETUP_PLAYSTYLE_STEP,
                    hasError: (null == e ? void 0 : e.playstyle) != null
                }, {
                    index: i.ClanSetupSteps.UTILITY_TRAITS,
                    name: r.default.Messages.CLAN_SETUP_UTILITY_TRAITS_STEP
                }, {
                    index: i.ClanSetupSteps.INTERESTS,
                    name: r.default.Messages.CLAN_SETUP_INTERESTS_STEP,
                    hasError: (null == e ? void 0 : e.interests) != null
                }, {
                    index: i.ClanSetupSteps.DESCRIPTION,
                    name: r.default.Messages.CLAN_SETUP_DESCRIPTION_STEP,
                    hasError: (null == e ? void 0 : e.description) != null || (null == e ? void 0 : e.wildcardDescriptors) != null
                }, {
                    index: i.ClanSetupSteps.CUSTOMIZE_TAG_BADGE,
                    name: r.default.Messages.CLAN_SETUP_TAG_STEP,
                    hasError: (null == e ? void 0 : e.tag) != null || (null == e ? void 0 : e.badgeKind) != null || (null == e ? void 0 : e.badgePrimaryColor) != null || (null == e ? void 0 : e.badgeSecondaryColor) != null
                }, {
                    index: i.ClanSetupSteps.CUSTOMIZE_BANNER,
                    name: r.default.Messages.CLAN_SETUP_BANNER_STEP,
                    hasError: (null == e ? void 0 : e.banner) != null || (null == e ? void 0 : e.brandPrimaryColor) != null || (null == e ? void 0 : e.brandSecondaryColor) != null
                }, {
                    index: i.ClanSetupSteps.MEMBER_APPLICATION,
                    name: r.default.Messages.CLAN_SETUP_APPLICATIONS_STEP,
                    hasError: (null == e ? void 0 : e.verificationForm) != null
                }]
            }
            async function u(e) {
                let {
                    guildId: t,
                    onSuccess: i,
                    progress: r
                } = e;
                try {
                    await l.convertGuildToClan(t, r)
                } catch (e) {
                    return
                }
                i(), (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await Promise.all([n.e("99387"), n.e("63636")]).then(n.bind(n, "511385"));
                    return n => (0, a.jsx)(e, {
                        guildId: t,
                        tag: r.tag,
                        brandPrimaryColor: r.brandPrimaryColor,
                        ...n
                    })
                })
            }
        },
        745837: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("442837"),
                r = n("481060"),
                o = n("547972"),
                u = n("556296"),
                d = n("465670"),
                c = n("729017"),
                f = n("63063"),
                E = n("13140"),
                h = n("435064"),
                C = n("39604"),
                _ = n("356659"),
                m = n("981631"),
                S = n("332325"),
                p = n("689938"),
                I = n("668202");

            function g(e) {
                (0, o.default)(S.GameSettingsTab.CLIPS), (0, C.dismissClipsUserEducation)(e)
            }

            function T() {
                let e = (0, i.useStateFromStores)([u.default], () => u.default.getKeybindForAction(m.GlobalKeybindActions.SAVE_CLIP));
                if (null == e) return (0, a.jsx)(a.Fragment, {
                    children: p.default.Messages.CLIPS_USER_EDUCATION_ENABLED_BODY_NO_KEYBIND
                });
                let t = E.toString(e.shortcut, !0);
                return (0, a.jsx)(a.Fragment, {
                    children: p.default.Messages.CLIPS_USER_EDUCATION_ENABLED_BODY.format({
                        keybind: t,
                        keybindHook: () => (0, a.jsx)("span", {
                            className: I.keyCombo,
                            children: (0, a.jsx)(r.KeyCombo, {
                                shortcut: t
                            })
                        })
                    })
                })
            }
            let A = {
                [_.ClipsUserEducationType.Error]: {
                    textColor: "text-primary",
                    buttonLook: r.Button.Looks.FILLED,
                    buttonColor: r.Button.Colors.PRIMARY,
                    bodyCopy: () => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(c.default, {
                            className: I.errorWarningIcon
                        }), p.default.Messages.CLIPS_USER_EDUCATION_ERROR_BODY]
                    }),
                    buttonCopy: () => p.default.Messages.CLIPS_USER_EDUCATION_LEARN_MORE,
                    ctaOnClick: () => {
                        window.open(f.default.getArticleURL(m.HelpdeskArticles.CLIPS), "_blank")
                    },
                    containerClass: I.container
                },
                [_.ClipsUserEducationType.Disabled]: {
                    textColor: "text-primary",
                    buttonLook: r.Button.Looks.FILLED,
                    buttonColor: r.Button.Colors.BRAND,
                    bodyCopy: () => p.default.Messages.CLIPS_USER_EDUCATION_DISABLED_BODY,
                    buttonCopy: () => p.default.Messages.CLIPS_USER_EDUCATION_MANAGE_CLIPS_SETTINGS,
                    ctaOnClick: () => g(_.ClipsUserEducationType.Disabled),
                    containerClass: I.container
                },
                [_.ClipsUserEducationType.Enabled]: {
                    textColor: "always-white",
                    buttonLook: r.Button.Looks.FILLED,
                    buttonColor: r.Button.Colors.BRAND_INVERTED,
                    bodyCopy: () => (0, a.jsx)(T, {}),
                    buttonCopy: () => p.default.Messages.CLIPS_USER_EDUCATION_MANAGE_CLIPS_SETTINGS,
                    ctaOnClick: () => g(_.ClipsUserEducationType.Enabled),
                    containerClass: l()(I.container, I.containerEnabled)
                }
            };

            function N() {
                var e;
                let {
                    decoupledClipsEnabled: t,
                    clipsError: n
                } = (0, i.useStateFromStoresObject)([h.default], () => ({
                    decoupledClipsEnabled: h.default.getSettings().decoupledClipsEnabled,
                    clipsError: h.default.getLastClipsError()
                }));
                let s = (e = t, null != n ? _.ClipsUserEducationType.Error : e ? _.ClipsUserEducationType.Enabled : _.ClipsUserEducationType.Disabled),
                    {
                        bodyCopy: l,
                        buttonCopy: o,
                        ctaOnClick: u,
                        textColor: c,
                        buttonColor: f,
                        buttonLook: E,
                        containerClass: m
                    } = A[s];
                return (0, a.jsxs)("div", {
                    className: m,
                    children: [(0, a.jsx)(r.Text, {
                        color: c,
                        variant: "text-sm/medium",
                        children: l()
                    }), (0, a.jsx)(r.Button, {
                        onClick: () => (0, C.dismissClipsUserEducation)(s),
                        size: r.Button.Sizes.NONE,
                        look: r.Button.Looks.BLANK,
                        className: I.buttonClose,
                        children: (0, a.jsx)(d.default, {
                            className: I.dismissIcon,
                            width: 16,
                            height: 16
                        })
                    }), (0, a.jsx)(r.Button, {
                        onClick: u,
                        className: I.buttonCTA,
                        color: f,
                        look: E,
                        fullWidth: !0,
                        size: r.Button.Sizes.SMALL,
                        children: o()
                    })]
                })
            }
        },
        13228: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("442837"),
                s = n("594190"),
                l = n("836157"),
                i = n("480294"),
                r = n("131951"),
                o = n("924557"),
                u = n("435064"),
                d = n("779618"),
                c = n("356659"),
                f = n("981631");

            function E(e) {
                let t = (0, o.useShouldSeeClipsPremiumEarlyAccessAnnouncementCoachmark)({
                        autoTrackExposure: !0
                    }),
                    {
                        enableDecoupledGameClipping: n
                    } = l.default.useExperiment({
                        location: "useShouldDisplayClipsGuildSidebarEducation"
                    }, {
                        autoTrackExposure: !1
                    });
                return (0, a.useStateFromStores)([u.default, s.default, i.default, r.default], () => {
                    if (!(0, d.default)(r.default) || !t || !n) return !1;
                    if (null != u.default.getLastClipsError()) return !0;
                    if (!i.default.hasConsented(f.Consents.PERSONALIZATION) || null == s.default.getVisibleGame()) return !1;
                    let {
                        clipsEducationState: {
                            dismissedAt: a,
                            numberOfGamesLaunchedSinceDismissal: l,
                            numberOfTimesDismissed: E
                        },
                        hasTakenDecoupledClip: h,
                        clipsSettings: {
                            clipsEnabled: C
                        }
                    } = u.default.getState();
                    if (null === a) return !0;
                    if (!(null != e && (0, o.isUserPremiumTypeForClipsEarlyAccess)(e))) return !1;
                    let _ = Date.now() - a > c.CLIPS_EDUCATION_COOLDOWN,
                        m = l >= c.CLIPS_EDUCATION_GAME_LAUNCH_THRESHOLD,
                        S = C ? c.CLIPS_EDUCATION_MAX_DISMISSALS_ENABLED : c.CLIPS_EDUCATION_MAX_DISMISSALS_DISABLED;
                    return _ && m && E < S && !h
                })
            }
        },
        683167: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShopNewBadgeCoachtipEdition: function() {
                    return i
                }
            });
            var a = n("818083"),
                s = n("302800");
            let l = (0, a.createExperiment)({
                    kind: "user",
                    id: "2024-04_shop_marketing_badge",
                    label: "Shop Marketing New Badge Design Experiment",
                    defaultConfig: {
                        coachtipEdition: s.ShopCoachtipEditions.NONE
                    },
                    treatments: [{
                        id: 1,
                        label: "Shy",
                        config: {
                            coachtipEdition: s.ShopCoachtipEditions.SHY
                        }
                    }, {
                        id: 2,
                        label: "Lofi Vibes",
                        config: {
                            coachtipEdition: s.ShopCoachtipEditions.LOFI_VIBES
                        }
                    }, {
                        id: 3,
                        label: "Galaxy",
                        config: {
                            coachtipEdition: s.ShopCoachtipEditions.GALAXY
                        }
                    }, {
                        id: 4,
                        label: "Retro & Pirates",
                        config: {
                            coachtipEdition: s.ShopCoachtipEditions.RETRO_AND_PIRATES
                        }
                    }, {
                        id: 5,
                        label: "Arcade",
                        config: {
                            coachtipEdition: s.ShopCoachtipEditions.ARCADE
                        }
                    }]
                }),
                i = e => l.useExperiment({
                    location: e
                }).coachtipEdition
        },
        64220: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("921944"),
                r = n("689938"),
                o = n("308704");

            function u(e) {
                let {
                    markAsDismissed: t
                } = e;
                return s.useEffect(() => {
                    let e = setTimeout(() => {
                        t(i.ContentDismissActionType.AUTO_DISMISS)
                    }, 8e3);
                    return () => {
                        clearTimeout(e)
                    }
                }, [t]), (0, a.jsxs)(l.Clickable, {
                    className: o.container,
                    onClick: () => {
                        t(i.ContentDismissActionType.USER_DISMISS)
                    },
                    children: [(0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        color: "always-white",
                        children: r.default.Messages.PROFILE_LOOKING_GOOD_TOOLTIP_TEXT
                    }), (0, a.jsx)("div", {
                        className: o.pointer
                    })]
                })
            }

            function d(e) {
                let {
                    children: t,
                    markAsDismissed: n
                } = e, [i, r] = s.useState(!1);
                return s.useEffect(() => {
                    let e = setTimeout(() => {
                        r(!0)
                    }, 1e3);
                    return () => {
                        clearTimeout(e)
                    }
                }, [r]), (0, a.jsx)(l.Popout, {
                    position: "top",
                    align: "left",
                    shouldShow: i,
                    renderPopout: () => (0, a.jsx)(u, {
                        markAsDismissed: n
                    }),
                    children: t
                })
            }
        },
        463119: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CollectiblesShopButton: function() {
                    return x
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("924826"),
                o = n("442837"),
                u = n("780384"),
                d = n("481060"),
                c = n("596454"),
                f = n("515753"),
                E = n("410030"),
                h = n("607070"),
                C = n("100527"),
                _ = n("906732"),
                m = n("821982"),
                S = n("377171"),
                p = n("633302"),
                I = n("126900"),
                g = n("153066"),
                T = n("335131"),
                A = n("141594"),
                N = n("302800"),
                v = n("981631"),
                R = n("689938"),
                O = n("858666");
            let L = e => {
                    let {
                        color: t
                    } = e;
                    return (0, a.jsx)(d.TextBadge, {
                        className: O.newBadge,
                        color: null != t ? t : S.default.STATUS_DANGER_BACKGROUND,
                        text: R.default.Messages.NEW
                    })
                },
                P = e => {
                    let {
                        selected: t,
                        locationState: n,
                        onMouseEnter: l,
                        onMouseLeave: i,
                        children: o,
                        ...u
                    } = e, d = (0, r.useListItem)("shop"), c = C.default.HOME_PAGE_SHOP_TAB, {
                        analyticsLocations: E
                    } = (0, _.default)(c), h = s.useCallback(() => (0, T.openCollectiblesShop)({
                        openInLayer: !1,
                        analyticsSource: c,
                        analyticsLocations: E
                    }), [c, E]);
                    return (0, a.jsx)(f.LinkButton, {
                        selected: t,
                        route: v.Routes.COLLECTIBLES_SHOP,
                        icon: I.default,
                        text: R.default.Messages.COLLECTIBLES_SHOP,
                        locationState: n,
                        ...d,
                        ...u,
                        onMouseEnter: l,
                        onMouseLeave: i,
                        onClick: h,
                        children: o
                    })
                },
                y = s.memo(function(e) {
                    let {
                        displayOptions: t,
                        assetId: n
                    } = e, s = (0, o.useStateFromStores)([h.default], () => h.default.useReducedMotion), l = null != n ? (0, m.default)(n, d.AvatarSizes.SIZE_80, !s) : void 0;
                    return (0, a.jsxs)("div", {
                        className: O.shopMarketingTooltipContent,
                        children: [(0, a.jsx)("div", {
                            className: O.avatarContainer,
                            children: (0, a.jsx)(d.Avatar, {
                                className: O.avatar,
                                src: t.imageSrc,
                                avatarDecoration: l,
                                size: d.AvatarSizes.SIZE_80,
                                "aria-hidden": !0
                            })
                        }), (0, a.jsxs)("div", {
                            className: O.shopMarketingTooltipText,
                            children: [(0, a.jsx)(d.Heading, {
                                variant: "heading-sm/bold",
                                children: t.title()
                            }), null != t.body && (0, a.jsx)(d.Text, {
                                variant: "text-xs/normal",
                                className: O.marketingBadgeTooltipContent,
                                children: t.body()
                            })]
                        })]
                    })
                }),
                M = e => {
                    let {
                        selected: t,
                        locationState: n,
                        displayOptions: l
                    } = e, [r, o] = s.useState(0), [c, f] = s.useState(!1), h = (0, E.default)(), C = l.entrypointDecorationAssets, _ = s.useCallback(e => {
                        o(e => (e + 1) % l.assetIds.length), f(!0), null == e || e()
                    }, [l.assetIds]), m = s.useCallback(e => {
                        f(!1), null == e || e()
                    }, []);
                    return (0, a.jsx)(d.Tooltip, {
                        text: (0, a.jsx)(y, {
                            displayOptions: l,
                            assetId: l.assetIds[r]
                        }),
                        tooltipClassName: O.marketingBadgeTooltip,
                        position: "right",
                        delay: 100,
                        allowOverflow: !0,
                        hideOnClick: !1,
                        "aria-label": l.title(),
                        children: e => (0, a.jsxs)(P, {
                            className: null != l.entryPointClassName ? (0, g.getClass)(O, l.entryPointClassName) : void 0,
                            selected: t,
                            locationState: n,
                            ...e,
                            onMouseEnter: () => _(e.onMouseEnter),
                            onMouseLeave: () => m(e.onMouseLeave),
                            children: [null != C && (0, a.jsx)("img", {
                                src: (0, u.isThemeDark)(h) ? C.srcDark : C.srcLight,
                                className: i()(O.marketingButtonImage, {
                                    [O.marketingButtonImageHovered]: c
                                }),
                                alt: "",
                                "aria-hidden": !0
                            }), (0, a.jsx)(L, {
                                color: l.badgeColor
                            })]
                        })
                    })
                },
                D = e => {
                    let {
                        selected: t,
                        locationState: n,
                        displayOptions: l
                    } = e, i = s.useMemo(() => {
                        var e;
                        let t = null != l.emojiName ? null === (e = p.default.getByName(l.emojiName)) || void 0 === e ? void 0 : e.surrogates : null;
                        return (0, a.jsxs)(d.Text, {
                            variant: "text-sm/medium",
                            className: O.marketingBadgeTooltipContent,
                            children: [null != t && (0, a.jsx)(c.default, {
                                emojiName: t
                            }), l.title()]
                        })
                    }, [l]);
                    return (0, a.jsx)(d.Tooltip, {
                        text: i,
                        tooltipClassName: O.marketingBadgeTooltip,
                        position: "right",
                        delay: 100,
                        hideOnClick: !1,
                        "aria-label": l.title(),
                        children: e => (0, a.jsx)(P, {
                            selected: t,
                            locationState: n,
                            ...e,
                            children: (0, a.jsx)(L, {
                                color: l.badgeColor
                            })
                        })
                    })
                },
                x = e => {
                    let {
                        selected: t,
                        locationState: n
                    } = e, {
                        collectiblesShopTabNewBadgeDisplayOptions: s
                    } = (0, A.default)();
                    if (null != s) switch (s.type) {
                        case N.CollectiblesMarketingVariant.TOOLTIP:
                            return (0, a.jsx)(D, {
                                selected: t,
                                locationState: n,
                                displayOptions: s
                            });
                        case N.CollectiblesMarketingVariant.COACHTIP:
                            return (0, a.jsx)(M, {
                                selected: t,
                                locationState: n,
                                displayOptions: s
                            })
                    }
                    return (0, a.jsx)(P, {
                        selected: t,
                        locationState: n
                    })
                }
        },
        118379: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("663993");
            t.default = (0, a.makeLazy)({
                createPromise: () => Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("40326"), n.e("23357"), n.e("15972"), n.e("12013"), n.e("6416"), n.e("43906"), n.e("32776"), n.e("95900"), n.e("4934"), n.e("87624"), n.e("43331"), n.e("30006")]).then(n.bind(n, "838819")),
                webpackId: "838819"
            })
        },
        141594: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("470079"),
                s = n("442837"),
                l = n("704215"),
                i = n("243778"),
                r = n("594174"),
                o = n("51144"),
                u = n("683167"),
                d = n("302800"),
                c = n("921944");
            t.default = () => {
                let e = (0, s.useStateFromStores)([r.default], () => r.default.getCurrentUser()),
                    t = (0, u.useShopNewBadgeCoachtipEdition)("useCollectiblesShopTabNewBadge"),
                    n = a.useMemo(() => {
                        if ((0, o.ageEligibleForPremiumUpsell)(e)) {
                            if (t === d.ShopCoachtipEditions.ARCADE) return [l.DismissibleContent.COLLECTIBLES_SHOP_ARCADE_COACHTIP];
                            if (t === d.ShopCoachtipEditions.RETRO_AND_PIRATES) return [l.DismissibleContent.COLLECTIBLES_SHOP_RETRO_AND_PIRATES_COACHTIP];
                            else if (t === d.ShopCoachtipEditions.GALAXY) return [l.DismissibleContent.COLLECTIBLES_SHOP_GALAXY_COACHTIP]
                        }
                        return []
                    }, [e, t]),
                    [f, E] = (0, i.useSelectedDismissibleContent)(n, void 0, !0),
                    h = null != f ? d.CollectiblesDCToDisplayOptions[f] : null;
                return {
                    collectiblesShopTabNewBadgeDisplayOptions: h,
                    dismissCollectiblesShopTabNewBadge: () => {
                        null != h && E(c.ContentDismissActionType.AUTO)
                    }
                }
            }
        },
        314533: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770");
            let r = "CONNECTIONS_GRID_MODAL_KEY";
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.subscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.unsubscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                handleShow(e) {
                    let {
                        onComplete: t,
                        excludedPlatformTypes: l,
                        integrations: i,
                        onCompleteApplication: o
                    } = e;
                    !(0, s.hasModalOpen)(r) && (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("28538")]).then(n.bind(n, "51299"));
                        return n => (0, a.jsx)(e, {
                            onComplete: t,
                            excludedPlatformTypes: l,
                            integrations: i,
                            onCompleteApplication: o,
                            ...n
                        })
                    })
                }
                handleHide() {
                    (0, s.closeModal)(r)
                }
            }
            t.default = new o
        },
        705348: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("82950"),
                l = n("63063"),
                i = n("981631"),
                r = n("921944"),
                o = n("689938"),
                u = n("157476");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(s.default, {
                    image: u,
                    guild: t,
                    onDismissed: () => n(r.ContentDismissActionType.UNKNOWN),
                    onClick: () => {
                        open(l.default.getArticleURL(i.HelpdeskArticles.CONNECTION_DETAILS)), n(r.ContentDismissActionType.UNKNOWN)
                    },
                    title: o.default.Messages.LINKED_ROLES_ADMIN_NUX_TITLE,
                    message: o.default.Messages.LINKED_ROLES_ADMIN_NUX_CONTENT,
                    cta: o.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.LINKED_ROLES_ADMIN_NUX,
                    type: i.ChannelNoticeTypes.LINKED_ROLES_ADMIN
                })
            }
        },
        317858: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("47120");
            var a = n("470079"),
                s = n("166516"),
                l = n.n(s),
                i = n("525654"),
                r = n.n(i),
                o = n("442837"),
                u = n("888369"),
                d = n("292959"),
                c = n("699516"),
                f = n("340895"),
                E = n("358085"),
                h = n("998502"),
                C = n("252618"),
                _ = n("981631"),
                m = n("689938");
            let S = new Set(["Blink", "Gecko", "WebKit"]),
                p = _.NOOP;
            if (E.isPlatformEmbedded) p = e => h.default.setBadge(e);
            else if (S.has(r().layout)) {
                let e = new(l())({
                    animation: "none"
                });
                p = t => {
                    try {
                        (0, C.setPageTitleNotificationCount)(t), e.badge(-1 === t ? "•" : t)
                    } catch (e) {}
                }
            }

            function I() {
                let e = (0, o.useStateFromStores)([f.default], () => f.default.hasIncomingCalls()),
                    t = (0, o.useStateFromStores)([u.default, c.default, d.default], () => {
                        let e = u.default.getTotalMentionCount(),
                            t = c.default.getPendingCount(),
                            n = u.default.hasAnyUnread(),
                            a = d.default.getDisableUnreadBadge(),
                            s = e + t;
                        return 0 === s && n && !a && (s = -1), s
                    });
                a.useEffect(() => {
                    if (!e) return;
                    let t = h.default.bounceDock("critical"),
                        n = (0, C.flashPageTitle)({
                            messages: [m.default.Messages.INCOMING_CALL],
                            count: 50
                        });
                    return () => {
                        null == t || t(), n()
                    }
                }, [e]), a.useEffect(() => {
                    p(t)
                }, [t]), a.useEffect(() => () => p(0), [])
            }
        },
        635395: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l = n("470079"),
                i = n("442837"),
                r = n("846027"),
                o = n("230711"),
                u = n("888369"),
                d = n("131951"),
                c = n("292959"),
                f = n("19780"),
                E = n("699516"),
                h = n("606304"),
                C = n("358085"),
                _ = n("998502"),
                m = n("981631");
            (s = a || (a = {})).DEFAULT = "DEFAULT", s.UNREAD = "UNREAD", s.CONNECTED = "CONNECTED", s.SPEAKING = "SPEAKING", s.MUTED = "MUTED", s.DEAFENED = "DEAFENED";
            let S = (0, C.isMac)() ? null : "DEFAULT";
            class p extends l.PureComponent {
                componentDidMount() {
                    _.default.setSystemTrayIcon(this.getIcon())
                }
                componentDidUpdate() {
                    _.default.setSystemTrayIcon(this.getIcon())
                }
                componentWillUnmount() {
                    _.default.setSystemTrayIcon(S)
                }
                render() {
                    return null
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, n = "getIcon", a = () => {
                        let {
                            deafened: e,
                            muted: t,
                            speaking: n,
                            connected: a,
                            unread: s
                        } = this.props, l = S;
                        return (0, C.isMac)() && !a ? l : (0, C.isLinux)() || !a ? (s && (l = "UNREAD"), l) : l = e ? "DEAFENED" : t ? "MUTED" : n ? "SPEAKING" : "CONNECTED"
                    }, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }
            let I = () => null;
            C.isPlatformEmbedded && (_.default.on("SYSTEM_TRAY_TOGGLE_MUTE", () => r.default.toggleSelfMute()), _.default.on("SYSTEM_TRAY_TOGGLE_DEAFEN", () => r.default.toggleSelfDeaf()), _.default.on("SYSTEM_TRAY_OPEN_VOICE_SETTINGS", () => {
                o.default.open(m.UserSettingsSections.VOICE)
            }), I = i.default.connectStores([f.default, d.default, h.default, u.default, E.default, c.default], () => {
                let e = u.default.getTotalMentionCount(),
                    t = u.default.hasAnyUnread(),
                    n = E.default.getPendingCount(),
                    a = c.default.getDisableUnreadBadge();
                return {
                    connected: f.default.isConnected(),
                    speaking: h.default.isCurrentUserSpeaking(),
                    muted: d.default.isSelfMute() || d.default.isSelfMutedTemporarily(),
                    deafened: d.default.isSelfDeaf(),
                    unread: !a && !!(t || e + n > 0)
                }
            })(p)), t.default = I
        },
        935347: function(e, t, n) {
            "use strict";
            n.r(t), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("392711"),
                o = n.n(r),
                u = n("748780"),
                d = n("442837"),
                c = n("433517"),
                f = n("481060"),
                E = n("205355"),
                h = n("607070"),
                C = n("38618"),
                _ = n("197344"),
                m = n("474873"),
                S = n("706454"),
                p = n("215427"),
                I = n("820254"),
                g = n("985806"),
                T = n("838949"),
                A = n("70956"),
                N = n("358085"),
                v = n("557177"),
                R = n("998502"),
                O = n("981631"),
                L = n("689938"),
                P = n("376244");

            function y(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class M extends s.PureComponent {
                createSound() {
                    let {
                        soundpack: e
                    } = this.props, t = (0, v.createSoundForPack)("discodo", e);
                    return t.volume = 1, t
                }
                componentDidMount() {
                    this.setProblemsTimeout()
                }
                componentDidUpdate(e, t) {
                    let {
                        ready: n,
                        hide: a,
                        problems: s,
                        opacity: l
                    } = this.state, {
                        connected: i,
                        soundpack: r,
                        reducedMotion: o
                    } = this.props, d = i && n && !a && !s;
                    if (e.soundpack !== r && (this._connectedSound = this.createSound()), e.connected !== i || d) {
                        if (i && null != this.videoRef) {
                            let e = Math.max(Math.ceil((this.videoRef.duration - this.videoRef.currentTime) * A.default.Millis.SECOND), 600);
                            clearTimeout(this._noProblemsTimeout), c.Storage.get(O.DISCODO_STORAGE_KEY) && this._connectedSound.play(), o ? this.setState({
                                problems: !1,
                                hide: i
                            }) : this._noProblemsTimeout = setTimeout(() => {
                                this.setState({
                                    problems: !1,
                                    hide: i
                                })
                            }, e)
                        } else this.setState({
                            problems: !1,
                            hide: i
                        })
                    } else t.hide !== a ? (a ? this.clearProblemsTimeout() : this.setProblemsTimeout(), this.setState({
                        shouldRender: !0
                    }), u.default.timing(l, {
                        toValue: a ? 0 : 1,
                        duration: 200
                    }).start(() => this.setState({
                        shouldRender: !a
                    }))) : t.problems !== s && s && E.default.checkIncidents()
                }
                componentWillUnmount() {
                    this.clearProblemsTimeout(), clearTimeout(this._noProblemsTimeout)
                }
                render() {
                    let {
                        connected: e,
                        incident: t
                    } = this.props;
                    if (!this.state.shouldRender) return null;
                    {
                        let n = this._loadingText,
                            s = null;
                        return null != this._eventLoadingText && (n = this._eventLoadingText), null != t && (n = t.name, s = t.incident_updates[0].body), (0, a.jsxs)(u.default.div, {
                            className: P.container,
                            style: {
                                opacity: this.state.opacity
                            },
                            children: [(0, a.jsxs)("div", {
                                className: P.content,
                                children: [(0, a.jsx)(T.default, {
                                    autoPlay: !0,
                                    loop: !e,
                                    setRef: this.setVideoRef,
                                    onReady: this.handleReady,
                                    className: this.state.ready ? P.ready : ""
                                }), (0, a.jsxs)("div", {
                                    className: P.text,
                                    children: [null != t ? null : (0, a.jsx)("div", {
                                        className: P.tipTitle,
                                        children: L.default.Messages.LOADING_DID_YOU_KNOW
                                    }), (0, a.jsx)("div", {
                                        className: null != t ? P.title : P.tip,
                                        children: n
                                    }), (0, a.jsx)("div", {
                                        className: P.body,
                                        children: s
                                    })]
                                })]
                            }), (0, a.jsxs)("div", {
                                className: i()(P.problems, {
                                    [P.slideIn]: this.state.problems
                                }),
                                children: [(0, a.jsx)("div", {
                                    className: P.problemsText,
                                    children: L.default.Messages.CONNECTING_PROBLEMS_CTA
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsxs)(f.Anchor, {
                                        className: P.twitterLink,
                                        href: O.Links.TWITTER_SUPPORT,
                                        target: "_blank",
                                        children: [(0, a.jsx)(g.default, {
                                            className: P.icon
                                        }), L.default.Messages.TWEET_US]
                                    }), (0, a.jsxs)(f.Anchor, {
                                        className: P.statusLink,
                                        href: O.Links.STATUS,
                                        target: "_blank",
                                        children: [(0, a.jsx)(I.default, {
                                            className: P.icon
                                        }), L.default.Messages.SERVER_STATUS]
                                    })]
                                })]
                            })]
                        })
                    }
                }
                constructor(e) {
                    super(e), y(this, "videoRef", null), y(this, "_noProblemsTimeout", null), y(this, "_problemsTimeout", null), y(this, "_connectedSound", this.createSound()), y(this, "_loadingText", function() {
                        let e = [L.default.Messages.ACCESSIBILITY_LOADING_TIP_1, L.default.Messages.ACCESSIBILITY_LOADING_TIP_2, L.default.Messages.ACCESSIBILITY_LOADING_TIP_3, L.default.Messages.ACCESSIBILITY_LOADING_TIP_4, L.default.Messages.ACCESSIBILITY_LOADING_TIP_5, L.default.Messages.ACCESSIBILITY_LOADING_TIP_6.format({
                            tabHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "tab",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.ACCESSIBILITY_LOADING_TIP_7, L.default.Messages.ACCESSIBILITY_LOADING_TIP_8, L.default.Messages.ACCESSIBILITY_LOADING_TIP_9, L.default.Messages.ACCESSIBILITY_LOADING_TIP_10.format({
                            F6Hook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "f6",
                                className: P.keybind
                            }, t),
                            tabHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "tab",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_LINE_1, L.default.Messages.LOADING_LINE_2, L.default.Messages.LOADING_LINE_4, L.default.Messages.LOADING_LINE_5, L.default.Messages.LOADING_LINE_6, L.default.Messages.LOADING_LINE_7, L.default.Messages.LOADING_LINE_8, L.default.Messages.LOADING_LINE_9, L.default.Messages.LOADING_LINE_10, L.default.Messages.LOADING_LINE_11, L.default.Messages.LOADING_LINE_12, L.default.Messages.LOADING_LINE_13, L.default.Messages.LOADING_LINE_14, L.default.Messages.LOADING_LINE_15, L.default.Messages.LOADING_TIP_1, L.default.Messages.LOADING_TIP_2, L.default.Messages.LOADING_TIP_3, L.default.Messages.LOADING_TIP_4, L.default.Messages.LOADING_TIP_5, L.default.Messages.LOADING_TIP_6, L.default.Messages.LOADING_TIP_7, L.default.Messages.LOADING_TIP_8, L.default.Messages.LOADING_TIP_9, L.default.Messages.LOADING_TIP_10, L.default.Messages.LOADING_TIP_11, L.default.Messages.LOADING_TIP_12, L.default.Messages.LOADING_TIP_13, L.default.Messages.LOADING_TIP_14, L.default.Messages.LOADING_TIP_15, L.default.Messages.LOADING_TIP_16, L.default.Messages.LOADING_TIP_17, L.default.Messages.LOADING_TIP_18, L.default.Messages.LOADING_TIP_19, L.default.Messages.LOADING_TIP_20, L.default.Messages.LOADING_TIP_21, L.default.Messages.LOADING_TIP_22, L.default.Messages.LOADING_TIP_23, L.default.Messages.LOADING_TIP_24, L.default.Messages.LOADING_TIP_25, L.default.Messages.LOADING_TIP_26, L.default.Messages.LOADING_TIP_27.format({
                            asterisks: "**"
                        }), L.default.Messages.LOADING_KEYBIND_TIP_1.format({
                            quickSwitcherHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "mod+k",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_2.format({
                            markUnreadHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "alt+click",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_3.format({
                            markServerUnreadHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "shift+esc",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_4.format({
                            navigateUnreadHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "shift+alt+up",
                                className: P.keybind
                            }, t),
                            downHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "down",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_5.format({
                            keyboardShortcutsHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "mod+/",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_6.format({
                            messageNewlineHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "shift+return",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_7.format({
                            shiftHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "shift",
                                className: P.keybind
                            }, t)
                        }), L.default.Messages.LOADING_KEYBIND_TIP_8.format({
                            upHook: (e, t) => (0, a.jsx)(f.KeyCombo, {
                                shortcut: "up",
                                className: P.keybind
                            }, t)
                        })];
                        return S.default.locale.startsWith("en-") && e.push(L.default.Messages.POLLS_MARKETING_EASTER_EGG_LOADING_LINE), e[o().random(e.length - 1)]
                    }()), y(this, "_eventLoadingText", function() {
                        let e = _.default.getLoadingTips();
                        if (null != e && e.length > 0) return e[o().random(e.length - 1)]
                    }()), y(this, "handleReady", () => {
                        this.setState({
                            ready: !0
                        }), (0, N.isDesktop)() && (R.default.send("UPDATED_QUOTES", ["Hold Tight — Loading Discord"]), R.default.send("UPDATE_OPEN_ON_STARTUP"))
                    }), y(this, "setVideoRef", e => {
                        this.videoRef = e
                    }), y(this, "setProblemsTimeout", () => {
                        null == this._problemsTimeout && (this._problemsTimeout = setTimeout(() => this.setState({
                            problems: !0
                        }), 1e4))
                    }), y(this, "clearProblemsTimeout", () => {
                        clearTimeout(this._problemsTimeout), this._problemsTimeout = null
                    });
                    let {
                        connected: t
                    } = e;
                    this.state = {
                        ready: t,
                        hide: t,
                        problems: !1,
                        shouldRender: !t,
                        opacity: new u.default.Value(t ? 0 : 1)
                    }, this._connectedSound.volume = 1
                }
            }
            t.default = d.default.connectStores([C.default, p.default, m.default, h.default], () => ({
                isTryingToConnect: C.default.isTryingToConnect(),
                connected: C.default.isConnected(),
                incident: p.default.getIncident(),
                soundpack: m.default.getSoundpack(),
                reducedMotion: h.default.useReducedMotion
            }))(e => {
                let {
                    isTryingToConnect: t,
                    connected: n,
                    incident: s,
                    soundpack: l,
                    reducedMotion: i
                } = e;
                return t ? (0, a.jsx)(M, {
                    reducedMotion: i,
                    soundpack: l,
                    connected: n,
                    incident: s
                }) : null
            })
        },
        423e3: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                handleInaccessiblePage: function() {
                    return u
                }
            });
            var a = n("927723"),
                s = n("703656"),
                l = n("896797"),
                i = n("984933"),
                r = n("944486"),
                o = n("981631");

            function u(e, t) {
                if ((0, a.showInaccessibleLinkModal)({
                        kind: "channel"
                    }), r.default.getChannelId(e) === t) {
                    var n;
                    (0, s.replaceWith)(o.Routes.CHANNEL(e, null === (n = i.default.getDefaultChannel(e)) || void 0 === n ? void 0 : n.id))
                } else(0, s.replaceWith)(l.default.defaultRoute)
            }
        },
        823169: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("317770"),
                l = n("430824"),
                i = n("594174"),
                r = n("358085"),
                o = n("53365"),
                u = n("981631");
            class d extends s.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, n = "maybeFetchEligiblity", a = async () => {
                        if ((0, r.isDesktop)() || (0, r.isWeb)()) {
                            let e = Object.values(l.default.getGuilds()),
                                t = i.default.getCurrentUser(),
                                n = e.filter(e => e.isOwner(t) && !e.hasFeature(u.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_DISABLED) && (e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE) || e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)));
                            n.length > 0 && await (0, o.fetchCreatorMonetizationNagActivateEligibility)(n.map(e => e.id))
                        }
                    }, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }
            t.default = new d
        },
        521868: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCustomStatusMenuItem: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("481060"),
                r = n("788307"),
                o = n("2052"),
                u = n("785717"),
                d = n("695346"),
                c = n("696202"),
                f = n("689938"),
                E = n("119645");

            function h(e, t) {
                let s = (0, o.useAnalyticsContext)(),
                    {
                        trackUserProfileAction: h
                    } = (0, u.useUserProfileAnalyticsContext)();

                function C(e) {
                    e.stopPropagation(), d.CustomStatusSetting.updateSetting(void 0)
                }

                function _() {
                    h({
                        action: "PRESS_SET_CUSTOM_STATUS"
                    }), (0, i.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("47484")]).then(n.bind(n, "211065"));
                        return t => (0, a.jsx)(e, {
                            sourceAnalyticsContext: s,
                            ...t
                        })
                    })
                }
                if (null != e) {
                    let n = null != e.emoji ? t => {
                        let {
                            className: n
                        } = t;
                        return (0, a.jsx)(r.ActivityEmoji, {
                            className: n,
                            emoji: e.emoji,
                            animate: !0,
                            hideTooltip: !0
                        })
                    } : void 0;
                    return (0, a.jsx)(i.MenuItem, {
                        id: "edit-custom-status",
                        label: f.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        icon: n,
                        focusedClassName: t,
                        showIconFirst: !0,
                        hint: e => (0, a.jsx)(i.Clickable, {
                            ...e,
                            onClick: C,
                            tabIndex: -1,
                            children: (0, a.jsx)(c.default, {
                                width: 18,
                                height: 18
                            })
                        }),
                        action: _
                    })
                }
                return (0, a.jsx)(i.MenuItem, {
                    id: "set-custom-status",
                    focusedClassName: t,
                    label: f.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS_CTA,
                    icon: e => (0, a.jsx)("div", {
                        className: l()(E.customEmojiPlaceholder, e)
                    }),
                    action: _,
                    showIconFirst: !0
                })
            }
        },
        878727: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                searchQueryContainsBannedWord: function() {
                    return s
                }
            }), n("601964");
            var a = n("231338");
            let s = function() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                return e.split(" ").some(e => a.DiscoveryBannedSearchWords.includes(e.toLowerCase()))
            }
        },
        556017: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryInAppReportingExperiment: function() {
                    return i
                },
                useCanSeeDiscoveryContextMenu: function() {
                    return r
                }
            });
            var a = n("470079"),
                s = n("818083"),
                l = n("695346");
            let i = (0, s.createExperiment)({
                kind: "user",
                id: "2022-01_discovery_iar",
                label: "Ability to report servers in Server Discovery",
                defaultConfig: {
                    canSeeInAppReportingButtons: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show IAR buttons in Server Discovery",
                    config: {
                        canSeeInAppReportingButtons: !0
                    }
                }]
            });

            function r() {
                let {
                    canSeeInAppReportingButtons: e
                } = i.useExperiment({
                    location: "7a11e2_1"
                }, {
                    autoTrackExposure: !1
                }), t = l.DeveloperMode.useSetting();
                return a.useEffect(() => {
                    i.trackExposure({
                        location: "7a11e2_2"
                    })
                }, []), e || t
            }
        },
        879484: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagsExperiment: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2021-11_discovery_tags",
                label: "Discovery Tags",
                defaultConfig: {
                    shouldDisplayTags: !1,
                    shouldDisplayRecommendedSearchTags: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show keyword tags on home and search result pages",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !1
                    }
                }, {
                    id: 2,
                    label: "Show keyword tags on home and search result pages and under the search bar",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !0
                    }
                }]
            })
        },
        889010: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("844099"),
                l = n("40146"),
                i = n("619271"),
                r = n("104259"),
                o = n("541561"),
                u = n("520030"),
                d = n("600394"),
                c = n("170039"),
                f = n("199202"),
                E = n("360048"),
                h = n("823379"),
                C = n("731455"),
                _ = n("84051");
            let m = e => {
                    switch (e) {
                        case C.CategoryIcons.Activity:
                            return (0, a.jsx)(i.default, {});
                        case C.CategoryIcons.Discover:
                            return (0, a.jsx)(r.default, {});
                        case C.CategoryIcons.Education:
                            return (0, a.jsx)(o.default, {});
                        case C.CategoryIcons.Music:
                            return (0, a.jsx)(u.default, {});
                        case C.CategoryIcons.Science:
                            return (0, a.jsx)(d.default, {});
                        case C.CategoryIcons.Stage:
                            return (0, a.jsx)(c.default, {
                                height: 22,
                                width: 22
                            });
                        case C.CategoryIcons.Television:
                            return (0, a.jsx)(f.default, {});
                        case C.CategoryIcons.Server:
                            return (0, a.jsx)(l.ServerIcon, {});
                        case C.CategoryIcons.Quest:
                            return (0, a.jsx)(s.QuestsIcon, {});
                        default:
                            (0, h.assertNever)(e)
                    }
                },
                S = e => {
                    let {
                        categories: t,
                        currentCategoryId: n,
                        handleCategorySelect: s,
                        shouldDisplaySelectedCategory: l = !0
                    } = e;
                    return (0, a.jsx)(a.Fragment, {
                        children: t.map(e => (0, a.jsx)(E.default, {
                            avatar: m(e.icon),
                            name: e.name,
                            focusProps: {
                                offset: {
                                    right: 4,
                                    top: 1,
                                    bottom: 1
                                }
                            },
                            onClick: () => s(e.categoryId),
                            wrapContent: !0,
                            selected: l && e.categoryId === n,
                            className: _.categoryItem,
                            selectedClassName: _.selectedCategoryItem,
                            innerClassName: _.itemInner
                        }, e.categoryId))
                    })
                };
            S.Icons = C.CategoryIcons, t.default = S
        },
        488905: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverySidebarHeader: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("343628");

            function i(e) {
                let {
                    text: t
                } = e;
                return (0, a.jsx)(s.Heading, {
                    variant: "heading-xl/semibold",
                    className: l.discoverHeader,
                    children: t
                })
            }
        },
        769727: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("920906"),
                o = n("143927"),
                u = n("481060"),
                d = n("442837"),
                c = n("393238"),
                f = n("607070"),
                E = n("963202"),
                h = n("353093"),
                C = n("931515"),
                _ = n("807933"),
                m = n("702646"),
                S = n("207796"),
                p = n("543550"),
                I = n("895068"),
                g = n("93118");
            (s = a || (a = {})).TOP_PICKS = "top_picks", s.OTHER_GUILDS = "other_guilds";
            let T = {
                    mass: 1,
                    tension: 600,
                    friction: 60
                },
                A = i.memo(function(e) {
                    let {
                        width: t
                    } = e, n = (0, d.useStateFromStores)([f.default], () => f.default.useReducedMotion), a = (0, S.useClanDiscoveryUIStore)(e => e.mode, o.default), [s, u] = i.useState(!0), c = (0, r.useSpring)({
                        from: {
                            opacity: 0
                        },
                        to: {
                            opacity: a === S.ClanDiscoveryMode.GET_STARTED ? 0 : 1
                        },
                        config: T,
                        delay: 500,
                        immediate: n,
                        onRest: () => u(!1)
                    }), C = (0, S.useClanDiscoveryUIStore)(e => e.userUpsellScreen, o.default), A = (0, S.useClanDiscoveryUIStore)(e => e.started, o.default), {
                        guilds: N
                    } = (0, E.useClanPrepilotExperimentForAllGuilds)({
                        location: "ClanDiscoveryAdminContainer",
                        includeConverted: !0
                    }), v = i.useMemo(() => N.filter(e => !(0, h.isGuildAClan)(e)), [N]), {
                        enableApplication: R
                    } = (0, E.useClanPrePilotApplicationExperiment)("ClanDiscoveryAdminContainer");
                    switch (i.useEffect(() => {
                            let e = N.length > 0;
                            if (e && !R && C === S.ClanDiscoveryUserScreens.USER_UPSELL) {
                                (0, S.setClanDiscoveryMode)(S.ClanDiscoveryMode.ADMIN_UPSELL);
                                return
                            }
                            if (!e && R && !A) {
                                (0, S.setClanDiscoveryMode)(S.ClanDiscoveryMode.GET_STARTED);
                                return
                            }
                            if (R && a === S.ClanDiscoveryMode.ADMIN_UPSELL && 0 === v.length) {
                                (0, S.setClanDiscoveryMode)(S.ClanDiscoveryMode.GET_STARTED), S.useClanDiscoveryUIStore.getState().setUserUpsellScreen(S.ClanDiscoveryUserScreens.USER_UPSELL);
                                return
                            }
                        }, [v.length, N.length, A, R, a, C]), a) {
                        case S.ClanDiscoveryMode.ADMIN_UPSELL:
                            return (0, l.jsx)(p.ClanDiscoveryAdminContainer, {});
                        case S.ClanDiscoveryMode.GET_STARTED:
                            return (0, l.jsx)(p.ClanDiscoveryUserContainer, {});
                        case S.ClanDiscoveryMode.DISCOVERY:
                        case S.ClanDiscoveryMode.GAMES:
                        case S.ClanDiscoveryMode.PLAYSTYLE:
                        case S.ClanDiscoveryMode.TRAITS:
                            return (0, l.jsxs)("div", {
                                className: g.discoveryContainer,
                                children: [(0, l.jsx)(r.animated.div, {
                                    className: g.toolbar,
                                    style: {
                                        opacity: c.opacity,
                                        transform: c.opacity.to([0, 1], [-40, 0]).to(e => "translateY(".concat(e, "px)"))
                                    },
                                    children: (0, l.jsx)(m.default, {})
                                }), (0, l.jsx)(r.animated.div, {
                                    className: g.content,
                                    style: {
                                        opacity: c.opacity,
                                        transform: c.opacity.to([0, 1], [40, 0]).to(e => "translateY(".concat(e, "px)"))
                                    },
                                    children: (0, l.jsx)(I.default, {
                                        width: t,
                                        isAnimating: s
                                    })
                                }), (0, l.jsx)("div", {
                                    className: g.selectors,
                                    children: (0, l.jsx)(_.default, {
                                        mode: a
                                    })
                                })]
                            })
                    }
                });
            t.default = i.memo(function() {
                let {
                    loading: e
                } = (0, C.useAutoFetchClanDiscoveryResults)(), {
                    ref: t,
                    width: n
                } = (0, c.default)();
                return (0, l.jsxs)("main", {
                    className: g.container,
                    ref: t,
                    children: [(0, l.jsx)("div", {
                        className: g.dragRegion
                    }), e ? (0, l.jsx)("div", {
                        className: g.loading,
                        children: (0, l.jsx)(u.Spinner, {})
                    }) : (0, l.jsx)(A, {
                        width: null != n ? n : 0
                    })]
                })
            })
        },
        229765: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                loadStaticClanDiscovery: function() {
                    return c
                },
                searchClanDiscovery: function() {
                    return f
                }
            }), n("315314"), n("610138"), n("216116"), n("78328"), n("815648"), n("47120");
            var a = n("108131"),
                s = n.n(a),
                l = n("544891"),
                i = n("570140"),
                r = n("10473"),
                o = n("976757"),
                u = n("981631");
            let d = new Worker(new URL(n.p + n.u("59546"), n.b));

            function c() {
                return i.default.dispatch({
                    type: "FETCH_STATIC_CLAN_LIST_START"
                }), l.HTTP.get({
                    url: u.Endpoints.DISCOVERY_ALL_GAMES
                }).then(e => {
                    let t = e.body.clans.map(o.buildClanFromServer);
                    i.default.dispatch({
                        type: "FETCH_STATIC_CLAN_LIST_SUCCESS",
                        clans: function(e) {
                            let t = new Set;
                            return e.filter(e => !t.has(e.id) && (t.add(e.id), !0))
                        }(t)
                    })
                }).catch(e => {
                    i.default.dispatch({
                        type: "FETCH_STATIC_CLAN_LIST_FAILURE",
                        error: e
                    })
                })
            }
            async function f(e) {
                var t, n, a;
                if ("loaded" === r.default.getSearchResult(e).status) return;
                let l = s().v3(JSON.stringify(e)),
                    o = r.default.getStaticClans();
                let u = await (t = o, n = l, a = e, new Promise(e => {
                        let s = t => {
                            let {
                                data: {
                                    id: a,
                                    sortedClans: l
                                }
                            } = t;
                            n === a && e(l), null == d || d.removeEventListener("message", s)
                        };
                        null == d || d.addEventListener("message", s);
                        null == d || d.postMessage({
                            id: n,
                            unsortedClans: t,
                            criteria: a
                        })
                    })),
                    c = {
                        status: "loaded",
                        loadedAt: Date.now(),
                        items: u
                    };
                i.default.dispatch({
                    type: "FETCH_CLAN_DISCOVERY_SEARCH_RESULT_SUCCESS",
                    criteriaHash: l,
                    searchResult: c
                })
            }
        },
        931515: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useAutoFetchClanDiscoveryResults: function() {
                    return C
                },
                useClanDiscoveryList: function() {
                    return _
                }
            });
            var a = n("470079"),
                s = n("348327"),
                l = n.n(s),
                i = n("143927"),
                r = n("442837"),
                o = n("224706"),
                u = n("963202"),
                d = n("229765"),
                c = n("10473"),
                f = n("207796"),
                E = n("976757"),
                h = n("308083");

            function C() {
                let e = (0, f.useClanDiscoveryUIStore)(e => e.setGame, i.default),
                    t = (0, f.useClanDiscoveryUIStore)(e => e.setSelectedGames, i.default),
                    n = (0, f.useClanDiscoveryUIStore)(e => e.selectedGames, i.default),
                    s = (0, f.useClanDiscoveryUIStore)(f.buildSearchCriteriaFromUIState, l()),
                    E = (0, u.useClanPrepilotExperimentDefaultGameId)({
                        location: "clan_discovery"
                    }),
                    {
                        defaultGameId: C
                    } = (0, u.useClanPilotExperiment)("clan_discovery"),
                    _ = null != E ? E : C,
                    m = function() {
                        let e = (0, r.useStateFromStores)([c.default], () => c.default.hasLoadedStaticClanDiscovery());
                        return a.useEffect(() => {
                            !e && (0, d.loadStaticClanDiscovery)()
                        }, [e]), e
                    }(),
                    S = (0, r.useStateFromStores)([c.default], () => c.default.isLoading());
                return a.useEffect(() => {
                    !(n.length > 0) && (_ === h.VALORANT_ID ? (e(f.ClanDiscoveryGame.VALORANT), t([_])) : _ === h.GENSHIN_ID && (e(f.ClanDiscoveryGame.GENSHIN), t([_])))
                }, [e, t, _, n]), a.useEffect(() => {
                    m && (0, d.searchClanDiscovery)(s)
                }, [s, m]), a.useEffect(() => {
                    o.default.getDetectableGames()
                }, []), {
                    loading: S
                }
            }

            function _() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    t = (0, f.useClanDiscoveryUIStore)(f.buildSearchCriteriaFromUIState, l()),
                    n = (0, r.useStateFromStores)([c.default], () => c.default.hasLoadedStaticClanDiscovery()),
                    s = (0, r.useStateFromStores)([c.default], () => c.default.getSearchResult(t), [t]);
                return {
                    loaded: n,
                    clans: a.useMemo(() => {
                        if ((0, E.isLoadedSearchResult)(s)) {
                            let t = s.items;
                            return null != e ? t.slice(0, e) : t
                        }
                        return []
                    }, [e, s]),
                    searchCriteria: t,
                    searchResult: s
                }
            }
        },
        480222: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("442837"),
                r = n("481060"),
                o = n("607070"),
                u = n("207796"),
                d = n("420212"),
                c = n("689938"),
                f = n("885107");
            let E = {
                mass: 1,
                tension: 600,
                friction: 60,
                clamp: !0
            };
            t.default = function(e) {
                let {
                    children: t,
                    onClose: n
                } = e, h = s.useCallback(() => {
                    (0, u.setClanDiscoveryMode)(u.ClanDiscoveryMode.DISCOVERY), null == n || n()
                }, [n]);
                s.useEffect(() => {
                    let e = e => {
                        e.key === d.KeyboardKeysUpdated.ESCAPE && h()
                    };
                    return window.addEventListener("keydown", e), () => window.removeEventListener("keydown", e)
                }, [h]);
                let C = (0, i.useStateFromStores)([o.default], () => o.default.useReducedMotion),
                    _ = (0, l.useSpring)({
                        from: {
                            opacity: 0
                        },
                        to: {
                            opacity: 1
                        },
                        config: E,
                        delay: 500,
                        immediate: C
                    });
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("div", {
                        className: f.saveContainer,
                        children: (0, a.jsx)(r.Button, {
                            onClick: h,
                            look: r.ButtonLooks.OUTLINED,
                            color: r.ButtonColors.PRIMARY,
                            children: c.default.Messages.SAVE
                        })
                    }), (0, a.jsx)(l.animated.div, {
                        style: {
                            opacity: _.opacity,
                            transform: _.opacity.to([0, 1], [40, 0]).to(e => "translateY(".concat(e, "px)"))
                        },
                        className: f.contentWrapper,
                        children: (0, a.jsx)(r.Scroller, {
                            fade: !0,
                            className: f.content,
                            children: t
                        })
                    })]
                })
            }
        },
        807933: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("143927"),
                r = n("442837"),
                o = n("481060"),
                u = n("607070"),
                d = n("950279"),
                c = n("741595"),
                f = n("359380"),
                E = n("480222"),
                h = n("207796"),
                C = n("316553"),
                _ = n("689938");
            let m = {
                    mass: 1,
                    tension: 280,
                    friction: 20,
                    clamp: !0
                },
                S = {
                    [h.ClanDiscoveryMode.PLAYSTYLE]: function() {
                        let [e, t] = s.useState(h.useClanDiscoveryUIStore.getState().selectedPlaystyle), n = s.useCallback(() => {
                            null != e && h.useClanDiscoveryUIStore.getState().setSelectedPlaystyle(e)
                        }, [e]);
                        return (0, a.jsx)(E.default, {
                            onClose: n,
                            children: (0, a.jsx)(c.default, {
                                title: _.default.Messages.CLAN_DISCOVERY_PLAYSTYLE_TITLE,
                                description: _.default.Messages.CLAN_DISCOVERY_PLAYSTYLE_SUBTITLE,
                                handleUpdate: t,
                                playstyle: e
                            })
                        })
                    },
                    [h.ClanDiscoveryMode.TRAITS]: function() {
                        let e = (0, h.useClanDiscoveryUIStore)(e => e.game, i.default),
                            t = (0, C.useDiscoveryGameApplicationId)({
                                selectedGame: e
                            }),
                            [n, l] = s.useState(new Set(h.useClanDiscoveryUIStore.getState().selectedTraits)),
                            r = s.useCallback(() => {
                                h.useClanDiscoveryUIStore.getState().setSelectedTraits(Array.from(n))
                            }, [n]);
                        return (0, a.jsx)(E.default, {
                            onClose: r,
                            children: (0, a.jsx)(f.default, {
                                title: _.default.Messages.CLAN_DISCOVERY_TRAIT_TITLE,
                                description: _.default.Messages.CLAN_DISCOVERY_TRAIT_SUBTITLE,
                                handleUpdate: l,
                                interests: n,
                                requiredGameId: t,
                                hidePreview: !0
                            })
                        })
                    },
                    [h.ClanDiscoveryMode.GAMES]: function() {
                        let e = (0, h.useClanDiscoveryUIStore)(e => e.game, i.default),
                            t = (0, C.useDiscoveryGameApplicationId)({
                                selectedGame: e
                            }),
                            [n, l] = s.useState(new Set(h.useClanDiscoveryUIStore.getState().selectedGames)),
                            r = s.useCallback(() => {
                                h.useClanDiscoveryUIStore.getState().setSelectedGames(Array.from(n))
                            }, [n]);
                        return (0, a.jsx)(E.default, {
                            onClose: r,
                            children: (0, a.jsx)(d.default, {
                                title: _.default.Messages.CLAN_DISCOVERY_GAME_TITLE,
                                description: _.default.Messages.CLAN_DISCOVERY_GAME_SUBTITLE,
                                requiredGameId: t,
                                handleUpdate: l,
                                gameApplicationIds: n
                            })
                        })
                    }
                };

            function p(e) {
                let {
                    item: t,
                    state: n,
                    cleanUp: i
                } = e, d = (0, r.useStateFromStores)([u.default], () => u.default.useReducedMotion), c = s.useMemo(() => {
                    let e = S[t];
                    return null == e ? null : (0, a.jsx)(e, {})
                }, [t]), f = (0, l.useSpring)({
                    from: {
                        opacity: 0
                    },
                    to: {
                        opacity: n === o.TransitionStates.YEETED ? 0 : 1
                    },
                    config: m,
                    immediate: d,
                    onRest: () => {
                        n === o.TransitionStates.YEETED && i()
                    }
                });
                return (0, a.jsx)(l.animated.div, {
                    style: f,
                    children: c
                })
            }

            function I(e) {
                return e
            }

            function g(e, t, n, s) {
                return (0, a.jsx)(p, {
                    item: t,
                    state: n,
                    cleanUp: s
                }, e)
            }
            t.default = s.memo(function(e) {
                let {
                    mode: t
                } = e, n = s.useMemo(() => null != S[t] ? [t] : [], [t]);
                return (0, a.jsx)(o.TransitionGroup, {
                    items: n,
                    renderItem: g,
                    getItemKey: I
                })
            })
        },
        347137: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("442837"),
                r = n("212093"),
                o = n("100527"),
                u = n("570938"),
                d = n("677277"),
                c = n("285865"),
                f = n("702428"),
                E = n("709158"),
                h = n("683301"),
                C = n("360048"),
                _ = n("296386"),
                m = n("150192"),
                S = n("889010"),
                p = n("488905"),
                I = n("731455"),
                g = n("689938"),
                T = n("157552");
            let A = e => {
                switch (e) {
                    case I.CategoryId.Activity:
                        return I.CategoryIcons.Activity;
                    case I.CategoryId.Music:
                        return I.CategoryIcons.Music;
                    case I.CategoryId.Television:
                        return I.CategoryIcons.Television;
                    case I.CategoryId.Science:
                        return I.CategoryIcons.Science;
                    case I.CategoryId.Education:
                        return I.CategoryIcons.Education;
                    default:
                        return I.CategoryIcons.Server
                }
            };
            t.default = function() {
                let {
                    currentCategoryId: e,
                    isViewingSearchResults: t
                } = (0, i.useStateFromStoresObject)([h.default], () => ({
                    currentCategoryId: h.default.getCurrentCategoryId(),
                    isViewingSearchResults: h.default.getMostRecentQuery().length > 0
                })), n = (0, E.default)(o.default.QUEST_HOME_PAGE), N = (0, i.useStateFromStores)([m.default], () => m.default.getClanDiscoveryCategories(), [], m.areDiscoveryCategoriesEqual), v = null == N ? void 0 : N.map(e => ({
                    ...e,
                    icon: A(e.categoryId)
                })), R = e => {
                    (0, r.selectCategory)(e, !0), c.default.closeSidebar(), t && (0, r.clearSearch)()
                };
                return s.useEffect(() => {
                    (0, _.maybeFetchGuildDiscoveryCategories)(!1, !0)
                }, [e]), (0, a.jsxs)(l.Scroller, {
                    children: [(0, a.jsx)(p.DiscoverySidebarHeader, {
                        text: g.default.Messages.DISCOVER
                    }), (0, a.jsx)(C.default, {
                        avatar: (0, a.jsx)(u.default, {}),
                        name: g.default.Messages.CLANS,
                        focusProps: {
                            offset: {
                                right: 4,
                                top: 1,
                                bottom: 1
                            }
                        },
                        onClick: () => R(I.CategoryId.Clans),
                        wrapContent: !0,
                        selected: e === I.CategoryId.Clans,
                        className: T.categoryItem,
                        selectedClassName: T.selectedCategoryItem,
                        innerClassName: T.itemInner
                    }, "clan-discovery-home"), (0, a.jsx)(S.default, {
                        categories: v,
                        handleCategorySelect: R,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    }), (0, a.jsx)(d.default, {
                        handleCategorySelect: R,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    }), n && (0, a.jsx)(f.default, {
                        onClick: () => R(I.CategoryId.Quests),
                        isSelected: e === I.CategoryId.Quests
                    })]
                })
            }
        },
        10473: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s = n("108131"),
                l = n.n(s),
                i = n("442837"),
                r = n("570140"),
                o = n("70956");

            function u(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let d = [],
                c = !1,
                f = !1,
                E = {
                    status: "unloaded"
                },
                h = {};
            class C extends(a = i.default.Store) {
                getSearchResult(e) {
                    let t = h[l().v3(JSON.stringify(e))];
                    return null == t || t.loadedAt < Date.now() - o.default.Millis.HOUR ? E : t
                }
                hasLoadedStaticClanDiscovery() {
                    return c
                }
                getStaticClans() {
                    return d
                }
                isLoading() {
                    return f
                }
            }
            u(C, "displayName", "ClanDiscoveryStore"), u(C, "persistKey", "ClanDiscoveryStore"), t.default = new C(r.default, {
                FETCH_STATIC_CLAN_LIST_START: function() {
                    f = !0
                },
                FETCH_STATIC_CLAN_LIST_SUCCESS: function(e) {
                    d = e.clans, c = !0, f = !1
                },
                FETCH_STATIC_CLAN_LIST_FAILURE: function() {
                    f = !1
                },
                FETCH_CLAN_DISCOVERY_SEARCH_RESULT_SUCCESS: function(e) {
                    h[e.criteriaHash] = e.searchResult
                }
            })
        },
        702646: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("143927"),
                o = n("531057"),
                u = n("149020"),
                d = n("8386"),
                c = n("738232"),
                f = n("376644"),
                E = n("481060"),
                h = n("963202"),
                C = n("105671"),
                _ = n("92373"),
                m = n("207796"),
                S = n("308083"),
                p = n("689938"),
                I = n("683391");

            function g(e) {
                let {
                    icon: t,
                    text: n,
                    ariaLabel: l,
                    tooltip: r,
                    onClick: u,
                    isActive: d,
                    autoWidth: c = !1
                } = e, [f, h] = s.useState(!1), [C, _] = s.useState(!1), S = m.useClanDiscoveryUIStore.getState().mode, p = S === m.ClanDiscoveryMode.GAMES || S === m.ClanDiscoveryMode.PLAYSTYLE || S === m.ClanDiscoveryMode.TRAITS;
                s.useEffect(() => {
                    p && (h(!1), _(!1))
                }, [p]);
                let g = d && (C || f),
                    T = s.useMemo(() => (0, a.jsxs)(E.Clickable, {
                        className: I.tooltipContentWrapper,
                        onClick: u,
                        onMouseEnter: () => {
                            !p && h(!0)
                        },
                        onMouseLeave: () => {
                            h(!1)
                        },
                        children: [(0, a.jsx)("div", {
                            className: I.tooltipHoverBridge
                        }), r]
                    }), [r, u, p]);
                return (0, a.jsx)(E.Tooltip, {
                    text: T,
                    position: "bottom",
                    "aria-label": l,
                    shouldShow: g,
                    forceOpen: g,
                    allowOverflow: !0,
                    disableTooltipPointerEvents: !1,
                    tooltipClassName: i()(I.filterTooltip, {
                        [I.filterTooltipAutoWidth]: c
                    }),
                    tooltipContentClassName: I.filterTooltipContent,
                    children: e => (0, a.jsxs)(E.Button, {
                        ...e,
                        className: i()(I.filterPill, {
                            [I.filterPillActive]: d
                        }),
                        innerClassName: I.filterPillContents,
                        look: E.ButtonLooks.OUTLINED,
                        color: E.ButtonColors.CUSTOM,
                        onClick: u,
                        onMouseEnter: () => {
                            _(!0)
                        },
                        onMouseLeave: () => {
                            _(!1)
                        },
                        children: [t, (0, a.jsxs)("div", {
                            className: I.filterPillText,
                            children: [(0, a.jsx)(E.Text, {
                                variant: "text-xs/medium",
                                color: "none",
                                children: n
                            }), (0, a.jsx)(o.ChevronSmallDownIcon, {
                                className: I.chevron,
                                color: "currentColor"
                            })]
                        })]
                    })
                })
            }

            function T() {
                var e;
                let t = (0, m.useClanDiscoveryUIStore)(e => e.selectedGames, r.default),
                    n = s.useCallback(() => {
                        (0, m.setClanDiscoveryMode)(m.ClanDiscoveryMode.GAMES)
                    }, []),
                    l = null !== (e = (0, C.useFormattedGameNames)(t)) && void 0 !== e ? e : "",
                    i = t.slice(0, 3),
                    o = t.length - 3,
                    d = (0, a.jsx)("div", {
                        className: I.gamesTooltip,
                        children: i.map((e, t) => (0, a.jsx)(_.default, {
                            applicationId: e,
                            otherGamesCount: 2 === t && o > 0 ? o + 1 : void 0
                        }, e))
                    }),
                    c = (0, a.jsx)(u.GameControllerIcon, {
                        className: I.filterPillIcon,
                        color: "currentColor"
                    });
                return (0, a.jsx)(g, {
                    icon: c,
                    text: p.default.Messages.CLAN_DISCOVERY_GAME_FILTER.format({
                        count: t.length
                    }),
                    tooltip: d,
                    onClick: n,
                    isActive: t.length > 0,
                    ariaLabel: l,
                    autoWidth: !0
                })
            }

            function A() {
                let e = s.useMemo(S.getPlaystyleOptions, []),
                    t = (0, m.useClanDiscoveryUIStore)(e => e.selectedPlaystyle, r.default),
                    n = null != t ? e[t] : null,
                    l = null == n ? void 0 : n.title,
                    i = s.useCallback(() => {
                        (0, m.setClanDiscoveryMode)(m.ClanDiscoveryMode.PLAYSTYLE)
                    }, []);
                if (null == n || null == l) return null;
                let o = (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(E.Heading, {
                            variant: "heading-xxl/medium",
                            children: n.emoji
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(E.Heading, {
                                variant: "heading-md/medium",
                                children: n.title
                            }), (0, a.jsx)(E.Text, {
                                variant: "text-xs/normal",
                                children: n.subtitle
                            })]
                        })]
                    }),
                    u = (0, a.jsx)(c.ReactionIcon, {
                        className: I.filterPillIcon,
                        color: "currentColor"
                    });
                return (0, a.jsx)(g, {
                    icon: u,
                    text: l,
                    tooltip: o,
                    onClick: i,
                    isActive: null != n,
                    ariaLabel: l
                })
            }

            function N() {
                let e = (0, m.useClanDiscoveryUIStore)(e => e.selectedTraits, r.default),
                    t = s.useCallback(() => {
                        (0, m.setClanDiscoveryMode)(m.ClanDiscoveryMode.TRAITS)
                    }, []);
                if (null == e) return null;
                let n = (0, a.jsx)("div", {
                        className: I.traitsTooltip,
                        children: e.map(e => (0, a.jsx)("div", {
                            className: I.trait,
                            children: (0, a.jsx)(E.Text, {
                                variant: "text-xs/medium",
                                color: "none",
                                children: e
                            })
                        }, e))
                    }),
                    l = (0, a.jsx)(f.TagIcon, {
                        className: I.filterPillIcon,
                        color: "currentColor"
                    });
                return (0, a.jsx)(g, {
                    icon: l,
                    text: p.default.Messages.CLAN_DISCOVERY_PREFERENCES_FILTER,
                    tooltip: n,
                    onClick: t,
                    isActive: e.length > 0,
                    ariaLabel: e.join(", "),
                    autoWidth: !0
                })
            }

            function v() {
                let {
                    enableClanCreation: e
                } = (0, h.useClanPrepilotExperimentForAllGuilds)({
                    location: "clan_discovery_add_clan",
                    includeConverted: !1
                });
                return e ? (0, a.jsxs)(E.Clickable, {
                    className: i()(I.buttonPill),
                    onClick: () => (0, m.setClanDiscoveryMode)(m.ClanDiscoveryMode.ADMIN_UPSELL),
                    children: [(0, a.jsx)(d.PlusSmallIcon, {
                        className: I.filterPillIcon,
                        color: "currentColor"
                    }), (0, a.jsx)("div", {
                        className: I.filterPillText,
                        children: (0, a.jsx)(E.Text, {
                            variant: "text-xs/medium",
                            color: "none",
                            children: p.default.Messages.CLAN_DISCOVERY_ADD_CLAN
                        })
                    })]
                }) : null
            }
            t.default = function() {
                return (0, a.jsxs)("div", {
                    className: I.toolbar,
                    children: [(0, a.jsx)("div", {
                        className: I.addClan,
                        children: (0, a.jsx)(v, {})
                    }), (0, a.jsxs)("div", {
                        className: I.preferences,
                        children: [(0, a.jsx)(T, {}), (0, a.jsx)(A, {}), (0, a.jsx)(N, {})]
                    }), (0, a.jsx)("div", {
                        className: I.actions
                    })]
                })
            }
        },
        584885: function(e, t, n) {
            "use strict";
            n.r(t), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("570140"),
                r = n("906732"),
                o = n("451603"),
                u = n("885714"),
                d = n("514611"),
                c = n("127541"),
                f = n("981631"),
                E = n("363472");
            let h = [
                    [1696, 20],
                    [1432, 16],
                    [1168, 12],
                    [0, 8]
                ],
                C = [
                    [1696, 30],
                    [1432, 24],
                    [1168, 18],
                    [0, 12]
                ];
            t.default = e => {
                let t, {
                    title: n,
                    subtitle: _,
                    guildsData: m,
                    analyticsContext: S,
                    theme: p,
                    onViewGuild: I,
                    fetchGuilds: g,
                    onGuildCardSeen: T,
                    currentCategoryId: A,
                    loadId: N,
                    onTagClick: v,
                    showMoreCards: R = !1
                } = e;
                s.useEffect(() => {
                    i.default.wait(() => g())
                }, [A]);
                let O = (0, c.default)(R ? C : h),
                    {
                        analyticsLocations: L
                    } = (0, r.default)();
                if (null == m) return null;
                let {
                    guilds: P,
                    loading: y
                } = m, M = null == P || 0 === P.length;
                if (!y && M) return null;
                let D = async e => {
                    if ((0, o.isAtGuildCapAndNonPremium)())(0, u.default)({
                        analyticsSource: {
                            page: f.AnalyticsPages.GUILD_DISCOVERY
                        },
                        analyticsLocation: {
                            page: f.AnalyticsPages.GUILD_DISCOVERY,
                            section: f.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                        },
                        analyticsLocations: L
                    });
                    else {
                        let t = P.findIndex(t => t.id === e);
                        await I(e, t, S, N)
                    }
                };
                if (y || null == P) {
                    let e = [];
                    for (let t = 0; t < O; t++) e.push((0, a.jsx)(d.default.Placeholder, {}, t));
                    t = e
                } else t = P.slice(0, O).map(e => (0, a.jsx)(d.default, {
                    className: E.__invalid_guildCard,
                    guild: e,
                    onView: D,
                    theme: p,
                    onGuildCardSeen: T,
                    onTagClick: v
                }, e.id));
                return (0, a.jsx)("section", {
                    className: E.guildListSection,
                    children: (0, a.jsxs)(l.HeadingLevel, {
                        component: (0, a.jsx)(l.Heading, {
                            className: E.__invalid_title,
                            variant: "heading-lg/semibold",
                            children: n
                        }),
                        children: [null != _ && (0, a.jsx)(l.Text, {
                            className: E.subtitle,
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            children: _
                        }), (0, a.jsx)("div", {
                            className: E.guildList,
                            children: t
                        })]
                    })
                })
            }
        },
        59222: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_GUILDS_PER_PAGE: function() {
                    return g
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("664751"),
                o = n("442837"),
                u = n("481060"),
                d = n("212093"),
                c = n("703656"),
                f = n("683301"),
                E = n("671533"),
                h = n("900849"),
                C = n("119317"),
                _ = n("749436"),
                m = n("650394"),
                S = n("731455"),
                p = n("689938"),
                I = n("369802");
            let g = 12,
                T = () => {
                    let e = (0, c.getHistory)().location.search;
                    return null != e && e.length > 0 && e.startsWith("?") ? r.parse(e) : {}
                },
                A = e => {
                    let {
                        categoryId: t,
                        categoryName: n,
                        onClick: s
                    } = e, l = t === S.DISCOVERY_ALL_CATEGORIES_ID, i = l ? p.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_HEADER : p.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_HEADER.format({
                        categoryName: n
                    }), r = l ? p.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_BODY : p.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_BODY.format({
                        onClick: s
                    });
                    return (0, a.jsxs)("div", {
                        className: I.emptyContainer,
                        children: [(0, a.jsx)("div", {
                            className: I.emptyImage
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: I.emptyHeader,
                            children: i
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: r
                        })]
                    })
                },
                N = () => (0, a.jsxs)("div", {
                    className: I.emptyContainer,
                    children: [(0, a.jsx)("div", {
                        className: I.errorImage
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-md/normal",
                        color: "header-secondary",
                        className: I.emptyHeader,
                        children: p.default.Messages.GUILD_DISCOVERY_SEARCH_ERROR
                    })]
                });
            t.default = e => {
                let {
                    loadId: t,
                    searchResults: n,
                    mostRecentQuery: l,
                    defaultLanguage: r,
                    availableLanguages: c,
                    isFetchingSearch: v,
                    scroller: R,
                    loadingGuildId: O,
                    theme: L,
                    currentCategoryId: P,
                    currentCategoryName: y,
                    onViewGuild: M,
                    onGuildCardSeen: D,
                    placeholder: x,
                    onTagClick: b
                } = e, U = i().uniqueId("GuildDiscovery"), {
                    guilds: j,
                    loading: G,
                    total: w
                } = n, [k, B] = s.useState(!1), {
                    tag: F
                } = T(), [H, V] = s.useState(F), Y = (0, o.useStateFromStores)([f.default], () => f.default.hasSearchError()), W = (e, t, n) => {
                    d.doAlgoliaSearch(l, {
                        categoryId: n ? S.DISCOVERY_ALL_CATEGORIES_ID : P,
                        preferredLocale: r.code,
                        offset: e,
                        length: t,
                        filters: {
                            approximate_member_count: h.MINIMUM_MEMBER_COUNT
                        }
                    }), B(!1)
                }, K = () => {
                    null == R || R.scrollTo({
                        to: 0
                    })
                };
                s.useEffect(() => {
                    let {
                        offset: e,
                        tag: t
                    } = T(), n = null != e ? Math.floor(parseInt(e, 10) / g) + 1 : 1;
                    V(!!t), 1 === n && B(!0)
                }, [l]);
                let z = P === S.DISCOVERY_ALL_CATEGORIES_ID ? p.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_HEADER.format({
                    count: null != w ? w.toLocaleString() : "0",
                    query: l
                }) : p.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_CATEGORY_HEADER.format({
                    count: null != w ? w.toLocaleString() : "0",
                    query: l,
                    category: y
                });
                return (0, a.jsxs)("div", {
                    className: I.container,
                    children: [(0, a.jsxs)("div", {
                        className: I.searchHeader,
                        children: [(0, a.jsx)(u.Clickable, {
                            onClick: () => {
                                d.clearSearch(), h.trackSearchClosed(t)
                            },
                            className: I.arrow,
                            "aria-label": p.default.Messages.BACK,
                            children: (0, a.jsx)(E.default, {
                                direction: E.default.Directions.LEFT
                            })
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: I.header,
                            children: z
                        })]
                    }), (0, a.jsx)(_.default, {
                        loadId: t,
                        searchResults: n,
                        mostRecentQuery: l,
                        isFetchingSearch: v,
                        defaultLanguage: r,
                        placeholder: x,
                        availableLanguages: c,
                        isSearchPage: !0,
                        currentCategoryId: P,
                        isTagSearch: H
                    }), Y ? (0, a.jsx)(N, {}) : w <= 0 ? (0, a.jsx)(A, {
                        categoryId: P,
                        categoryName: y,
                        onClick: () => {
                            d.selectCategory(S.DISCOVERY_ALL_CATEGORIES_ID), W(0, g, !0)
                        }
                    }) : (0, a.jsx)("div", {
                        className: I.results,
                        children: (0, a.jsx)(C.default, {
                            pageSize: g,
                            totalCount: w,
                            resetCurrentPage: k,
                            onPageChange: e => {
                                W((e - 1) * g, g), K()
                            },
                            children: e => {
                                let {
                                    controller: t
                                } = e;
                                return (0, a.jsxs)("section", {
                                    "aria-labelledby": U,
                                    children: [(0, a.jsx)(m.default, {
                                        guilds: j,
                                        loading: G,
                                        loadingPlaceholderCount: g,
                                        onViewGuild: M,
                                        loadingGuildId: O,
                                        theme: L,
                                        analyticsContext: h.AnalyticsContexts.SEARCH,
                                        onGuildCardSeen: D,
                                        onTagClick: b
                                    }), t]
                                })
                            }
                        })
                    })]
                })
            }
        },
        194729: function(e, t, n) {
            "use strict";
            n.r(t), n("390547"), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("392711"),
                o = n.n(r),
                u = n("664751"),
                d = n("748780"),
                c = n("873546"),
                f = n("442837"),
                E = n("481060"),
                h = n("570140"),
                C = n("212093"),
                _ = n("827837"),
                m = n("785570"),
                S = n("100527"),
                p = n("963202"),
                I = n("252618"),
                g = n("440190"),
                T = n("5955"),
                A = n("121711"),
                N = n("709158"),
                v = n("703656"),
                R = n("108427"),
                O = n("706454"),
                L = n("210887"),
                P = n("480294"),
                y = n("683301"),
                M = n("430824"),
                D = n("230307"),
                x = n("502568"),
                b = n("900849"),
                U = n("879484"),
                j = n("117496"),
                G = n("296386"),
                w = n("150192"),
                k = n("769727"),
                B = n("584885"),
                F = n("59222"),
                H = n("749436"),
                V = n("26580"),
                Y = n("731455"),
                W = n("981631"),
                K = n("689938"),
                z = n("59415"),
                q = n("368179"),
                Q = n("52518");

            function Z(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class X extends s.PureComponent {
                componentDidMount() {
                    var e, t, n;
                    let {
                        isFetching: a,
                        guilds: {
                            gamesYouPlay: s,
                            featured: l
                        },
                        searchRoute: i,
                        currentHomepageCategoryId: r,
                        mostRecentQuery: o
                    } = this.props;
                    if ((0, _.fetchActivityStatistics)(), (0, G.maybeFetchGuildDiscoveryCategories)(), null == y.default.getSearchIndex() && (0, C.createAlgoliaIndex)(), h.default.wait(() => {
                            (0, m.markView)(W.ViewHistoryKeys.SERVER_DISCOVERY_BADGE)
                        }), !a && 0 === o.length && b.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: s.guilds,
                            allGuilds: l.guilds,
                            categoryId: r
                        }), null != i) {
                        let {
                            query: e,
                            offset: t,
                            limit: n,
                            preferredLocale: a,
                            categoryId: s
                        } = u.parse(i);
                        (0, C.doAlgoliaSearch)(e, {
                            categoryId: parseInt(s, 10),
                            preferredLocale: a,
                            offset: parseInt(t, 10),
                            filters: {
                                approximate_member_count: b.MINIMUM_MEMBER_COUNT
                            },
                            length: parseInt(n, 10)
                        })
                    } else null != r && r !== Y.DISCOVERY_ALL_CATEGORIES_ID && h.default.wait(() => (0, C.selectCategory)(r));
                    let d = null !== (t = null === (e = (0, v.getHistory)().location.state) || void 0 === e ? void 0 : e.scrollTop) && void 0 !== t ? t : 0;
                    d > 0 && (null === (n = this._scroller.current) || void 0 === n || n.scrollTo({
                        to: d
                    })), (0, R.trackAppUIViewed)("guild_discovery")
                }
                componentDidUpdate(e) {
                    let {
                        guilds: {
                            gamesYouPlay: t,
                            featured: n
                        },
                        isFetching: a,
                        mostRecentQuery: s,
                        currentHomepageCategoryId: l,
                        currentCategoryId: i
                    } = this.props;
                    if (e.isFetching && !a && b.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: t.guilds,
                            allGuilds: n.guilds,
                            categoryId: l
                        }), e.currentCategoryId !== i) {
                        var r;
                        null === (r = this._scroller.current) || void 0 === r || r.scrollTo({
                            to: 0
                        })
                    }
                    e.currentCategoryId !== i && b.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen)), e.mostRecentQuery.length > 0 && s.length < 1 && l !== i && (0, C.selectCategory)(l)
                }
                componentWillUnmount() {
                    let {
                        currentCategoryId: e,
                        recommendationsLoadId: t,
                        recommendationsGuilds: n
                    } = this.props;
                    e === Y.DISCOVERY_ALL_CATEGORIES_ID ? null != n && null != t && b.trackDiscoveryExited(t, this.getOrderedGuildIdsSeen(n.map(e => e.id)), "Game Recommendations") : b.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen))
                }
                getOrderedGuildIdsSeen(e) {
                    return e.filter(e => this._guildIdsSeen.has(e))
                }
                renderGamesYouPlay() {
                    let {
                        guilds: e,
                        mightHaveGamesYouPlay: t,
                        theme: n,
                        userGuilds: s
                    } = this.props, l = Object.keys(s), i = e[W.GuildDiscoverySections.GAMES_YOU_PLAY];
                    i.guilds = i.guilds.filter(e => !l.includes(e.id));
                    let {
                        loadingGuildId: r
                    } = this.state;
                    return t ? (0, a.jsx)(B.default, {
                        loadId: this.loadId,
                        title: K.default.Messages.GUILD_DISCOVERY_HEADER_GAMES_YOU_PLAY,
                        guildsData: i,
                        loadingGuildId: r,
                        analyticsContext: b.AnalyticsContexts.RECOMMENDED,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: C.fetchGamesYouPlayGuilds,
                        theme: n
                    }) : null
                }
                renderSearchBar() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        defaultLanguage: l,
                        isFetchingSearch: i,
                        currentCategoryId: r,
                        categories: o,
                        currentCategoryName: u
                    } = this.props;
                    U.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_1"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: d
                    } = U.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_2"
                    }, {
                        autoTrackExposure: !1
                    }), c = d ? r === Y.DISCOVERY_ALL_CATEGORIES_ID ? K.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER_TAGS : K.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER_TAGS.format({
                        categoryName: u
                    }) : r === Y.DISCOVERY_ALL_CATEGORIES_ID ? K.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : K.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: u
                    }), f = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[r]) && void 0 !== t ? t : y.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(H.default, {
                        loadId: this.loadId,
                        searchResults: f,
                        mostRecentQuery: n,
                        isFetchingSearch: i,
                        defaultLanguage: l,
                        placeholder: c,
                        currentCategoryId: r,
                        categories: o
                    })
                }
                renderSearchResults() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        availableLanguages: l,
                        defaultLanguage: i,
                        isFetchingSearch: r,
                        theme: o,
                        currentCategoryId: u,
                        currentCategoryName: d
                    } = this.props, {
                        loadingGuildId: c
                    } = this.state, f = u === Y.DISCOVERY_ALL_CATEGORIES_ID ? K.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : K.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: d
                    }), E = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[u]) && void 0 !== t ? t : y.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(F.default, {
                        loadId: this.loadId,
                        availableLanguages: l,
                        defaultLanguage: i,
                        placeholder: f,
                        isFetchingSearch: r,
                        searchResults: E,
                        mostRecentQuery: n,
                        loadingGuildId: c,
                        currentCategoryId: u,
                        currentCategoryName: d,
                        scroller: this._scroller.current,
                        theme: o,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, b.AnalyticsContexts.SEARCH)
                    })
                }
                renderRecommendedGuildsSection() {
                    let {
                        guilds: e,
                        theme: t
                    } = this.props, {
                        loadingGuildId: n
                    } = this.state;
                    return (0, a.jsx)(B.default, {
                        loadId: this.loadId,
                        title: K.default.Messages.GUILD_DISCOVERY_FEATURED_HEADER,
                        guildsData: e.featured,
                        analyticsContext: b.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, C.fetchFeaturedOrPopularGuilds)(0, 30),
                        loadingGuildId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, b.AnalyticsContexts.POPULAR)
                    })
                }
                renderPopularGuildsSection() {
                    let {
                        guilds: e,
                        theme: t,
                        currentCategoryId: n
                    } = this.props, {
                        loadingGuildId: s
                    } = this.state;
                    return (0, a.jsx)(B.default, {
                        loadId: this.loadId,
                        title: K.default.Messages.GUILD_DISCOVERY_POPULAR_HEADER,
                        guildsData: e[n],
                        loadingGuildId: s,
                        analyticsContext: b.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, C.fetchPopularGuildsForCategory)(n),
                        currentCategoryId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, b.AnalyticsContexts.POPULAR)
                    })
                }
                render() {
                    var e, t;
                    let {
                        currentCategoryName: n,
                        mostRecentQuery: l,
                        currentCategoryId: r,
                        guilds: u
                    } = this.props, d = l.length > 0;
                    U.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_3"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: f
                    } = U.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_4"
                    }, {
                        autoTrackExposure: !1
                    }), h = r === Y.DISCOVERY_ALL_CATEGORIES_ID ? null === (e = u[W.GuildDiscoverySections.FEATURED]) || void 0 === e ? void 0 : e.guilds : null === (t = u[r]) || void 0 === t ? void 0 : t.guilds;
                    if (r === Y.DISCORD_HUB_ID) return (0, a.jsx)(T.default, {
                        loadId: this.loadId
                    });
                    let C = r === Y.DISCOVERY_ALL_CATEGORIES_ID ? K.default.Messages.GUILD_DISCOVERY_HOME_TITLE : K.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                        categoryName: n
                    });
                    return (0, a.jsxs)("div", {
                        className: z.pageWrapper,
                        children: [(0, a.jsx)(I.AppPageTitle, {
                            subsection: d ? l : void 0,
                            location: C
                        }), (0, a.jsx)("div", {
                            className: i()(z.dragRegion, z.pageHeaderDrag, {
                                [z.searchPageDrag]: d
                            })
                        }), c.isMobile && (0, a.jsx)(x.default, {
                            children: (0, a.jsx)(s.Fragment, {})
                        }), (0, a.jsx)(E.AdvancedScrollerAuto, {
                            className: z.scroller,
                            ref: this._scroller,
                            onScroll: this.handleScroll,
                            children: (0, a.jsx)("div", {
                                className: i()(z.viewWrapper, {
                                    [z.searchPage]: d
                                }),
                                children: d ? this.renderSearchResults() : (0, a.jsxs)(E.HeadingLevel, {
                                    forceLevel: 1,
                                    component: (0, a.jsxs)("div", {
                                        className: z.searchHeader,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            className: z.headerImage,
                                            src: Q
                                        }), (0, a.jsx)("div", {
                                            className: z.headerContentWrapper,
                                            children: (0, a.jsxs)("div", {
                                                className: z.headerContent,
                                                children: [(0, a.jsx)(E.Heading, {
                                                    variant: "heading-xl/semibold",
                                                    className: z.searchTitle,
                                                    children: r === Y.DISCOVERY_ALL_CATEGORIES_ID ? K.default.Messages.GUILD_DISCOVERY_HOME_TITLE : K.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                                                        categoryName: n
                                                    })
                                                }), (0, a.jsx)(E.Text, {
                                                    variant: "text-md/normal",
                                                    className: z.searchSubtitle,
                                                    children: r === Y.DISCOVERY_ALL_CATEGORIES_ID && K.default.Messages.GUILD_DISCOVERY_HOME_SUBTITLE
                                                }), this.renderSearchBar(), f && (0, a.jsx)(V.DiscoveryTags, {
                                                    hideOverflow: !0,
                                                    section: b.AnalyticsContexts.HEADER,
                                                    className: z.headerTagContainer,
                                                    discoveryTagStyle: V.DiscoveryTagStyle.LIGHT,
                                                    onTagClick: e => this.handleTagSearch(e, void 0, b.AnalyticsContexts.HEADER),
                                                    tags: o().chain(h).flatMap(e => e.keywords).compact().uniq().sampleSize(10).value()
                                                })]
                                            })
                                        })]
                                    }),
                                    children: [(0, a.jsx)("div", {
                                        className: z.__invalid_featuredBody,
                                        children: r === Y.DISCOVERY_ALL_CATEGORIES_ID ? this.renderRecommendedGuildsSection() : this.renderPopularGuildsSection()
                                    }), (0, a.jsxs)("div", {
                                        className: z.footer,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            src: q,
                                            className: z.footerImage
                                        }), (0, a.jsx)(E.Heading, {
                                            variant: "heading-md/semibold",
                                            children: K.default.Messages.GUILD_DISCOVERY_CATEGORY_FOOTER_TITLE
                                        }), (0, a.jsx)(E.Button, {
                                            look: E.Button.Looks.LINK,
                                            color: E.Button.Colors.LINK,
                                            size: E.Button.Sizes.MIN,
                                            onClick: this.scrollToTop,
                                            children: K.default.Messages.GUILD_DISCOVERY_FOOTER_BODY
                                        })]
                                    })]
                                })
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), Z(this, "_scroller", s.createRef()), Z(this, "_guildIdsSeen", new Set), Z(this, "loadId", (0, j.makeAnalyticsID)()), Z(this, "state", {
                        animatedValue: new d.default.Value(0),
                        loadingGuildId: null
                    }), Z(this, "scrollToTop", () => {
                        null != this._scroller.current && this._scroller.current.scrollTo({
                            to: 0
                        })
                    }), Z(this, "handleScroll", () => {
                        var e, t;
                        let {
                            animatedValue: n
                        } = this.state, a = null !== (t = null === (e = this._scroller.current) || void 0 === e ? void 0 : e.getScrollerState().scrollTop) && void 0 !== t ? t : 0;
                        n.setValue(Math.min(1, a / 200))
                    }), Z(this, "handleViewGuild", async (e, t, n, a) => {
                        var s, l;
                        let {
                            currentCategoryId: i
                        } = this.props, {
                            loadingGuildId: r
                        } = this.state;
                        if (e === r) return;
                        let o = null !== (l = null === (s = this._scroller.current) || void 0 === s ? void 0 : s.getScrollerState().scrollTop) && void 0 !== l ? l : 0,
                            {
                                location: u
                            } = (0, v.getHistory)();
                        (0, v.replaceWith)({
                            ...u,
                            state: o
                        }), this.setState({
                            loadingGuildId: e
                        });
                        let d = i !== Y.DISCOVERY_ALL_CATEGORIES_ID ? i : null;
                        try {
                            await b.viewGuild({
                                loadId: null != a ? a : this.loadId,
                                guildId: e,
                                index: t,
                                analyticsContext: n,
                                categoryId: d
                            })
                        } catch (e) {
                            this.setState({
                                loadingGuildId: null
                            })
                        }
                    }), Z(this, "handleGuildCardSeen", e => {
                        this._guildIdsSeen.add(e)
                    }), Z(this, "handleTagSearch", (e, t, n) => {
                        let {
                            currentCategoryId: a,
                            defaultLanguage: s
                        } = this.props;
                        if (null == a) return;
                        let l = {
                            approximate_member_count: b.MINIMUM_MEMBER_COUNT
                        };
                        (0, C.getSearchResultsCount)(e, l), (0, C.doAlgoliaSearch)(e, {
                            filters: l,
                            categoryId: a,
                            preferredLocale: s.code,
                            offset: 0,
                            length: F.MAX_GUILDS_PER_PAGE,
                            tag: !0
                        }), b.trackTagSearchStarted(this.loadId, a, n, t), this.scrollToTop()
                    })
                }
            }
            let J = f.default.connectStores([L.default, O.default, D.default, P.default, y.default, w.default, M.default], () => {
                var e;
                let t = Y.LANGUAGE_OPTIONS,
                    n = O.default.locale,
                    a = null !== (e = o().find(t, {
                        code: n
                    })) && void 0 !== e ? e : t[0],
                    s = Object.keys(D.default.applicationStatistics),
                    l = P.default.hasConsented(W.Consents.PERSONALIZATION) && s.length > 0,
                    i = y.default.getCurrentCategoryId(),
                    r = y.default.getCurrentHomepageCategoryId();
                return {
                    isFetching: y.default.isFetching(),
                    isFetchingSearch: y.default.isFetchingSearch(),
                    guilds: y.default.getDiscoverableGuilds(),
                    mostRecentQuery: y.default.getMostRecentQuery(),
                    currentCategoryId: i,
                    currentHomepageCategoryId: r,
                    currentCategoryName: w.default.getCategoryName(i),
                    categories: w.default.getDiscoveryCategories(),
                    userGuilds: M.default.getGuilds(),
                    theme: L.default.theme,
                    mightHaveGamesYouPlay: l,
                    availableLanguages: t,
                    defaultLanguage: a
                }
            })(X);

            function $(e) {
                let {
                    searchRoute: t
                } = e, {
                    fetching: n,
                    loadId: s,
                    recommendedGuilds: l
                } = (0, f.useStateFromStoresObject)([g.default], () => ({
                    recommendedGuilds: g.default.getRecommendedGuilds(),
                    loadId: g.default.getLoadId(),
                    fetching: g.default.isFetching()
                }));
                return (0, a.jsx)(J, {
                    searchRoute: t,
                    fetchingRecommendations: n,
                    usingGameRecommendations: !1,
                    recommendationsGuilds: l,
                    recommendationsLoadId: s
                })
            }
            t.default = function(e) {
                let {
                    searchRoute: t
                } = e, {
                    guilds: n
                } = (0, p.useClanPrepilotExperimentForAllGuilds)({
                    location: "guild_discovery",
                    includeConverted: !0
                }), s = n.length > 0, {
                    clanDiscoveryEnabled: l
                } = (0, p.useClanPilotExperiment)("guild_discovery"), i = (0, f.useStateFromStores)([y.default], () => y.default.getCurrentCategoryId()), r = (0, f.useStateFromStores)([y.default], () => y.default.getIsReady()), o = (0, N.default)(S.default.QUEST_HOME_PAGE);
                return (s || l) && (!r || i === Y.CategoryId.Clans) ? (0, a.jsx)(k.default, {}) : o && i === Y.CategoryId.Quests ? (0, a.jsx)(A.default, {}) : (0, a.jsx)($, {
                    searchRoute: t
                })
            }
        },
        668940: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("212093"),
                r = n("100527"),
                o = n("963202"),
                u = n("677277"),
                d = n("285865"),
                c = n("702428"),
                f = n("709158"),
                E = n("683301"),
                h = n("150192"),
                C = n("889010"),
                _ = n("488905"),
                m = n("347137"),
                S = n("731455"),
                p = n("689938");
            let I = e => {
                    switch (e) {
                        case S.CategoryId.Activity:
                            return S.CategoryIcons.Activity;
                        case S.CategoryId.Music:
                            return S.CategoryIcons.Music;
                        case S.CategoryId.Television:
                            return S.CategoryIcons.Television;
                        case S.CategoryId.Science:
                            return S.CategoryIcons.Science;
                        case S.CategoryId.Education:
                            return S.CategoryIcons.Education;
                        default:
                            return S.CategoryIcons.Discover
                    }
                },
                g = () => {
                    let {
                        currentCategoryId: e,
                        isViewingSearchResults: t
                    } = (0, s.useStateFromStoresObject)([E.default], () => ({
                        currentCategoryId: E.default.getCurrentCategoryId(),
                        isViewingSearchResults: E.default.getMostRecentQuery().length > 0
                    })), n = (0, f.default)(r.default.QUEST_HOME_PAGE), o = (0, s.useStateFromStores)([h.default], () => h.default.getDiscoveryCategories(), [], h.areDiscoveryCategoriesEqual), m = null == o ? void 0 : o.map(e => ({
                        ...e,
                        icon: I(e.categoryId)
                    })), g = e => {
                        (0, i.selectCategory)(e, !0), d.default.closeSidebar(), t && (0, i.clearSearch)()
                    };
                    return (0, a.jsxs)(l.Scroller, {
                        children: [(0, a.jsx)(_.DiscoverySidebarHeader, {
                            text: p.default.Messages.DISCOVER
                        }), (0, a.jsx)(C.default, {
                            categories: m,
                            handleCategorySelect: g,
                            currentCategoryId: e,
                            shouldDisplaySelectedCategory: !t
                        }), (0, a.jsx)(u.default, {
                            handleCategorySelect: g,
                            currentCategoryId: e,
                            shouldDisplaySelectedCategory: !t
                        }), n && (0, a.jsx)(c.default, {
                            onClick: () => g(S.CategoryId.Quests),
                            isSelected: e === S.CategoryId.Quests
                        })]
                    })
                };
            t.default = function() {
                let {
                    guilds: e
                } = (0, o.useClanPrepilotExperimentForAllGuilds)({
                    location: "guild_discovery_sidebar",
                    includeConverted: !0
                }), t = e.length > 0, {
                    clanDiscoveryEnabled: n
                } = (0, o.useClanPilotExperiment)("guild_discovery_sidebar");
                return t || n ? (0, a.jsx)(m.default, {}) : (0, a.jsx)(g, {})
            }
        },
        455839: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildDiscoveryMenuPopout: function() {
                    return _
                },
                default: function() {
                    return C
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("239091"),
                r = n("299206"),
                o = n("726521"),
                u = n("430824"),
                d = n("496675"),
                c = n("795295"),
                f = n("556017"),
                E = n("981631"),
                h = n("689938");

            function C(e) {
                let {
                    guild: t,
                    shiftId: n,
                    onSelect: C,
                    closePopout: _,
                    "aria-label": m
                } = e, S = (0, r.default)({
                    id: t.id,
                    label: h.default.Messages.COPY_ID_GUILD,
                    shiftId: n,
                    onSuccess: _
                }), p = (0, s.useStateFromStores)([u.default], () => u.default.getGuild(t.id), [t.id]), I = (0, s.useStateFromStores)([d.default], () => d.default.can(E.Permissions.ADMINISTRATOR, p)), {
                    canSeeInAppReportingButtons: g
                } = f.DiscoveryInAppReportingExperiment.useExperiment({
                    location: "0e35b9_1"
                }, {
                    autoTrackExposure: !1
                }), T = () => {
                    (0, i.closeContextMenu)(), null == _ || _()
                };
                return (0, a.jsxs)(l.Menu, {
                    onSelect: C,
                    navId: "guild-discovery-context-menu",
                    "aria-label": null != m ? m : h.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onClose: i.closeContextMenu,
                    children: [(0, a.jsx)(l.MenuGroup, {
                        children: !I && g ? (0, a.jsx)(l.MenuItem, {
                            id: "report-guild-discovery-listing",
                            label: h.default.Messages.REPORT_SERVER_NO_NAME,
                            action: () => {
                                (0, o.showReportModalForDiscoverableGuild)(t), T()
                            },
                            icon: c.default,
                            color: "danger"
                        }) : null
                    }), (0, a.jsx)(l.MenuGroup, {
                        children: S
                    })]
                })
            }
            let _ = e => {
                let {
                    guild: t,
                    children: n,
                    onRequestOpen: s,
                    onRequestClose: i
                } = e;
                return (0, a.jsx)(l.Popout, {
                    onRequestOpen: s,
                    onRequestClose: i,
                    animation: l.Popout.Animation.NONE,
                    position: "bottom",
                    spacing: 4,
                    align: "right",
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(C, {
                            guild: t,
                            closePopout: n
                        })
                    },
                    children: n
                })
            }
        },
        380009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("434404"),
                l = n("970731"),
                i = n("981631"),
                r = n("689938"),
                o = n("410646"),
                u = n("687351");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(l.default, {
                    header: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_TITLE,
                    content: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_DESCRIPTION,
                    asset: (0, a.jsx)("div", {
                        className: o.image,
                        children: (0, a.jsx)("img", {
                            alt: "",
                            src: u
                        })
                    }),
                    buttonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_ACCEPT,
                    onClick: e => {
                        var n;
                        n = t, s.default.open(n.id, i.GuildSettingsSections.DISCOVERY_LANDING_PAGE)
                    },
                    secondaryButtonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_DISMISS,
                    onSecondaryClick: () => {},
                    markAsDismissed: n
                })
            }
        },
        119317: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("664751"),
                i = n("481060"),
                r = n("703656");
            class o extends s.PureComponent {
                componentDidUpdate(e) {
                    let {
                        resetCurrentPage: t
                    } = this.props;
                    !e.resetCurrentPage && t && this.setState({
                        currentPage: 1
                    })
                }
                render() {
                    let {
                        totalCount: e,
                        pageSize: t,
                        maxVisiblePages: n,
                        children: s
                    } = this.props, {
                        currentPage: l
                    } = this.state;
                    return s({
                        controller: (0, a.jsx)(i.Paginator, {
                            totalCount: e,
                            pageSize: t,
                            currentPage: l,
                            maxVisiblePages: n,
                            onPageChange: this.handlePageChange
                        })
                    })
                }
                constructor(e) {
                    var t, n, a;
                    super(e), t = this, n = "handlePageChange", a = e => {
                        let {
                            onPageChange: t
                        } = this.props;
                        this.setState({
                            currentPage: e
                        }), null != t && t(e)
                    }, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a;
                    let s = (0, r.getHistory)().location.search,
                        {
                            offset: i
                        } = null != s && s.length > 0 && s.startsWith("?") ? l.parse(s) : {},
                        o = null != i ? Math.floor(parseInt(i, 10) / e.pageSize) + 1 : 1;
                    this.state = {
                        currentPage: o
                    }
                }
            }
            t.default = o
        },
        749436: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            }), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("120356"),
                r = n.n(i),
                o = n("392711"),
                u = n.n(o),
                d = n("442837"),
                c = n("481060"),
                f = n("212093"),
                E = n("683301"),
                h = n("626135"),
                C = n("585483"),
                _ = n("900849"),
                m = n("878727"),
                S = n("117496"),
                p = n("150192"),
                I = n("731455"),
                g = n("981631"),
                T = n("689938"),
                A = n("195047");

            function N(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let v = u().throttle(_.trackSearchResultsViewed, 1e3, {
                    leading: !1,
                    trailing: !0
                }),
                R = e => {
                    let {
                        isSelected: t,
                        onCategoryChange: n,
                        categoryId: a,
                        name: l,
                        count: i
                    } = e;
                    return (0, s.jsx)(c.Clickable, {
                        onClick: () => n(a),
                        className: r()(A.categoryPill, {
                            [A.selected]: t
                        }),
                        children: (0, s.jsx)(c.Text, {
                            className: A.categoryLabel,
                            variant: "text-sm/normal",
                            children: null != i ? "".concat(l, " (").concat(i, ")") : l
                        })
                    })
                };
            class O extends(a = l.PureComponent) {
                componentDidMount() {
                    let {
                        loadId: e,
                        searchResults: t,
                        currentCategoryId: n
                    } = this.props, {
                        searchId: a,
                        query: s,
                        isHandlingTagSearch: l
                    } = this.state, i = this.context;
                    if (null == E.default.getSearchIndex() && f.createAlgoliaIndex(), C.ComponentDispatch.subscribe(g.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), C.ComponentDispatch.subscribe(g.ComponentActions.TEXTAREA_FOCUS, this.focusInput), s.length > 0) {
                        let r = n !== I.DISCOVERY_ALL_CATEGORIES_ID ? n : null;
                        v({
                            loadId: e,
                            searchId: a,
                            query: s,
                            guildResults: t.guilds,
                            analyticsContext: i,
                            categoryId: r,
                            isTagSearch: l
                        })
                    }
                }
                componentDidUpdate(e, t) {
                    let {
                        loadId: n,
                        isFetchingSearch: a,
                        searchResults: s,
                        currentCategoryId: l,
                        mostRecentQuery: i
                    } = this.props, {
                        isSearching: r,
                        searchId: o,
                        query: u,
                        isHandlingTagSearch: d
                    } = this.state, c = this.context, f = e.isFetchingSearch && !a, E = l !== I.DISCOVERY_ALL_CATEGORIES_ID ? l : null;
                    (r || d) && f && (v({
                        loadId: n,
                        searchId: o,
                        query: u,
                        guildResults: s.guilds,
                        analyticsContext: c,
                        categoryId: E,
                        isTagSearch: d
                    }), this.setState({
                        isHandlingTagSearch: !1
                    })), !t.isSearching && r && _.trackSearchStarted(n, E, c), e.mostRecentQuery !== i && this.setState({
                        query: i,
                        searchId: (0, S.makeAnalyticsID)(),
                        isHandlingTagSearch: !0
                    })
                }
                componentWillUnmount() {
                    C.ComponentDispatch.unsubscribe(g.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), C.ComponentDispatch.unsubscribe(g.ComponentActions.TEXTAREA_FOCUS, this.focusInput)
                }
                renderSearchOptions() {
                    var e;
                    let {
                        availableLanguages: t
                    } = this.props, {
                        selectedLanguage: n
                    } = this.state;
                    if (null == t) return null;
                    let a = t.map(e => {
                        let {
                            name: t
                        } = e;
                        return {
                            label: t,
                            value: t
                        }
                    });
                    return (0, s.jsx)(c.SingleSelect, {
                        className: A.languageSelector,
                        options: a,
                        value: null !== (e = null == n ? void 0 : n.name) && void 0 !== e ? e : "",
                        onChange: this.handleLanguageChange,
                        maxVisibleItems: 6
                    })
                }
                renderCategories() {
                    let {
                        currentCategoryId: e,
                        countsByCategory: t
                    } = this.props;
                    return (0, s.jsx)("div", {
                        className: A.categories,
                        children: null == t ? void 0 : t.map(t => {
                            let [n, a] = t;
                            return (0, s.jsx)(R, {
                                categoryId: n,
                                name: n === I.DISCOVERY_ALL_CATEGORIES_ID ? T.default.Messages.GUILD_DISCOVERY_ALL_CATEGORY_FILTER : p.default.getCategoryName(n),
                                onCategoryChange: this.handleCategoryChange,
                                isSelected: e === n,
                                count: a
                            }, n)
                        })
                    })
                }
                render() {
                    let {
                        query: e,
                        inputFocused: t
                    } = this.state, {
                        placeholder: n,
                        isSearchPage: a
                    } = this.props;
                    return (0, s.jsxs)(s.Fragment, {
                        children: [(0, s.jsxs)("div", {
                            className: r()(A.container, {
                                [A.searchPage]: a
                            }),
                            children: [(0, s.jsx)("div", {
                                className: A.search,
                                children: (0, s.jsx)(c.SearchBox, {
                                    ref: this._searchRef,
                                    searchTerm: e,
                                    className: a ? void 0 : A.searchBox,
                                    inputClassName: a ? void 0 : A.searchBoxInput,
                                    closeIconClassName: a ? void 0 : A.closeIcon,
                                    searchIconClassName: a ? void 0 : A.searchIcon,
                                    label: T.default.Messages.GUILD_DISCOVERY_SEARCH_LABEL,
                                    placeholder: n,
                                    onChange: this.handleQueryChanged,
                                    onClear: this.handleQueryCleared,
                                    onFocus: this.handleFocus,
                                    onBlur: this.handleSearchBlurred,
                                    onKeyPress: this.handleSearchKeyPress,
                                    autoFocus: !a,
                                    cta: t && null != e && e.length > 1 ? T.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA : null
                                })
                            }), a ? this.renderSearchOptions() : null]
                        }), a ? this.renderCategories() : null]
                    })
                }
                constructor(e) {
                    super(e), N(this, "_searchRef", l.createRef()), N(this, "canSearch", e => e.trim().length >= 2 && !(0, m.searchQueryContainsBannedWord)(e)), N(this, "doSearch", (e, t, n, a) => {
                        var s;
                        let {
                            defaultLanguage: l,
                            currentCategoryId: i
                        } = this.props, {
                            query: r,
                            selectedLanguage: o
                        } = this.state, u = {
                            approximate_member_count: _.MINIMUM_MEMBER_COUNT
                        };
                        a && f.getSearchResultsCount(r, u), this.setState({
                            searchId: (0, S.makeAnalyticsID)(),
                            queryHasChanged: !1,
                            isSearching: !0
                        }), f.doAlgoliaSearch(r, {
                            categoryId: null == n ? i : n,
                            preferredLocale: null !== (s = null == o ? void 0 : o.code) && void 0 !== s ? s : l.code,
                            offset: e,
                            length: t,
                            filters: u
                        })
                    }), N(this, "handleSearchBlurred", e => {
                        let {
                            onSearchBlur: t
                        } = this.props;
                        this.setState({
                            inputFocused: !1
                        }), null == t || t()
                    }), N(this, "handleSearchKeyPress", e => {
                        let {
                            query: t,
                            queryHasChanged: n
                        } = this.state, {
                            loadId: a,
                            currentCategoryId: s
                        } = this.props, l = s !== I.DISCOVERY_ALL_CATEGORIES_ID ? s : null;
                        this.canSearch(t) && n && e.charCode === g.KeyboardKeys.ENTER ? (_.trackSearchStarted(a, l), this.doSearch(0, 12, void 0, !0)) : 0 === t.length && e.charCode === g.KeyboardKeys.ENTER && this.setState({
                            isSearching: !1
                        })
                    }), N(this, "handleQueryChanged", e => {
                        this.setState({
                            query: e,
                            queryHasChanged: !0
                        })
                    }), N(this, "handleQueryCleared", () => {
                        this.setState({
                            query: "",
                            queryHasChanged: !0,
                            isSearching: !1
                        })
                    }), N(this, "handleLanguageChange", e => {
                        let {
                            mostRecentQuery: t,
                            availableLanguages: n
                        } = this.props, a = null == n ? void 0 : n.find(t => t.name === e);
                        this.setState({
                            selectedLanguage: a
                        }, () => {
                            this.canSearch(t) && this.doSearch(0, 12)
                        })
                    }), N(this, "handleCategoryChange", e => {
                        let {
                            mostRecentQuery: t
                        } = this.props;
                        f.selectCategory(e), this.canSearch(t) && this.doSearch(0, 12, e)
                    }), N(this, "handleFocus", () => {
                        let {
                            onSearchFocus: e
                        } = this.props;
                        this.setState({
                            inputFocused: !0
                        }), null == e || e()
                    }), N(this, "focusInput", () => {
                        var e;
                        null === (e = this._searchRef.current) || void 0 === e || e.focus()
                    }), this.state = {
                        searchId: (0, S.makeAnalyticsID)(),
                        query: e.isSearchPage ? e.mostRecentQuery : "",
                        queryHasChanged: !1,
                        isSearching: !1,
                        selectedLanguage: e.defaultLanguage,
                        inputFocused: !1,
                        isHandlingTagSearch: e.isTagSearch || !1
                    }
                }
            }

            function L(e) {
                let t = (0, d.useStateFromStores)([p.default], () => p.default.getDiscoveryCategories(), [], p.areDiscoveryCategoriesEqual),
                    n = (0, d.useStateFromStores)([E.default], () => E.default.getTopCategoryCounts(e.mostRecentQuery));
                return (0, s.jsx)(O, {
                    ...e,
                    categories: t,
                    countsByCategory: n
                })
            }
            N(O, "contextType", void 0), O.contextType = h.AnalyticsContext
        },
        26580: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagStyle: function() {
                    return _
                },
                DiscoveryTags: function() {
                    return m
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("393238"),
                u = n("626135"),
                d = n("981631"),
                c = n("804428");
            let f = ["egirl", "egirls", "waifu", "dating", "nsfw", "sex", "playboy", "stupid", "harem", "playgirl", "shitcoin", "shitpost", "porno", "nudes", "sexy", "horny", "fart", "tits", "balls", "cum"],
                E = e => {
                    let {
                        text: t,
                        onClick: n,
                        className: s,
                        hide: l
                    } = e;
                    return (0, a.jsx)("li", {
                        className: i()(c.tag, s, {
                            [c.hide]: l
                        }),
                        children: (0, a.jsx)(r.Clickable, {
                            className: c.tagText,
                            onClick: e => {
                                e.stopPropagation(), e.preventDefault(), n(e)
                            },
                            children: t
                        })
                    })
                },
                h = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        guildId: l,
                        section: i
                    } = e;
                    return s.useEffect(() => {
                        u.default.track(d.AnalyticEvents.OPEN_POPOUT, {
                            type: "Discovery Tags Overflow",
                            guild_id: l,
                            location: {
                                page: d.AnalyticsPages.GUILD_DISCOVERY,
                                section: i
                            }
                        })
                    }, [l, i]), (0, a.jsx)(r.Dialog, {
                        className: c.overflowTagsPopout,
                        children: (0, a.jsx)("ul", {
                            children: t.map(e => (0, a.jsx)(E, {
                                onClick: () => n(e),
                                className: c.tagAlt,
                                text: e
                            }, e))
                        })
                    })
                },
                C = e => {
                    let {
                        className: t,
                        count: n
                    } = e;
                    return (0, a.jsx)(r.Popout, {
                        renderPopout: () => (0, a.jsx)(h, {
                            ...e
                        }),
                        position: "right",
                        align: "top",
                        closeOnScroll: !0,
                        children: e => (0, a.jsx)(E, {
                            className: t,
                            ...e,
                            text: "+".concat(n)
                        })
                    })
                },
                _ = {
                    DEFAULT: c.tagDefault,
                    LIGHT: c.tagLight,
                    ALT: c.tagAlt
                },
                m = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        className: l,
                        discoveryTagStyle: r = _.DEFAULT,
                        hideOverflow: u = !1,
                        guildId: d,
                        section: h
                    } = e, {
                        ref: m,
                        width: S
                    } = (0, o.default)(), [p, I] = s.useState(null), g = t.filter(e => !f.includes(e.toLowerCase()));
                    return s.useLayoutEffect(() => {
                        if (null == m.current || null == S || 0 === S) return;
                        let e = 0,
                            t = 0,
                            n = S - 40 - 4;
                        for (let a = 0; a < g.length && (t += m.current.children[a].clientWidth + 4, a === g.length - 1 ? !(t > n + 40) : !(t > n)); a++) {
                            ;
                            e++
                        }
                        I(t => e <= g.length ? e : t)
                    }, [S, m, g]), (0, a.jsxs)("ul", {
                        ref: m,
                        className: i()(c.tagContainer, l, {
                            [c.invisible]: null == p
                        }),
                        children: [g.map((e, t) => (0, a.jsx)(E, {
                            className: r,
                            onClick: () => n(e),
                            hide: null != p && t >= p,
                            text: e
                        }, e)), !u && null != p && p < g.length && (0, a.jsx)(C, {
                            className: r,
                            onTagClick: n,
                            tags: g.slice(p),
                            count: g.length - p,
                            guildId: d,
                            section: h
                        })]
                    })
                }
        },
        282051: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("946314"),
                r = n("921944"),
                o = n("689938"),
                u = n("100982");

            function d(e) {
                let {
                    onClick: t,
                    onSecondaryClick: n,
                    onComponentMount: d,
                    markAsDismissed: c
                } = e;
                s.useEffect(() => {
                    null == d || d()
                }, [d]);
                let f = s.useCallback(e => {
                        t(e), null == c || c(r.ContentDismissActionType.PRIMARY)
                    }, [t, c]),
                    E = s.useCallback(() => {
                        null == n || n(), null == c || c(r.ContentDismissActionType.SECONDARY)
                    }, [n, c]);
                return (0, a.jsxs)("div", {
                    className: u.tooltipWrapper,
                    children: [(0, a.jsx)(l.Heading, {
                        className: u.tooltipHeader,
                        variant: "heading-md/semibold",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_TITLE
                    }), (0, a.jsx)(l.Text, {
                        className: u.tooltipText,
                        variant: "text-sm/normal",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_DESCRIPTION.format({
                            count: i.LOWERED_MINIMUM_SIZE
                        })
                    }), (0, a.jsxs)("div", {
                        className: u.buttonsContainer,
                        children: [(0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            color: l.Button.Colors.BRAND,
                            onClick: f,
                            children: o.default.Messages.LEARN_MORE
                        }), (0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            look: l.Button.Looks.BLANK,
                            onClick: E,
                            children: o.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        650394: function(e, t, n) {
            "use strict";
            n.r(t), n("653041"), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("920906"),
                r = n("788322"),
                o = n("59415");

            function u(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class d extends(a = l.PureComponent) {
                renderPlaceholders() {
                    let {
                        loadingPlaceholderCount: e
                    } = this.props, t = [];
                    for (let n = 0; n < e; n++) t.push((0, s.jsx)(r.DiscoverSearchResultPlaceholder, {}, n));
                    return t
                }
                render() {
                    let {
                        guilds: e,
                        loading: t
                    } = this.props;
                    return (0, s.jsx)(i.Spring, {
                        from: {
                            opacity: t ? 0 : 1
                        },
                        to: {
                            opacity: 1
                        },
                        delay: 100,
                        children: n => (0, s.jsx)(i.animated.div, {
                            className: o.guildList,
                            style: n,
                            children: t || null == e ? this.renderPlaceholders() : e.map(this.renderGuild)
                        })
                    })
                }
                constructor(...e) {
                    super(...e), u(this, "handleViewGuild", async e => {
                        let {
                            guilds: t,
                            analyticsContext: n,
                            onViewGuild: a
                        } = this.props, s = t.findIndex(t => t.id === e);
                        await a(e, s, n)
                    }), u(this, "renderGuild", (e, t) => {
                        let {
                            theme: n,
                            onTagClick: a
                        } = this.props;
                        return (0, s.jsx)(r.default, {
                            guild: e,
                            theme: n,
                            onView: this.handleViewGuild,
                            onTagClick: a
                        }, t)
                    })
                }
            }
            u(d, "defaultProps", {
                loadingPlaceholderCount: 12
            }), t.default = d
        },
        788322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverSearchResultPlaceholder: function() {
                    return R
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("239091"),
                u = n("906732"),
                d = n("134432"),
                c = n("451603"),
                f = n("885714"),
                E = n("940627"),
                h = n("806519"),
                C = n("768581"),
                _ = n("900849"),
                m = n("556017"),
                S = n("879484"),
                p = n("26580"),
                I = n("206887"),
                g = n("981631"),
                T = n("689938"),
                A = n("283434"),
                N = n("129512"),
                v = n("330065");
            let R = () => (0, a.jsx)("div", {
                className: A.placeholder
            });
            t.default = e => {
                var t;
                let {
                    guild: l,
                    theme: R,
                    onView: O,
                    onTagClick: L
                } = e, {
                    id: P,
                    discoverySplash: y,
                    icon: M,
                    name: D,
                    description: x,
                    presenceCount: b,
                    memberCount: U,
                    keywords: j
                } = l, [G, w] = s.useState(!1), [k, B] = s.useState(!1), {
                    analyticsLocations: F
                } = (0, u.default)(), H = C.default.getGuildDiscoverySplashURL({
                    id: P,
                    splash: y,
                    size: 240 * (0, d.getDevicePixelRatio)()
                }), V = null != H ? H : function(e) {
                    switch (e) {
                        case g.ThemeTypes.DARK:
                            return N;
                        case g.ThemeTypes.LIGHT:
                            return v
                    }
                }(R), Y = null !== (t = C.default.getGuildIconURL({
                    id: P,
                    icon: M,
                    size: 32
                })) && void 0 !== t ? t : void 0, W = async e => {
                    let {
                        className: t
                    } = e.target;
                    if (!t.includes("Menu")) {
                        if ((0, c.isAtGuildCapAndNonPremium)()) {
                            (0, f.default)({
                                analyticsSource: {
                                    page: g.AnalyticsPages.GUILD_DISCOVERY
                                },
                                analyticsLocation: {
                                    page: g.AnalyticsPages.GUILD_DISCOVERY,
                                    section: g.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                                },
                                analyticsLocations: F
                            });
                            return
                        }
                        B(!0);
                        try {
                            null != O && await O(l.id)
                        } finally {
                            B(!1)
                        }
                    }
                };
                s.useEffect(() => S.DiscoveryTagsExperiment.trackExposure({
                    location: "4302e4_1"
                }));
                let {
                    shouldDisplayTags: K
                } = S.DiscoveryTagsExperiment.useExperiment({
                    location: "4302e4_2"
                }, {
                    autoTrackExposure: !1
                }), z = (0, m.useCanSeeDiscoveryContextMenu)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: A.card,
                        children: [k ? (0, a.jsx)(r.Spinner, {
                            type: r.Spinner.Type.PULSING_ELLIPSIS,
                            className: A.spinner
                        }) : null, (0, a.jsxs)(r.Clickable, {
                            className: i()(A.container, {
                                [A.hover]: G,
                                [A.submitting]: k
                            }),
                            onClick: W,
                            onContextMenu: e => {
                                (0, o.openContextMenuLazy)(e, async () => {
                                    let {
                                        default: e
                                    } = await Promise.resolve().then(n.bind(n, "455839"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        guild: l
                                    })
                                })
                            },
                            onMouseEnter: () => w(!0),
                            onMouseLeave: () => w(!1),
                            children: [(0, a.jsx)("div", {
                                className: i()(A.splashContainer, {
                                    [A.splashContainerWithTags]: K
                                }),
                                children: (0, a.jsx)("img", {
                                    src: V,
                                    alt: "",
                                    className: A.splashImage,
                                    width: 240
                                })
                            }), (0, a.jsxs)("div", {
                                className: i()(A.content, {
                                    [A.contentWithTags]: K
                                }),
                                children: [(0, a.jsxs)("div", {
                                    className: A.header,
                                    children: [(0, a.jsx)(h.default, {
                                        mask: h.default.Masks.SQUIRCLE,
                                        width: 32,
                                        height: 32,
                                        children: (0, a.jsx)("img", {
                                            src: Y,
                                            alt: "",
                                            className: A.avatar
                                        })
                                    }), (0, a.jsxs)("div", {
                                        className: A.headerName,
                                        children: [(0, a.jsx)("div", {
                                            children: (0, a.jsx)(E.default, {
                                                guild: l,
                                                className: A.guildBadge,
                                                size: 16
                                            })
                                        }), (0, a.jsx)(r.Heading, {
                                            variant: "heading-md/semibold",
                                            className: A.headerTitle,
                                            children: D
                                        })]
                                    })]
                                }), (0, a.jsx)(r.Text, {
                                    className: A.description,
                                    variant: "text-sm/normal",
                                    children: x
                                }), K && null != j && null != L && (0, a.jsx)(p.DiscoveryTags, {
                                    guildId: l.id,
                                    discoveryTagStyle: p.DiscoveryTagStyle.ALT,
                                    onTagClick: e => L(e, l.id),
                                    tags: j,
                                    section: _.AnalyticsContexts.SEARCH
                                }), (0, a.jsxs)("div", {
                                    className: A.memberInfo,
                                    children: [null != b && (0, a.jsx)("div", {
                                        className: A.memberCount,
                                        children: (0, a.jsx)(r.Text, {
                                            variant: "text-xs/normal",
                                            color: "header-secondary",
                                            children: T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format({
                                                membersOnline: b
                                            })
                                        })
                                    }), null != U && (0, a.jsxs)(a.Fragment, {
                                        children: [(0, a.jsx)("div", {
                                            className: A.dotSeparator
                                        }), (0, a.jsx)("div", {
                                            className: A.memberCount,
                                            children: (0, a.jsx)(r.Text, {
                                                variant: "text-xs/normal",
                                                color: "header-secondary",
                                                children: T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format({
                                                    count: U
                                                })
                                            })
                                        })]
                                    })]
                                })]
                            }), z ? (0, a.jsx)("div", {
                                className: A.actionButtons,
                                children: (0, a.jsx)(I.default, {
                                    guild: l
                                })
                            }) : null]
                        })]
                    }), (0, a.jsx)("hr", {
                        className: A.separator
                    })]
                })
            }
        },
        206887: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("808268"),
                u = n("404975"),
                d = n("455839"),
                c = n("689938"),
                f = n("174598");
            t.default = function(e) {
                let {
                    guild: t
                } = e, [n, l] = s.useState(!1), E = s.useCallback(() => l(!0), [l]), h = s.useCallback(() => l(!0), [l]);
                return (0, a.jsx)("div", {
                    className: i()(f.actionButtonsContainer, {
                        [f.forceButtonsShow]: n
                    }),
                    children: (0, a.jsx)(u.default, {
                        children: (0, a.jsx)(d.GuildDiscoveryMenuPopout, {
                            onRequestOpen: E,
                            onRequestClose: h,
                            guild: t,
                            children: e => {
                                let {
                                    onClick: t,
                                    ...n
                                } = e;
                                return (0, a.jsx)(r.Tooltip, {
                                    text: c.default.Messages.MORE,
                                    hideOnClick: !0,
                                    children: e => {
                                        let {
                                            onClick: s,
                                            ...l
                                        } = e;
                                        return (0, a.jsx)(u.Button, {
                                            ...n,
                                            ...l,
                                            onClick: e => {
                                                e.stopPropagation(), null == s || s(), t(e)
                                            },
                                            "aria-label": c.default.Messages.MORE,
                                            children: (0, a.jsx)(o.default, {
                                                className: f.overflowIcon
                                            })
                                        })
                                    }
                                })
                            }
                        })
                    })
                })
            }
        },
        497189: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("920906"),
                o = n("143927"),
                u = n("903788"),
                d = n("625483"),
                c = n("388469"),
                f = n("442837"),
                E = n("484957"),
                h = n("481060"),
                C = n("749210"),
                _ = n("607070"),
                m = n("100527"),
                S = n("931240"),
                p = n("970606"),
                I = n("963202"),
                g = n("650461"),
                T = n("353093"),
                A = n("603839"),
                N = n("430824"),
                v = n("725568"),
                R = n("231467"),
                O = n("207796"),
                L = n("316553"),
                P = n("273254"),
                y = n("559469"),
                M = n("308083"),
                D = n("689938"),
                x = n("18712"),
                b = n("345480"),
                U = n("236613");
            let j = {
                mass: 1,
                tension: 600,
                friction: 60
            };

            function G(e) {
                let {
                    children: t
                } = e;
                return (0, a.jsxs)(r.animated.div, {
                    className: x.clanEnvelope,
                    children: [(0, a.jsx)("div", {
                        className: x.clanEnvelopeTop,
                        children: (0, a.jsx)("img", {
                            src: U,
                            alt: ""
                        })
                    }), t, (0, a.jsx)("div", {
                        className: x.clanEnvelopeBottom,
                        children: (0, a.jsx)("img", {
                            src: b,
                            alt: ""
                        })
                    })]
                })
            }

            function w(e) {
                let {
                    text: t,
                    icon: n
                } = e;
                return (0, a.jsxs)("div", {
                    className: x.upsellDetail,
                    children: [(0, a.jsx)(n, {
                        height: 24,
                        width: 24,
                        className: x.upsellIcon
                    }), (0, a.jsx)(h.Text, {
                        className: x.upsellDetailText,
                        variant: "text-md/medium",
                        children: t
                    })]
                })
            }

            function k(e) {
                let {
                    selectedGuildId: t,
                    setSelectedGuildId: n,
                    eligibleGuilds: l,
                    onButtonClick: r,
                    buttonText: f,
                    hasCompletedUpsell: C,
                    isBrowseButtonVisible: _
                } = e, m = (0, O.useClanDiscoveryUIStore)(e => e.setUserUpsellScreen, o.default), S = (0, O.useClanDiscoveryUIStore)(e => e.started, o.default), p = s.useMemo(() => l.map(e => ({
                    value: e.id,
                    label: e.name
                })), [l]), I = s.useCallback(() => {
                    (0, O.setClanDiscoveryMode)(O.ClanDiscoveryMode.DISCOVERY)
                }, []), g = s.useCallback(() => {
                    (0, O.setClanDiscoveryMode)(O.ClanDiscoveryMode.GET_STARTED), m(O.ClanDiscoveryUserScreens.USER_ONBOARDING)
                }, [m]), T = l.length > 1;
                return (0, a.jsxs)(a.Fragment, {
                    children: [C ? (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(h.Heading, {
                            className: x.upsellTitle,
                            variant: "heading-xxl/semibold",
                            children: D.default.Messages.CLAN_DISCOVERY_ADMIN_UPSELL_COMPLETE_TITLE
                        }), (0, a.jsx)(h.Heading, {
                            className: x.upsellSubtitle,
                            variant: "heading-md/medium",
                            color: "header-secondary",
                            children: D.default.Messages.CLAN_DISCOVERY_ADMIN_UPSELL_COMPLETE_SUBTITLE
                        })]
                    }) : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(h.Heading, {
                            className: x.upsellTitle,
                            variant: "heading-xxl/semibold",
                            children: [D.default.Messages.CLAN_DISCOVERY_UPSELL_CTA_GUILD_INVITE, (0, a.jsx)("br", {}), D.default.Messages.CLAN_DISCOVERY_UPSELL_CTA_RECRUIT]
                        }), (0, a.jsxs)("div", {
                            className: x.upsellDetails,
                            children: [(0, a.jsx)(w, {
                                icon: d.CompassIcon,
                                text: D.default.Messages.CLAN_DISCOVERY_UPSELL_VIBES_OR_SKILL
                            }), (0, a.jsx)(w, {
                                icon: u.CircleCheckIcon,
                                text: D.default.Messages.CLAN_DISCOVERY_UPSELL_APPLICATIONS
                            }), (0, a.jsx)(w, {
                                icon: c.GroupIcon,
                                text: D.default.Messages.CLAN_DISCOVERY_UPSELL_MAX_SIZE
                            })]
                        })]
                    }), (0, a.jsxs)("div", {
                        className: x.upsellButton,
                        children: [T && (0, a.jsx)(h.SearchableSelect, {
                            className: x.upsellSelect,
                            value: t,
                            options: p,
                            onChange: n
                        }), !C && (0, a.jsx)(h.Button, {
                            look: h.ButtonLooks.FILLED,
                            size: h.ButtonSizes.LARGE,
                            color: h.ButtonColors.BRAND,
                            className: i()(x.reserveButton, {
                                [x.buttonWithSelect]: T
                            }),
                            onClick: r,
                            children: (0, a.jsx)(h.Text, {
                                variant: "text-sm/medium",
                                color: "always-white",
                                children: f
                            })
                        }), T && _ && (0, a.jsx)("div", {
                            className: x.spacer,
                            children: "\xb7"
                        }), _ && (0, a.jsx)(h.Button, {
                            look: h.ButtonLooks.OUTLINED,
                            color: h.ButtonColors.PRIMARY,
                            className: x.browseButton,
                            onClick: g,
                            children: D.default.Messages.CLAN_DISCOVERY_UPSELL_BROWSE
                        })]
                    }), S && (0, a.jsx)("div", {
                        className: x.upsellStaticHeader,
                        children: (0, a.jsx)("div", {
                            className: x.upsellBackButton,
                            children: (0, a.jsx)(h.Clickable, {
                                onClick: I,
                                "aria-label": D.default.Messages.BACK,
                                children: (0, a.jsx)(E.ArrowLargeLeftIcon, {})
                            })
                        })
                    })]
                })
            }
            t.default = s.memo(function(e) {
                let {
                    eligibleGuilds: t,
                    eligibleGuildsIncludingConverted: n,
                    selectedGame: l,
                    isBrowseButtonVisible: i
                } = e, o = 0 === t.length, [u, d] = s.useState(() => {
                    let e = new Set(g.default.getGuildIds());
                    for (let n of t)
                        if (e.has(n.id)) return n.id;
                    return o ? n[0].id : t[0].id
                });
                s.useEffect(() => {
                    !o && (0, p.trackClanAdminInviteViewed)({
                        guildId: u,
                        location: m.default.CLAN_DISCOVERY
                    })
                }, [o, u]);
                let c = (0, f.useStateFromStores)([N.default], () => N.default.getGuild(u)),
                    E = (0, f.useStateFromStores)([g.default], () => null != u ? g.default.getStateForGuild(u).progress : null),
                    b = (0, L.useDiscoveryGameApplicationId)({
                        selectedGame: l
                    }),
                    {
                        defaultGameId: U
                    } = (0, I.useClanPrepilotExperimentForGuild)({
                        guild: c,
                        location: "ClanDiscoveryAdminUpsell",
                        includeConverted: !1
                    });
                s.useEffect(() => {
                    let e = U === M.VALORANT_ID ? O.ClanDiscoveryGame.VALORANT : U === M.GENSHIN_ID ? O.ClanDiscoveryGame.GENSHIN : void 0;
                    null != e && b !== U && O.useClanDiscoveryUIStore.getState().setGame(e)
                }, [U, b]);
                let w = s.useCallback(() => {
                        !o && ((0, p.trackClanAdminInviteClicked)({
                            guildId: u,
                            location: m.default.CLAN_DISCOVERY
                        }), (0, v.openFullScreenLayer)(e => {
                            let {
                                closeLayer: t
                            } = e;
                            return (0, a.jsx)(A.default, {
                                onClose: t,
                                guildId: u
                            })
                        }, {
                            layerKey: M.CLAN_SETUP_MODAL_LAYER_KEY
                        }))
                    }, [o, u]),
                    B = (0, f.useStateFromStores)([_.default], () => _.default.useReducedMotion),
                    F = (0, P.useFakeDiscoveryClanForGuild)({
                        guild: c,
                        selectedGame: l
                    }),
                    H = (0, y.useFakeDiscoveryUpsellClans)(b),
                    [V, Y] = s.useState(!0),
                    W = (0, r.useSpring)({
                        from: {
                            opacity: 0
                        },
                        to: {
                            opacity: 1
                        },
                        delay: 400,
                        config: {
                            duration: 0
                        }
                    }),
                    K = (0, r.useSpring)({
                        from: B ? {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        } : {
                            transform: "translate(324px, -56px) rotate(8deg) scale(1.25)"
                        },
                        to: {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        },
                        config: j,
                        delay: 400
                    }),
                    z = (0, r.useSpring)({
                        from: B ? {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        } : {
                            transform: "translate(176px, -24px) rotate(4deg) scale(1.1111)"
                        },
                        to: {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        },
                        config: j,
                        delay: 350
                    }),
                    q = (0, r.useSpring)({
                        from: B ? {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        } : {
                            transform: "translate(-176px, -24px) rotate(-4deg) scale(1.1111)"
                        },
                        to: {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        },
                        config: j,
                        delay: 350
                    }),
                    Q = (0, r.useSpring)({
                        from: B ? {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        } : {
                            transform: "translate(-324px, -56px) rotate(-8deg) scale(1.25)"
                        },
                        to: {
                            transform: "translate(0px, 0px) rotate(0deg) scale(1)"
                        },
                        config: j,
                        delay: 400
                    }),
                    Z = (0, r.useSpring)({
                        from: B ? {
                            transform: "scale(1)",
                            opacity: 0
                        } : {
                            transform: "scale(0.9)",
                            opacity: 0
                        },
                        to: {
                            transform: "scale(1)",
                            opacity: 1
                        },
                        config: j,
                        delay: 200
                    }),
                    X = (0, r.useSpring)({
                        from: B ? {
                            transform: "translateY(0px)"
                        } : {
                            transform: "translateY(240px)"
                        },
                        to: {
                            transform: "translateY(0px)"
                        },
                        config: j,
                        delay: 250,
                        onRest: () => Y(!1)
                    }),
                    J = s.useMemo(() => null == E ? D.default.Messages.CLAN_DISCOVERY_UPSELL_RESERVE : D.default.Messages.CLAN_DISCOVERY_UPSELL_CONTINUE_SETUP, [E]),
                    $ = s.useCallback(async () => {
                        await (0, S.joinWumpusFeedbackSquad)(u), C.default.transitionToGuildSync("936317138904440892")
                    }, [u]),
                    ee = s.useCallback(e => (0, a.jsx)(h.Clickable, {
                        tag: "span",
                        className: x.joinWFSLink,
                        onClick: $,
                        "aria-label": D.default.Messages.CLAN_DISCOVERY_UPSELL_JOIN_WFS_ARIA_LABEL,
                        children: (0, a.jsx)(h.Text, {
                            tag: "span",
                            variant: "text-xs/medium",
                            color: "text-brand",
                            children: e
                        })
                    }), [$]);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: x.cardsContainer,
                        children: [(0, a.jsx)(r.animated.div, {
                            className: x.clanCardOuterContainer,
                            style: {
                                ...K,
                                ...W
                            },
                            children: (0, a.jsx)(R.ClanDiscoveryCardView, {
                                clan: H[0],
                                className: x.clanCardOuterLeft
                            })
                        }), (0, a.jsx)(r.animated.div, {
                            className: x.clanCardInnerContainer,
                            style: {
                                ...z,
                                ...W
                            },
                            children: (0, a.jsx)(R.ClanDiscoveryCardView, {
                                clan: H[1],
                                className: x.clanCardInnerLeft
                            })
                        }), null != F && (0, a.jsx)(r.animated.div, {
                            className: x.clanEnvelope,
                            style: Z,
                            children: (0, a.jsx)(G, {
                                children: (0, a.jsx)("div", {
                                    className: x.clanCardCenterContainer,
                                    style: {
                                        overflow: V ? "hidden" : "visible"
                                    },
                                    children: (0, a.jsx)(r.animated.div, {
                                        style: X,
                                        children: (0, a.jsx)(R.ClanDiscoveryCardView, {
                                            clan: F,
                                            className: x.clanCardCenter,
                                            bannerUrl: (0, T.getClanBannerUrl)(H[4].id, H[4].bannerHash)
                                        })
                                    })
                                })
                            })
                        }), (0, a.jsx)(r.animated.div, {
                            className: x.clanCardInnerContainer,
                            style: {
                                ...q,
                                ...W
                            },
                            children: (0, a.jsx)(R.ClanDiscoveryCardView, {
                                clan: H[2],
                                className: x.clanCardInnerRight
                            })
                        }), (0, a.jsx)(r.animated.div, {
                            className: x.clanCardOuterContainer,
                            style: {
                                ...Q,
                                ...W
                            },
                            children: (0, a.jsx)(R.ClanDiscoveryCardView, {
                                clan: H[3],
                                className: x.clanCardOuterRight
                            })
                        })]
                    }), (0, a.jsx)("div", {
                        className: x.upsellCtaContainer,
                        children: (0, a.jsx)(k, {
                            selectedGuildId: u,
                            setSelectedGuildId: d,
                            eligibleGuilds: t,
                            onButtonClick: w,
                            buttonText: J,
                            hasCompletedUpsell: o,
                            isBrowseButtonVisible: i
                        })
                    }), (0, a.jsx)("div", {
                        className: x.joinWFSContainer,
                        children: (0, a.jsx)("div", {
                            className: x.joinWFS,
                            children: (0, a.jsx)(h.Text, {
                                variant: "text-xs/normal",
                                color: "text-muted",
                                children: D.default.Messages.CLAN_DISCOVERY_UPSELL_JOIN_WFS.format({
                                    wfsHook: ee
                                })
                            })
                        })
                    })]
                })
            })
        },
        543550: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClanDiscoveryAdminContainer: function() {
                    return N
                },
                ClanDiscoveryUserContainer: function() {
                    return A
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("143927"),
                o = n("597312"),
                u = n("410030"),
                d = n("100527"),
                c = n("970606"),
                f = n("963202"),
                E = n("353093"),
                h = n("207796"),
                C = n("497189"),
                _ = n("304231"),
                m = n("526282"),
                S = n("490610"),
                p = n("981631"),
                I = n("689938"),
                g = n("424023");
            let T = (e, t) => {
                switch (e) {
                    case h.ClanDiscoveryGame.GENSHIN:
                        return t === p.ThemeTypes.DARK ? g.genshinUpsellBackgroundImageDark : g.genshinUpsellBackgroundImageLight;
                    case h.ClanDiscoveryGame.VALORANT:
                        return t === p.ThemeTypes.DARK ? g.valorantUpsellBackgroundImageDark : g.valorantUpsellBackgroundImageLight
                }
            };

            function A() {
                let e = (0, h.useClanDiscoveryUIStore)(e => e.game, r.default),
                    t = (0, h.useClanDiscoveryUIStore)(e => e.userUpsellScreen, r.default),
                    n = (0, h.useClanDiscoveryUIStore)(e => e.setUserUpsellScreen, r.default),
                    l = s.useCallback(() => {
                        (0, c.trackClanUserInviteClicked)({
                            location: d.default.CLAN_DISCOVERY
                        }), n(h.ClanDiscoveryUserScreens.USER_ONBOARDING)
                    }, [n]),
                    f = (0, u.default)(),
                    E = s.useMemo(() => T(e, f), [e, f]),
                    C = s.useMemo(() => {
                        switch (e) {
                            case h.ClanDiscoveryGame.GENSHIN:
                                return f === p.ThemeTypes.DARK ? g.genshinOnboardingBackgroundImageDark : g.genshinOnboardingBackgroundImageLight;
                            case h.ClanDiscoveryGame.VALORANT:
                                return f === p.ThemeTypes.DARK ? g.valorantOnboardingBackgroundImageDark : g.valorantOnboardingBackgroundImageLight
                        }
                    }, [e, f]);
                switch (t) {
                    case h.ClanDiscoveryUserScreens.USER_UPSELL:
                        return (0, a.jsx)("div", {
                            className: g.container,
                            children: (0, a.jsx)(o.ScrollerThin, {
                                className: g.upsellScroller,
                                fade: !0,
                                children: (0, a.jsxs)("div", {
                                    className: i()(E, g.userUpsell),
                                    children: [(0, a.jsx)("div", {
                                        className: g.backgroundImageBlur
                                    }), (0, a.jsxs)("div", {
                                        className: g.backgroundImageContent,
                                        children: [(0, a.jsx)(m.ClanDiscoveryUserUpsellBackgroundRings, {}), (0, a.jsx)(m.default, {
                                            selectedGame: e,
                                            onClick: l
                                        })]
                                    })]
                                })
                            })
                        });
                    case h.ClanDiscoveryUserScreens.USER_ONBOARDING:
                        return (0, a.jsx)("div", {
                            className: g.container,
                            children: (0, a.jsxs)("div", {
                                className: i()(C, g.userOnboarding),
                                children: [(0, a.jsx)("div", {
                                    className: g.backgroundImageBlur
                                }), (0, a.jsx)("div", {
                                    className: g.backgroundImageContent,
                                    children: (0, a.jsx)(_.default, {
                                        selectedGame: e,
                                        setScreen: n
                                    })
                                })]
                            })
                        })
                }
            }

            function N() {
                let e = (0, h.useClanDiscoveryUIStore)(e => e.started, r.default),
                    t = (0, h.useClanDiscoveryUIStore)(e => e.game, r.default),
                    {
                        enableApplication: n
                    } = (0, f.useClanPrePilotApplicationExperiment)("ClanDiscoveryAdminContainer"),
                    {
                        guilds: l
                    } = (0, f.useClanPrepilotExperimentForAllGuilds)({
                        location: "ClanDiscoveryAdminContainer",
                        includeConverted: !0
                    }),
                    d = s.useMemo(() => l.filter(e => !(0, E.isGuildAClan)(e)), [l]),
                    c = (0, u.default)(),
                    _ = s.useMemo(() => T(t, c), [t, c]),
                    m = !e && n;
                return 0 === l.length ? null : (0, a.jsx)("div", {
                    className: g.container,
                    children: (0, a.jsxs)(o.ScrollerNone, {
                        className: g.upsellScroller,
                        fade: !0,
                        children: [(0, a.jsxs)("div", {
                            className: i()(_, g.adminUpsell),
                            children: [(0, a.jsx)("div", {
                                className: g.backgroundImageBlur
                            }), (0, a.jsx)("div", {
                                className: g.backgroundImageContent,
                                children: (0, a.jsx)(C.default, {
                                    isBrowseButtonVisible: m,
                                    selectedGame: t,
                                    eligibleGuilds: d,
                                    eligibleGuildsIncludingConverted: l
                                })
                            })]
                        }), (0, a.jsx)(S.default, {
                            title: I.default.Messages.CLAN_DISCOVERY_INSPIRATION_TITLE,
                            subtitle: m ? I.default.Messages.CLAN_DISCOVERY_PILOT_SUBTITLE.format() : void 0
                        })]
                    })
                })
            }
        },
        436137: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("108913");
            t.default = s.memo(function(e) {
                let {
                    onClick: t,
                    children: n,
                    className: s
                } = e;
                return (0, a.jsx)(r.Button, {
                    className: i()(o.button, s),
                    wrapperClassName: o.buttonWrapper,
                    look: r.Button.Looks.FILLED,
                    color: r.Button.Colors.BRAND,
                    onClick: t,
                    children: n
                })
            })
        },
        559469: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFakeDiscoveryUpsellClans: function() {
                    return r
                }
            });
            var a = n("470079"),
                s = n("116175"),
                l = n("308083");

            function i(e) {
                let {
                    id: t,
                    preset: n,
                    banner: a,
                    bannerHash: i,
                    ...r
                } = e, o = (0, s.getRandomClanBadgeKind)();
                return {
                    id: t,
                    name: "",
                    icon: null,
                    description: "",
                    memberCount: 0,
                    playstyle: l.ClanPlaystyles.CASUAL,
                    tag: "",
                    traits: [],
                    games: [],
                    banner: a,
                    bannerHash: i,
                    badge: {
                        badgeKind: o,
                        primaryColor: l.CLAN_BRAND_PALETTE_PRESETS_BY_NAME[n].primary,
                        secondaryColor: l.CLAN_BRAND_PALETTE_PRESETS_BY_NAME[n].secondary
                    },
                    branding: {
                        primaryColor: l.CLAN_BRAND_PALETTE_PRESETS_BY_NAME[n].primary,
                        secondaryColor: l.CLAN_BRAND_PALETTE_PRESETS_BY_NAME[n].secondary
                    },
                    wildcardDescriptors: l.CLAN_WILDCARD_PLACEHOLDERS,
                    ...r
                }
            }

            function r(e) {
                return a.useMemo(() => [i({
                    id: "1239910082150400001",
                    icon: "bea185f5c9dbde7ba2f0c50363c16ec6",
                    games: [e, l.FAKE_CLAN_APP_IDS.AGE_OF_EMPIRES_2, l.FAKE_CLAN_APP_IDS.APEX],
                    preset: l.ClanBrandPresets.VOLCANO,
                    banner: l.ClanBannerKind.WORLD_MAP,
                    bannerHash: "99a72cbacfb6de2baf362daa1a5292bb",
                    playstyle: l.ClanPlaystyles.COMPETITIVE,
                    name: "Retro Rebels",
                    description: "Are you a console collector? Rare game curator? Be a rebel and join us in celebrating retro gaming classics \uD83D\uDE0E",
                    tag: "RR",
                    wildcardDescriptors: ["collector", "nostalgia", "classic"],
                    traits: ["30+", "Inclusive", "cooking", "podcasts", "hiking"],
                    memberCount: 98
                }), i({
                    id: "1239910082150400002",
                    icon: "fe5e3c39b398965133d24d3c5d72b06c",
                    games: [e, l.FAKE_CLAN_APP_IDS.HONKAI_STAR_RAIL],
                    preset: l.ClanBrandPresets.THUNDER,
                    banner: l.ClanBannerKind.CASTLE,
                    bannerHash: "3c8e6496a598b9a563dffbc87d65f6f8",
                    playstyle: l.ClanPlaystyles.SOCIAL,
                    name: "the lofi tavern",
                    description: "~ hosting chill beats and study rooms every night ~ join the tavern to kick back and meet other cozy gamers ~",
                    tag: "MUSE",
                    wildcardDescriptors: ["creative", "harmony", "nightowl"],
                    traits: ["Streamers", "study buddies", "sleepy cats", "lo-fi chilling"],
                    memberCount: 112
                }), i({
                    id: "1239910082150400003",
                    icon: "fc7bdf17dadd9a59014fc2a41dd88613",
                    games: [e, l.FAKE_CLAN_APP_IDS.LETHAL_COMPANY, l.FAKE_CLAN_APP_IDS.HELLDIVERS_2],
                    preset: l.ClanBrandPresets.MARSH,
                    banner: l.ClanBannerKind.WARP_TUNNEL,
                    bannerHash: "d699192ec79c5da7159d2b73eb4b56b7",
                    playstyle: l.ClanPlaystyles.VERY_HARDCORE,
                    name: "midnight tacos",
                    description: "gamers and doritos tacos enthusiasts pls apply",
                    tag: "CHZZ",
                    wildcardDescriptors: ["spicy", "chaotic", "gamba"],
                    traits: ["20+", "Streamers", "ranking bottled water", "late night tacos", "voice chat", "anime"],
                    memberCount: 45
                }), i({
                    id: "1239910082150400004",
                    icon: "7b7a2a06e7852e7cdb7f301fb86c3e18",
                    games: [e, l.FAKE_CLAN_APP_IDS.SIMS_4],
                    preset: l.ClanBrandPresets.EARTH,
                    banner: l.ClanBannerKind.SEA_FOAM,
                    bannerHash: "c01388993ca324a6de870f805cc30bd3",
                    name: "Eco ELO",
                    description: "If you like growing plants or gardening, in game and IRL, then this is the place for you! Welcome home \uD83C\uDF31 \uD83D\uDC9A",
                    tag: "eco",
                    wildcardDescriptors: ["ecofriendly", "explorers", "advocates"],
                    traits: ["20+", "Inclusive", "PUGs", "board games", "going outside", "PvP", "the stalk market", "growing stuff"],
                    memberCount: 32
                }), i({
                    id: "1239910082150400005",
                    icon: "5ca93390d20f7b96a0f0c3702fceec8e",
                    games: [e, l.FAKE_CLAN_APP_IDS.SIMS_4],
                    preset: l.ClanBrandPresets.CASCADE,
                    banner: l.ClanBannerKind.NIGHT_SKY,
                    bannerHash: "37cd6a7f90faafeb8c54e5ea5163407b",
                    name: "Meowtopia",
                    description: "the purrfect place for a pawsitive and hissterical time :D are you kitten me...i feline like that’s too many puns...",
                    tag: "meow",
                    wildcardDescriptors: ["Meow", "Meow", "Moew"],
                    traits: ["All Ages", "Streamers", "Parent Friendly", "sleepy cats", "DnD", "travel", "catnaps"],
                    memberCount: 94
                })], [e])
            }
        },
        304231: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("143927"),
                r = n("442837"),
                o = n("607070"),
                u = n("950279"),
                d = n("741595"),
                c = n("754961"),
                f = n("363915"),
                E = n("359380"),
                h = n("207796"),
                C = n("316553"),
                _ = n("689938"),
                m = n("297344");
            let S = {
                mass: 1,
                tension: 600,
                friction: 60
            };

            function p(e) {
                let {
                    selectedGame: t
                } = e, n = (0, h.useClanDiscoveryUIStore)(e => e.selectedGames, i.default), l = s.useMemo(() => new Set(n), [n]), r = (0, C.useDiscoveryGameApplicationId)({
                    selectedGame: t
                }), o = s.useCallback(e => h.useClanDiscoveryUIStore.getState().setSelectedGames(Array.from(e)), []);
                return (0, a.jsx)(u.default, {
                    title: _.default.Messages.CLAN_DISCOVERY_GAME_TITLE,
                    description: _.default.Messages.CLAN_DISCOVERY_GAME_SUBTITLE,
                    requiredGameId: r,
                    handleUpdate: o,
                    gameApplicationIds: l
                })
            }

            function I() {
                let e = (0, h.useClanDiscoveryUIStore)(e => e.selectedPlaystyle, i.default),
                    t = s.useCallback(e => h.useClanDiscoveryUIStore.getState().setSelectedPlaystyle(e), []);
                return (0, a.jsx)(d.default, {
                    title: _.default.Messages.CLAN_DISCOVERY_PLAYSTYLE_TITLE,
                    description: _.default.Messages.CLAN_DISCOVERY_PLAYSTYLE_SUBTITLE,
                    handleUpdate: t,
                    playstyle: e
                })
            }

            function g(e) {
                let {
                    selectedGame: t
                } = e, n = (0, C.useDiscoveryGameApplicationId)({
                    selectedGame: t
                }), l = (0, h.useClanDiscoveryUIStore)(e => e.selectedTraits, i.default), r = s.useMemo(() => new Set(l), [l]), o = s.useCallback(e => h.useClanDiscoveryUIStore.getState().setSelectedTraits([...e]), []);
                return (0, a.jsx)(E.default, {
                    title: _.default.Messages.CLAN_DISCOVERY_TRAIT_TITLE,
                    description: _.default.Messages.CLAN_DISCOVERY_TRAIT_SUBTITLE,
                    handleUpdate: o,
                    interests: r,
                    requiredGameId: n,
                    hidePreview: !0
                })
            }

            function T(e) {
                return e.toString()
            }
            t.default = s.memo(function(e) {
                let {
                    selectedGame: t,
                    setScreen: n
                } = e, u = s.useRef(null), d = s.useRef(null), E = s.useRef(null), C = (0, r.useStateFromStores)([o.default], () => o.default.useReducedMotion), [A, N] = s.useState(0), [v, R] = s.useState(0), O = (0, h.useClanDiscoveryUIStore)(e => e.selectedPlaystyle, i.default), L = (0, h.useClanDiscoveryUIStore)(e => e.previousMode, i.default), P = s.useCallback(e => {
                    N(e), v < e && R(e)
                }, [v]), y = s.useCallback(() => {
                    0 === A ? (n(h.ClanDiscoveryUserScreens.USER_UPSELL), (0, h.setClanDiscoveryMode)(L)) : P(A - 1)
                }, [A, L, n, P]), M = s.useCallback(() => {
                    2 === A ? (0, h.setClanDiscoveryMode)(h.ClanDiscoveryMode.DISCOVERY) : P(A + 1)
                }, [A, P]), D = s.useMemo(() => 1 === A && null == O, [O, A]), x = s.useMemo(() => [{
                    index: 0,
                    name: _.default.Messages.CLAN_SETUP_GAMES_STEP
                }, {
                    index: 1,
                    name: _.default.Messages.CLAN_SETUP_PLAYSTYLE_STEP
                }, {
                    index: 2,
                    name: _.default.Messages.CLAN_SETUP_UTILITY_TRAITS_STEP
                }], []), b = (0, l.useSpring)({
                    ref: u,
                    from: {
                        opacity: 0
                    },
                    to: {
                        opacity: 1
                    },
                    config: S
                }), U = (0, l.useSpring)({
                    ref: d,
                    from: {
                        opacity: 0,
                        transform: C ? "translateY(0px)" : "translateY(40px)"
                    },
                    to: {
                        opacity: 1,
                        transform: "translateY(0px)"
                    },
                    config: S
                }), j = (0, l.useSpring)({
                    ref: E,
                    from: {
                        opacity: 0,
                        transform: C ? "translateY(0px)" : "translateY(40px)"
                    },
                    to: {
                        opacity: 1,
                        transform: "translateY(0px)"
                    },
                    config: S
                });
                (0, l.useChain)([u, d, E], [0, .2, .5]);
                let G = s.useMemo(() => [A], [A]),
                    w = s.useCallback(e => {
                        switch (e) {
                            case 0:
                                return (0, a.jsx)(p, {
                                    selectedGame: t
                                });
                            case 1:
                                return (0, a.jsx)(I, {});
                            case 2:
                                return (0, a.jsx)(g, {
                                    selectedGame: t
                                })
                        }
                    }, [t]);
                return (0, a.jsxs)(l.animated.div, {
                    className: m.container,
                    style: b,
                    children: [(0, a.jsx)(l.animated.div, {
                        className: m.sequencer,
                        style: U,
                        children: (0, a.jsx)(f.default, {
                            currentStep: A,
                            items: G,
                            renderItem: w,
                            getItemKey: T
                        })
                    }), (0, a.jsxs)(l.animated.div, {
                        className: m.footer,
                        style: j,
                        children: [(0, a.jsx)(c.ClanSetupProgress, {
                            currentStepIndex: A,
                            steps: x,
                            furthestStepIndex: v,
                            onStepClick: P
                        }), (0, a.jsx)(c.ClanSetupProgressButtons, {
                            className: m.footerButtons,
                            isBackDisabled: !1,
                            isNextDisabled: D,
                            onNextClick: M,
                            onBackClick: y
                        })]
                    })]
                })
            })
        },
        526282: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClanDiscoveryUserUpsellBackgroundRings: function() {
                    return g
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("920906"),
                i = n("442837"),
                r = n("481060"),
                o = n("607070"),
                u = n("100527"),
                d = n("970606"),
                c = n("231467"),
                f = n("207796"),
                E = n("436137"),
                h = n("316553"),
                C = n("559469"),
                _ = n("689938"),
                m = n("531612");
            let S = {
                    mass: 1,
                    tension: 600,
                    friction: 60
                },
                p = {
                    from: {
                        transform: "translateY(40px) scale(0.9)",
                        opacity: 0
                    },
                    to: {
                        transform: "translateY(0px) scale(1)",
                        opacity: 1
                    },
                    config: S
                },
                I = {
                    from: {
                        opacity: 0
                    },
                    to: {
                        opacity: 1
                    },
                    config: S
                };

            function g() {
                let e = (0, i.useStateFromStores)([o.default], () => o.default.useReducedMotion),
                    t = s.useRef(null),
                    n = s.useRef(null),
                    r = s.useRef(null),
                    u = (0, l.useSpring)({
                        ref: t,
                        ...I
                    }),
                    d = (0, l.useSpring)({
                        ref: n,
                        ...I
                    }),
                    c = (0, l.useSpring)({
                        ref: r,
                        ...I
                    });
                return (0, l.useChain)([t, n, r], [.8, .9, 1]), (0, a.jsx)("div", {
                    className: m.backgroundContainer,
                    children: (0, a.jsxs)("div", {
                        className: m.ringsContainer,
                        children: [(0, a.jsx)(l.animated.div, {
                            className: m.ringOuter,
                            style: e ? void 0 : c
                        }), (0, a.jsx)(l.animated.div, {
                            className: m.ringMiddle,
                            style: e ? void 0 : d
                        }), (0, a.jsx)(l.animated.div, {
                            className: m.ringInner,
                            style: e ? void 0 : u
                        })]
                    })
                })
            }
            t.default = s.memo(function(e) {
                let {
                    selectedGame: t,
                    onClick: n
                } = e, I = (0, i.useStateFromStores)([o.default], () => o.default.useReducedMotion), g = s.useRef(null), T = s.useRef(null), A = s.useRef(null), N = s.useRef(null), v = s.useRef(null), R = s.useRef(null), O = (0, h.useDiscoveryGameApplicationId)({
                    selectedGame: t
                }), L = (0, C.useFakeDiscoveryUpsellClans)(O), P = (0, l.useSpring)({
                    ref: g,
                    ...p
                }), y = (0, l.useSpring)({
                    ref: T,
                    ...p
                }), M = (0, l.useSpring)({
                    ref: A,
                    ...p
                }), D = (0, l.useSpring)({
                    ref: N,
                    ...p
                }), x = (0, l.useSpring)({
                    ref: v,
                    ...p
                }), b = (0, l.useSpring)({
                    ref: R,
                    from: {
                        transform: "translateY(40px)",
                        opacity: 0
                    },
                    to: {
                        transform: "translateY(0px)",
                        opacity: 1
                    },
                    config: S
                });
                (0, l.useChain)([g, T, A, N, v, R], [.1, .2, .3, .4, .5, 1]), s.useEffect(() => {
                    (0, d.trackClanUserInviteViewed)({
                        location: u.default.CLAN_DISCOVERY
                    })
                }, []);
                let [U, j] = s.useMemo(() => {
                    switch (t) {
                        case f.ClanDiscoveryGame.GENSHIN:
                            return [_.default.Messages.CLAN_DISCOVERY_UPSELL_TITLE, _.default.Messages.CLAN_DISCOVERY_UPSELL_GENSHIN_SUBTITLE];
                        case f.ClanDiscoveryGame.VALORANT:
                            return [_.default.Messages.CLAN_DISCOVERY_UPSELL_TITLE, _.default.Messages.CLAN_DISCOVERY_UPSELL_VALORANT_SUBTITLE]
                    }
                }, [t]);
                return (0, a.jsxs)("div", {
                    className: m.upsellContainer,
                    children: [(0, a.jsx)("div", {
                        className: m.cardsContainer,
                        children: (0, a.jsxs)("div", {
                            className: m.cards,
                            children: [(0, a.jsx)(l.animated.div, {
                                className: m.clanCardOuterContainer,
                                style: I ? void 0 : D,
                                children: (0, a.jsx)(c.ClanDiscoveryCardView, {
                                    clan: L[0],
                                    className: m.clanCardOuterLeft
                                })
                            }), (0, a.jsx)(l.animated.div, {
                                className: m.clanCardInnerContainer,
                                style: I ? void 0 : y,
                                children: (0, a.jsx)(c.ClanDiscoveryCardView, {
                                    clan: L[1],
                                    className: m.clanCardInnerLeft
                                })
                            }), (0, a.jsx)(l.animated.div, {
                                className: m.clanCardCenterContainer,
                                style: I ? void 0 : P,
                                children: (0, a.jsx)(c.ClanDiscoveryCardView, {
                                    clan: L[4],
                                    className: m.clanCardCenter
                                })
                            }), (0, a.jsx)(l.animated.div, {
                                className: m.clanCardInnerContainer,
                                style: I ? void 0 : M,
                                children: (0, a.jsx)(c.ClanDiscoveryCardView, {
                                    clan: L[2],
                                    className: m.clanCardInnerRight
                                })
                            }), (0, a.jsx)(l.animated.div, {
                                className: m.clanCardOuterContainer,
                                style: I ? void 0 : x,
                                children: (0, a.jsx)(c.ClanDiscoveryCardView, {
                                    clan: L[3],
                                    className: m.clanCardOuterRight
                                })
                            })]
                        })
                    }), (0, a.jsxs)(l.animated.div, {
                        className: m.upsellDetails,
                        style: I ? void 0 : b,
                        children: [(0, a.jsx)(r.Heading, {
                            className: m.upsellTitle,
                            color: "header-primary",
                            variant: "heading-xxl/semibold",
                            children: U
                        }), (0, a.jsx)(r.Text, {
                            className: m.upsellSubtitle,
                            color: "header-secondary",
                            variant: "text-md/medium",
                            children: j
                        }), (0, a.jsx)(E.default, {
                            onClick: n,
                            children: _.default.Messages.CHECK_IT_OUT
                        })]
                    })]
                })
            })
        },
        316553: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useDiscoveryGameApplicationId: function() {
                    return i
                }
            });
            var a = n("470079"),
                s = n("207796"),
                l = n("308083");

            function i(e) {
                let {
                    selectedGame: t
                } = e;
                return a.useMemo(() => {
                    switch (t) {
                        case s.ClanDiscoveryGame.GENSHIN:
                            return l.GENSHIN_ID;
                        case s.ClanDiscoveryGame.VALORANT:
                            return l.VALORANT_ID
                    }
                }, [t])
            }
        },
        273254: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFakeDiscoveryClanForGuild: function() {
                    return d
                }
            }), n("47120");
            var a = n("470079"),
                s = n("468194"),
                l = n("645896"),
                i = n("316553"),
                r = n("559469"),
                o = n("308083"),
                u = n("689938");

            function d(e) {
                let {
                    guild: t,
                    selectedGame: n
                } = e, d = (0, i.useDiscoveryGameApplicationId)({
                    selectedGame: n
                }), c = a.useMemo(() => null == d ? [] : [d], [d]), f = (0, r.useFakeDiscoveryUpsellClans)(d), E = (0, l.useClanInfo)(null == t ? void 0 : t.id), [h, C] = (0, l.useFetchClanInfo)(null == t ? void 0 : t.id);
                return a.useEffect(() => {
                    !h && null != t && C()
                }, [t, h, C]), a.useMemo(() => {
                    var e;
                    return null != E ? E : null == t ? null : {
                        ...f[f.length - 1],
                        id: t.id,
                        name: t.name,
                        icon: t.icon,
                        description: null !== (e = t.description) && void 0 !== e ? e : u.default.Messages.CLAN_SETUP_DESCRIPTION_PLACEHOLDER,
                        memberCount: 0,
                        games: c,
                        playstyle: o.ClanPlaystyles.CASUAL,
                        traits: [],
                        tag: (0, s.getAcronym)(t.name),
                        wildcardDescriptors: o.CLAN_WILDCARD_PLACEHOLDERS
                    }
                }, [c, t, f, E])
            }
        },
        895068: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("47120");
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("920906"),
                o = n("143927"),
                u = n("964094"),
                d = n("481060"),
                c = n("110924"),
                f = n("393903"),
                E = n("638730"),
                h = n("970606"),
                C = n("945124"),
                _ = n("231467"),
                m = n("931515"),
                S = n("207796"),
                p = n("777734"),
                I = n("976757"),
                g = n("981631"),
                T = n("689938"),
                A = n("886722");

            function N(e) {
                let {
                    width: t,
                    isAnimating: n
                } = e, {
                    loaded: a,
                    clans: s,
                    searchResult: N,
                    searchCriteria: v
                } = (0, m.useClanDiscoveryList)(), R = (0, S.useClanDiscoveryUIStore)(e => e.selectedTraits, o.default), O = (0, c.default)(N), [L, P] = i.useState(0), y = i.useMemo(() => ({
                    height: L
                }), [L]), M = (0, r.useSpring)({
                    opacity: L > 0 ? 1 : 0,
                    config: r.config.stiff
                }), D = Math.min(null != t ? t : 1024, 2e3), x = i.useMemo(() => {
                    let e = D / 256,
                        t = D / 376,
                        n = D / e,
                        a = D / t;
                    return a > 360 ? Math.floor(t - (t - e) / 2) : n < 240 ? Math.max(e, t) : e
                }, [D]), b = i.useCallback(e => {
                    if (null == e) {
                        P(0);
                        return
                    }
                    P(e.getBoundingClientRect().y + 16 + 400 + 40 + 4)
                }, []), U = (0, f.useResizeObserver)(b), j = i.useCallback(() => {
                    b(U.current)
                }, [b, U]), G = (0, E.useThrottledFunction)(j, 10, [j], {
                    leading: !0,
                    trailing: !0
                });
                i.useEffect(() => {
                    if (null != N && !!(0, I.isLoadedSearchResult)(N))(!(null != O && (0, I.isLoadedSearchResult)(O)) || !(O.loadedAt >= N.loadedAt)) && (0, h.trackClanDiscoveryViewed)(N.items.map(e => e.id), "top_picks", v)
                }, [v, N, O, j, n]), i.useEffect(() => {
                    !n && (0, I.isLoadedSearchResult)(N) && setTimeout(() => j())
                }, [j, n, N]);
                let w = i.useMemo(() => null == s ? [] : [{
                        section: "top_picks",
                        items: s.slice(0, x),
                        sectionHeight: 24,
                        header: T.default.Messages.CLAN_DISCOVERY_TOP_PICKS_TITLE,
                        subtitle: T.default.Messages.CLAN_DISCOVERY_TOP_PICKS_SUBTITLE
                    }, {
                        section: "other_guilds",
                        items: s.slice(x),
                        sectionHeight: 24,
                        header: T.default.Messages.CLAN_DISCOVERY_OTHER_GUILDS_TITLE
                    }], [s, x]),
                    k = i.useMemo(() => new Set(v.games), [v.games]),
                    B = i.useCallback((e, t, n, a) => {
                        var s;
                        let {
                            items: i
                        } = w[e], r = i[t];
                        return (0, l.jsx)(_.default, {
                            clan: r,
                            affinity: null !== (s = r.affininty) && void 0 !== s ? s : (0, C.getClanDiscoveryAffinity)(r, v),
                            traitsToHighlight: R,
                            className: A.card,
                            style: n,
                            source: g.AnalyticsSections.DISCOVER_SEARCH,
                            prioritizedGameIds: k,
                            onlyAnimateIconOnHover: !0
                        }, a)
                    }, [v, w, R, k]),
                    F = i.useCallback(e => {
                        let {
                            header: t,
                            subtitle: n,
                            section: a
                        } = w[e];
                        return null == t ? null : "top_picks" === a ? (0, l.jsx)(p.default, {
                            ref: U,
                            icon: (0, l.jsx)(u.TrophyIcon, {
                                color: "currentColor"
                            }),
                            title: t,
                            subtitle: n
                        }) : (0, l.jsx)(p.default, {
                            title: t,
                            subtitle: n
                        })
                    }, [w, U]);
                return 0 !== s.length && a ? (0, l.jsx)(l.Fragment, {
                    children: (0, l.jsxs)("div", {
                        className: A.masonryListContainer,
                        children: [(0, l.jsx)(r.animated.div, {
                            className: A.masonryListGradient,
                            style: {
                                ...M,
                                ...y
                            }
                        }), (0, l.jsx)(d.MasonryList, {
                            className: A.masonryList,
                            sections: w.map(e => {
                                let {
                                    items: t
                                } = e;
                                return t.length
                            }),
                            columns: x,
                            sectionGutter: 80,
                            itemGutter: 16,
                            paddingHorizontal: 32,
                            paddingVertical: 40,
                            removeEdgeItemGutters: !0,
                            renderItem: B,
                            renderSection: F,
                            getSectionHeight: e => w[e].sectionHeight,
                            getItemKey: (e, t) => w[e].items[t].id,
                            getItemHeight: () => 400,
                            chunkSize: 24,
                            onScroll: G,
                            maxContentWidth: 2e3
                        })]
                    })
                }) : null
            }(s = a || (a = {})).TOP_PICKS = "top_picks", s.OTHER_GUILDS = "other_guilds"
        },
        777734: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("886722");
            let r = s.forwardRef(function(e, t) {
                let {
                    title: n,
                    subtitle: s,
                    icon: r
                } = e;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i.sectionHeader,
                        children: [(0, a.jsxs)("div", {
                            className: i.sectionHeaderTitle,
                            children: [r, (0, a.jsx)(l.Heading, {
                                variant: "heading-md/medium",
                                color: "header-primary",
                                children: n
                            })]
                        }), null != s && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("div", {
                                className: i.sectionHeaderSpacer
                            }), (0, a.jsx)(l.Text, {
                                variant: "text-sm/normal",
                                color: "text-muted",
                                children: s
                            })]
                        })]
                    }), (0, a.jsx)("div", {
                        ref: t
                    })]
                })
            });
            t.default = s.memo(r)
        },
        490610: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("143927"),
                i = n("622535"),
                r = n("970606"),
                o = n("945124"),
                u = n("231467"),
                d = n("931515"),
                c = n("207796"),
                f = n("777734"),
                E = n("976757"),
                h = n("981631"),
                C = n("886722");
            t.default = s.memo(function(e) {
                let {
                    title: t,
                    subtitle: n
                } = e, {
                    loaded: _,
                    clans: m,
                    searchResult: S,
                    searchCriteria: p
                } = (0, d.useClanDiscoveryList)(20), I = (0, c.useClanDiscoveryUIStore)(e => e.selectedTraits, l.default), g = s.useMemo(() => new Set(p.games), [p.games]), T = s.useCallback(e => {
                    var t;
                    return (0, a.jsx)(u.default, {
                        clan: e,
                        className: C.card,
                        affinity: null !== (t = e.affininty) && void 0 !== t ? t : (0, o.getClanDiscoveryAffinity)(e, p),
                        traitsToHighlight: I,
                        source: h.AnalyticsSections.DISCOVER_SEARCH,
                        prioritizedGameIds: g,
                        onlyAnimateIconOnHover: !0
                    }, e.id)
                }, [p, I, g]), A = s.useMemo(() => null != S && (0, E.isLoadedSearchResult)(S) ? m : [], [m, S]), N = s.useCallback(e => {
                    e && A.length > 0 && (0, r.trackClanDiscoveryViewed)(A.map(e => e.id), "top_picks", p)
                }, [A, p]);
                return 0 !== m.length && _ ? (0, a.jsx)(i.VisibilitySensor, {
                    onChange: N,
                    threshold: .25,
                    children: (0, a.jsxs)("div", {
                        className: C.previewListContainer,
                        children: [(0, a.jsx)("div", {
                            className: C.previewListSection,
                            children: (0, a.jsx)(f.default, {
                                title: t,
                                subtitle: n
                            })
                        }), (0, a.jsx)("div", {
                            className: C.previewList,
                            children: A.map(e => T(e))
                        })]
                    })
                }) : null
            })
        },
        127541: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("47120");
            var a = n("470079");

            function s(e) {
                let [t, n] = a.useState(0), s = a.useCallback(() => {
                    let t = window.innerWidth;
                    for (let a of e) {
                        let [e, s] = a;
                        if (t >= e) {
                            n(s);
                            return
                        }
                    }
                }, [e]);
                return a.useEffect(() => {
                    s()
                }, [s]), a.useEffect(() => (window.addEventListener("resize", s), () => {
                    window.removeEventListener("resize", s)
                })), t
            }
        },
        620360: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140"),
                s = n("211644");
            t.default = {
                init() {
                    a.default.subscribe("CONNECTION_OPEN", () => {
                        (0, s.reset)()
                    }), a.default.subscribe("LOGOUT", () => {
                        (0, s.reset)()
                    })
                }
            }
        },
        810280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("990547"),
                l = n("481060"),
                i = n("230711"),
                r = n("465670"),
                o = n("960359"),
                u = n("730417"),
                d = n("981631"),
                c = n("921944"),
                f = n("689938"),
                E = n("667609");
            let h = (e, t) => ({
                header: f.default.Messages.DROP_ENROLLMENT_CTA_TOOLTIP_HEADER.format({
                    gameName: e.title
                }),
                body: e.messages.enrollmentTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: E.defaultDropImage
            });

            function C(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, u.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_ENROLLMENT);
                let C = (0, u.useDropsExperiment)(n);
                if (null == C) return null;
                let {
                    header: _,
                    body: m,
                    imgSrc: S,
                    imgStyle: p
                } = h(C.drop, C.config.streamLengthRequirement), I = () => {
                    t(c.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("img", {
                        src: S,
                        alt: "",
                        className: p
                    }), (0, a.jsx)(l.Clickable, {
                        className: E.__invalid_buttonClose,
                        "aria-label": f.default.Messages.CLOSE,
                        onClick: I,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: E.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: E.title,
                        variant: "heading-md/extrabold",
                        children: _
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: E.subTitle,
                        children: m
                    }), C.config.autoEnrollment ? (0, a.jsx)(l.Button, {
                        color: l.Button.Colors.BRAND_INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: f.default.Messages.LEARN_MORE
                    }) : (0, a.jsx)(l.Button, {
                        innerClassName: E.button,
                        color: l.Button.Colors.BRAND_INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            (0, o.enrollDropsUser)(C.drop.dropsQuestId), i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: f.default.Messages.DROPS_ELIGIBILITY_ENROLLMENT_PRIMARY_CTA
                    }), (0, a.jsx)(l.Button, {
                        className: E.linkButtonContainer,
                        innerClassName: E.linkButton,
                        onClick: I,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: f.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: E.pointer
                    })]
                })
            }
        },
        60762: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("990547"),
                l = n("481060"),
                i = n("230711"),
                r = n("465670"),
                o = n("730417"),
                u = n("981631"),
                d = n("921944"),
                c = n("689938"),
                f = n("871147");
            let E = (e, t) => ({
                body: e.messages.completionTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: f.defaultDropImage
            });

            function h(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, o.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_COMPLETION);
                let h = (0, o.useDropsExperiment)(n);
                if (null == h) return null;
                let {
                    body: C,
                    imgSrc: _,
                    imgStyle: m
                } = E(h.drop, h.config.streamLengthRequirement), S = () => {
                    t(d.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("img", {
                        src: _,
                        alt: "",
                        className: m
                    }), (0, a.jsx)(l.Clickable, {
                        className: f.__invalid_buttonClose,
                        "aria-label": c.default.Messages.CLOSE,
                        onClick: S,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: f.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: f.title,
                        variant: "heading-md/extrabold",
                        children: c.default.Messages.DROPS_QUEST_COMPLETION_TOOLTIP_HEADER
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: f.subTitle,
                        children: C
                    }), (0, a.jsx)(l.Button, {
                        color: l.Button.Colors.BRAND_INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(u.UserSettingsSections.INVENTORY), t(d.ContentDismissActionType.PRIMARY)
                        },
                        children: c.default.Messages.REDEEM
                    }), (0, a.jsx)(l.Button, {
                        className: f.linkButtonContainer,
                        innerClassName: f.linkButton,
                        onClick: S,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: c.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: f.pointer
                    })]
                })
            }
        },
        96051: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140"),
                s = n("317770"),
                l = n("117984");

            function i(e) {
                let {
                    channel: {
                        id: t
                    }
                } = e;
                (0, l.removeFavoriteChannel)(t)
            }
            class r extends s.default {
                _initialize() {
                    a.default.subscribe("CHANNEL_DELETE", i)
                }
                _terminate() {
                    a.default.unsubscribe("CHANNEL_DELETE", i)
                }
            }
            t.default = new r
        },
        750995: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("704215"),
                l = n("481060"),
                i = n("570140"),
                r = n("317770"),
                o = n("605236"),
                u = n("650774"),
                d = n("430824"),
                c = n("496675"),
                f = n("228392"),
                E = n("981631"),
                h = n("921944");
            let C = e => {
                var t;
                let n = d.default.getGuild(e),
                    a = !!(null == n ? void 0 : n.hasFeature(E.GuildFeatures.COMMUNITY)),
                    l = c.default.can(E.Permissions.MANAGE_CHANNELS, n),
                    i = (0, o.isDismissibleContentDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL),
                    r = null !== (t = u.default.getMemberCount(e)) && void 0 !== t ? t : 0;
                return a && l && !i && r >= 200
            };
            class _ extends r.default {
                _initialize() {
                    i.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                _terminate() {
                    i.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == t || !C(t)) return;
                    (0, f.trackForumUpsellModalViewed)(), (0, o.requestMarkDismissibleContentAsShown)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL);
                    let i = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : h.ContentDismissActionType.DISMISS;
                        (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: e
                        })
                    };
                    (0, l.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("18417")]).then(n.bind(n, "740696"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            onClose: e => {
                                i(e), n.onClose()
                            },
                            guildId: t,
                            shouldUpsellCreation: !0
                        })
                    }, {
                        onCloseCallback: () => (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: h.ContentDismissActionType.DISMISS
                        }),
                        onCloseRequest: E.NOOP_NULL
                    })
                }
            }
            t.default = new _
        },
        388380: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("544891"),
                s = n("570140"),
                l = n("981631");
            t.default = {
                async fetch() {
                    try {
                        let e = await a.HTTP.get({
                            url: l.Endpoints.FRIEND_SUGGESTIONS
                        });
                        s.default.dispatch({
                            type: "LOAD_FRIEND_SUGGESTIONS_SUCCESS",
                            suggestions: e.body
                        })
                    } catch (e) {
                        s.default.dispatch({
                            type: "LOAD_FRIEND_SUGGESTIONS_FAILURE"
                        })
                    }
                },
                ignore(e) {
                    a.HTTP.del(l.Endpoints.FRIEND_SUGGESTION(e))
                }
            }
        },
        5254: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l, i, r = n("392711"),
                o = n.n(r),
                u = n("442837"),
                d = n("570140"),
                c = n("598077"),
                f = n("594174"),
                E = n("388380");
            let h = {},
                C = 0,
                _ = !1,
                m = !1;

            function S(e) {
                var t;
                let n = null != e.contact_names && e.contact_names.length >= 2 ? e.contact_names.slice(0, 2) : [];
                return {
                    key: e.suggested_user.id,
                    name: null === (t = o().first(e.reasons)) || void 0 === t ? void 0 : t.name,
                    user: new c.default(e.suggested_user),
                    mutualFriendsCount: e.mutual_friends_count,
                    contactNames: n
                }
            }
            class p extends(a = u.default.Store) {
                initialize() {
                    this.waitFor(f.default)
                }
                getSuggestionCount() {
                    return C
                }
                getSuggestions() {
                    return Object.entries(h).map(e => {
                        let [t, n] = e;
                        return n
                    })
                }
                getSuggestion(e) {
                    return h[e]
                }
            }
            i = "FriendSuggestionStore", (l = "displayName") in(s = p) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, t.default = new p(d.default, {
                CONNECTION_OPEN: function(e) {
                    h = {}, (C = e.friendSuggestionCount) > 0 && (m = !0, _ || !m || (_ = !0, m = !1, E.default.fetch()))
                },
                FRIEND_SUGGESTION_CREATE: function(e) {
                    let t = S(e.suggestion);
                    if (null != h[t.key]) return !1;
                    C++, h = {
                        ...h,
                        [t.key]: t
                    }
                },
                FRIEND_SUGGESTION_DELETE: function(e) {
                    C = Math.max(0, --C), delete h[e.suggestedUserId]
                },
                LOAD_FRIEND_SUGGESTIONS_SUCCESS: function(e) {
                    var t;
                    _ = !1, t = e.suggestions, h = o().chain(t).map(e => S(e)).keyBy(e => e.key).value(), C = o().keys(h).length
                },
                LOAD_FRIEND_SUGGESTIONS_FAILURE: function() {
                    _ = !1, h = {}
                }
            })
        },
        935261: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("442837"),
                r = n("481060"),
                o = n("797258"),
                u = n("374129"),
                d = n("639351"),
                c = n("565473"),
                f = n("927923"),
                E = n("689938"),
                h = n("106161");

            function C(e) {
                let {
                    platform: t
                } = e;
                return t === f.GameConsoleTypes.XBOX ? (0, a.jsx)(d.default, {
                    className: h.icon
                }) : t === f.GameConsoleTypes.PLAYSTATION ? (0, a.jsx)(u.default, {
                    className: h.icon
                }) : null
            }

            function _(e) {
                let {
                    voiceState: t,
                    awaitingRemoteSessionInfo: n
                } = e, s = null != n ? (0, c.coercePlatformTypeToConsoleType)(n.type) : null, u = (0, i.useStateFromStores)([o.default], () => {
                    var e, n;
                    return null === (e = o.default.getSessionById(null !== (n = null == t ? void 0 : t.sessionId) && void 0 !== n ? n : "")) || void 0 === e ? void 0 : e.clientInfo.os
                }), d = null != s ? s : u;
                if (null == d || !f.GAME_CONSOLE_SESSIONS.has(d)) return null;
                let _ = null != n,
                    m = _ ? d === f.GameConsoleTypes.XBOX ? E.default.Messages.XBOX_TRANSFERRING_ELLIPSIS : E.default.Messages.PLAYSTATION_TRANSFERRING_ELLIPSIS : d === f.GameConsoleTypes.XBOX ? E.default.Messages.XBOX_REMOTE_CONNECTED.format() : E.default.Messages.PLAYSTATION_REMOTE_CONNECTED.format();
                return (0, a.jsxs)("div", {
                    className: l()(h.root, _ ? h.connecting : h.connected),
                    children: [(0, a.jsx)(C, {
                        platform: d
                    }), (0, a.jsx)(r.Text, {
                        color: _ ? "header-primary" : "always-white",
                        variant: "text-xs/medium",
                        children: m
                    })]
                })
            }
        },
        408026: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("224706"),
                l = n("710845"),
                i = n("77498");
            let r = {};

            function o(e) {
                let {
                    name: t,
                    hash: n,
                    missingData: a
                } = e;
                for (let e of (i.default.markGameReported(t), a))
                    if ("icon" === e) {
                        let e = r[t];
                        null != e && s.default.uploadIcon(t, n, e);
                        return
                    } else new l.default("GameStoreIconManager").log("Could not find missing data key: ".concat(e))
            }

            function u(e) {
                let {
                    gameName: t,
                    icon: n
                } = e;
                r[t] = n
            }
            t.default = {
                initialize() {
                    a.default.subscribe("UNVERIFIED_GAME_UPDATE", o), a.default.subscribe("GAME_ICON_UPDATE", u)
                }
            }
        },
        763916: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140"),
                s = n("812206"),
                l = n("877481"),
                i = n("592745");

            function r(e) {
                let {
                    gameId: t
                } = e;
                ! function(e) {
                    let t;
                    let n = i.default.launchableGames[e],
                        r = s.default.getApplication(e);
                    (t = null != r ? l.default.isLaunchable(r) : l.default.isGameLaunchable(e)).then(t => {
                        t !== n && a.default.dispatch({
                            type: "GAME_LAUNCHABLE_UPDATE",
                            gameId: e,
                            isLaunchable: t
                        })
                    })
                }(t)
            }
            t.default = {
                initialize() {
                    a.default.subscribe("CHECK_LAUNCHABLE_GAME", r)
                }
            }
        },
        306721: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("401430"),
                s = n("283595"),
                l = n("695103");
            t.default = {
                init() {
                    s.default.whenInitialized(() => {
                        null != l.default.testModeApplicationId && (0, a.authorizeAndSetTestModeApplication)(l.default.testModeApplicationId, l.default.testModeOriginURL)
                    })
                }
            }
        },
        531551: function(e, t, n) {
            "use strict";
            n.r(t), n("411104");
            var a = n("570140"),
                s = n("51025"),
                l = n("314897"),
                i = n("804739");

            function r() {
                if (!(0, i.isSupportedPlatform)()) return;
                let e = l.default.getToken(),
                    t = l.default.getId();
                if (null == e) throw Error("missing user token");
                s.init(e, t)
            }

            function o() {
                s.destroy()
            }
            t.default = {
                init() {
                    a.default.subscribe("CONNECTION_OPEN", r), a.default.subscribe("LOGOUT", o)
                }
            }
        },
        869614: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("47120");
            let a = new Set(["nvidia"]);

            function s(e) {
                for (let t of Object.keys(e)) {
                    let n = e[t];
                    if (null != n && null == n.error && a.has(t)) return !0
                }
                return !1
            }
        },
        281083: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("47120");
            var a = n("553813"),
                s = n.n(a),
                l = n("358085");
            let i = {
                [l.PlatformTypes.WINDOWS]: {
                    nvidia: "<=537.58.0 || >=546.31"
                }
            };

            function r(e) {
                let t = i[(0, l.getPlatform)()];
                if (null == t) return !1;
                for (let n of Object.keys(e)) {
                    let a = e[n],
                        l = t[n];
                    if (null == a || null == l || null != a.error) continue;
                    let i = function(e) {
                        var t, n;
                        return "".concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".").concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0")
                    }(a);
                    if (!s().satisfies(i, l)) return !0
                }
                return !1
            }
        },
        672598: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("47120");
            var a = n("553813"),
                s = n.n(a),
                l = n("358085");
            let i = {
                [l.PlatformTypes.WINDOWS]: {
                    nvidia: ">=397.93.0"
                }
            };

            function r(e) {
                let t = i[(0, l.getPlatform)()];
                if (null == t) return !1;
                for (let n of Object.keys(e)) {
                    let a = e[n],
                        l = t[n];
                    if (null == a || null == l || null != a.error) continue;
                    let i = function(e) {
                        var t, n;
                        return "".concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".").concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0")
                    }(a);
                    if (!s().satisfies(i, l)) return !0
                }
                return !1
            }
        },
        653255: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("358085"),
                d = n("998502"),
                c = n("869614"),
                f = n("281083"),
                E = n("672598");
            let h = !1,
                C = !0,
                _ = !1;
            class m extends(i = r.default.Store) {
                initialize() {
                    !(!u.isPlatformEmbedded || __OVERLAY__) && d.default.getGPUDriverVersions().then(e => {
                        h = (0, E.default)(e), C = (0, c.default)(e), _ = (0, f.default)(e), this.emitChange()
                    })
                }
                get GPUDriversOutdated() {
                    return h
                }
                get canUseHardwareAcceleration() {
                    return C
                }
                get problematicGPUDriver() {
                    return _
                }
                getState() {
                    return {
                        GPUDriversOutdated: h,
                        canUseHardwareAcceleration: C,
                        problematicGPUDriver: _
                    }
                }
            }
            l = "StreamingCapabilitiesStore", (s = "displayName") in(a = m) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new m(o.default, {
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        streamingCapabilitiesStoreState: t
                    } = e;
                    h = t.GPUDriversOutdated, C = t.canUseHardwareAcceleration
                }
            })
        },
        722835: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("872810"),
                s = n("594190"),
                l = n("199902"),
                i = n("592125"),
                r = n("430824"),
                o = n("131951"),
                u = n("496675"),
                d = n("944486"),
                c = n("449224"),
                f = n("102172"),
                E = n("74299"),
                h = n("989941");

            function C() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                if (!(0, E.default)(o.default) || null != l.default.getCurrentUserActiveStream()) return !1;
                let t = (0, h.default)(s.default, c.default);
                if (null == t || t.isLauncher && !e) return !1;
                let n = d.default.getVoiceChannelId(),
                    C = i.default.getChannel(n);
                if (null == C) return !1;
                let _ = C.getGuildId();
                return !!(0, f.canStreamInChannel)(C, r.default, u.default, !1) && ((0, a.startStream)(_, C.id, {
                    pid: t.pid
                }), !0)
            }
        },
        818634: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                showGuildHeaderPopout: function() {
                    return i
                },
                useGuildHeaderPopoutStore: function() {
                    return r
                }
            });
            var a = n("652874");
            let s = Object.freeze({
                    isPopoutOpen: !1
                }),
                l = (0, a.default)(e => s),
                i = e => {
                    l.setState(() => ({
                        isPopoutOpen: e
                    }))
                },
                r = l
        },
        501640: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("149765"),
                s = n("442837"),
                l = n("984933"),
                i = n("496675"),
                r = n("981631");

            function o(e) {
                let t = (0, s.useStateFromStores)([l.default], () => {
                    var t;
                    return null !== (t = l.default.getChannels(e)[l.GUILD_SELECTABLE_CHANNELS_KEY]) && void 0 !== t ? t : []
                }, [e]);
                return 0 === t.length ? 0 : t.filter(e => {
                    let {
                        channel: t
                    } = e;
                    return i.default.can(a.combine(r.Permissions.SEND_MESSAGES, r.Permissions.VIEW_CHANNEL), t)
                }).length
            }
        },
        360453: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("949389"),
                r = n("82950"),
                o = n("434404"),
                u = n("899667"),
                d = n("267642"),
                c = n("981631"),
                f = n("689938"),
                E = n("571472");
            t.default = e => {
                let {
                    guild: t
                } = e, n = t.id, h = (0, s.useStateFromStores)([u.default], () => u.default.getAppliedGuildBoostsForGuild(t.id));
                return null == h || 0 >= (0, d.appliedGuildBoostsRequiredForPerks)(h, n) ? null : (0, a.jsx)(r.default, {
                    guild: t,
                    onDismissed: () => {
                        (0, i.hidePremiumGuildGracePeriodNotice)(n)
                    },
                    onClick: () => {
                        o.default.open(n, c.GuildSettingsSections.GUILD_PREMIUM)
                    },
                    message: f.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE,
                    trackingSource: c.ChannelNoticeCtaSources.GRACE_PERIOD_NOTICE,
                    type: c.ChannelNoticeTypes.GUILD_BOOSTING_GRACE_PERIOD,
                    image: E,
                    cta: f.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE_BUTTON,
                    ctaColor: l.ButtonColors.PRIMARY
                })
            }
        },
        377743: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("100527"),
                l = n("906732"),
                i = n("82950"),
                r = n("26323"),
                o = n("267642"),
                u = n("981631"),
                d = n("921944"),
                c = n("30513"),
                f = n("689938"),
                E = n("420569");

            function h(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, h = (0, o.getNumberOfAppliedBoostsNeededForTier)(t, u.BoostedGuildTiers.TIER_2), {
                    analyticsLocations: C
                } = (0, l.default)(s.default.GUILD_BANNER_NOTICE);
                return (0, a.jsx)(i.default, {
                    guild: t,
                    onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
                    cta: f.default.Messages.GUILD_BANNER_NOTICE_CTA,
                    message: f.default.Messages.GUILD_BANNER_NOTICE.format({
                        boostsNeeded: h
                    }),
                    type: u.ChannelNoticeTypes.GUILD_BANNER,
                    image: E,
                    onClick: () => (0, r.default)({
                        analyticsLocations: C,
                        analyticsSourceLocation: {
                            section: u.AnalyticsSections.CHANNEL_NOTICE,
                            object: u.AnalyticsObjects.SERVER_BANNER_TOOLTIP
                        },
                        guild: t,
                        perks: (0, c.guildBannerUpsellPerks)()
                    }),
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        834743: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("82950"),
                r = n("623624"),
                o = n("650774"),
                u = n("981631"),
                d = n("921944"),
                c = n("689938"),
                f = n("241626");
            class E extends s.PureComponent {
                render() {
                    let {
                        guild: e,
                        memberCount: t,
                        markAsDismissed: n
                    } = this.props;
                    return (0, a.jsx)(i.default, {
                        guild: e,
                        onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
                        onClick: this.handleButtonClick,
                        message: null == t || t < 30 ? c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_SMALL_GUILD : c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE,
                        cta: c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_BUTTON,
                        trackingSource: u.ChannelNoticeCtaSources.GUILD_SUBSCRIPTION_NOTICE,
                        type: u.ChannelNoticeTypes.GUILD_BOOSTING,
                        image: f,
                        imageMarginX: 26
                    })
                }
                constructor(...e) {
                    var t, n, a;
                    super(...e), t = this, n = "handleButtonClick", a = () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, r.openGuildBoostingMarketingModal)({
                            guildId: e.id,
                            location: {
                                section: u.AnalyticsSections.CHANNEL_NOTICE,
                                object: u.AnalyticsObjects.SERVER_STATUS_CTA
                            }
                        })
                    }, n in t ? Object.defineProperty(t, n, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[n] = a
                }
            }
            t.default = l.default.connectStores([o.default], e => {
                let {
                    guild: t
                } = e;
                return {
                    memberCount: o.default.getMemberCount(t.id)
                }
            })(E)
        },
        596557: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("704215"),
                i = n("481060"),
                r = n("785697"),
                o = n("626135"),
                u = n("700785"),
                d = n("645041"),
                c = n("981631"),
                f = n("921944"),
                E = n("647086"),
                h = n("135899");

            function C(e) {
                var t;
                let C = (0, r.useCanCurrentUserViewDisableUnsafeGuildSettingsNotice)(e),
                    _ = h.MODERATOR_PERMISSIONS.some(t => (null == e ? void 0 : e.id) !== E.FAVORITES_RAW_GUILD_ID && u.canEveryone(t, e)),
                    m = (null == e ? void 0 : e.defaultMessageNotifications) === c.UserNotificationSettings.ALL_MESSAGES,
                    S = (0, d.useIsContentDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : c.EMPTY_STRING_SNOWFLAKE_ID),
                    p = C && (_ || m) && !S,
                    I = s.useCallback(() => {
                        var t;
                        (0, d.markContentAsDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : c.EMPTY_STRING_SNOWFLAKE_ID, !0, f.ContentDismissActionType.DISMISS)
                    }, [e]),
                    g = s.useRef(!1);
                s.useEffect(() => {
                    if (p && !g.current) {
                        var t;
                        (0, i.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await Promise.all([n.e("99387"), n.e("54597")]).then(n.bind(n, "29022"));
                            return n => (0, a.jsx)(t, {
                                guild: e,
                                canEveryoneModerate: _,
                                isDefaultNotificationsAllMessages: m,
                                ...n
                            })
                        }, {
                            onCloseCallback: I
                        }), o.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                            type: l.DismissibleGuildContent[l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE],
                            guild_id: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : c.EMPTY_STRING_SNOWFLAKE_ID
                        }), g.current = !0
                    }
                }, [_, e, I, m, p])
            }
        },
        580079: function(e, t, n) {
            "use strict";
            n.r(t), n("653041"), n("47120"), n("724458");
            var a, s, l, i, r = n("392711"),
                o = n.n(r),
                u = n("442837"),
                d = n("570140"),
                c = n("592125");
            n("914010");
            var f = n("709054"),
                E = n("176505");
            let h = {},
                C = {},
                _ = {},
                m = {};

            function S(e) {
                let t = C[e];
                if (null == t) return;
                let n = f.default.fromTimestamp(Date.now() - 9e5),
                    a = o().findIndex(t, e => f.default.compare(e.id, n) > 0);
                if (-1 === a) C[e] = [];
                else {
                    let n = Math.max(a, t.length - 26);
                    C[e] = o().slice(t, n)
                }
                _[e] = Date.now()
            }

            function p(e, t, n, a) {
                h[e].add(t);
                let s = _[t];
                (null == s || s + 3e5 > Date.now()) && S(t), null == C[t] && (C[t] = []), C[t].push({
                    id: n,
                    userId: a
                })
            }

            function I(e) {
                let {
                    channel: t
                } = e;
                delete C[t.id], delete _[t.id]
            }
            class g extends(a = u.default.Store) {
                getActiveChannelsFetchStatus(e) {
                    return m[e]
                }
                getActiveChannelIds(e) {
                    return h[e]
                }
                getChannelMessageData(e) {
                    return C[e]
                }
                shouldFetch(e) {
                    var t;
                    return null == h[e] && !(null === (t = m[e]) || void 0 === t ? void 0 : t.loading)
                }
            }
            i = "ActiveChannelsStore", (l = "displayName") in(s = g) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, new g(d.default, {
                CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t,
                        guildId: n
                    } = e;
                    if (!(0, E.isGuildHomeChannel)(t) || null == n) return !1;
                    let a = h[n];
                    if (null == a) return !1;
                    a.forEach(e => {
                        var t;
                        S(e), (null === (t = C[e]) || void 0 === t ? void 0 : t.length) === 0 && delete C[e]
                    });
                    let s = o().chain(Array.from(a)).filter(e => e in C).sortBy(e => {
                        var t, n;
                        return -(null !== (n = null === (t = C[e]) || void 0 === t ? void 0 : t.length) && void 0 !== n ? n : 0)
                    }).value();
                    h[n] = new Set(s)
                },
                MESSAGE_CREATE: function(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a,
                        optimistic: s,
                        isPushNotification: l
                    } = e;
                    if (s || l) return !1;
                    let i = c.default.getChannel(n);
                    if (null == i) return !1;
                    let r = i.guild_id;
                    if (null == r || null == h[r]) return !1;
                    p(r, n, a.id, null === (t = a.author) || void 0 === t ? void 0 : t.id)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete h[t.id]
                },
                CHANNEL_DELETE: I,
                THREAD_DELETE: I,
                ACTIVE_CHANNELS_FETCH_START: function(e) {
                    let {
                        guildId: t
                    } = e;
                    m[t] = {
                        loading: !0,
                        error: null,
                        fetchedAt: Date.now()
                    }
                },
                ACTIVE_CHANNELS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        channels: n
                    } = e;
                    m[t] = {
                        loading: !1,
                        error: null,
                        fetchedAt: Date.now()
                    }, h[t] = new Set, n.forEach(e => {
                        let {
                            channel_id: n,
                            messages: a
                        } = e;
                        a.forEach(e => {
                            p(t, n, e.message_id, e.user_id)
                        })
                    })
                },
                ACTIVE_CHANNELS_FETCH_FAILURE: function(e) {
                    let {
                        guildId: t,
                        error: n
                    } = e;
                    m[t] = {
                        loading: !1,
                        error: n,
                        fetchedAt: null
                    }
                },
                CONNECTION_OPEN: function() {}
            })
        },
        523924: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("346656"),
                i = n("689938"),
                r = n("72226"),
                o = n("364632");
            t.default = e => {
                let {
                    headerId: t,
                    reapplyText: n,
                    onReapply: u,
                    confirmText: d,
                    onWithdrawApplication: c,
                    rejectionReason: f = null,
                    guild: E = null
                } = e;
                return (0, a.jsxs)("div", {
                    className: r.confirmation,
                    children: [(0, a.jsxs)("div", {
                        className: r.confirmationContent,
                        children: [null !== E ? (0, a.jsx)(l.default, {
                            size: l.default.Sizes.LARGER,
                            guild: E,
                            className: r.guildIcon
                        }) : (0, a.jsx)("img", {
                            alt: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_ICON,
                            src: o,
                            className: r.__invalid_verificationStateIcon
                        }), (0, a.jsx)(s.Heading, {
                            id: t,
                            variant: "heading-xl/semibold",
                            className: r.header,
                            children: (null == E ? void 0 : E.name) != null ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE_WITH_GUILD_NAME.format({
                                guildName: E.name
                            }) : i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE
                        }), null != f && "" !== f ? (0, a.jsx)(a.Fragment, {
                            children: (0, a.jsxs)(s.Text, {
                                variant: "text-sm/normal",
                                children: [(0, a.jsx)("span", {
                                    className: r.rejectionReasonLabel,
                                    children: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_REASON
                                }), (0, a.jsx)("span", {
                                    className: r.rejectionReason,
                                    children: f
                                })]
                            })
                        }) : null]
                    }), (0, a.jsxs)("div", {
                        className: r.confirmationButtonRow,
                        children: [(0, a.jsx)(s.Button, {
                            onClick: u,
                            color: s.Button.Colors.PRIMARY,
                            className: r.confirmationButton,
                            children: n
                        }), (0, a.jsx)(s.Button, {
                            onClick: c,
                            color: s.Button.Colors.RED,
                            className: r.confirmationButton,
                            children: d
                        })]
                    })]
                })
            }
        },
        390500: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("970606"),
                r = n("346656"),
                o = n("689938"),
                u = n("72226"),
                d = n("586522");
            t.default = function(e) {
                let {
                    onWithdrawApplication: t,
                    guild: n = null
                } = e, c = null == n ? void 0 : n.id;
                return s.useEffect(() => {
                    null != c && (0, i.trackMemberVerificationApplicationViewed)(c)
                }, [c]), (0, a.jsxs)("div", {
                    className: u.confirmation,
                    children: [(0, a.jsxs)("div", {
                        className: u.confirmationContent,
                        children: [null !== n ? (0, a.jsx)(r.default, {
                            size: r.default.Sizes.LARGER,
                            guild: n,
                            className: u.guildIcon
                        }) : (0, a.jsx)("img", {
                            alt: o.default.Messages.MEMBER_VERIFICATION_PENDING_APPLICATION_ICON,
                            src: d
                        }), (0, a.jsx)(l.Heading, {
                            variant: "heading-xl/semibold",
                            className: u.header,
                            children: (null == n ? void 0 : n.name) != null ? o.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE_WITH_GUILD_NAME.format({
                                guildName: n.name
                            }) : o.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE
                        }), (0, a.jsx)(l.Text, {
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            children: o.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_SUBTITLE
                        })]
                    }), (0, a.jsx)("div", {
                        className: u.confirmationButtonColumn,
                        children: (0, a.jsx)(l.Button, {
                            onClick: t,
                            look: l.Button.Looks.LINK,
                            color: l.Button.Colors.LINK,
                            size: l.Button.Sizes.SMALL,
                            children: o.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION
                        })
                    })]
                })
            }
        },
        6039: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("703656"),
                o = n("430824"),
                u = n("612744"),
                d = n("449934"),
                c = n("768581"),
                f = n("693546"),
                E = n("863249"),
                h = n("944163"),
                C = n("246364"),
                _ = n("937111"),
                m = n("523924"),
                S = n("390500"),
                p = n("200305"),
                I = n("981631"),
                g = n("756286"),
                T = n("689938"),
                A = n("531862");
            t.default = e => {
                var t;
                let n, N;
                let {
                    guildId: v,
                    inviteCode: R
                } = e, [O, L] = s.useState(g.WaveStates.INITIAL), P = (0, l.useStateFromStores)([h.default], () => h.default.get(v)), y = (0, l.useStateFromStores)([_.default], () => _.default.getRequest(v)), M = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(v)), {
                    hasFetchedRequestToJoinGuilds: D,
                    guildPreviewDisabled: x
                } = (0, l.useStateFromStoresObject)([_.default], () => ({
                    hasFetchedRequestToJoinGuilds: _.default.hasFetchedRequestToJoinGuilds,
                    guildPreviewDisabled: _.default.getJoinRequestGuild(v)
                }));
                s.useEffect(() => {
                    null != M && (0, r.transitionTo)(I.Routes.CHANNEL(v))
                }, [M, v]), s.useEffect(() => {
                    !D && f.default.fetchRequestToJoinGuilds()
                }, [D]);
                let b = s.useCallback(e => {
                        L(t => Math.max(t, e))
                    }, []),
                    U = async e => {
                        await E.default.submitVerificationForm(v, e)
                    }, j = () => {
                        f.default.resetGuildJoinRequest(v)
                    };
                let G = (n = T.default.Messages.MEMBER_VERIFICATION_WITHDRAW_APPLICATION_CONFIRMATION.format({
                        name: null == x ? void 0 : x.toString()
                    }), N = () => {
                        L(Math.max(O, g.WaveStates.FILLING)), f.default.removeGuildJoinRequest(v), (0, r.transitionTo)(I.Routes.ME)
                    }, () => {
                        (0, i.openModal)(e => (0, a.jsx)(i.ConfirmModal, {
                            header: T.default.Messages.MEMBER_VERIFICATION_CONFIRM_LEAVE_TITLE,
                            cancelText: T.default.Messages.NEVERMIND,
                            onConfirm: N,
                            confirmText: T.default.Messages.YES_TEXT,
                            confirmButtonColor: i.Button.Colors.RED,
                            ...e,
                            children: (0, a.jsx)(i.Text, {
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                children: n
                            })
                        }))
                    }),
                    w = (null == P ? void 0 : null === (t = P.guild) || void 0 === t ? void 0 : t.splash) != null ? c.default.getGuildSplashURL({
                        id: P.guild.id,
                        splash: P.guild.splash
                    }) : (0, d.getArtForPath)();
                return (0, a.jsx)("div", {
                    className: A.page,
                    children: (0, a.jsxs)(u.default, {
                        embedded: !0,
                        splash: w,
                        waveState: O,
                        showLogo: !1,
                        updateWaveState: b,
                        children: [(0, a.jsx)("div", {
                            className: A.dragRegion
                        }), (0, a.jsx)("div", {
                            className: A.contentWrapper,
                            children: (() => {
                                switch (null == y ? void 0 : y.applicationStatus) {
                                    case C.GuildJoinRequestApplicationStatuses.SUBMITTED:
                                        return (0, a.jsx)(S.default, {
                                            onWithdrawApplication: G,
                                            guild: x
                                        });
                                    case C.GuildJoinRequestApplicationStatuses.REJECTED:
                                        return (0, a.jsx)(m.default, {
                                            reapplyText: T.default.Messages.MEMBER_VERIFICATION_APPLICATION_REAPPLY,
                                            onReapply: j,
                                            confirmText: T.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION,
                                            onWithdrawApplication: G,
                                            rejectionReason: null == y ? void 0 : y.rejectionReason,
                                            guild: x
                                        });
                                    default:
                                        return (0, a.jsx)(p.default, {
                                            guildId: v,
                                            inviteCode: R,
                                            onComplete: U
                                        })
                                }
                            })()
                        })]
                    })
                })
            }
        },
        584233: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                doGuildOnboardingForPostAuthInvite: function() {
                    return i
                }
            });
            var a = n("447543"),
                s = n("652898"),
                l = n("430824");
            async function i(e) {
                let {
                    code: t
                } = e, i = (await (0, s.default)(t)).invite;
                if (null == i || null == i.guild) return;
                if (await
                    function() {
                        return new Promise(e => {
                            l.default.addConditionalChangeListener(() => !l.default.isLoaded() || (e(), !1))
                        })
                    }(), null == l.default.getGuild(i.guild.id)) return;
                let {
                    default: r
                } = await Promise.resolve().then(n.bind(n, "17181"));
                await r({
                    guildId: i.guild.id
                }), a.default.transitionToInvite(i)
            }
        },
        326145: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("745752"),
                r = n("17181"),
                o = n("689938"),
                u = n("485892");

            function d(e) {
                let {
                    guildId: t,
                    channelId: n
                } = e, d = s.useCallback(() => {
                    null != t && null != n && ((0, i.startOnboarding)(t), (0, r.default)({
                        guildId: t,
                        returnChannelId: n
                    }))
                }, [t, n]);
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsxs)("div", {
                        className: u.explainerContainer,
                        children: [(0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            children: o.default.Messages.ONBOARDING_ERROR_PAGE_TEXT
                        }), (0, a.jsx)(l.Button, {
                            onClick: d,
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                children: o.default.Messages.START_ONBOARDING
                            })
                        })]
                    })
                })
            }
        },
        408042: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("653041");
            var a, s = n("442837"),
                l = n("570140"),
                i = n("314897"),
                r = n("592125"),
                o = n("430824"),
                u = n("709054"),
                d = n("231873");

            function c(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let f = {};

            function E(e, t) {
                let n = f[e];
                return !(null == n || n.has(t)) && (f[e] = new Set(n.add(t)), !0)
            }
            class h extends(a = s.default.PersistedStore) {
                initialize(e) {
                    this.waitFor(i.default, o.default), f = {}, null != e && u.default.keys(e).forEach(t => {
                        let n = e[t];
                        null != n && "function" == typeof n[Symbol.iterator] && (f[t] = new Set(n))
                    })
                }
                getProgress(e) {
                    return f[e]
                }
                hasProgress(e) {
                    let t = f[e];
                    return null != t && !t.has(d.Steps.DISMISSED)
                }
                getState() {
                    return f
                }
            }
            c(h, "displayName", "GuildProgressStore"), c(h, "persistKey", "GuildProgressStore"), new h(l.default, {
                CONNECTION_OPEN: function() {
                    let e = [];
                    u.default.keys(f).forEach(t => {
                        f[t].has(d.Steps.COMPLETED) && e.push(t)
                    }), e.forEach(e => E(e, d.Steps.DISMISSED))
                },
                GUILD_PROGRESS_INITIALIZE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    null == f[t] && (f[t] = new Set), !f[t].has(d.Steps.COMPLETED) && f[t].delete(d.Steps.DISMISSED)
                },
                GUILD_PROGRESS_COMPLETED_SEEN: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == f[t]) return !1;
                    f[t] = new Set(f[t].add(d.Steps.COMPLETED))
                },
                GUILD_PROGRESS_DISMISS: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return E(t, d.Steps.DISMISSED)
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: {
                            id: t,
                            member_count: n
                        }
                    } = e, a = o.default.getGuild(t);
                    if (null == a) return !1;
                    a.ownerId === i.default.getId() && null != f[a.id] && (null != a.icon && f[a.id].add(d.Steps.AVATAR), n > 1 && f[a.id].add(d.Steps.INVITE))
                },
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return null != t && null != t.guild_id && null != f[t.guild_id] && E(t.guild_id, d.Steps.CHANNEL)
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let e of t) null != e && null != e.guild_id && null != f[e.guild_id] && !1 !== E(e.guild_id, d.Steps.CHANNEL) && (n = !0);
                    return n
                },
                GUILD_SETTINGS_SUBMIT_SUCCESS: function(e) {
                    let {
                        guild: t
                    } = e;
                    return null != t && null != t.id && null != f[t.id] && null != t.icon && E(t.id, d.Steps.AVATAR)
                },
                MESSAGE_CREATE: function(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e, s = r.default.getChannel(n);
                    return (null === (t = a.author) || void 0 === t ? void 0 : t.id) === i.default.getId() && null != s && null != f[s.guild_id] && E(s.guild_id, d.Steps.MESSAGE)
                },
                GUILD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        guildId: t,
                        memberCount: n
                    } = e;
                    return null != f[t] && !!(n > 1) && E(t, d.Steps.INVITE)
                }
            })
        },
        440190: function(e, t, n) {
            "use strict";
            let a;
            n.r(t);
            var s, l, i, r, o = n("442837"),
                u = n("570140"),
                d = n("900849");
            let c = null,
                f = !1,
                E = !1;
            class h extends(r = o.default.Store) {
                getRecommendedGuilds() {
                    return c
                }
                getLoadId() {
                    return a
                }
                isFetching() {
                    return f
                }
                failed() {
                    return E
                }
            }
            i = "GuildRecommendationsStore", (l = "displayName") in(s = h) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, t.default = new h(u.default, {
                GUILD_RECOMMENDATION_FETCH: function() {
                    f = !0
                },
                GUILD_RECOMMENDATION_FETCH_SUCCESS: function(e) {
                    c = e.recommendedGuilds.map(d.makeDiscoverableGuild), a = e.loadId, f = !1
                },
                GUILD_RECOMMENDATION_FETCH_FAILURE: function() {
                    E = !0, f = !1
                }
            })
        },
        817520: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("442837"),
                s = n("430824"),
                l = n("644542"),
                i = n("923726"),
                r = n("144507"),
                o = n("981631");

            function u(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForTierTemplates)(e),
                    u = (0, i.useUserEligibleForTierTemplates)(),
                    d = (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)) === !0 && (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE)) === !1,
                    c = (0, r.canManageGuildRoleSubscriptions)(t);
                return d && u && c && l.GuildRoleSubscriptionsTierTemplatesExperiment.trackExposure({
                    guildId: e,
                    location: "ca30d9_1"
                }), d && u && c && n
            }
        },
        999309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("442837"),
                s = n("223892"),
                l = n("430824"),
                i = n("594174"),
                r = n("981631");

            function o(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.getGuild(e)),
                    o = (0, a.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    u = (null == n ? void 0 : n.ownerId) === (null == o ? void 0 : o.id),
                    d = (0, s.useIsUserInCreatorMonetizationEligibleCountry)();
                return u && null !== (t = null == n ? void 0 : n.hasFeature(r.GuildFeatures.COMMUNITY)) && void 0 !== t && t && d && !((null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED)))
            }
        },
        433280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("990547"),
                l = n("399606"),
                i = n("213609"),
                r = n("434404"),
                o = n("970731"),
                u = n("430824"),
                d = n("594174"),
                c = n("981631"),
                f = n("689938"),
                E = n("842265"),
                h = n("217110");

            function C(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e, C = (0, l.useStateFromStores)([u.default, d.default], () => {
                    let e = d.default.getCurrentUser(),
                        n = u.default.getGuild(t);
                    return (null == n ? void 0 : n.isOwner(e)) === !0
                });
                return (0, i.default)({
                    type: s.ImpressionTypes.POPOUT,
                    name: s.ImpressionNames.ENABLE_CREATOR_MONETIZATION_GUILD_HEADER_UPSELL,
                    properties: {
                        guild_id: t,
                        is_owner: C
                    }
                }), (0, a.jsx)("div", {
                    className: E.container,
                    children: (0, a.jsx)(o.default, {
                        header: f.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_HEADER,
                        content: f.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_BODY,
                        asset: (0, a.jsx)("div", {
                            className: E.image,
                            children: (0, a.jsx)("img", {
                                alt: f.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_IMG_ALT,
                                src: h,
                                className: E.image
                            })
                        }),
                        buttonCTA: f.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_UPSELL_CTA,
                        onClick: () => {
                            r.default.open(t, c.GuildSettingsSections.ROLE_SUBSCRIPTIONS)
                        },
                        secondaryButtonCTA: f.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        34131: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("434404"),
                l = n("970731"),
                i = n("810090"),
                r = n("981631"),
                o = n("689938"),
                u = n("497762");

            function d(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsx)(l.default, {
                        header: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_TITLE,
                        content: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_BODY,
                        asset: (0, a.jsx)(i.default, {
                            className: u.video,
                            src: "https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov",
                            autoPlay: !0,
                            loop: !0
                        }),
                        buttonCTA: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_CTA,
                        onClick: () => {
                            s.default.open(t, r.GuildSettingsSections.ROLE_SUBSCRIPTIONS, void 0, r.GuildSettingsSubsections.ROLE_SUBSCRIPTION_TIER_TEMPLATE)
                        },
                        secondaryButtonCTA: o.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        939225: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("230711"),
                i = n("931547"),
                r = n("981631"),
                o = n("526761"),
                u = n("689938");

            function d(e) {
                let {
                    subscription: t
                } = e;
                return null == t ? null : t.status === r.SubscriptionStatusTypes.PAST_DUE ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(s.Spacer, {
                        size: 16
                    }), (0, a.jsx)(i.default, {
                        message: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                        ctaMessage: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_CTA,
                        onClick: () => {
                            l.default.open(r.UserSettingsSections.SUBSCRIPTIONS, o.ROLE_SUBSCRIPTION_SUBSECTION)
                        }
                    })]
                }) : null
            }
        },
        475413: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("584825"),
                i = n("290348"),
                r = n("934826"),
                o = n("660196"),
                u = n("330181"),
                d = n("939225"),
                c = n("36246"),
                f = n("305342"),
                E = n("726324"),
                h = n("981631"),
                C = n("689938"),
                _ = n("82205");
            t.default = e => {
                var t, n;
                let {
                    guild: m
                } = e, S = (0, l.useGroupListingsForGuild)(m.id)[0];
                (0, o.default)({
                    guildId: m.id,
                    groupListingId: null == S ? void 0 : S.id,
                    location: h.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB,
                    relevantSubscriptionListingIds: null == S ? void 0 : S.subscription_listings_ids
                });
                let {
                    activeSubscription: p
                } = (0, r.default)(null == S ? void 0 : S.id), I = (0, l.useSubscriptionsSettings)(m.id), g = null == I ? void 0 : I.description, {
                    editStateIds: T
                } = i.useEditStateIds(null !== (t = null == S ? void 0 : S.id) && void 0 !== t ? t : null, m.id);
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)(E.default, {
                        title: C.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_PAGE_GROUP_CTA.format({
                            serverName: m.toString()
                        }),
                        description: null != g ? g : null,
                        coverImageAsset: null !== (n = null == I ? void 0 : I.cover_image_asset) && void 0 !== n ? n : null,
                        guild: m,
                        children: [null != S ? (0, a.jsx)(u.default, {
                            className: _.pendingPlanChangeNotice,
                            groupListingId: S.id,
                            subscription: p
                        }) : null, (0, a.jsx)(d.default, {
                            subscription: p
                        })]
                    }), (0, a.jsx)(s.HeadingLevel, {
                        children: (0, a.jsx)(c.default, {
                            guildId: m.id,
                            children: T.map(e => {
                                var t;
                                return (0, a.jsx)(f.default, {
                                    guildId: m.id,
                                    groupListingId: null !== (t = null == S ? void 0 : S.id) && void 0 !== t ? t : "",
                                    listingId: e,
                                    analyticsLocation: h.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB
                                }, e)
                            })
                        })
                    })]
                })
            }
        },
        20967: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildRoleSubscriptionsOverviewErrorPage: function() {
                    return f
                },
                GuildRoleSubscriptionsOverviewErrorType: function() {
                    return s
                }
            });
            var a, s, l = n("735250");
            n("470079");
            var i = n("990547"),
                r = n("481060"),
                o = n("213609"),
                u = n("689938"),
                d = n("226882"),
                c = n("837753");
            (a = s || (s = {})).GUILD_NOT_ELIGIBLE = "guild_not_eligible", a.NOT_GUILD_MEMBER = "not_guild_member";
            let f = e => {
                let {
                    errorType: t
                } = e;
                return (0, o.default)({
                    type: i.ImpressionTypes.PAGE,
                    name: i.ImpressionNames.ROLE_SUBSCRIPTION_LISTING_UPSELL_ERROR_PAGE,
                    properties: {
                        error_page_type: t
                    }
                }), (0, l.jsx)("div", {
                    className: d.errorPageContainer,
                    children: (0, l.jsxs)("div", {
                        className: d.errorPageContent,
                        children: [(0, l.jsx)("img", {
                            src: c,
                            alt: "",
                            className: d.errorPageIllo
                        }), (0, l.jsx)(r.Heading, {
                            variant: "heading-xl/extrabold",
                            className: d.errorPageTitle,
                            children: "guild_not_eligible" === t ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_TITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_TITLE
                        }), (0, l.jsx)(r.Text, {
                            variant: "text-md/normal",
                            className: d.errorPagSubtitle,
                            children: "guild_not_eligible" === t ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_SUBTITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_SUBTITLE
                        })]
                    })
                })
            }
        },
        269675: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("873546"),
                i = n("442837"),
                r = n("481060"),
                o = n("355467"),
                u = n("270237"),
                d = n("252618"),
                c = n("423000"),
                f = n("200876"),
                E = n("674180"),
                h = n("38618"),
                C = n("984370"),
                _ = n("430824"),
                m = n("351402"),
                S = n("730647"),
                p = n("772021"),
                I = n("396828"),
                g = n("475413"),
                T = n("20967"),
                A = n("504762"),
                N = n("807152"),
                v = n("176505"),
                R = n("689938"),
                O = n("468653");

            function L(e) {
                let {
                    guildId: t
                } = e, n = (0, i.useStateFromStores)([_.default], () => _.default.getGuild(t), [t]), L = (0, i.useStateFromStores)([h.default], () => h.default.isConnected()), P = (0, f.default)(t), y = (0, p.default)(t), M = (0, i.useStateFromStores)([m.default], () => m.default.isSubscriptionFetching), D = (0, S.useGroupListingsFetchContext)(), {
                    shouldHideGuildPurchaseEntryPoints: x,
                    restrictionsLoading: b
                } = (0, E.useShouldHideGuildPurchaseEntryPoints)(t), U = null == n || !D || M || b;
                (0, d.usePageTitle)({
                    subsection: R.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                    location: null == n ? void 0 : n.name
                }), (0, u.default)(l.isMobile ? "role-subscriptions-overview" : void 0);
                let j = L && (null == n || !(P || y) || x && !b);
                if (s.useEffect(() => {
                        o.fetchSubscriptions()
                    }, []), s.useEffect(() => {
                        j && !l.isMobile && (0, c.handleInaccessiblePage)(t, v.StaticChannelRoute.ROLE_SUBSCRIPTIONS)
                    }, [t, j]), l.isMobile && j) {
                    let e = null == n ? T.GuildRoleSubscriptionsOverviewErrorType.NOT_GUILD_MEMBER : T.GuildRoleSubscriptionsOverviewErrorType.GUILD_NOT_ELIGIBLE;
                    return (0, a.jsx)(T.GuildRoleSubscriptionsOverviewErrorPage, {
                        errorType: e
                    })
                }
                return (0, a.jsxs)("div", {
                    className: O.container,
                    children: [(0, a.jsxs)(C.default, {
                        toolbar: (0, a.jsx)(s.Fragment, {}),
                        className: O.headerBar,
                        children: [(0, a.jsx)(C.default.Icon, {
                            icon: I.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(C.default.Title, {
                            children: R.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                        })]
                    }), (0, a.jsx)("div", {
                        id: N.OVERVIEW_NOTICE_ROOT
                    }), (0, a.jsx)("div", {
                        className: O.content,
                        children: P ? (0, a.jsx)(r.ScrollerNone, {
                            className: O.scroller,
                            children: (0, a.jsx)("div", {
                                className: O.scrollerContent,
                                children: U ? (0, a.jsx)(r.Spinner, {}) : (0, a.jsx)(g.default, {
                                    guild: n
                                })
                            })
                        }) : (0, a.jsx)(A.default, {})
                    })]
                })
            }

            function P(e) {
                let {
                    guildId: t
                } = e;
                return (0, a.jsx)(S.GroupListingsFetchContextProvider, {
                    guildId: t,
                    refetchOnMount: !0,
                    children: (0, a.jsx)(L, {
                        guildId: t
                    })
                })
            }
        },
        504762: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("689938"),
                i = n("201953"),
                r = n("217110");

            function o() {
                return (0, a.jsx)("div", {
                    className: i.container,
                    children: (0, a.jsxs)("div", {
                        className: i.content,
                        children: [(0, a.jsx)("img", {
                            src: r,
                            alt: l.default.Messages.CREATOR_MONETIZATION_NOTICE_ILLO_A11Y_LABEL
                        }), (0, a.jsx)(s.Spacer, {
                            size: 12
                        }), (0, a.jsx)(s.Heading, {
                            className: i.header,
                            variant: "heading-lg/semibold",
                            children: l.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_TITLE
                        }), (0, a.jsx)(s.Spacer, {
                            size: 8
                        }), (0, a.jsx)(s.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: l.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_DESCRIPTION
                        })]
                    })
                })
            }
        },
        807152: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OVERVIEW_NOTICE_ROOT: function() {
                    return a
                }
            });
            let a = "guild-role-subscription-overview-notice"
        },
        726324: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("695346"),
                i = n("346656"),
                r = n("506071"),
                o = n("353254"),
                u = n("66693");

            function d(e) {
                let {
                    coverImageAsset: t,
                    title: n,
                    guild: d,
                    description: c,
                    children: f
                } = e, E = l.GifAutoPlay.useSetting(), h = (0, r.useIsWindowFocused)(), [C, _] = (0, o.default)(t, h && E);
                return (0, a.jsxs)("div", {
                    className: u.container,
                    children: [(0, a.jsx)("div", {
                        ref: C,
                        className: u.coverImageContainer,
                        children: null != _ && (0, a.jsx)("img", {
                            src: _,
                            alt: "",
                            className: u.coverImage
                        })
                    }), (0, a.jsx)("div", {
                        className: u.guildIconContainer,
                        children: (0, a.jsx)(i.default, {
                            guild: d,
                            size: i.default.Sizes.XLARGE
                        })
                    }), (0, a.jsx)(s.Heading, {
                        variant: "heading-xl/semibold",
                        className: u.ctaTitle,
                        children: n
                    }), (0, a.jsx)(s.Text, {
                        className: u.ctaSubtitle,
                        variant: "text-md/normal",
                        color: "header-secondary",
                        children: c
                    }), f]
                })
            }
        },
        504160: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hideLiveChannelNotice: function() {
                    return s
                },
                hideUpcomingEventNotice: function() {
                    return l
                },
                markUpcomingEventNoticeAsSeen: function() {
                    return i
                }
            });
            var a = n("570140");

            function s(e) {
                let {
                    eventId: t,
                    stageId: n
                } = e;
                (null != t || null != n) && a.default.dispatch({
                    type: "LIVE_CHANNEL_NOTICE_HIDE",
                    eventId: t,
                    stageId: n
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_HIDE",
                    eventId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_SEEN",
                    guildEventId: e
                })
            }
        },
        151864: function(e, t, n) {
            "use strict";
            n.r(t), n("653041");
            var a, s = n("442837"),
                l = n("570140"),
                i = n("765305");

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let o = {
                hiddenEventsAndStages: []
            };
            class u extends(a = s.default.PersistedStore) {
                initialize(e) {
                    null != e && null != e.hiddenEventsAndStages && (o = e)
                }
                isLiveChannelNoticeHidden(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    return !!(null != n && o.hiddenEventsAndStages.includes("stage-".concat(n))) || null != t && o.hiddenEventsAndStages.includes("event-".concat(t))
                }
                getState() {
                    return o
                }
            }
            r(u, "displayName", "LiveChannelNoticesStore"), r(u, "persistKey", "liveChannelNotices_v2"), t.default = new u(l.default, {
                LIVE_CHANNEL_NOTICE_HIDE: function(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    null != t ? o.hiddenEventsAndStages.push("event-".concat(t)) : null != n && o.hiddenEventsAndStages.push("stage-".concat(n))
                },
                GUILD_SCHEDULED_EVENT_UPDATE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    o.hiddenEventsAndStages.includes(n) && (t.status === i.GuildScheduledEventStatus.CANCELED || t.status === i.GuildScheduledEventStatus.COMPLETED) && (o.hiddenEventsAndStages = o.hiddenEventsAndStages.filter(e => e !== n))
                },
                GUILD_SCHEDULED_EVENT_DELETE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    o.hiddenEventsAndStages.includes(n) && (o.hiddenEventsAndStages = o.hiddenEventsAndStages.filter(e => e !== n))
                },
                STAGE_INSTANCE_DELETE: function(e) {
                    let {
                        instance: t
                    } = e, n = "stage-".concat(t.id);
                    o.hiddenEventsAndStages.includes(n) && (o.hiddenEventsAndStages = o.hiddenEventsAndStages.filter(e => e !== n))
                }
            })
        },
        497656: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActiveEventOrStageInstanceChannel: function() {
                    return i
                }
            });
            var a = n("517334"),
                s = n("592125"),
                l = n("554747");

            function i(e) {
                var t;
                let n = (0, l.useFirstActiveEventChannel)(e),
                    i = (0, a.default)(e),
                    r = s.default.getChannel(null === (t = i[0]) || void 0 === t ? void 0 : t.id);
                return null != n ? n : r
            }
        },
        300213: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildHasLiveChannelNotice: function() {
                    return u
                }
            });
            var a = n("442837"),
                s = n("427679"),
                l = n("517334"),
                i = n("592125"),
                r = n("151864"),
                o = n("554747");

            function u(e) {
                var t;
                let n = (0, l.default)(e),
                    u = i.default.getChannel(null === (t = n[0]) || void 0 === t ? void 0 : t.id),
                    d = (0, a.useStateFromStores)([s.default], () => s.default.getStageInstanceByChannel(null == u ? void 0 : u.id), [u]),
                    c = (0, o.useGuildActiveEvent)(e),
                    {
                        isStageNoticeHidden: f,
                        isEventNoticeHidden: E
                    } = (0, a.useStateFromStoresObject)([r.default], () => ({
                        isStageNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            stageId: null == d ? void 0 : d.id
                        }),
                        isEventNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            eventId: null == c ? void 0 : c.id
                        })
                    }), [d, c]);
                if (null != c) return null != d ? !f : !E;
                return null != d && !f
            }
        },
        862099: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildNoticeBody: function() {
                    return Q
                },
                LiveVoiceOrStageChannelNotice: function() {
                    return ea
                },
                VoiceChannelType: function() {
                    return a
                }
            }), n("47120");
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("120356"),
                o = n.n(r),
                u = n("442837"),
                d = n("481060"),
                c = n("471445"),
                f = n("986332"),
                E = n("662842"),
                h = n("703656"),
                C = n("922482"),
                _ = n("565799"),
                m = n("501655"),
                S = n("192079"),
                p = n("427679"),
                I = n("448206"),
                g = n("496675"),
                T = n("938475"),
                A = n("808602"),
                N = n("305878"),
                v = n("263704"),
                R = n("465670"),
                O = n("242315"),
                L = n("393112"),
                P = n("170039"),
                y = n("602623"),
                M = n("626135"),
                D = n("823379"),
                x = n("15274"),
                b = n("924301"),
                U = n("504160"),
                j = n("151864"),
                G = n("835184"),
                w = n("725436"),
                k = n("497656"),
                B = n("79874"),
                F = n("554747"),
                H = n("230900"),
                V = n("854698"),
                Y = n("139712"),
                W = n("765305"),
                K = n("981631"),
                z = n("689938"),
                q = n("107677");
            let Q = i.memo(function(e) {
                let {
                    heading: t,
                    location: n,
                    locationIcon: a,
                    details: s,
                    detailsIcon: i,
                    topic: r,
                    onClickCloseIcon: u,
                    onClickTopicText: c,
                    children: f
                } = e, E = (0, l.jsx)(d.Text, {
                    color: "header-primary",
                    variant: "text-md/semibold",
                    className: q.eventName,
                    children: r
                });
                return (0, l.jsxs)("div", {
                    className: q.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: o()(q.textBlock, q.singleLine),
                        children: [(0, l.jsx)("div", {
                            className: q.liveIndicator
                        }), (0, l.jsx)(d.Text, {
                            color: "text-positive",
                            variant: "text-xs/bold",
                            className: q.liveNowText,
                            children: t
                        }), null != u && (0, l.jsx)(d.Clickable, {
                            onClick: u,
                            className: q.closeIcon,
                            "aria-label": z.default.Messages.CLOSE,
                            children: (0, l.jsx)(R.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), null == c ? E : (0, l.jsx)(d.Button, {
                        size: d.Button.Sizes.MIN,
                        look: d.Button.Looks.LINK,
                        color: d.Button.Colors.PRIMARY,
                        onClick: c,
                        children: E
                    }), (0, l.jsxs)("div", {
                        className: o()(q.textBlock, q.singleLine),
                        children: [a, (0, l.jsx)(d.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: q.channelName,
                            children: n
                        }), null != s && null != i && (0, l.jsxs)(l.Fragment, {
                            children: [(0, l.jsx)(d.Text, {
                                className: q.dotDivider,
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: "•"
                            }), i, (0, l.jsx)(d.Text, {
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: s
                            })]
                        })]
                    }), f]
                })
            });

            function Z(e) {
                let {
                    guildEvent: t,
                    channel: n
                } = e, a = (0, u.useStateFromStoresArray)([T.default], () => T.default.getVoiceStatesForChannel(n).map(e => {
                    let {
                        user: t
                    } = e;
                    return t
                }), [n]), s = (0, c.getChannelIconComponent)(n);
                return (0, l.jsx)(Q, {
                    onClickCloseIcon: () => (0, U.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: z.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    topic: t.name,
                    location: n.name,
                    locationIcon: null != s ? (0, l.jsx)(s, {
                        width: 16,
                        height: 16,
                        className: q.stageIcon
                    }) : null,
                    children: (0, l.jsx)(ea, {
                        channel: n,
                        speakers: a,
                        voiceType: 1
                    })
                })
            }

            function X(e) {
                let {
                    guildEvent: t,
                    noticeType: n
                } = e, a = (0, V.getNextRecurrenceIdInEvent)(t), s = (0, u.useStateFromStores)([b.default], () => b.default.isInterestedInEventRecurrence(t.id, a), [t.id, a]), i = (0, u.useStateFromStores)([G.default], () => G.default.getUpcomingNoticeSeenTime(t.id), [t.id]);
                return !s && null == i && (0, U.markUpcomingEventNoticeAsSeen)(t.id), (0, l.jsxs)(d.Button, {
                    fullWidth: !0,
                    className: q.joinButton,
                    innerClassName: q.rsvpButton,
                    onClick: function() {
                        (0, Y.default)(t.id, null, t.guild_id, () => setTimeout(() => (0, U.hideUpcomingEventNotice)(t.id), 1e3)), M.default.track(K.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                            guild_id: t.guild_id,
                            notice_type: n
                        })
                    },
                    look: s ? d.Button.Looks.OUTLINED : d.Button.Looks.FILLED,
                    color: s ? d.Button.Colors.TRANSPARENT : d.Button.Colors.GREEN,
                    size: d.Button.Sizes.SMALL,
                    children: [s ? (0, l.jsx)(v.default, {
                        width: 16,
                        height: 16,
                        className: q.buttonIcon
                    }) : (0, l.jsx)(A.default, {
                        width: 16,
                        height: 16,
                        className: q.buttonIcon
                    }), z.default.Messages.INDICATE_RSVP]
                })
            }

            function J(e) {
                var t;
                let {
                    guildEvent: n,
                    noticeType: a
                } = e, s = (0, H.getLocationFromEvent)(n), r = null != s ? (0, w.guildEventDetailsParser)(s, !0) : null, u = (0, H.getChannelFromEvent)(n), f = (0, c.getChannelIconComponent)(u), {
                    startTime: E,
                    endTime: h
                } = (0, B.default)(n), {
                    startDateTimeString: C,
                    upcomingEvent: _,
                    diffMinutes: m
                } = (0, V.getEventTimeData)(E.toISOString(), null == h ? void 0 : h.toISOString()), S = _ ? m > 0 ? z.default.Messages.STARTING_IN_MINUTES.format({
                    minutes: m
                }) : z.default.Messages.STARTING_SOON : z.default.Messages.STARTING_ON_DATE.format({
                    date: C
                });
                return i.useEffect(() => {
                    M.default.track(K.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                        notice_type: a,
                        guild_id: n.guild_id
                    })
                }, [n, a]), (0, l.jsxs)("div", {
                    className: q.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: q.textBlock,
                        children: [(0, l.jsx)(d.Clickable, {
                            onClick: () => (0, x.openGuildEventDetails)({
                                eventId: n.id
                            }),
                            className: q.eventNameClickable,
                            children: (0, l.jsx)(d.Text, {
                                color: "header-primary",
                                variant: "text-md/semibold",
                                className: q.eventName,
                                children: n.name
                            })
                        }), (0, l.jsx)(d.Clickable, {
                            onClick: () => {
                                M.default.track(K.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: a,
                                    guild_id: n.guild_id
                                }), (0, U.hideUpcomingEventNotice)(n.id)
                            },
                            className: q.closeIcon,
                            "aria-label": z.default.Messages.CLOSE,
                            children: (0, l.jsx)(R.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), (0, l.jsxs)("div", {
                        className: o()(q.textBlock, q.singleLine),
                        children: [(0, l.jsx)(N.default, {
                            className: q.stageIcon,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(d.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: q.startTime,
                            children: S
                        })]
                    }), (0, l.jsxs)("div", {
                        className: o()(q.textBlock, q.singleLine),
                        children: [null != f ? (0, l.jsx)(f, {
                            width: 16,
                            height: 16,
                            className: q.stageIcon
                        }) : (0, l.jsx)(L.default, {
                            width: 16,
                            height: 16,
                            className: q.stageIcon
                        }), (0, l.jsx)(d.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: q.channelName,
                            children: null !== (t = null == u ? void 0 : u.name) && void 0 !== t ? t : r
                        })]
                    }), (0, l.jsx)(X, {
                        guildEvent: n,
                        noticeType: a
                    })]
                })
            }

            function $(e) {
                let {
                    guildEvent: t
                } = e, n = (0, H.getLocationFromEvent)(t);
                return null == n ? null : (0, l.jsx)(Q, {
                    onClickCloseIcon: () => (0, U.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: z.default.Messages.HAPPENING_NOW,
                    topic: t.name,
                    location: (0, w.guildEventDetailsParser)(n, !0),
                    locationIcon: (0, l.jsx)(L.default, {
                        width: 16,
                        height: 16,
                        className: q.stageIcon
                    }),
                    children: (0, l.jsx)(ee, {
                        guildEvent: t
                    })
                })
            }

            function ee(e) {
                let {
                    guildEvent: t
                } = e, n = i.useCallback(() => {
                    (0, x.openGuildEventDetails)({
                        eventId: t.id
                    })
                }, [t]);
                return (0, l.jsx)(d.Button, {
                    fullWidth: !0,
                    className: q.joinButton,
                    onClick: n,
                    color: d.Button.Colors.GREEN,
                    size: d.Button.Sizes.SMALL,
                    children: z.default.Messages.SEE_DETAIL
                })
            }

            function et(e) {
                let {
                    channel: t,
                    label: n
                } = e;
                return (0, l.jsx)(d.Button, {
                    fullWidth: !0,
                    className: q.joinButton,
                    onClick: () => {
                        null != t && null != t.getGuildId() && ((0, C.connectAndOpen)(t), (0, h.transitionToGuild)(t.getGuildId(), t.id))
                    },
                    color: d.Button.Colors.GREEN,
                    size: d.Button.Sizes.SMALL,
                    children: n
                })
            }

            function en(e) {
                let {
                    stageInstance: t,
                    channel: n
                } = e, a = (0, u.useStateFromStoresArray)([_.default], () => [...new Set(_.default.getMutableParticipants(n.id, m.StageChannelParticipantNamedIndex.SPEAKER).map(e => e.user))], [n.id]), s = (0, u.useStateFromStores)([_.default], () => _.default.getParticipantCount(n.id, m.StageChannelParticipantNamedIndex.AUDIENCE), [n.id]), i = z.default.Messages.LISTENING_COUNT.format({
                    count: "".concat(s)
                });
                return (0, l.jsx)(Q, {
                    onClickCloseIcon: () => (0, U.hideLiveChannelNotice)({
                        stageId: null == t ? void 0 : t.id
                    }),
                    heading: z.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    location: n.name,
                    details: i,
                    detailsIcon: (0, l.jsx)(O.default, {
                        width: 14,
                        height: 14,
                        className: q.stageIcon
                    }),
                    locationIcon: (0, l.jsx)(P.default, {
                        width: 16,
                        height: 16,
                        className: q.stageIcon
                    }),
                    topic: t.topic,
                    children: (0, l.jsx)(ea, {
                        channel: n,
                        speakers: a,
                        voiceType: 2
                    })
                })
            }

            function ea(e) {
                let {
                    channel: t,
                    speakers: n,
                    voiceType: a
                } = e, s = t.getGuildId(), r = i.useMemo(() => n.slice(0, 3), [n]), c = (0, u.useStateFromStores)([g.default], () => g.default.can(K.Permissions.CONNECT, t)), f = (0, I.default)(t.id), E = z.default.Messages.JOIN;
                switch (a) {
                    case 1:
                        E = z.default.Messages.JOIN;
                        break;
                    case 2:
                        E = z.default.Messages.STAGE_CHANNEL_JOIN_BUTTON, (null == f ? void 0 : f.speaker) ? E = z.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != f && (E = z.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON);
                        break;
                    case 3:
                        E = z.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA;
                        break;
                    default:
                        (0, D.assertNever)(a)
                }
                return null == s ? null : (0, l.jsxs)(l.Fragment, {
                    children: [r.length > 0 ? (0, l.jsxs)("div", {
                        className: o()(q.textBlock, q.singleLine),
                        children: [(0, l.jsx)(y.default, {
                            guildId: s,
                            users: r,
                            showUserPopout: !0,
                            size: y.Sizes.SIZE_16
                        }), (0, l.jsx)(d.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: q.userNames,
                            children: (0, S.summarizeUsernamesParticipating)(s, r, null == t ? void 0 : t.id, n.length)
                        })]
                    }) : null, c && null == f && (0, l.jsx)(et, {
                        channel: t,
                        label: E
                    })]
                })
            }(s = a || (a = {}))[s.VOICE = 1] = "VOICE", s[s.STAGE = 2] = "STAGE", s[s.STUDY_ROOM = 3] = "STUDY_ROOM", t.default = i.memo(function(e) {
                let {
                    guild: t
                } = e, {
                    showRedesignedLiveChannelNotice: n
                } = (0, f.useChannelNoticeRedesignExperiment)(!0), a = (0, k.useActiveEventOrStageInstanceChannel)(t.id), s = (0, F.useGuildActiveEvent)(t.id), i = (0, F.useGuildUpcomingEventsNotice)(t.id), r = (0, u.useStateFromStores)([p.default], () => p.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: o,
                    isEventNoticeHidden: d
                } = (0, u.useStateFromStoresObject)([j.default], () => ({
                    isStageNoticeHidden: j.default.isLiveChannelNoticeHidden({
                        stageId: null == r ? void 0 : r.id
                    }),
                    isEventNoticeHidden: j.default.isLiveChannelNoticeHidden({
                        eventId: null == s ? void 0 : s.id
                    })
                }), [r, s]), c = null, h = null != r && null != a && !o;
                if (n) return (0, l.jsx)(E.default, {
                    guild: t
                });
                null == s || d ? h && (c = (0, l.jsx)(en, {
                    stageInstance: r,
                    channel: a
                })) : s.entity_type === W.GuildScheduledEventEntityTypes.STAGE_INSTANCE && h ? c = (0, l.jsx)(en, {
                    stageInstance: r,
                    channel: a
                }) : s.entity_type === W.GuildScheduledEventEntityTypes.EXTERNAL ? c = (0, l.jsx)($, {
                    guildEvent: s
                }) : s.entity_type === W.GuildScheduledEventEntityTypes.VOICE && null != a && (c = (0, l.jsx)(Z, {
                    guildEvent: s,
                    channel: a
                }));
                let C = t.hasFeature(K.GuildFeatures.COMMUNITY) || t.hasFeature(K.GuildFeatures.HUB);
                if (null == c && null != i && !C) {
                    let {
                        upcomingEvent: e,
                        noticeType: t
                    } = i;
                    c = (0, l.jsx)(J, {
                        guildEvent: e,
                        noticeType: t
                    })
                }
                return c
            })
        },
        879064: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openGuildSettingsPickerModal: function() {
                    return l
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060");

            function l(e) {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await Promise.all([n.e("99387"), n.e("8102")]).then(n.bind(n, "674189"));
                    return n => (0, a.jsx)(t, {
                        ...n,
                        ...e
                    })
                }, {
                    modalKey: "Guild Settings Picker Modal"
                })
            }
        },
        547042: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EmbeddedActivityTutorial: function() {
                    return A
                },
                TutorialType: function() {
                    return s
                }
            });
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("442837"),
                o = n("481060"),
                u = n("40851"),
                d = n("566620"),
                c = n("403404"),
                f = n("100527"),
                E = n("906732"),
                h = n("592125"),
                C = n("810090"),
                _ = n("626135"),
                m = n("981631"),
                S = n("921944"),
                p = n("689938"),
                I = n("336141");
            (a = s || (s = {})).BOOSTING = "BOOSTING", a.NITRO = "NITRO", a.BASH_OUT = "BASH_OUT", a.GAME_NIGHT = "GAME_NIGHT";
            let g = "https://cdn.discordapp.com/attachments/860252504826445825/1029516100356018217/Activities_NUX_GL_1.mp4",
                T = "https://cdn.discordapp.com/attachments/887469171804356628/916446867586416660/activities-video-poster-512.png",
                A = e => {
                    let {
                        channelId: t,
                        markAsDismissed: n,
                        tutorialType: a
                    } = e, {
                        analyticsLocation: s,
                        analyticsType: A,
                        ctaText: N,
                        dismissText: v,
                        description: R,
                        learnMore: O,
                        title: L,
                        videoPosterUrl: P,
                        videoUrl: y,
                        ctaOnClick: M
                    } = function(e) {
                        switch (e) {
                            case "BOOSTING":
                                return {
                                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_BOOSTING, analyticsType: "embedded_activity_discovery_tutorial", description: p.default.Messages.EMBEDDED_ACTIVITY_NOTICE_WTP_DESCRIPTION, learnMore: !0, title: p.default.Messages.EMBEDDED_ACTIVITY_NOTICE_TITLE, videoPosterUrl: T, videoUrl: g, ctaText: p.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: p.default.Messages.DISMISS
                                };
                            case "NITRO":
                                return {
                                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "embedded_activity_nitro_discovery_tutorial", description: p.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_DESCRIPTION, learnMore: !0, title: p.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_TITLE, videoPosterUrl: T, videoUrl: g, ctaText: p.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: p.default.Messages.DISMISS
                                };
                            case "BASH_OUT":
                                return {
                                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_BASH_OUT, analyticsType: "embedded_activity_bash_out_tutorial", description: p.default.Messages.EMBEDDED_ACTIVITY_NOTICE_BASH_OUT_DESCRIPTION, learnMore: !1, title: p.default.Messages.EMBEDDED_ACTIVITIES_AVAILABLE_NOW, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037963592227635230/bash_out.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037967755955146762/bash_out.mp4", ctaText: p.default.Messages.PLAY, dismissText: p.default.Messages.DISMISS
                                };
                            case "GAME_NIGHT":
                                return {
                                    analyticsLocation: f.default.ACTIVITIES_COACH_MARK_GAME_NIGHT, analyticsType: "embedded_activity_game_night_tutorial", description: p.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_BODY, learnMore: !1, title: p.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_HEADING, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093287297950175272/game_night_desktop.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093286971708813382/game_night_desktop.mp4", ctaText: p.default.Messages.PLAY_NOW, dismissText: p.default.Messages.MAYBE_LATER
                                };
                            default:
                                return {
                                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "", description: "", learnMore: !1, title: "", videoPosterUrl: "", videoUrl: "", ctaText: "", dismissText: ""
                                }
                        }
                    }(a), {
                        analyticsLocations: D
                    } = (0, E.default)(s);
                    i.useEffect(() => {
                        _.default.track(m.AnalyticEvents.TOOLTIP_VIEWED, {
                            type: A
                        })
                    }, [A]);
                    let x = (0, u.useAppContext)() === m.AppContext.POPOUT,
                        b = (0, r.useStateFromStores)([h.default], () => h.default.getChannel(t), [t]);
                    return (0, l.jsx)(E.AnalyticsLocationProvider, {
                        value: D,
                        children: (0, l.jsx)("div", {
                            className: I.wrapper,
                            children: (0, l.jsx)("div", {
                                className: I.container,
                                children: (0, l.jsxs)("div", {
                                    className: I.content,
                                    children: [(0, l.jsx)(C.default, {
                                        className: I.video,
                                        src: y,
                                        poster: P,
                                        width: 224,
                                        height: 126,
                                        loop: !0,
                                        muted: !0,
                                        autoPlay: !0
                                    }), (0, l.jsx)("div", {
                                        className: I.header,
                                        children: (0, l.jsx)(o.Heading, {
                                            className: I.__invalid_headerText,
                                            variant: "text-sm/bold",
                                            color: "always-white",
                                            children: L
                                        })
                                    }), (0, l.jsxs)(o.Text, {
                                        className: I.subheaderText,
                                        variant: "text-xs/normal",
                                        color: "always-white",
                                        children: [R, O ? (0, l.jsxs)(l.Fragment, {
                                            children: [" ", (0, l.jsx)(o.Anchor, {
                                                className: I.learnMoreLink,
                                                href: "https://support.discord.com/hc/articles/4422142836759",
                                                children: p.default.Messages.LEARN_MORE
                                            })]
                                        }) : null]
                                    }), (0, l.jsxs)("div", {
                                        className: I.ctaActionWrapper,
                                        children: [(0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND,
                                            onClick: () => {
                                                n(S.ContentDismissActionType.UNKNOWN)
                                            },
                                            children: v
                                        }), (0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND_INVERTED,
                                            onClick: null != M ? M : () => {
                                                n(S.ContentDismissActionType.UNKNOWN), null != b && ((0, c.default)({
                                                    channel: b.isGuildVoice() ? b : void 0,
                                                    guildId: b.guild_id,
                                                    locationObject: {
                                                        page: m.AnalyticsPages.GUILD_CHANNEL,
                                                        section: m.AnalyticsSections.GUILD_CHANNEL_LIST,
                                                        object: m.AnalyticsObjects.ACTIVITIES_COACH_MARK,
                                                        objectType: m.AnalyticsObjectTypes.ACTIVITY
                                                    },
                                                    openInPopout: x,
                                                    analyticsLocations: D
                                                }), (0, d.fetchShelf)({
                                                    guildId: b.guild_id
                                                }))
                                            },
                                            children: N
                                        })]
                                    })]
                                })
                            })
                        })
                    })
                }
        },
        577718: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("704215"),
                i = n("780384"),
                r = n("481060"),
                o = n("906732"),
                u = n("380009"),
                d = n("282051"),
                c = n("243778"),
                f = n("26323"),
                E = n("433280"),
                h = n("34131"),
                C = n("434404"),
                _ = n("567458"),
                m = n("782959"),
                S = n("276645"),
                p = n("970731"),
                I = n("626135"),
                g = n("267642"),
                T = n("981631"),
                A = n("921944"),
                N = n("30513"),
                v = n("474936"),
                R = n("689938"),
                O = n("925058"),
                L = n("835104"),
                P = n("741160"),
                y = n("829972"),
                M = n("31932"),
                D = n("642301");

            function x(e) {
                null != e && C.default.open(e.id, T.GuildSettingsSections.OVERVIEW, {
                    section: T.AnalyticsSections.PREMIUM_GUILD_PROGRESS_BAR
                }, T.GuildSettingsSubsections.DISPLAY)
            }

            function b(e, t) {
                t && C.default.open(e.id, T.GuildSettingsSections.DISCOVERY)
            }

            function U(e, t) {
                null != t && ((0, g.isTierUnlocked)(t, T.BoostedGuildTiers.TIER_1) ? C.default.open(t.id, T.GuildSettingsSections.OVERVIEW, {
                    section: T.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH
                }, T.GuildSettingsSubsections.INVITE) : (0, f.default)({
                    analyticsLocations: e,
                    analyticsSourceLocation: T.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH,
                    guild: t,
                    perks: (0, N.guildInviteUpsellPerks)()
                }))
            }

            function j(e) {
                let {
                    renderPopout: t,
                    renderGuildHeaderDropdownButton: n
                } = e;
                return (0, a.jsx)(r.Popout, {
                    renderPopout: () => (0, a.jsx)("div", {
                        onClick: e => e.stopPropagation(),
                        children: t
                    }),
                    position: "bottom",
                    align: "center",
                    animation: r.Popout.Animation.TRANSLATE,
                    shouldShow: !0,
                    children: () => n()
                })
            }
            t.default = s.memo(function(e) {
                let {
                    contentTypes: t,
                    theme: n,
                    guild: s,
                    renderGuildHeaderDropdownButton: r
                } = e, {
                    analyticsLocations: f
                } = (0, o.default)(), N = () => {
                    I.default.track(T.AnalyticEvents.TOOLTIP_VIEWED, {
                        type: v.PremiumUpsellTypes.PREMIUM_PROGRESS_BAR,
                        location: {
                            page: T.AnalyticsPages.GUILD_CHANNEL
                        }
                    })
                }, G = () => {
                    I.default.track(T.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: v.PremiumUpsellTypes.INVITE_SPLASH_UPSELL,
                        location: {
                            page: T.AnalyticsPages.GUILD_CHANNEL
                        },
                        location_stack: f
                    })
                }, w = (0, i.isThemeDark)(n) ? y : M, [k, B] = (0, c.useSelectedDismissibleContent)(t, A.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS);
                return (0, a.jsx)(a.Fragment, {
                    children: (() => {
                        switch (k) {
                            case l.DismissibleContent.PREMIUM_CUSTOM_NOTIFICATION_SOUNDS_COACHMARK:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        guildId: s.id,
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(p.default, {
                                        onComponentMount: N,
                                        header: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: w,
                                            className: L.fullWidthImage
                                        }),
                                        content: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CONTENT.format(),
                                        buttonCTA: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => x(),
                                        onClick: () => x(s),
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(p.default, {
                                        onComponentMount: N,
                                        header: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: w,
                                            className: L.fullWidthImage
                                        }),
                                        content: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_CONTENT.format(),
                                        buttonCTA: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => x(),
                                        onClick: () => x(s),
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(E.default, {
                                        guildId: s.id,
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(d.default, {
                                        onClick: () => b(s, !0),
                                        onSecondaryClick: () => b(s),
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(u.default, {
                                        guild: s,
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_INVITE_SPLASH:
                                let e = (0, g.isTierUnlocked)(s, T.BoostedGuildTiers.TIER_1) ? R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT.format() : R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT_LOCKED.format({
                                        boostCount: (0, g.getNumberOfAppliedBoostsNeededForTier)(s, T.BoostedGuildTiers.TIER_1)
                                    }),
                                    t = (0, g.isTierUnlocked)(s, T.BoostedGuildTiers.TIER_1) ? R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS : R.default.Messages.LEARN_MORE;
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(p.default, {
                                        onComponentMount: G,
                                        header: R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: P,
                                            className: L.fullWidthImage
                                        }),
                                        content: e,
                                        buttonCTA: t,
                                        secondaryButtonCTA: R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => U(f),
                                        onClick: () => U(f, s),
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(_.default, {
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(p.default, {
                                        className: O.tooltipOverrideColor,
                                        header: R.default.Messages.ACTIVE_THREADS_UPSELL_HEADER,
                                        content: R.default.Messages.ACTIVE_THREADS_UPSELL_CONTENT,
                                        buttonCTA: R.default.Messages.GOT_IT,
                                        onClick: () => B(A.ContentDismissActionType.UNKNOWN),
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(p.default, {
                                        header: R.default.Messages.SOUNDBOARD_TOOLTIP_TITLE_NEW,
                                        content: R.default.Messages.SOUNDBOARD_TOOLTIP_BODY,
                                        buttonCTA: R.default.Messages.CHECK_IT_OUT,
                                        secondaryButtonCTA: R.default.Messages.NO_THANKS,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: D,
                                            className: L.fullWidthImage
                                        }),
                                        onClick: () => {
                                            C.default.open(s.id, T.GuildSettingsSections.ROLES), C.default.selectRole(s.getEveryoneRoleId(), R.default.Messages.USE_SOUNDBOARD)
                                        },
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.MEDIA_CHANNEL_UPSELL:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(m.default, {
                                        guildId: s.id,
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL:
                                return (0, a.jsx)(j, {
                                    renderPopout: (0, a.jsx)(h.default, {
                                        guildId: s.id,
                                        markAsDismissed: B
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            default:
                                return r()
                        }
                    })()
                })
            })
        },
        242601: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eI
                }
            }), n("47120"), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("920906"),
                o = n("442837"),
                u = n("704215"),
                d = n("846519"),
                c = n("481060"),
                f = n("570140"),
                E = n("239091"),
                h = n("269128"),
                C = n("711237"),
                _ = n("110924"),
                m = n("100527"),
                S = n("906732"),
                p = n("211242"),
                I = n("536687"),
                g = n("745837"),
                T = n("13228"),
                A = n("1259"),
                N = n("211644"),
                v = n("605236"),
                R = n("243778"),
                O = n("492162"),
                L = n("818634"),
                P = n("596557"),
                y = n("817520"),
                M = n("999309"),
                D = n("408987"),
                x = n("130734"),
                b = n("499137"),
                U = n("258871"),
                j = n("972264"),
                G = n("11352"),
                w = n("304445"),
                k = n("344185"),
                B = n("155409"),
                F = n("10401"),
                H = n("970731"),
                V = n("210887"),
                Y = n("592125"),
                W = n("796974"),
                K = n("486472"),
                z = n("984933"),
                q = n("650774"),
                Q = n("430824"),
                Z = n("819640"),
                X = n("496675"),
                J = n("878884"),
                $ = n("19780"),
                ee = n("594174"),
                et = n("74538"),
                en = n("374023"),
                ea = n("373274"),
                es = n("547042"),
                el = n("315174"),
                ei = n("577718"),
                er = n("156978"),
                eo = n("591190"),
                eu = n("981631"),
                ed = n("652785"),
                ec = n("921944"),
                ef = n("647086"),
                eE = n("689938"),
                eh = n("925058");

            function eC(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let e_ = 64,
                em = "server-settings",
                eS = {
                    origin: {
                        x: -8,
                        y: -48
                    },
                    targetWidth: 40,
                    targetHeight: 40,
                    offset: {
                        x: 0,
                        y: 0
                    }
                };
            class ep extends s.PureComponent {
                static getDerivedStateFromProps(e) {
                    let {
                        guild: t,
                        hasChannelNotice: n
                    } = e;
                    return null == t || null == t.banner || n ? {
                        renderBanner: !1,
                        bannerVisible: !1
                    } : null
                }
                componentDidMount() {
                    var e;
                    this.setAnimatedValue(0), f.default.subscribe("LAYER_PUSH", this.closeAllHeaderNotices), this.historyUnlisten = w.default.addRouteChangeListener(this.handleHistoryChange);
                    let {
                        location: t
                    } = w.default.getHistory();
                    (null === (e = t.state) || void 0 === e ? void 0 : e.shouldShowSubscribeTooltip) && this.showTimeout.start(1e3, () => this.setState({
                        shouldShowSubscribeTooltip: !0
                    }))
                }
                componentWillUnmount() {
                    this.showTimeout.stop(), this.state.controller.dispose(), this.historyUnlisten(), f.default.unsubscribe("LAYER_PUSH", this.closeAllHeaderNotices)
                }
                getGuildBannerHash() {
                    let {
                        guild: e,
                        hasChannelNotice: t
                    } = this.props;
                    return null == e || t ? null : e.banner
                }
                renderGuildHeaderNotices(e) {
                    let {
                        showGuildTemplateDirtyTooltip: t,
                        showGuildHeaderTutorial: n,
                        anyLayerOpen: s
                    } = this.props, {
                        shouldShowSubscribeTooltip: l
                    } = this.state;
                    if (n) return (0, a.jsx)("div", {
                        onClick: t => e ? null : t.stopPropagation(),
                        children: (0, a.jsx)(B.default, {
                            tutorialId: em,
                            position: "bottom",
                            inlineSpecs: eS,
                            children: this.renderGuildHeaderDropdownButton(e)
                        })
                    });
                    if (t) return (0, a.jsx)(c.Tooltip, {
                        forceOpen: !0,
                        color: c.TooltipColors.BRAND,
                        position: "bottom",
                        shouldShow: !e && !s,
                        text: eE.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        "aria-label": eE.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    });
                    if (!s && !e) return l ? (0, a.jsx)(c.Popout, {
                        renderPopout: () => (0, a.jsx)("div", {
                            onClick: e => e.stopPropagation(),
                            children: (0, a.jsx)(H.default, {
                                header: eE.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_HEADER,
                                content: eE.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_TEXT,
                                buttonCTA: eE.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_CLOSE,
                                onClick: this.handleCloseSubscribeTooltip
                            })
                        }),
                        position: "bottom",
                        align: "center",
                        animation: c.Popout.Animation.TRANSLATE,
                        shouldShow: !0,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    }) : this.renderGuildHeaderUpsellPopout(e);
                    return this.renderGuildHeaderDropdownButton(e)
                }
                renderGuildHeader(e) {
                    let {
                        guild: t,
                        isHeaderPopoutOpen: n,
                        showGuildHeaderTutorial: s,
                        showGuildTemplateDirtyTooltip: l,
                        isGuildHeaderDismissibleTooltipShown: i,
                        headerAnalyticsLocations: r
                    } = this.props, {
                        controller: o,
                        renderBanner: u,
                        bannerVisible: d,
                        bannerVisibleHeight: f,
                        communityInfoVisible: E
                    } = this.state, h = s || l || i;
                    return null == t ? null : (0, a.jsx)(S.AnalyticsLocationProvider, {
                        value: r,
                        children: (0, a.jsx)(c.LazyPopout, {
                            renderPopout: this.renderMenuPopout,
                            position: "bottom",
                            align: "center",
                            animation: c.Popout.Animation.SCALE,
                            shouldShow: n,
                            onRequestClose: () => {
                                (0, L.showGuildHeaderPopout)(!1)
                            },
                            children: s => {
                                let {
                                    onClick: l,
                                    ...i
                                } = s;
                                return (0, a.jsx)(el.default, {
                                    guild: t,
                                    controller: o,
                                    renderBanner: u,
                                    hasSubheader: e,
                                    bannerVisible: d,
                                    communityInfoVisible: E,
                                    guildBanner: this.getGuildBannerHash(),
                                    onClick: this.handleHeaderMenuToggle,
                                    onContextMenu: this.handleHeaderContextMenu,
                                    disableBannerAnimation: h,
                                    animationOverlayHeight: f,
                                    ...i,
                                    children: this.renderGuildHeaderNotices(n)
                                })
                            }
                        })
                    })
                }
                setAnimatedValue(e) {
                    let {
                        guild: t
                    } = this.props, n = null != this.getGuildBannerHash(), a = null == t ? void 0 : t.hasCommunityInfoSubheader();
                    null != t && (n || a) && (n ? this.setAnimatedValueForBanner(e) : this.setAnimatedValueForGuildInfo(e))
                }
                setAnimatedValueForBanner(e) {
                    let {
                        renderBanner: t,
                        communityInfoVisible: n,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        controller: l
                    } = this.state;
                    (e >= e_ && a || e < e_ && !a) && (a = !a), (e >= 88 && !t || e < 88 && t) && (t = !t), s = Math.max(88 - e, 0), n = a, (t !== this.state.renderBanner || a !== this.state.bannerVisible || s !== this.state.bannerVisibleHeight || n !== this.state.communityInfoVisible) && this.setState({
                        renderBanner: t,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        communityInfoVisible: n
                    }), l.update({
                        value: Math.min(1, Math.max(0, 1 - e / 88)),
                        immediate: !0
                    }).start()
                }
                setAnimatedValueForGuildInfo(e) {
                    let {
                        communityInfoVisible: t,
                        controller: n
                    } = this.state;
                    (e >= 20 && t || e < 20 && !t) && (t = !t), t !== this.state.communityInfoVisible && this.setState({
                        communityInfoVisible: t
                    }), n.update({
                        value: Math.min(1, Math.max(0, 1 - e / 20)),
                        immediate: !0
                    }).start()
                }
                renderChannelList() {
                    let {
                        isUnavailable: e,
                        guild: t,
                        selectedChannel: n,
                        enableStudyGroup: s,
                        ...l
                    } = this.props;
                    if (e || null == t) return (0, a.jsx)(eo.default, {
                        withBannerPadding: null != t && null != this.getGuildBannerHash()
                    });
                    {
                        if (t.hasFeature(eu.GuildFeatures.HUB) && !s) return (0, a.jsx)("div", {
                            className: eh.hubContainer,
                            children: (0, a.jsx)(U.default, {
                                guild: t,
                                channel: null != n ? n : z.default.getDefaultChannel(t.id)
                            })
                        });
                        let e = t.id === ef.FAVORITES_RAW_GUILD_ID ? ea.FavoritesChannelList : ea.GuildChannelList;
                        return (0, a.jsx)(e, {
                            guild: t,
                            ...l,
                            guildBanner: this.getGuildBannerHash(),
                            hasGuildSubheader: this.state.hasGuildSubheader,
                            onScroll: null != t && (null != this.getGuildBannerHash() || t.hasCommunityInfoSubheader()) ? this.pinBannerOrGuildInfo : null
                        })
                    }
                }
                renderFooter() {
                    let {
                        selectedChannelId: e,
                        shouldRenderClipsEducation: t
                    } = this.props;
                    return (0, a.jsx)(R.default, {
                        contentTypes: [],
                        children: n => {
                            let {
                                visibleContent: s,
                                markAsDismissed: l
                            } = n;
                            switch (s) {
                                case u.DismissibleContent.BASH_OUT_COACH_MARK:
                                    return (0, a.jsx)(es.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: l,
                                        tutorialType: es.TutorialType.BASH_OUT
                                    });
                                case u.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT:
                                    return (0, a.jsx)(es.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: l,
                                        tutorialType: es.TutorialType.GAME_NIGHT
                                    });
                                default:
                                    if (t) return (0, a.jsx)(g.default, {});
                                    return (0, a.jsx)(a.Fragment, {})
                            }
                        }
                    })
                }
                render() {
                    let {
                        guild: e,
                        footerAnalyticsLocations: t
                    } = this.props;
                    return (0, a.jsxs)("nav", {
                        className: eh.container,
                        onContextMenu: this.handleContextMenu,
                        "aria-label": eE.default.Messages.GUILD_SIDEBAR_A11Y_LABEL.format({
                            guildName: null != e ? e.toString() : ""
                        }),
                        children: [null != e && this.renderGuildHeader(this.state.hasGuildSubheader), null != e && (0, a.jsx)(er.default, {
                            guild: e,
                            setHasSubheader: e => this.setState({
                                hasGuildSubheader: e
                            })
                        }), this.renderChannelList(), (0, a.jsx)(S.AnalyticsLocationProvider, {
                            value: t,
                            children: this.renderFooter()
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), eC(this, "historyUnlisten", () => {}), eC(this, "showTimeout", new d.Timeout), eC(this, "state", {
                        controller: new r.Controller({
                            value: 1,
                            immediate: !0
                        }),
                        renderBanner: !1,
                        bannerVisible: !1,
                        communityInfoVisible: !1,
                        shouldShowSubscribeTooltip: !1,
                        bannerVisibleHeight: 88,
                        hasGuildSubheader: !1
                    }), eC(this, "handleHistoryChange", e => {
                        null != e.state && e.state.shouldShowSubscribeTooltip && this.showTimeout.start(1e3, () => this.setState({
                            shouldShowSubscribeTooltip: !0
                        }))
                    }), eC(this, "handleHeaderMenuToggle", e => {
                        let {
                            isHeaderPopoutOpen: t
                        } = this.props;
                        e.stopPropagation(), (0, L.showGuildHeaderPopout)(!t), this.closeAllHeaderNotices()
                    }), eC(this, "handleContextMenu", e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, E.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.e("92795").then(n.bind(n, "652171"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }), eC(this, "handleHeaderContextMenu", e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, E.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("7654"), n.e("33053"), n.e("49146"), n.e("75475"), n.e("85093"), n.e("85552"), n.e("58227"), n.e("43502"), n.e("69760"), n.e("33213")]).then(n.bind(n, "545135"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }), eC(this, "closeAllHeaderNotices", () => {
                        this.handleCloseSubscribeTooltip(), this.handleCloseTemplateDirtyTooltip(), this.handleCloseStudentHubPrivacySettingsTooltip()
                    }), eC(this, "handleCloseStudentHubPrivacySettingsTooltip", () => {
                        var e;
                        let t = (0, v.isDismissibleContentDismissed)(u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP),
                            n = null === (e = this.props.guild) || void 0 === e ? void 0 : e.hasFeature(eu.GuildFeatures.HUB);
                        !t && n && (0, v.markDismissibleContentAsDismissed)(u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP, {
                            dismissAction: ec.ContentDismissActionType.AUTO
                        })
                    }), eC(this, "handleCloseSubscribeTooltip", () => {
                        this.showTimeout.stop(), this.state.shouldShowSubscribeTooltip && this.setState({
                            shouldShowSubscribeTooltip: !1
                        })
                    }), eC(this, "handleCloseTemplateDirtyTooltip", () => {
                        let {
                            guild: e,
                            showGuildTemplateDirtyTooltip: t
                        } = this.props;
                        null != e && t && D.default.hideGuildTemplateDirtyTooltip(e.id)
                    }), eC(this, "renderMenuPopout", async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("69760"), n.e("46826")]).then(n.bind(n, "859432"));
                        return t => {
                            let {
                                closePopout: n
                            } = t, {
                                guild: s
                            } = this.props;
                            return null != s && (0, a.jsx)(e, {
                                onClose: n,
                                guild: s
                            })
                        }
                    }), eC(this, "renderGuildHeaderUpsellPopout", e => {
                        let {
                            showGuildBoostingProgressBarUpsell: t,
                            showGuildBoostingProgressBarSizeUpsell: n,
                            showRoleSubscriptionUpsell: s,
                            showDiscoveryTooltip: l,
                            showInviteSplashUpsell: i,
                            showDiscoveryLandingPageSettingsUpsell: r,
                            showHubPrivacySettingsTooltip: o,
                            showActiveThreadsNotice: d,
                            showGuildSoundboardPermissionUpsell: c,
                            showMediaChannelUpsell: f,
                            showTierTemplatesUpsell: E,
                            shouldRenderCustomNotificationSoundsCoachmark: h,
                            guild: C,
                            theme: _
                        } = this.props;
                        if (null == C) return this.renderGuildHeaderDropdownButton(e);
                        let m = [];
                        return (o && m.push(u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP), d && m.push(u.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE), t && m.push(u.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS), n && m.push(u.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK), s && m.push(u.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL), c && m.push(u.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION), i && m.push(u.DismissibleContent.GUILD_HEADER_INVITE_SPLASH), l && m.push(u.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP), r && m.push(u.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL), 0 === m.length) ? this.renderGuildHeaderDropdownButton(e) : (f && m.push(u.DismissibleContent.MEDIA_CHANNEL_UPSELL), E && m.push(u.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL), h && m.push(u.DismissibleContent.PREMIUM_CUSTOM_NOTIFICATION_SOUNDS_COACHMARK), (0, a.jsx)(ei.default, {
                            contentTypes: m,
                            theme: _,
                            guild: C,
                            renderGuildHeaderDropdownButton: () => this.renderGuildHeaderDropdownButton(e)
                        }))
                    }), eC(this, "renderGuildHeaderDropdownButton", e => (0, a.jsx)(h.default, {
                        open: e,
                        className: eh.dropdownButton
                    })), eC(this, "pinBannerOrGuildInfo", e => {
                        let {
                            scrollTop: t
                        } = e;
                        this.setAnimatedValue(t)
                    })
                }
            }

            function eI(e) {
                var t;
                let {
                    guildId: n,
                    hideSelectedChannel: l,
                    selectedChannelId: r
                } = e, d = (0, o.useStateFromStores)([Q.default], () => Q.default.getGuild(n));
                (0, C.useGlobalTriggerDebugging)(n);
                let f = (0, O.default)(n),
                    E = (0, o.useStateFromStores)([W.default], () => W.default.getGuildDimensions(n).scrollTo),
                    h = (0, o.useStateFromStores)([$.default], () => $.default.getChannelId()),
                    [g, R, D] = (0, o.useStateFromStoresArray)([X.default], () => [X.default.can(eu.Permissions.MANAGE_GUILD, d), X.default.can(eu.Permissions.MANAGE_ROLES, d), X.default.can(eu.Permissions.MANAGE_THREADS, d)]),
                    U = (0, o.useStateFromStores)([K.default], () => K.default.isUnavailable(n)),
                    w = (0, o.useStateFromStores)([ee.default], () => ee.default.getCurrentUser()),
                    B = (0, o.useStateFromStores)([V.default], () => V.default.darkSidebar ? eu.ThemeTypes.DARK : V.default.theme),
                    {
                        enableStudyGroup: H
                    } = (0, b.useHubStudyGroupExperiment)(d),
                    z = (0, N.default)(e => e.currentlyShown.has(u.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION)),
                    [ea, es] = s.useState(!z),
                    el = (0, _.default)(n),
                    {
                        analyticsLocations: ei
                    } = (0, S.default)(m.default.GUILD_HEADER),
                    {
                        analyticsLocations: er
                    } = (0, S.default)(m.default.GUILD_CHANNEL_LIST_FOOTER);
                s.useEffect(() => {
                    n !== el && es(!z)
                }, [n, el, z]);
                let [eo, ef] = (0, N.default)(e => [ed.CHANNEL_NOTICES.some(t => e.currentlyShown.has(t.dismissibleContentType)), e.currentlyShownGroup.has(ec.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS)]), eE = (0, I.default)(d), eh = (0, c.useModalsStore)(c.hasAnyModalOpenSelector), eC = (0, o.useStateFromStores)([Z.default], () => Z.default.hasLayers()), e_ = (0, o.useStateFromStores)([F.default], () => F.default.shouldShow(em)), eS = g && (null == d ? void 0 : d.premiumProgressBarEnabled) === !1 && !en.ProcessArgs.isDisallowPopupsSet(), eI = (0, o.useStateFromStores)([q.default], () => q.default.getMemberCount(n)), eg = g && null != eI && eI >= 30 && (null == d ? void 0 : d.premiumProgressBarEnabled) === !1 && !en.ProcessArgs.isDisallowPopupsSet(), eT = R && null != d && (d.hasFeature(eu.GuildFeatures.COMMUNITY) || null != eI && eI > 50), eA = (0, M.default)(n), eN = (0, A.useLowerMemberCountRequirements)(n), ev = (null == d ? void 0 : d.hasFeature(eu.GuildFeatures.HUB)) === !0, eR = g && (null == d ? void 0 : d.hasFeature(eu.GuildFeatures.DISCOVERABLE)) === !0, eO = (0, p.useBlockedPaymentsConfig)(), eL = (g || (null == d ? void 0 : d.premiumTier) === eu.BoostedGuildTiers.NONE) && !en.ProcessArgs.isDisallowPopupsSet() && !eO, eP = (0, o.useStateFromStores)([x.default, Z.default], () => null != d && null != w && g && !Z.default.hasLayers() && x.default.shouldShowGuildTemplateDirtyTooltip(n)), ey = (0, o.useStateFromStores)([Y.default], () => Y.default.getChannel(r)), {
                    isPopoutOpen: eM
                } = (0, L.useGuildHeaderPopoutStore)(), eD = null !== (t = null == d ? void 0 : d.hasFeature(eu.GuildFeatures.COMMUNITY)) && void 0 !== t && t, ex = (0, o.useStateFromStores)([k.default], () => !i().isEmpty(k.default.getThreadsForGuild(n))), eb = et.default.isNewUser(w), eU = ea && !eb, ej = (0, T.default)(w);
                (0, P.default)(d);
                let eG = (0, v.useIsDismissibleContentDismissed)(u.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP),
                    ew = (0, j.default)(n),
                    ek = (0, y.default)(n),
                    eB = (0, o.useStateFromStores)([$.default], () => $.default.getChannelId()),
                    eF = (0, o.useStateFromStores)([J.default], () => J.default.desyncedVoiceStatesCount),
                    eH = G.CustomNotificationSoundExperiment.useExperiment({
                        location: "GuildSidebar"
                    }, {
                        autoTrackExposure: !0
                    }).enabled;
                return (0, a.jsx)(ep, {
                    guildId: n,
                    hideSelectedChannel: l,
                    guild: d,
                    scrollToChannel: E,
                    selectedChannelId: l ? null : r,
                    selectedChannel: ey,
                    selectedVoiceChannelId: h,
                    voiceStates: f,
                    rtcConnectedChannelId: eB,
                    rtcDesyncedVoiceStatesCount: eF,
                    isUnavailable: U,
                    theme: B,
                    user: w,
                    hasChannelNotice: null != eE || eo,
                    anyLayerOpen: eh || eC,
                    showGuildBoostingProgressBarUpsell: eS,
                    showGuildBoostingProgressBarSizeUpsell: eg,
                    showInviteSplashUpsell: eL,
                    showDiscoveryLandingPageSettingsUpsell: eR,
                    showGuildHeaderTutorial: e_,
                    showGuildTemplateDirtyTooltip: eP,
                    showRoleSubscriptionUpsell: eA,
                    showDiscoveryTooltip: eN,
                    showHubPrivacySettingsTooltip: ev,
                    showNewUnreadsBar: eD,
                    showActiveThreadsNotice: D && null != eI && eI >= 200 && ex,
                    showGuildSoundboardPermissionUpsell: eT,
                    showMediaChannelUpsell: ew,
                    showTierTemplatesUpsell: ek,
                    isHeaderPopoutOpen: eM,
                    enableStudyGroup: H,
                    isGuildHeaderDismissibleTooltipShown: ef,
                    canShowCoachMarkAtBottom: ea,
                    headerAnalyticsLocations: ei,
                    footerAnalyticsLocations: er,
                    shouldRenderClipsEducation: ej,
                    isTutorialHighlightDismissed: eG,
                    shouldRenderBurstCoachmark: eU,
                    shouldRenderCustomNotificationSoundsCoachmark: eH
                })
            }
        },
        156978: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("122611"),
                i = n("658434");

            function r(e) {
                let {
                    guild: t,
                    setHasSubheader: n
                } = e, r = s.useRef(null);
                return s.useLayoutEffect(() => {
                    let e = r.current;
                    null != e && n(e.childNodes.length > 0)
                }), (0, a.jsx)("div", {
                    className: i.container,
                    ref: r,
                    children: (0, a.jsx)(l.default, {
                        guild: t
                    })
                })
            }
        },
        591190: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("593817");
            let r = () => (0, a.jsx)("div", {
                    className: i.spacer
                }),
                o = () => (0, a.jsx)("div", {
                    className: i.category
                }),
                u = e => {
                    let {
                        width: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.channel,
                        children: [(0, a.jsx)("div", {
                            className: i.channelIcon
                        }), (0, a.jsx)("div", {
                            className: i.channelName,
                            style: {
                                width: "".concat(t, "px")
                            }
                        })]
                    })
                };
            t.default = e => {
                let {
                    withBannerPadding: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: l()(i.container, {
                        [i.bannerPadding]: t
                    }),
                    children: [(0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 175
                    }), (0, a.jsx)(r, {}), (0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 56
                    })]
                })
            }
        },
        130734: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("433517"),
                u = n("570140");
            let d = "hasSeenGuildTemplatePromotionTooltip",
                c = {},
                f = !0 === o.Storage.get(d);

            function E(e) {
                let {
                    guildId: t
                } = e;
                c = {
                    ...c,
                    [t]: !1
                }
            }
            class h extends(i = r.default.Store) {
                shouldShowGuildTemplateDirtyTooltip(e) {
                    var t;
                    return null !== (t = c[e]) && void 0 !== t && t
                }
                shouldShowGuildTemplatePromotionTooltip() {
                    return !f
                }
            }
            l = "GuildTemplateTooltipStore", (s = "displayName") in(a = h) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new h(u.default, {
                GUILD_TEMPLATE_DIRTY_TOOLTIP_REFRESH: function(e) {
                    let {
                        guildTemplate: t
                    } = e;
                    c = {
                        ...c,
                        [t.source_guild_id]: t.is_dirty || !1
                    }
                },
                GUILD_TEMPLATE_PROMOTION_TOOLTIP_HIDE: function() {
                    o.Storage.set(d, !0), f = !0
                },
                GUILD_TEMPLATE_SYNC_SUCCESS: function(e) {
                    c = {
                        ...c,
                        [e.guildTemplate.source_guild_id]: !1
                    }
                },
                GUILD_TEMPLATE_DIRTY_TOOLTIP_HIDE: E,
                GUILD_TEMPLATE_DELETE_SUCCESS: E
            })
        },
        962220: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("39612"),
                s = n("271579"),
                l = n("756647"),
                i = n("625128"),
                r = n("626135"),
                o = n("954824"),
                u = n("751189"),
                d = n("981631");
            let c = "template";
            t.default = {
                ...u.default,
                openNativeAppModal(e) {
                    i.default.openNativeAppModal(e, d.RPCCommands.GUILD_TEMPLATE_BROWSER)
                },
                openMobileApp(e, t) {
                    if (null != platform.ua && platform.ua.toLowerCase().indexOf("googlebot") > -1) return;
                    let n = null != e ? (0, a.getGuildTemplateDynamicLinkTemplate)(e) : (0, a.getDefaultDynamicLinkTemplate)(),
                        i = (0, s.generateAttemptId)(),
                        u = (0, s.default)(n, {
                            utmSource: c,
                            fingerprint: t,
                            attemptId: i
                        });
                    r.default.track(d.AnalyticEvents.DEEP_LINK_CLICKED, {
                        fingerprint: (0, l.maybeExtractId)(t),
                        attempt_id: i,
                        source: c,
                        guild_template_code: e
                    }), o.default.launch(u, () => {})
                }
            }
        },
        315964: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140"),
                s = n("142497"),
                l = n("190378");
            t.default = {
                init() {
                    a.default.subscribe("VOICE_CHANNEL_SELECT", e => {
                        let {
                            channelId: t
                        } = e;
                        null == t && s.hideHotspot(l.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                    })
                }
            }
        },
        499137: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHubStudyGroupExperiment: function() {
                    return r
                }
            });
            var a = n("470079"),
                s = n("818083"),
                l = n("981631");
            let i = (0, s.createExperiment)({
                    kind: "guild",
                    id: "2021-10_study_group",
                    label: "Student hub study group",
                    defaultConfig: {
                        enableStudyGroup: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables study group sidebar",
                        config: {
                            enableStudyGroup: !0
                        }
                    }]
                }),
                r = e => {
                    var t;
                    return a.useEffect(() => {
                        null != e && e.hasFeature(l.GuildFeatures.HUB) && i.trackExposure({
                            guildId: e.id,
                            location: "467c32_1"
                        })
                    }, [e]), i.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : l.EMPTY_STRING_SNOWFLAKE_ID,
                        location: "467c32_2"
                    }, {
                        autoTrackExposure: !1,
                        disable: null == e || !e.hasFeature(l.GuildFeatures.HUB)
                    })
                }
        },
        469988: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("206017"),
                i = n("689938"),
                r = n("70715");
            t.default = e => {
                let {
                    hasHub: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: r.container,
                    children: [(0, a.jsx)("div", {
                        className: r.iconContainer,
                        children: (0, a.jsx)(l.default, {
                            color: s.tokens.colors.WHITE.css
                        })
                    }), (0, a.jsx)(s.Text, {
                        color: "header-primary",
                        variant: "text-lg/semibold",
                        className: r.header,
                        children: t ? i.default.Messages.HUB_EMAIL_CONNECTION_ADD_HEADER : i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_HEADER
                    }), (0, a.jsx)(s.Text, {
                        color: "header-secondary",
                        variant: "text-sm/normal",
                        className: r.__invalid_description,
                        children: t ? i.default.Messages.HUB_EMAIL_CONNECTION_ADD_DESCRIPTION : i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_CARD_DESCRIPTION
                    }), (0, a.jsx)("div", {
                        className: r.gap
                    }), (0, a.jsx)(s.Button, {
                        size: s.Button.Sizes.LARGE,
                        color: t ? s.Button.Colors.PRIMARY : s.Button.Colors.GREEN,
                        onClick: () => (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "650233"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }),
                        children: (0, a.jsx)(s.Text, {
                            variant: "text-sm/semibold",
                            className: r.addButton,
                            color: "none",
                            children: t ? i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_ANOTHER : i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_MY_SCHOOOL
                        })
                    })]
                })
            }
        },
        602597: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("749210"),
                r = n("210887"),
                o = n("514611"),
                u = n("469988"),
                d = n("689938"),
                c = n("298362");
            t.default = e => {
                let {
                    guilds: t
                } = e, n = (0, s.useStateFromStores)([r.default], () => r.default.theme), f = t.map(e => (0, a.jsx)(o.default, {
                    className: c.__invalid_guildCard,
                    onView: () => i.default.transitionToGuildSync(e.id),
                    guild: {
                        ...e,
                        presenceCount: void 0,
                        memberCount: void 0,
                        premiumSubscriptionCount: void 0,
                        emojis: void 0
                    },
                    theme: n
                }, e.id));
                return (0, a.jsx)("section", {
                    className: c.guildListSection,
                    children: t.length > 0 ? (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(l.Heading, {
                            className: c.__invalid_title,
                            variant: "heading-lg/semibold",
                            children: d.default.Messages.YOUR_HUB
                        }), (0, a.jsxs)("div", {
                            className: c.guildList,
                            children: [f, (0, a.jsx)(u.default, {
                                hasHub: !0
                            })]
                        })]
                    }) : (0, a.jsx)("div", {
                        className: c.guildList,
                        children: (0, a.jsx)(u.default, {
                            hasHub: !1
                        })
                    })
                })
            }
        },
        677277: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("206017"),
                l = n("360048"),
                i = n("731455"),
                r = n("689938"),
                o = n("84051");
            t.default = e => {
                let {
                    handleCategorySelect: t,
                    shouldDisplaySelectedCategory: n,
                    currentCategoryId: u
                } = e;
                return (0, a.jsx)(l.default, {
                    avatar: (0, a.jsx)(s.default, {}),
                    name: r.default.Messages.HUB_SCHOOL_HUBS,
                    focusProps: {
                        offset: {
                            right: 4,
                            top: 1,
                            bottom: 1
                        }
                    },
                    onClick: () => {
                        t(i.DISCORD_HUB_ID)
                    },
                    wrapContent: !0,
                    selected: n && i.DISCORD_HUB_ID === u,
                    className: o.categoryItem,
                    selectedClassName: o.selectedCategoryItem,
                    innerClassName: o.itemInner
                }, i.DISCORD_HUB_ID)
            }
        },
        5955: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("252618"),
                r = n("900849"),
                o = n("526383"),
                u = n("602597"),
                d = n("731455"),
                c = n("689938"),
                f = n("481963"),
                E = n("661278");
            t.default = e => {
                let {
                    loadId: t
                } = e, n = (0, o.default)();
                return s.useEffect(() => {
                    (0, r.trackDiscoveryViewed)({
                        loadId: t,
                        gamesYouPlayGuilds: [],
                        allGuilds: [],
                        categoryId: d.DISCORD_HUB_ID
                    })
                }, [t]), (0, i.usePageTitle)({
                    subsection: c.default.Messages.HUB_SCHOOL_HUBS,
                    location: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                }), (0, a.jsx)(l.Scroller, {
                    className: f.scroller,
                    children: (0, a.jsxs)("div", {
                        className: f.viewWrapper,
                        children: [(0, a.jsxs)("div", {
                            className: f.headerContainer,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                className: f.headerImage,
                                src: E
                            }), (0, a.jsxs)("div", {
                                className: f.headerContent,
                                children: [(0, a.jsx)(l.Heading, {
                                    className: f.headerText,
                                    variant: "heading-xl/semibold",
                                    children: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                                }), (0, a.jsx)(l.Text, {
                                    className: f.headerDescription,
                                    variant: "text-md/normal",
                                    color: "none",
                                    children: c.default.Messages.HUB_DIRECTORY_SEARCH_SUBTITLE
                                })]
                            })]
                        }), (0, a.jsx)(u.default, {
                            guilds: n
                        }), (0, a.jsx)("div", {
                            className: f.divider
                        }), (0, a.jsx)(l.Text, {
                            className: f.footerDescription,
                            variant: "text-md/medium",
                            color: "header-secondary",
                            children: c.default.Messages.HUB_DISCOVERY_FOOTER_DESCRIPTION
                        })]
                    })
                })
            }
        },
        613609: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("773603");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("447543"),
                r = n("703656"),
                o = n("430824"),
                u = n("701190"),
                d = n("612744"),
                c = n("449934"),
                f = n("650233"),
                E = n("981631"),
                h = n("756286"),
                C = n("84854");
            t.default = e => {
                let {
                    guildId: t,
                    inviteCode: n
                } = e, [_, m] = s.useState(h.WaveStates.INITIAL), [S, p] = s.useState(null != n);
                s.useEffect(() => {
                    null != n && i.default.resolveInvite(n, "Hub").finally(() => p(!1))
                }, [n]);
                let I = (0, l.useStateFromStores)([u.default], () => null != n ? u.default.getInvite(n) : null),
                    g = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t));
                s.useEffect(() => {
                    null != g && (0, r.transitionTo)(E.Routes.CHANNEL(t))
                }, [g, t]);
                let T = s.useCallback(e => {
                        m(t => Math.max(t, e))
                    }, []),
                    A = (0, c.getArtForPath)();
                return (0, a.jsx)("div", {
                    className: C.page,
                    children: (0, a.jsxs)(d.default, {
                        embedded: !0,
                        splash: A,
                        waveState: _,
                        showLogo: !1,
                        updateWaveState: T,
                        children: [(0, a.jsx)("div", {
                            className: C.dragRegion
                        }), (0, a.jsx)("div", {
                            className: C.contentWrapper,
                            children: !S && (0, a.jsx)(f.HubEmailConnectionModalView, {
                                invite: I
                            })
                        })]
                    })
                })
            }
        },
        704631: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("82950"),
                i = n("981631"),
                r = n("921944"),
                o = n("689938"),
                u = n("524094");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: d
                } = e;
                return (0, a.jsx)(l.default, {
                    guild: t,
                    onDismissed: () => d(r.ContentDismissActionType.UNKNOWN),
                    onClick: function() {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "650233"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    },
                    message: o.default.Messages.HUB_LINK_CHANNEL_NOTICE_BODY,
                    cta: o.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.HUB_LINK_NOTICE,
                    type: i.ChannelNoticeTypes.HUB_LINK,
                    image: u
                })
            }
        },
        567458: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("921944"),
                i = n("689938"),
                r = n("299242");

            function o(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: r.container,
                    children: [(0, a.jsx)("div", {
                        className: r.pointer
                    }), (0, a.jsx)(s.Text, {
                        variant: "text-sm/normal",
                        className: r.content,
                        children: i.default.Messages.HUB_PRIVACY_SETTINGS_TOOLTIP
                    }), (0, a.jsx)(s.Button, {
                        color: s.Button.Colors.BRAND_INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            t(l.ContentDismissActionType.AUTO)
                        },
                        children: i.default.Messages.GOT_IT
                    })]
                })
            }
        },
        526383: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("47120");
            var a = n("442837"),
                s = n("430824"),
                l = n("981631");

            function i() {
                return (0, a.useStateFromStores)([s.default], () => Object.entries(s.default.getGuilds()).filter(e => {
                    let [t, n] = e;
                    return n.hasFeature(l.GuildFeatures.HUB)
                }).map(e => {
                    let [t, n] = e;
                    return n
                }))
            }
        },
        819792: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("920906"),
                l = n("442837"),
                i = n("536442"),
                r = n("984933"),
                o = n("496675"),
                u = n("51382"),
                d = n("91326"),
                c = n("503856"),
                f = n("981631");

            function E(e) {
                let {
                    channel: t,
                    guild: n
                } = e, r = (0, l.useStateFromStores)([i.HotspotStore], () => i.HotspotStore.hasHotspot(i.HotspotLocations.HUB_STUDY_ROOM_NOTICE)), o = (0, c.useConnectedInCurrentHub)(t.guild_id), f = (0, s.useSpring)({
                    maxHeight: o ? 0 : 300,
                    overflow: "hidden",
                    delay: 400
                });
                return (0, a.jsx)(s.animated.div, {
                    style: f,
                    children: r ? (0, a.jsx)(u.default, {
                        channel: t,
                        guild: n
                    }) : (0, a.jsx)(d.default, {
                        name: "\uD83D\uDCDA☕ ".concat(t.name),
                        channel: t
                    })
                })
            }
            t.default = function(e) {
                let {
                    guild: t
                } = e, n = (0, l.useStateFromStores)([r.default], () => r.default.getChannels(t.id)[r.GUILD_VOCAL_CHANNELS_KEY][0]), s = (0, l.useStateFromStores)([o.default], () => null != n && o.default.can(f.Permissions.CONNECT, n.channel));
                return t.hasFeature(f.GuildFeatures.HUB) && null != n && s ? (0, a.jsx)(E, {
                    channel: n.channel,
                    guild: t
                }) : null
            }
        },
        51382: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("82950"),
                l = n("536442"),
                i = n("703656"),
                r = n("922482"),
                o = n("981631"),
                u = n("689938"),
                d = n("882977");
            t.default = e => {
                let {
                    channel: t,
                    guild: n
                } = e;
                return (0, a.jsx)(s.default, {
                    guild: n,
                    onDismissed: () => {
                        (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE)
                    },
                    onClick: () => {
                        (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE), null != t && null != t.getGuildId() && ((0, r.connectAndOpen)(t), (0, i.transitionToGuild)(t.getGuildId(), t.id))
                    },
                    title: u.default.Messages.HUB_STUDY_ROOM_NOTICE_TITLE,
                    message: u.default.Messages.HUB_STUDY_ROOM_NOTICE_DESCRIPTION,
                    cta: u.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                    image: d,
                    type: o.ChannelNoticeTypes.HUB_STUDY_ROOM
                })
            }
        },
        91326: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("471445"),
                i = n("862099"),
                r = n("938475"),
                o = n("689938"),
                u = n("660026");
            t.default = function(e) {
                let {
                    name: t,
                    channel: n
                } = e, d = (0, s.useStateFromStoresArray)([r.default], () => r.default.getVoiceStatesForChannel(n).map(e => {
                    let {
                        user: t
                    } = e;
                    return t
                }), [n]), c = (0, l.getChannelIconComponent)(n);
                return (0, a.jsx)(i.GuildNoticeBody, {
                    heading: o.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    topic: t,
                    location: o.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                    locationIcon: null != c ? (0, a.jsx)(c, {
                        width: 16,
                        height: 16,
                        className: u.icon
                    }) : null,
                    children: (0, a.jsx)(i.LiveVoiceOrStageChannelNotice, {
                        channel: n,
                        speakers: d,
                        voiceType: i.VoiceChannelType.STUDY_ROOM
                    })
                })
            }
        },
        919285: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("82950"),
                l = n("434404"),
                i = n("929507"),
                r = n("981631"),
                o = n("689938"),
                u = n("943935");

            function d(e) {
                let {
                    guild: t
                } = e, n = () => i.default.dismissNotice(t.id);
                return (0, a.jsx)(s.default, {
                    guild: t,
                    onDismissed: n,
                    cta: o.default.Messages.CHECK_IT_OUT,
                    message: o.default.Messages.COMMANDS_SCOPE_MIGRATION_ADMIN_NOTICE.format(),
                    type: r.ChannelNoticeTypes.COMMANDS_MIGRATION,
                    image: u,
                    onClick: () => {
                        n(), l.default.open(t.id, r.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        975533: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140"),
                s = n("846027"),
                l = n("13245"),
                i = n("287734"),
                r = n("872810"),
                o = n("223245"),
                u = n("317770"),
                d = n("924557"),
                c = n("39604"),
                f = n("569545"),
                E = n("722835"),
                h = n("703656"),
                C = n("641015"),
                _ = n("183584"),
                m = n("199902"),
                S = n("131951"),
                p = n("246946"),
                I = n("808506"),
                g = n("237997"),
                T = n("626135"),
                A = n("554174"),
                N = n("981631"),
                v = n("65154");
            let R = {
                [N.GlobalKeybindActions.TOGGLE_PRIORITY_SPEAKER]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [N.GlobalKeybindActions.UNASSIGNED]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [N.GlobalKeybindActions.PUSH_TO_TALK]: {
                    onTrigger(e, t) {
                        S.default.getMode(t.context) === N.InputModes.PUSH_TO_TALK && (R[N.GlobalKeybindActions.PUSH_TO_TALK].isPressed = e, S.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !1), t.context))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [N.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: {
                    onTrigger(e) {
                        S.default.getMode() === N.InputModes.PUSH_TO_TALK && (R[N.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY].isPressed = e, S.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !0), v.MediaEngineContextTypes.DEFAULT))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [N.GlobalKeybindActions.PUSH_TO_MUTE]: {
                    onTrigger(e) {
                        if (S.default.getMode() === N.InputModes.VOICE_ACTIVITY) !S.default.isSelfDeaf() && (R[N.GlobalKeybindActions.PUSH_TO_MUTE].isPressed = e, s.default.setTemporarySelfMute(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [N.GlobalKeybindActions.TOGGLE_MUTE]: {
                    onTrigger: () => s.default.toggleSelfMute({
                        usedKeybind: !0
                    }),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_DEAFEN]: {
                    onTrigger() {
                        s.default.toggleSelfDeaf()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_VOICE_MODE]: {
                    onTrigger() {
                        let e = S.default.getMode() === N.InputModes.PUSH_TO_TALK ? N.InputModes.VOICE_ACTIVITY : N.InputModes.PUSH_TO_TALK;
                        s.default.setMode(e)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_OVERLAY]: {
                    onTrigger() {
                        let e = I.default.enabled;
                        l.default.setEnabled(!e, I.default.legacyEnabled)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK]: {
                    onTrigger(e) {
                        let t = (0, A.default)();
                        null != t && (e ? l.default.setUILocked(!g.default.isUILocked(t), t) : l.default.setInputLocked(!I.default.isInputLocked(t), t))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [N.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET]: {
                    onTrigger() {
                        let e = I.default.getFocusedPID(),
                            t = null != e;
                        null != e && t && g.default.isPinned(N.OverlayWidgets.TEXT) && I.default.isReady(e) && I.default.isInputLocked(e) && l.default.activateRegion(N.OverlayActiveRegions.TEXT_WIDGET)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING]: {
                    onTrigger() {
                        let e = m.default.getCurrentUserActiveStream();
                        if (null != e) return (0, r.stopStream)((0, f.encodeStreamKey)(e));
                        (0, E.default)()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: {
                    onTrigger() {
                        o.default.setEnabled(!p.default.enabled)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.NAVIGATE_BACK]: {
                    onTrigger: () => (0, h.back)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [N.GlobalKeybindActions.NAVIGATE_FORWARD]: {
                    onTrigger: () => (0, h.forward)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [N.GlobalKeybindActions.SOUNDBOARD]: {
                    onTrigger: () => {
                        if (!(0, C.canSelectedVoiceChannelUseSoundboard)()) return;
                        let e = (0, A.default)();
                        null != e && (g.default.isUILocked(e) ? (0, _.openSoundboardInOverlay)(!0, e) : (0, _.closeSoundboardInOverlay)(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [N.GlobalKeybindActions.SOUNDBOARD_HOLD]: {
                    onTrigger: e => {
                        if (!(0, C.canSelectedVoiceChannelUseSoundboard)()) return;
                        let t = (0, A.default)();
                        if (null != t) {
                            e ? (0, _.openSoundboardInOverlay)(!1, t) : (0, _.closeSoundboardInOverlay)(t);
                            return
                        }
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [N.GlobalKeybindActions.SAVE_CLIP]: {
                    onTrigger: () => {
                        (0, d.areClipsEnabled)() && (T.default.track(N.AnalyticEvents.CLIP_SAVE_KEYBIND_PRESSED), (0, c.saveClip)())
                    },
                    keyEvents: {
                        keyup: !1,
                        keydown: !0
                    }
                },
                [N.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL]: {
                    onTrigger(e, t) {
                        let {
                            params: {
                                channelId: n
                            }
                        } = t;
                        null != n && i.default.selectVoiceChannel(n)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                },
                [N.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL]: {
                    onTrigger() {
                        i.default.selectVoiceChannel(null)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                }
            };
            class O extends u.default {
                _initialize() {
                    a.default.wait(() => a.default.dispatch({
                        type: "KEYBINDS_REGISTER_GLOBAL_KEYBIND_ACTIONS",
                        keybinds: R
                    }))
                }
                _terminate() {}
            }
            t.default = new O
        },
        972264: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("442837"),
                s = n("430824"),
                l = n("496675"),
                i = n("312146"),
                r = n("981631");

            function o(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForMediaChannels)(t),
                    o = l.default.can(r.Permissions.MANAGE_CHANNELS, t);
                return n && o
            }
        },
        782959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("367907"),
                i = n("970731"),
                r = n("810090"),
                o = n("626135"),
                u = n("63063"),
                d = n("981631"),
                c = n("689938"),
                f = n("954724");

            function E(e) {
                let {
                    guildId: t,
                    markAsDismissed: E
                } = e, h = (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        className: f.upsellBody,
                        children: c.default.Messages.MEDIA_CHANNEL_UPSELL_BODY
                    }), (0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        children: c.default.Messages.MEDIA_CHANNEL_LEARN_MORE.format({
                            hcArticleUrl: u.default.getCreatorSupportArticleURL(d.HelpdeskArticles.MEDIA_CHANNEL)
                        })
                    })]
                });
                return (0, a.jsx)(i.default, {
                    header: c.default.Messages.MEDIA_CHANNEL_UPSELL_TITLE,
                    content: h,
                    asset: (0, a.jsx)(r.default, {
                        className: f.video,
                        src: "https://cdn.discordapp.com/assets/media_channel/media_channel_upsell_demo.mp4",
                        autoPlay: !0,
                        loop: !0
                    }),
                    buttonCTA: c.default.Messages.MEDIA_CHANNEL_UPSELL_CREATE_NOW_CTA,
                    onClick: () => {
                        o.default.track(d.AnalyticEvents.MEDIA_CHANNEL_UPSELL_CLICKED, {
                            ...(0, l.collectGuildAnalyticsMetadata)(t)
                        }), (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("45094"), n.e("36494")]).then(n.bind(n, "218613"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channelType: d.ChannelTypes.GUILD_MEDIA,
                                guildId: t
                            })
                        })
                    },
                    secondaryButtonCTA: c.default.Messages.DISMISS,
                    markAsDismissed: E
                })
            }
        },
        584731: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("445346"),
                s = n("570140"),
                l = n("513418"),
                i = n("710845"),
                r = n("57132"),
                o = n("592125"),
                u = n("375954"),
                d = n("625236");

            function c(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let f = -1 / 0,
                E = new i.default("MessagePreviewStore");
            class h extends a.Store {
                isLatest(e, t) {
                    var n;
                    let a = this.guilds.get(null != e ? e : null);
                    return null !== (n = null == a ? void 0 : a.isLatest(t, this.generation)) && void 0 !== n && n
                }
                isLocalFetchNeeded(e) {
                    var t, n;
                    return null === (n = null === (t = this.guilds.get(e)) || void 0 === t ? void 0 : t.localNeeded) || void 0 === n || n
                }
                message(e, t) {
                    var n, a;
                    return null !== (a = null === (n = this.guilds.get(e)) || void 0 === n ? void 0 : n.messageRecord(t)) && void 0 !== a ? a : null
                }
                data(e) {
                    return !this.guilds.has(e) && this.guilds.set(e, new d.PreviewData), this.guilds.get(e)
                }
                handleOneGuildCreate(e) {
                    var t, n;
                    let a = this.data(e.id);
                    a.putMany(null !== (t = e.lastMessages) && void 0 !== t ? t : [], this.generation), a.putMany(null !== (n = e.threadMessages) && void 0 !== n ? n : [], this.generation), null != e.lastMessages && (a.localNeeded = !1)
                }
                handleConnectionOpen(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    for (let t of (this.generation += 1, e.guilds)) this.handleOneGuildCreate(t)
                }
                handleGuildCreate(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.handleOneGuildCreate(e.guild)
                }
                handleGuildDelete(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.guilds.delete(e.guild.id)
                }
                handleMessageCreate(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)() || e.optimistic || e.isPushNotification) return !1;
                    this.data(null !== (t = e.guildId) && void 0 !== t ? t : null).put(e.message.channel_id, e.message, this.generation)
                }
                handleMessageDelete(e) {
                    var t, n;
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    let a = null !== (n = e.guildId) && void 0 !== n ? n : null;
                    if ((null === (t = this.data(a)) || void 0 === t ? void 0 : t.messageId(e.channelId)) === e.id) {
                        let t = u.default.getMessages(e.channelId),
                            n = t.hasMoreAfter ? null : t.last();
                        null != n ? this.data(a).put(e.channelId, n, this.generation) : this.data(a).delete(e.channelId)
                    }
                }
                handleMessageUpdate(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let n = null !== (t = e.guildId) && void 0 !== t ? t : null,
                        a = e.message.channel_id,
                        s = e.message.id;
                    if (null == a || null == s) return !1;
                    let l = this.data(n);
                    if ((null == l ? void 0 : l.messageId(a)) !== s) return !1;
                    null == l || l.update(e.message)
                }
                handleThreadListSync(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.data(e.guildId).putMany(null !== (t = e.mostRecentMessages) && void 0 !== t ? t : [], this.generation)
                }
                handleLoadMessagesSuccess(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let t = o.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, this.generation)
                    }
                }
                handleLocalMessagesLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let t = o.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, f)
                    }
                }
                handleMessagePreviewsLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    E.verbose("adding remote previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let n of e.messages) !t.isLatest(n.channel_id, this.generation) && t.put(n.channel_id, n, this.generation)
                }
                handleMessagePreviewsLocallyLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    E.verbose("adding local previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let [n, a] of e.messages) !t.has(n) && t.put(n, a, f);
                    t.localNeeded = !1
                }
                handleLogout(e) {
                    this.guilds.clear()
                }
                constructor() {
                    super(s.default, {
                        CONNECTION_OPEN: e => this.handleConnectionOpen(e),
                        GUILD_CREATE: e => this.handleGuildCreate(e),
                        GUILD_DELETE: e => this.handleGuildDelete(e),
                        LOAD_MESSAGES_SUCCESS: e => this.handleLoadMessagesSuccess(e),
                        LOCAL_MESSAGES_LOADED: e => this.handleLocalMessagesLoaded(e),
                        LOGOUT: e => this.handleLogout(e),
                        MESSAGE_CREATE: e => this.handleMessageCreate(e),
                        MESSAGE_DELETE: e => this.handleMessageDelete(e),
                        MESSAGE_PREVIEWS_LOADED: e => this.handleMessagePreviewsLoaded(e),
                        MESSAGE_PREVIEWS_LOCALLY_LOADED: e => this.handleMessagePreviewsLocallyLoaded(e),
                        MESSAGE_UPDATE: e => this.handleMessageUpdate(e),
                        THREAD_LIST_SYNC: e => this.handleThreadListSync(e)
                    }), c(this, "guilds", new Map), c(this, "generation", 0)
                }
            }
            new h
        },
        625236: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PreviewData: function() {
                    return o
                }
            }), n("47120");
            var a = n("786761"),
                s = n("23750"),
                l = n("306680"),
                i = n("709054");

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class o {
                isLatest(e, t) {
                    return this.messageGeneration(e, t) === t
                }
                messageGeneration(e, t) {
                    let n = this.messages.get(e);
                    return null == n ? -1 / 0 : n.generation !== t && null != n.message && n.message.id === l.default.lastMessageId(e) ? (this.messages.set(e, {
                        ...n,
                        generation: t
                    }), t) : n.generation
                }
                messageId(e) {
                    var t, n;
                    let a = this.messages.get(e);
                    return null !== (n = null == a ? void 0 : null === (t = a.message) || void 0 === t ? void 0 : t.id) && void 0 !== n ? n : null
                }
                messageRecord(e) {
                    var t;
                    let n = this.messages.get(e);
                    return null != n && null != n.message && !(n.message instanceof s.default) && (n.message = (0, a.createMessageRecord)(n.message)), null !== (t = null == n ? void 0 : n.message) && void 0 !== t ? t : null
                }
                has(e) {
                    return this.messages.has(e)
                }
                put(e, t, n) {
                    this.messages.set(e, {
                        message: t,
                        generation: n
                    })
                }
                putNew(e, t, n) {
                    var a;
                    let s = this.messages.get(e);
                    null != t && function(e, t) {
                        return null == t || i.default.compare(e, t) > 0
                    }(t.id, null == s ? void 0 : null === (a = s.message) || void 0 === a ? void 0 : a.id) && this.put(e, t, n)
                }
                putMany(e, t) {
                    for (let n of e) this.put(n.channel_id, n, t)
                }
                update(e) {
                    var t;
                    if (null == e.id || null == e.channel_id) return;
                    let n = e.channel_id,
                        l = this.messages.get(n);
                    if ((null == l ? void 0 : null === (t = l.message) || void 0 === t ? void 0 : t.id) !== e.id) return;
                    let i = l.message instanceof s.default ? (0, a.updateMessageRecord)(l.message, e) : (0, a.updateServerMessage)(l.message, e);
                    this.messages.set(n, {
                        ...l,
                        message: i
                    })
                }
                delete(e) {
                    this.messages.delete(e)
                }
                constructor() {
                    r(this, "localNeeded", !0), r(this, "messages", new Map)
                }
            }
        },
        647090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHasUserRepliedInChannel: function() {
                    return i
                }
            });
            var a = n("442837"),
                s = n("375954"),
                l = n("594174");
            let i = e => (0, a.useStateFromStores)([s.default, l.default], () => {
                if (null == e) return !1;
                let t = l.default.getCurrentUser();
                return null != s.default.getMessages(e).findNewest(e => e.author.id === (null == t ? void 0 : t.id))
            })
        },
        26373: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useListHasSingleMessageRequest: function() {
                    return u
                },
                useListHasSingleSpamMessageRequest: function() {
                    return d
                }
            });
            var a = n("470079"),
                s = n("442837"),
                l = n("355298"),
                i = n("333984"),
                r = n("899740"),
                o = n("355350");

            function u() {
                let e = (0, r.useMessageRequestsCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([l.default], () => l.default.isReady()),
                    i = a.useRef(n);
                return a.useEffect(() => {
                    n && !i.current && (i.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }

            function d() {
                let e = (0, o.useSpamMessageRequestCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([i.default], () => i.default.isReady()),
                    l = a.useRef(n);
                return a.useEffect(() => {
                    n && !l.current && (l.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }
        },
        620924: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMessageRequestRelativeTimestampText: function() {
                    return o
                }
            }), n("913527");
            var a = n("442837"),
                s = n("91159"),
                l = n("306680"),
                i = n("709054"),
                r = n("868807");

            function o(e) {
                let t = (0, r.useMessageRequestPreview)(e),
                    n = function(e) {
                        let {
                            lastMessageId: t,
                            message: n,
                            loaded: a
                        } = e;
                        return a && null != n ? i.default.extractTimestamp(n.id) : null != t ? i.default.extractTimestamp(t) : null
                    }({
                        lastMessageId: (0, a.useStateFromStores)([l.default], () => l.default.lastMessageId(e.id)),
                        ...t
                    });
                return null == n ? "" : (0, s.getTimestampString)(n)
            }
        },
        332712: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMutualGuilds: function() {
                    return r
                }
            });
            var a = n("442837"),
                s = n("271383"),
                l = n("430824"),
                i = n("823379");

            function r(e) {
                return (0, a.useStateFromStoresArray)([s.default, l.default], () => s.default.memberOf(e).map(l.default.getGuild).filter(i.isNotNullish))
            }
        },
        28476: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShouldShowMessageRequestsRow: function() {
                    return r
                }
            });
            var a = n("442837"),
                s = n("355298"),
                l = n("869404"),
                i = n("333984");

            function r() {
                return (0, a.useStateFromStores)([s.default, i.default], () => (0, l.shouldShowMessageRequests)([s.default, i.default]))
            }
        },
        727813: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("470079"),
                s = n("442837"),
                l = n("592125"),
                i = n("594174"),
                r = n("900255"),
                o = n("333984");

            function u() {
                let e = (0, s.useStateFromStores)([l.default], () => l.default.getPrivateChannelsVersion()),
                    t = (0, s.useStateFromStoresArray)([l.default, o.default], () => {
                        let e = l.default.getMutablePrivateChannels(),
                            t = Array.from(o.default.getSpamChannelIds()).map(t => e[t]).filter(e => null != e);
                        return (0, r.sortChannelIds)(t)
                    }, [e]),
                    n = (0, s.useStateFromStoresObject)([i.default], () => {
                        let e = {};
                        return t.forEach(t => {
                            let n = i.default.getUser(t.recipients[0]);
                            null != n && (e[t.id] = n)
                        }), e
                    }, [t]);
                return a.useMemo(() => t.map(e => ({
                    channel: e,
                    user: n[e.id]
                })), [t, n])
            }
        },
        355350: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSpamMessageRequestCount: function() {
                    return l
                }
            });
            var a = n("442837"),
                s = n("333984");

            function l() {
                return (0, a.useStateFromStores)([s.default], () => s.default.getSpamChannelsCount())
            }
        },
        545724: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("748780"),
                o = n("924826"),
                u = n("481060"),
                d = n("239091"),
                c = n("687683"),
                f = n("725901");
            t.default = function(e) {
                let {
                    index: t,
                    children: l,
                    user: E,
                    channel: h,
                    onClick: C,
                    isFocused: _,
                    isActive: m,
                    onOtherHover: S,
                    className: p
                } = e, [I, g] = s.useState(!1), [T, A] = s.useState(!1), N = () => {
                    g(!0), _ && !m && !T && (null == S || S())
                }, v = () => {
                    g(!1)
                }, R = (e, t) => {
                    null != t && (A(!0), (0, d.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            user: t
                        })
                    }, {
                        onClose: () => {
                            A(!1)
                        }
                    }))
                };
                return (0, a.jsx)(o.ListNavigatorItem, {
                    id: h.id,
                    children: e => (0, a.jsx)(u.FocusRing, {
                        offset: {
                            left: -8,
                            right: -8
                        },
                        children: (0, a.jsx)(r.default.div, {
                            className: i()(f.messageRequestItem, p, {
                                [f.active]: m || T,
                                [f.firstItem]: 0 === t
                            }),
                            onContextMenu: e => R(e, E),
                            onMouseEnter: N,
                            onMouseLeave: v,
                            onClick: null != C ? C : void 0,
                            style: {
                                LIST_ROW_HEIGHT: c.LIST_ROW_HEIGHT,
                                opacity: 1
                            },
                            ...e,
                            children: l(I || m || T)
                        })
                    })
                })
            }
        },
        745052: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("924826"),
                o = n("286379"),
                u = n("442837"),
                d = n("704215"),
                c = n("481060"),
                f = n("150063"),
                E = n("45114"),
                h = n("230711"),
                C = n("112724"),
                _ = n("183126"),
                m = n("607070"),
                S = n("209613"),
                p = n("325708"),
                I = n("320149"),
                g = n("252618"),
                T = n("605236"),
                A = n("243778"),
                N = n("984370"),
                v = n("797614"),
                R = n("359110"),
                O = n("6025"),
                L = n("897473"),
                P = n("108427"),
                y = n("970731"),
                M = n("210887"),
                D = n("433355"),
                x = n("592125"),
                b = n("819640"),
                U = n("916187"),
                j = n("151827"),
                G = n("626135"),
                w = n("792125"),
                k = n("879041"),
                B = n("647090"),
                F = n("385956"),
                H = n("610697"),
                V = n("26373"),
                Y = n("486622"),
                W = n("922409"),
                K = n("899740"),
                z = n("177033"),
                q = n("355350"),
                Q = n("307947"),
                Z = n("96479"),
                X = n("480874"),
                J = n("687683"),
                $ = n("981631"),
                ee = n("921944"),
                et = n("526761"),
                en = n("689938"),
                ea = n("175959"),
                es = n("19340");

            function el() {
                let e = s.useRef(null),
                    t = (0, K.useMessageRequestsCount)(),
                    n = (0, z.default)(),
                    l = (0, V.useListHasSingleMessageRequest)(),
                    u = (0, _.useIsRejectAllMessageRequestsEnabled)(),
                    d = n.length > 0 ? null == n ? void 0 : n[0].channel.id : null,
                    f = (0, k.useIsNewMessageRequestHomeCountEnabled)({
                        location: "message-request-page-web"
                    });
                s.useEffect(() => {
                    f && null != d && (0, E.ackMessageRequest)(d)
                }, [d, f]);
                let h = s.useCallback(() => {
                        (0, c.showToast)((0, c.createToast)(en.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, c.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: C
                    } = (0, Y.useMessageRequestActions)({
                        onError: h
                    }),
                    m = (0, S.default)("message-requests-list"),
                    {
                        channelId: p
                    } = (0, W.useMessageRequestSidebarState)(),
                    I = s.useCallback(() => {
                        C(n.map(e => e.channel.id))
                    }, [n, C]),
                    g = s.useCallback(e => {
                        var t, s;
                        let {
                            row: r
                        } = e, o = n[r], u = null === (s = n[r + 1]) || void 0 === s ? void 0 : null === (t = s.channel) || void 0 === t ? void 0 : t.id, d = o.channel.id;
                        return (0, a.jsx)(Z.default, {
                            index: r,
                            className: i()({
                                [ea.selected]: null != p && p === d,
                                [ea.siblingSelected]: null != p && p === u
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [l, n, p]),
                    T = s.useCallback(() => (0, a.jsxs)(j.default, {
                        className: ea.sectionTitle,
                        children: [t > 0 ? en.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE_WITH_COUNT.format({
                            count: t
                        }) : en.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE, u && t > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.Text, {
                                className: ea.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(c.Button, {
                                onClick: I,
                                look: c.ButtonLooks.LINK,
                                color: c.ButtonColors.LINK,
                                size: c.ButtonSizes.SMALL,
                                className: ea.clearAllButton,
                                "aria-label": en.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: en.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "title"), [t, I, u]);
                return (n.length !== t && v.default.increment({
                    name: o.MetricEvents.MESSAGE_REQUEST_COUNT_DRIFT
                }), 0 === n.length) ? (0, a.jsx)(Q.default, {
                    section: J.MessageRequestSections.REQUESTS
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: m,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: t => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = t;
                            return (0, a.jsx)(c.List, {
                                className: ea.list,
                                innerRole: l,
                                innerAriaLabel: en.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: J.LIST_SECTION_HEIGHT,
                                rowHeight: J.LIST_ROW_HEIGHT,
                                renderSection: T,
                                renderRow: g,
                                sections: [n.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-list")
                        }
                    })
                })
            }

            function ei(e) {
                let {
                    pageWidth: t,
                    onSidebarResize: n
                } = e, s = (0, u.useStateFromStores)([D.default], () => D.default.getSidebarState(D.MESSAGE_REQUESTS_BASE_CHANNEL_ID)), l = (0, u.useStateFromStores)([x.default], () => x.default.getChannel(null == s ? void 0 : s.channelId));
                if (null == s || s.type !== L.SidebarType.VIEW_MESSAGE_REQUEST || null == l || !l.isPrivate()) return null;
                let i = t - $.DEFAULT_MESSAGE_REQUEST_SIDEBAR_WIDTH;
                return (0, a.jsx)(p.default, {
                    sidebarType: p.ChatSidebarType.MessageRequestSidebar,
                    maxWidth: i,
                    onWidthChange: n,
                    children: (0, a.jsx)(I.default, {
                        channel: l,
                        baseChannelId: D.MESSAGE_REQUESTS_BASE_CHANNEL_ID
                    })
                })
            }
            let er = function(e) {
                    let {
                        markAsDismissed: t
                    } = e;
                    return (0, a.jsx)(y.default, {
                        header: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                        content: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT_TEENS,
                        buttonCTA: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                        className: ea.messageRequestCoachmark,
                        onClick: () => t(ee.ContentDismissActionType.UNKNOWN),
                        markAsDismissed: t,
                        caretPosition: y.CaretPosition.TOP_CENTER,
                        headerClassName: ea.__invalid_header
                    })
                },
                eo = e => {
                    let t = (0, H.default)(),
                        n = () => b.default.hasLayers() || (0, c.hasAnyModalOpen)(),
                        l = (0, u.useStateFromStores)([m.default], () => m.default.useReducedMotion);
                    return s.useEffect(() => {
                        (0, T.requestMarkDismissibleContentAsShown)(d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK)
                    }, []), (0, a.jsx)(A.default, {
                        contentTypes: [d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK],
                        children: s => {
                            let {
                                visibleContent: i,
                                markAsDismissed: r
                            } = s;
                            if (i === d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK) return (0, a.jsx)(c.Popout, {
                                renderPopout: () => t ? (0, a.jsx)(er, {
                                    markAsDismissed: r
                                }) : (0, a.jsx)(y.default, {
                                    header: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                                    content: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT,
                                    buttonCTA: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONFIRM,
                                    secondaryButtonCTA: en.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                                    className: ea.messageRequestCoachmark,
                                    onClick: e => {
                                        e.stopPropagation(), h.default.open($.UserSettingsSections.PRIVACY_AND_SAFETY, null, {
                                            scrollPosition: et.PrivacyAndSafetyScrollPositions.MESSAGE_REQUESTS
                                        })
                                    },
                                    markAsDismissed: r,
                                    caretPosition: y.CaretPosition.TOP_CENTER,
                                    headerClassName: ea.__invalid_header
                                }),
                                position: "bottom",
                                align: "center",
                                animation: l ? c.Popout.Animation.NONE : c.Popout.Animation.TRANSLATE,
                                shouldShow: !n(),
                                spacing: 16,
                                children: () => e.children
                            });
                            return e.children
                        }
                    })
                };

            function eu(e) {
                let {
                    section: t
                } = e;
                return t === J.MessageRequestSections.SPAM ? (0, a.jsx)(X.default, {}) : (0, a.jsx)(el, {})
            }
            let ed = (0, C.default)(function(e) {
                let {
                    width: t
                } = e, n = (0, K.useMessageRequestsCount)();
                s.useEffect(() => {
                    f.setHomeLink($.Routes.MESSAGE_REQUESTS), (0, P.trackAppUIViewed)("message-requests"), G.default.track($.AnalyticEvents.MESSAGE_REQUESTS_VIEWED, {
                        num_message_requests: n
                    }), v.default.increment({
                        name: o.MetricEvents.MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let l = (0, u.useStateFromStores)([M.default], () => M.default.theme),
                    r = (0, q.useSpamMessageRequestCount)(),
                    [d, E] = s.useState(!1),
                    h = (0, u.useStateFromStores)([D.default], () => {
                        let e = D.default.getSidebarState(D.MESSAGE_REQUESTS_BASE_CHANNEL_ID);
                        return null != e && e.type === L.SidebarType.VIEW_MESSAGE_REQUEST ? e : null
                    }),
                    C = null == h ? void 0 : h.channelId,
                    _ = null != h,
                    m = (0, F.useIsEitherTypeOfMessageRequest)(C),
                    S = (0, B.useHasUserRepliedInChannel)(C);
                s.useEffect(() => {
                    null != C && !m && S && _ && ((0, R.transitionToChannel)(C), O.default.closeChannelSidebar(D.MESSAGE_REQUESTS_BASE_CHANNEL_ID))
                }, [C, S, _, m]);
                let [p, I] = s.useState(J.MessageRequestSections.REQUESTS);
                return (0, g.usePageTitle)({
                    location: en.default.Messages.MESSAGE_REQUESTS
                }), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i()(es.chat, ea.container, {
                            [es.threadSidebarOpen]: _,
                            [es.threadSidebarFloating]: _ && d
                        }),
                        children: [(0, a.jsxs)(N.default, {
                            className: (0, w.getThemeClass)(l),
                            toolbar: !0,
                            children: [(0, a.jsx)(N.default.Icon, {
                                icon: U.default,
                                "aria-hidden": !0
                            }), (0, a.jsx)(eo, {
                                children: (0, a.jsx)(N.default.Title, {
                                    children: en.default.Messages.MESSAGE_REQUESTS
                                })
                            }), (0, a.jsx)(N.default.Divider, {}), (0, a.jsxs)(c.TabBar, {
                                "aria-label": en.default.Messages.MESSAGE_REQUESTS,
                                selectedItem: p,
                                type: "top-pill",
                                onItemSelect: e => {
                                    I(e)
                                },
                                className: ea.__invalid_tabBar,
                                children: [(0, a.jsx)(c.TabBar.Item, {
                                    id: J.MessageRequestSections.REQUESTS,
                                    className: ea.__invalid_item,
                                    children: en.default.Messages.MESSAGE_REQUESTS_REQUESTS_TAB_TITLE
                                }), (0, a.jsx)(c.TabBar.Item, {
                                    id: J.MessageRequestSections.SPAM,
                                    className: ea.__invalid_item,
                                    children: 0 === r ? en.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE : en.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE_WITH_COUNT.format({
                                        count: r
                                    })
                                })]
                            })]
                        }), (0, a.jsx)("div", {
                            className: es.content,
                            children: (0, a.jsx)(eu, {
                                section: p
                            })
                        })]
                    }), _ && (0, a.jsx)(ei, {
                        pageWidth: t,
                        onSidebarResize: (e, t) => {
                            E(t)
                        }
                    })]
                })
            });
            t.default = ed
        },
        81471: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("481060"),
                u = n("200120"),
                d = n("255269"),
                c = n("937889"),
                f = n("695346"),
                E = n("496675"),
                h = n("699516"),
                C = n("68588"),
                _ = n("512665"),
                m = n("868807"),
                S = n("981631"),
                p = n("768760"),
                I = n("689938"),
                g = n("164602"),
                T = n("946278");
            let A = s.memo(function(e) {
                let {
                    channel: t
                } = e, {
                    loaded: n,
                    error: l,
                    message: A
                } = (0, m.useMessageRequestPreview)(t), N = (0, u.useActiveKeywordFiltersCacheKey)(), v = (0, r.useStateFromStores)([h.default], () => null != A && h.default.isBlocked(A.author.id), [A]), R = (0, r.useStateFromStores)([E.default], () => E.default.can(S.Permissions.MANAGE_MESSAGES, t)), O = f.RenderSpoilers.useSetting(), {
                    content: L
                } = s.useMemo(() => (null == A ? void 0 : A.content) != null && "" !== A.content ? (0, c.default)(A, {
                    formatInline: !0,
                    noStyleAndInteraction: !0,
                    shouldFilterKeywords: null != N
                }) : {
                    content: null
                }, [A, N]), P = null;
                if (l) P = (0, a.jsx)(o.Text, {
                    className: g.messageReplacement,
                    variant: "text-sm/normal",
                    color: "text-muted",
                    children: I.default.Messages.MESSAGE_REQUESTS_ERROR_LOADING_PREVIEW
                });
                else if (n) {
                    if (null != A && v) P = (0, a.jsx)(o.Text, {
                        className: g.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: I.default.Messages.MESSAGE_REQUESTS_BLOCKED_MESSAGE
                    });
                    else if (null != A) {
                        let {
                            contentPlaceholder: e,
                            renderedContent: t
                        } = (0, _.renderSingleLineMessage)(A, L, v, i()(g.messageContent, T.inlineFormat), {
                            leadingIconClass: g.messageContentIcon,
                            trailingIconClass: g.messageContentIcon,
                            iconSize: p.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE
                        });
                        P = null != t ? (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: g.messageContent,
                            children: t
                        }) : (0, a.jsx)(o.Text, {
                            tag: "span",
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: g.messageReplacement,
                            children: e
                        })
                    } else P = (0, a.jsx)(o.Text, {
                        className: g.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: I.default.Messages.MESSAGE_REQUESTS_DELETED_MESSAGE
                    })
                } else P = null;
                return (0, a.jsx)(C.ObscuredDisplayContext.Provider, {
                    value: (0, d.default)(O, R),
                    children: (0, a.jsx)(o.FocusBlock, {
                        className: g.messageFocusBlock,
                        children: P
                    })
                })
            });
            t.default = A
        },
        376191: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("129861"),
                r = n("607070"),
                o = n("1585"),
                u = n("125988"),
                d = n("43267"),
                c = n("522289"),
                f = n("699516"),
                E = n("546591"),
                h = n("819570"),
                C = n("51144"),
                _ = n("998502"),
                m = n("620924"),
                S = n("332712"),
                p = n("81471"),
                I = n("689938"),
                g = n("326486");
            let T = e => {
                    let {
                        userId: t
                    } = e, n = (0, S.useMutualGuilds)(t);
                    return null == n || 0 === n.length ? (0, a.jsx)(l.Text, {
                        className: g.mutualGuilds,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: I.default.Messages.USER_PROFILE_NO_MUTUAL_SERVERS
                    }) : (0, a.jsxs)("div", {
                        className: g.mutualGuildsContainer,
                        children: [(0, a.jsx)(c.default, {
                            guilds: n,
                            maxGuilds: 3,
                            size: h.GuildIcon.Sizes.SMOL,
                            hideOverflowCount: !0
                        }), (0, a.jsx)(l.Text, {
                            className: g.mutualGuilds,
                            variant: "text-sm/normal",
                            color: "text-muted",
                            children: I.default.Messages.USER_PROFILE_MUTUAL_GUILDS.format({
                                count: n.length
                            })
                        })]
                    })
                },
                A = _.default.getEnableHardwareAcceleration() ? l.AnimatedAvatar : l.Avatar;

            function N(e) {
                var t;
                let {
                    channel: n,
                    otherUser: c,
                    active: h
                } = e, _ = (0, s.useStateFromStores)([r.default], () => r.default.useReducedMotion), S = (0, s.useStateFromStores)([f.default], () => null == c ? null : f.default.getNickname(c.id)), N = !_ && h, v = (0, m.useMessageRequestRelativeTimestampText)(n), {
                    avatarDecorationSrc: R
                } = (0, u.default)({
                    user: c,
                    size: (0, o.getDecorationSizeForAvatarSize)(l.AvatarSizes.SIZE_40),
                    animateOnHover: !0
                });
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(A, {
                        className: g.avatar,
                        src: (0, d.getChannelIconURL)(n, 40, N),
                        avatarDecoration: R,
                        size: l.AvatarSizes.SIZE_40,
                        "aria-label": null !== (t = null == c ? void 0 : c.username) && void 0 !== t ? t : I.default.Messages.UNKNOWN_USER
                    }), (0, a.jsxs)("div", {
                        className: g.userPreview,
                        children: [(0, a.jsxs)("div", {
                            className: g.userContainerWithPreview,
                            children: [(0, a.jsx)(i.default, {
                                nick: S,
                                user: c,
                                showAccountIdentifier: !0,
                                className: g.tagContainer,
                                usernameClass: g.username,
                                discriminatorClass: null != C.default.getGlobalName(c) ? g.globalName : g.discriminator
                            }), (0, a.jsx)(l.Text, {
                                className: g.timestampWithPreview,
                                color: "text-muted",
                                variant: "text-xs/normal",
                                children: v
                            })]
                        }), (0, a.jsx)(E.default, {
                            hoverText: (0, a.jsx)(p.default, {
                                channel: n
                            }),
                            forceHover: h,
                            children: (0, a.jsx)(T, {
                                userId: c.id
                            })
                        })]
                    })]
                })
            }
        },
        307947: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("210887"),
                r = n("687683"),
                o = n("689938"),
                u = n("843838"),
                d = n("138715"),
                c = n("979770");

            function f(e) {
                let {
                    section: t
                } = e, n = (0, s.useStateFromStores)([i.default], () => i.default.theme);
                return (0, a.jsxs)(l.EmptyState, {
                    theme: n,
                    className: u.emptyStateContainer,
                    children: [(0, a.jsx)(l.EmptyStateImage, {
                        width: 415,
                        height: 200,
                        lightSrc: c,
                        darkSrc: d
                    }), (0, a.jsx)(l.EmptyStateText, {
                        note: t === r.MessageRequestSections.SPAM ? o.default.Messages.MESSAGE_REQUESTS_SPAM_EMPTY_STATE_BODY : o.default.Messages.MESSAGE_REQUESTS_EMPTY_STATE_BODY
                    })]
                })
            }
        },
        96479: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("6025"),
                l = n("433355"),
                i = n("626135"),
                r = n("585483"),
                o = n("922409"),
                u = n("545724"),
                d = n("749405"),
                c = n("981631");

            function f(e) {
                let {
                    index: t,
                    className: n,
                    channel: f,
                    user: E,
                    hasSingleMessageRequest: h
                } = e, {
                    channelId: C
                } = (0, o.useMessageRequestSidebarState)();
                return (0, a.jsx)(u.default, {
                    index: t,
                    className: n,
                    isFocused: C === f.id,
                    channel: f,
                    user: E,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: f.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: h
                        }), i.default.track(c.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !1,
                            channel_id: f.id,
                            other_user_id: E.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(c.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: f.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(d.PendingMessageRequestRowItem, {
                        active: e,
                        user: E,
                        channel: f
                    })
                })
            }
        },
        749405: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PendingMessageRequestRowItem: function() {
                    return h
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("359110"),
                r = n("6025"),
                o = n("433355"),
                u = n("26373"),
                d = n("486622"),
                c = n("376191"),
                f = n("689938"),
                E = n("482038");

            function h(e) {
                let {
                    active: t,
                    user: n,
                    channel: h
                } = e, C = (0, u.useListHasSingleMessageRequest)(), _ = s.useCallback(() => {
                    (0, l.showToast)((0, l.createToast)(f.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, l.ToastType.FAILURE))
                }, []), m = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), S = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID), C && (0, i.transitionToChannel)(h.id)
                }, [h.id, C]), {
                    acceptMessageRequest: p,
                    rejectMessageRequest: I,
                    isAcceptLoading: g,
                    isRejectLoading: T,
                    isUserProfileLoading: A,
                    isOptimisticAccepted: N,
                    isOptimisticRejected: v
                } = (0, d.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: S,
                    onRejectSuccess: m,
                    onError: _
                }), R = g || T || A || N || v;
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)(c.default, {
                        channel: h,
                        otherUser: n,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: E.actions,
                        children: [(0, a.jsx)(l.Button, {
                            className: E.button,
                            color: l.ButtonColors.PRIMARY,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), I(h.id)
                            },
                            disabled: R,
                            submitting: T || v,
                            children: f.default.Messages.MESSAGE_REQUEST_IGNORE
                        }), (0, a.jsx)(l.Button, {
                            className: E.button,
                            color: l.ButtonColors.BRAND,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), p(h.id)
                            },
                            disabled: R,
                            submitting: g || A || N,
                            children: f.default.Messages.MESSAGE_REQUEST_ACCEPT
                        })]
                    })]
                })
            }
        },
        125855: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("6025"),
                l = n("433355"),
                i = n("626135"),
                r = n("585483"),
                o = n("545724"),
                u = n("426051"),
                d = n("981631");

            function c(e) {
                let {
                    index: t,
                    className: n,
                    channel: c,
                    user: f,
                    hasSingleMessageRequest: E
                } = e;
                return (0, a.jsx)(o.default, {
                    index: t,
                    className: n,
                    isFocused: !1,
                    channel: c,
                    user: f,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: c.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: E
                        }), i.default.track(d.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !0,
                            channel_id: c.id,
                            other_user_id: f.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(d.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: c.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(u.default, {
                        active: e,
                        user: f,
                        channel: c
                    })
                })
            }
        },
        480874: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("91192"),
                o = n("286379"),
                u = n("481060"),
                d = n("183126"),
                c = n("209613"),
                f = n("797614"),
                E = n("151827"),
                h = n("626135"),
                C = n("26373"),
                _ = n("486622"),
                m = n("922409"),
                S = n("727813"),
                p = n("355350"),
                I = n("307947"),
                g = n("125855"),
                T = n("687683"),
                A = n("981631"),
                N = n("689938"),
                v = n("563585");

            function R() {
                let e = s.useRef(null),
                    t = (0, S.default)(),
                    n = (0, p.useSpamMessageRequestCount)(),
                    l = (0, C.useListHasSingleSpamMessageRequest)(),
                    R = (0, d.useIsRejectAllMessageRequestsEnabled)(),
                    O = (0, c.default)("message-requests-spam-list"),
                    {
                        channelId: L
                    } = (0, m.useMessageRequestSidebarState)(),
                    P = s.useCallback(() => {
                        (0, u.showToast)((0, u.createToast)(N.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, u.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: y
                    } = (0, _.useMessageRequestActions)({
                        onError: P
                    }),
                    M = s.useCallback(() => {
                        y(t.map(e => e.channel.id))
                    }, [t, y]);
                s.useEffect(() => {
                    h.default.track(A.AnalyticEvents.SPAM_MESSAGE_REQUESTS_VIEWED, {
                        num_spam_message_requests: n
                    }), f.default.increment({
                        name: o.MetricEvents.SPAM_MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let D = s.useCallback(e => {
                        var n, s;
                        let {
                            row: r
                        } = e, o = t[r], u = null === (s = t[r + 1]) || void 0 === s ? void 0 : null === (n = s.channel) || void 0 === n ? void 0 : n.id, d = o.channel.id;
                        return (0, a.jsx)(g.default, {
                            index: r,
                            className: i()({
                                [v.selected]: null != L && L === d,
                                [v.siblingSelected]: null != L && L === u
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [t, l, L]),
                    x = s.useCallback(() => (0, a.jsxs)(E.default, {
                        className: v.sectionTitle,
                        children: [N.default.Messages.MESSAGE_REQUESTS_SPAM_HEADER.format({
                            count: n
                        }), R && n > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(u.Text, {
                                className: v.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(u.Button, {
                                onClick: M,
                                look: u.ButtonLooks.LINK,
                                color: u.ButtonColors.LINK,
                                size: u.ButtonSizes.SMALL,
                                className: v.clearAllButton,
                                "aria-label": N.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: N.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "message-requests-spam-title"), [n, M, R]);
                return 0 === t.length ? (0, a.jsx)(I.default, {
                    section: T.MessageRequestSections.SPAM
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: O,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: n => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = n;
                            return (0, a.jsx)(u.List, {
                                className: v.list,
                                innerRole: l,
                                innerAriaLabel: N.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: T.LIST_SECTION_HEIGHT,
                                rowHeight: T.LIST_ROW_HEIGHT,
                                renderSection: x,
                                renderRow: D,
                                sections: [t.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-spam-list")
                        }
                    })
                })
            }
        },
        426051: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("286379"),
                i = n("481060"),
                r = n("797614"),
                o = n("359110"),
                u = n("6025"),
                d = n("433355"),
                c = n("26373"),
                f = n("486622"),
                E = n("376191"),
                h = n("86203"),
                C = n("689938"),
                _ = n("24037");

            function m(e) {
                let {
                    active: t,
                    user: n,
                    channel: m
                } = e, S = (0, c.useListHasSingleSpamMessageRequest)(), p = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(C.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE)), r.default.increment({
                        name: l.MetricEvents.SPAM_MESSAGE_REQUEST_ERROR_VIEW
                    })
                }, []), I = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), g = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID), S && (0, o.transitionToChannel)(m.id)
                }, [m.id, S]), {
                    acceptMessageRequest: T,
                    isAcceptLoading: A,
                    isUserProfileLoading: N,
                    isOptimisticAccepted: v
                } = (0, f.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: g,
                    onRejectSuccess: I,
                    onError: p
                }), R = A || N, O = R || v;
                return (0, a.jsxs)("div", {
                    className: _.container,
                    children: [(0, a.jsx)(E.default, {
                        otherUser: n,
                        channel: m,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: _.actions,
                        children: [(0, a.jsx)(i.Button, {
                            className: _.button,
                            color: i.ButtonColors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: e => {
                                T(m.id), e.stopPropagation()
                            },
                            disabled: O,
                            submitting: R,
                            children: C.default.Messages.MESSAGE_REQUESTS_SPAM_ACCEPT
                        }), (0, a.jsx)(h.default, {
                            className: _.button,
                            channel: m,
                            buttonSize: i.Button.Sizes.SMALL
                        })]
                    })]
                })
            }
        },
        285865: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("570140");
            t.default = {
                closeSidebar() {
                    a.default.dispatch({
                        type: "MOBILE_WEB_SIDEBAR_CLOSE"
                    })
                },
                openSidebar() {
                    a.default.dispatch({
                        type: "MOBILE_WEB_SIDEBAR_OPEN"
                    })
                }
            }
        },
        659971: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("873546"),
                o = n("442837"),
                u = n("570140");
            let d = !1;
            class c extends(i = o.default.Store) {
                getIsOpen() {
                    return !r.isMobile || d
                }
            }
            l = "MobileWebSidebarStore", (s = "displayName") in(a = c) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new c(u.default, {
                MOBILE_WEB_SIDEBAR_OPEN: function() {
                    d = !0
                },
                MOBILE_WEB_SIDEBAR_CLOSE: function() {
                    d = !1
                }
            })
        },
        917112: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("818083");
            t.default = (0, a.createExperiment)({
                kind: "user",
                id: "2022-04_account_profile_popout",
                label: "Account Profile Popout",
                defaultConfig: {
                    isPopupEnabled: !1,
                    isTaglessAccountPanelEnabled: !1,
                    isJoinedTagButtonEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Account Profile Popout",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !1
                    }
                }, {
                    id: 2,
                    label: "Enable Account Profile Popout w/ DiscordTag button",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !0
                    }
                }]
            })
        },
        480387: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                removeAccount: function() {
                    return h
                },
                switchAccount: function() {
                    return E
                },
                validateMultiAccountTokens: function() {
                    return f
                }
            });
            var a = n("213919"),
                s = n("544891"),
                l = n("570140"),
                i = n("893776"),
                r = n("710845"),
                o = n("314897"),
                u = n("726745"),
                d = n("981631");
            let c = new r.default("MultiAccountActionCreators");

            function f() {
                let e = o.default.getId();
                u.default.getUsers().forEach(async t => {
                    let n, {
                            id: i
                        } = t,
                        r = a.getToken(i);
                    if (null == r || "" === r) {
                        l.default.dispatch({
                            type: "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE",
                            userId: i
                        });
                        return
                    }
                    l.default.dispatch({
                        type: "MULTI_ACCOUNT_VALIDATE_TOKEN_REQUEST",
                        userId: i
                    });
                    try {
                        n = await s.HTTP.get({
                            url: d.Endpoints.ME,
                            headers: {
                                authorization: r
                            },
                            retries: 3
                        })
                    } catch (t) {
                        let e = (null == t ? void 0 : t.status) === 401 || (null == t ? void 0 : t.status) === 403;
                        l.default.dispatch({
                            type: e ? "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE" : "MULTI_ACCOUNT_VALIDATE_TOKEN_SUCCESS",
                            userId: i
                        });
                        return
                    }
                    l.default.dispatch({
                        type: e === i ? "CURRENT_USER_UPDATE" : "USER_UPDATE",
                        user: n.body
                    }), l.default.dispatch({
                        type: "MULTI_ACCOUNT_VALIDATE_TOKEN_SUCCESS",
                        userId: i
                    })
                })
            }

            function E(e, t) {
                c.log("Switching account to ".concat(e), {
                    switchSynchronously: t
                });
                let n = a.getToken(e);
                return null == n ? (c.log("Switching accounts failed because there was no token"), l.default.dispatch({
                    type: "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE",
                    userId: e
                }), Promise.resolve()) : i.default.switchAccountToken(n, t)
            }

            function h(e) {
                l.default.dispatch({
                    type: "MULTI_ACCOUNT_REMOVE_ACCOUNT",
                    userId: e
                })
            }
        },
        251423: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMultiAccountUsers: function() {
                    return o
                }
            });
            var a = n("470079"),
                s = n("442837"),
                l = n("570140"),
                i = n("480387"),
                r = n("726745");

            function o() {
                let e = (0, s.useStateFromStoresObject)([r.default], () => ({
                    isLoading: r.default.getIsValidatingUsers(),
                    multiAccountUsers: r.default.getUsers()
                }));
                return a.useEffect(() => {
                    l.default.wait(() => {
                        i.validateMultiAccountTokens()
                    })
                }, []), e
            }
        },
        331541: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return $
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("512722"),
                o = n.n(r),
                u = n("722770"),
                d = n("873546"),
                c = n("442837"),
                f = n("116061"),
                E = n("481060"),
                h = n("232567"),
                C = n("2052"),
                _ = n("393238"),
                m = n("727637"),
                S = n("420660"),
                p = n("100527"),
                I = n("906732"),
                g = n("521868"),
                T = n("299206"),
                A = n("440051"),
                N = n("734934"),
                v = n("158238"),
                R = n("785717"),
                O = n("221292"),
                L = n("318661"),
                P = n("502762"),
                y = n("192133"),
                M = n("138394"),
                D = n("131640"),
                x = n("695346"),
                b = n("199902"),
                U = n("293273"),
                j = n("158776"),
                G = n("594174"),
                w = n("881201"),
                k = n("626135"),
                B = n("70956"),
                F = n("51144"),
                H = n("246133"),
                V = n("474376"),
                Y = n("383832"),
                W = n("981631"),
                K = n("228168"),
                z = n("689938"),
                q = n("834669");
            let Q = [{
                duration: 30 * B.default.Millis.MINUTE,
                label: () => z.default.Messages.MUTE_DURATION_30_MINUTES
            }, {
                duration: B.default.Millis.HOUR,
                label: () => z.default.Messages.MUTE_DURATION_1_HOUR
            }, {
                duration: 3 * B.default.Millis.HOUR,
                label: () => z.default.Messages.MUTE_DURATION_3_HOURS
            }, {
                duration: 8 * B.default.Millis.HOUR,
                label: () => z.default.Messages.MUTE_DURATION_8_HOURS
            }, {
                duration: B.default.Millis.DAY,
                label: () => z.default.Messages.MUTE_DURATION_24_HOURS
            }, {
                duration: void 0,
                label: () => z.default.Messages.DURATION_FOREVER
            }];

            function Z(e, t, n, s) {
                let l = (0, a.jsx)(a.Fragment, {
                    children: Q.map(s => {
                        let {
                            duration: l,
                            label: i
                        } = s;
                        return (0, a.jsx)(E.MenuItem, {
                            id: "".concat(e, "-").concat(l),
                            label: i(),
                            action: () => (0, H.default)(e, t, n, l),
                            dontCloseOnAction: !0
                        }, l)
                    })
                });
                return (0, a.jsx)(E.MenuItem, {
                    id: e,
                    className: q.expiringStatusMenuItem,
                    keepItemStyles: !0,
                    hasSubmenu: !0,
                    label: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: q.statusItem,
                            children: [(0, a.jsx)(E.Status, {
                                status: e,
                                className: q.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: q.status,
                                children: (0, F.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: q.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, H.default)(e, t, n),
                    dontCloseOnAction: !0,
                    children: e !== W.StatusTypes.ONLINE ? l : void 0
                })
            }

            function X(e, t, n, s) {
                return (0, a.jsx)(E.MenuItem, {
                    id: e,
                    keepItemStyles: !0,
                    render: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: q.statusItem,
                            children: [(0, a.jsx)(E.Status, {
                                status: e,
                                className: q.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: q.status,
                                children: (0, F.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: q.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, H.default)(e, t, n),
                    dontCloseOnAction: !0
                })
            }

            function J(e) {
                let {
                    user: t,
                    customStatus: n,
                    guildId: l,
                    isApplicationStreaming: r,
                    onClose: o,
                    onSelect: h,
                    closePopout: b
                } = e, U = (0, C.useAnalyticsContext)(), {
                    analyticsLocations: G
                } = (0, I.default)(p.default.ACCOUNT_PROFILE_POPOUT), B = (0, L.default)(t.id, l), [H, J, $, ee] = (0, c.useStateFromStoresArray)([j.default], () => {
                    var e;
                    let n = t.id;
                    return "string" != typeof n ? [void 0, void 0, W.StatusTypes.UNKNOWN, !1] : [null !== (e = j.default.findActivity(n, e => e.type !== W.ActivityTypes.CUSTOM_STATUS)) && void 0 !== e ? e : void 0, j.default.findActivity(t.id, e => e.type === W.ActivityTypes.CUSTOM_STATUS), j.default.getStatus(n), j.default.isMobileOnline(n)]
                }), et = function(e, t) {
                    let n = A.ExpiringStatusExperiment.useExperiment({
                            location: "account popout"
                        }).expiringStatus,
                        s = x.StatusExpiresAtSetting.useSetting(),
                        l = (0, N.useFocusModeEnabled)(),
                        i = v.QuietModeExperiment.useExperiment({
                            location: "account popout"
                        }).allowQuietMode || l,
                        r = x.FocusModeExpiresAtSetting.useSetting(),
                        o = e === W.StatusTypes.DND,
                        d = t => {
                            let n = null != s && "0" !== s ? z.default.Messages.STATUS_UNTIL.format({
                                endTime: new Date(Number(s)).toLocaleString(z.default.getLocale(), {
                                    month: "numeric",
                                    day: "numeric",
                                    hour: "numeric",
                                    minute: "2-digit"
                                })
                            }) : void 0;
                            if (e === t && null != n) return n;
                            switch (t) {
                                case W.StatusTypes.DND:
                                    return i ? z.default.Messages.STATUS_DND_HELP_FOCUS_MODE : z.default.Messages.STATUS_DND_HELP;
                                case W.StatusTypes.INVISIBLE:
                                    return z.default.Messages.STATUS_INVISIBLE_HELPER;
                                default:
                                    return
                            }
                        },
                        c = (0, a.jsx)(a.Fragment, {
                            children: Q.map(t => {
                                let {
                                    duration: n,
                                    label: s
                                } = t;
                                return (0, a.jsx)(E.MenuItem, {
                                    id: "".concat(e, "-").concat(n),
                                    label: s(),
                                    action: () => {
                                        (0, N.setFocusMode)(!0, n)
                                    },
                                    dontCloseOnAction: !0
                                }, n)
                            })
                        });
                    return (0, a.jsxs)(a.Fragment, {
                        children: [X(W.StatusTypes.ONLINE, e, t), (0, a.jsx)(E.MenuSeparator, {}, "menu-separator-statuses"), n ? Z(W.StatusTypes.IDLE, e, t, d(W.StatusTypes.IDLE)) : X(W.StatusTypes.IDLE, e, t, d(W.StatusTypes.IDLE)), n ? Z(W.StatusTypes.DND, e, t, d(W.StatusTypes.DND)) : X(W.StatusTypes.DND, e, t, d(W.StatusTypes.DND)), n ? Z(W.StatusTypes.INVISIBLE, e, t, d(W.StatusTypes.INVISIBLE)) : X(W.StatusTypes.INVISIBLE, e, t, d(W.StatusTypes.INVISIBLE)), (0, a.jsx)(E.MenuSeparator, {}, "menu-separator-statuses"), i || l ? (0, a.jsx)(E.MenuItem, {
                            id: "quiet-mode",
                            "aria-label": "focus mode",
                            className: q.expiringStatusMenuItem,
                            keepItemStyles: !0,
                            hasSubmenu: !0,
                            showIconFirst: !0,
                            label: () => (0, a.jsxs)("div", {
                                className: q.statusItem,
                                children: [(0, a.jsx)(f.BellSlashIcon, {
                                    width: 12,
                                    height: 12,
                                    className: q.icon
                                }), (0, a.jsxs)("div", {
                                    className: q.focusModeTitle,
                                    children: [z.default.Messages.FOCUS_MODE_TITLE, (0, a.jsx)(E.TextBadge, {
                                        text: l ? z.default.Messages.FOCUS_MODE_BADGE_ON : o ? z.default.Messages.FOCUS_MODE_BADGE_ON_VIA_DND : z.default.Messages.FOCUS_MODE_BADGE_OFF,
                                        color: l ? u.default.BRAND_500 : o ? u.default.RED_400 : u.default.PRIMARY_500
                                    })]
                                }), (0, a.jsx)("div", {
                                    className: q.description,
                                    children: l && null != r && "0" !== r ? z.default.Messages.STATUS_UNTIL.format({
                                        endTime: new Date(Number(r)).toLocaleString(z.default.getLocale(), {
                                            month: "numeric",
                                            day: "numeric",
                                            hour: "numeric",
                                            minute: "2-digit"
                                        })
                                    }) : z.default.Messages.FOCUS_MODE_DESCRIPTION
                                })]
                            }),
                            action: () => {
                                (0, N.setFocusMode)(!l)
                            },
                            dontCloseOnAction: !0,
                            children: c
                        }, "quiet-mode") : null]
                    })
                }($, U), {
                    ref: en
                } = (0, _.default)(), ea = (0, m.default)(en);
                s.useEffect(() => {
                    k.default.track(W.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != n,
                        other_user_id: t.id,
                        application_id: null != H ? H.application_id : void 0,
                        is_streaming: r,
                        application_name: null != H ? H.name : void 0,
                        profile_has_nitro_customization: (null == B ? void 0 : B.banner) != null,
                        location: U.location,
                        has_profile_effect: (null == B ? void 0 : B.profileEffectId) != null
                    })
                }, []);
                let es = (0, N.useFocusModeEnabled)(),
                    el = $ === W.StatusTypes.DND,
                    ei = (0, V.useMultiAccountMenuItems)(),
                    er = (0, g.useCustomStatusMenuItem)(null != n ? n : void 0, q.menuItemFocused),
                    eo = (0, T.default)({
                        id: t.id,
                        label: z.default.Messages.COPY_ID_USER,
                        showIconFirst: !0
                    });
                return (0, a.jsx)(I.AnalyticsLocationProvider, {
                    value: G,
                    children: (0, a.jsx)(R.UserProfileAnalyticsProvider, {
                        layout: "ACCOUNT_POPOUT",
                        userId: t.id,
                        guildId: l,
                        children: (0, a.jsx)("div", {
                            className: q.popoutContainer,
                            children: (0, a.jsx)("div", {
                                ref: en,
                                children: (0, a.jsxs)(P.default, {
                                    className: q.themeContainer,
                                    user: t,
                                    displayProfile: B,
                                    profileType: K.UserProfileTypes.POPOUT,
                                    children: [(0, a.jsx)(D.default, {
                                        user: t,
                                        displayProfile: B,
                                        onClose: () => null == b ? void 0 : b(),
                                        isMobile: ee,
                                        isStreaming: (0, S.default)(H),
                                        status: $,
                                        disableUserProfileLink: __OVERLAY__,
                                        isHovering: ea,
                                        showPremiumBadgeUpsell: !1
                                    }), (0, a.jsxs)(P.default.Overlay, {
                                        children: [(0, a.jsx)(y.default, {
                                            activity: H,
                                            customStatusActivity: J,
                                            displayProfile: B,
                                            user: t,
                                            onClose: o,
                                            setNote: !1,
                                            canDM: !1,
                                            hideNote: !0,
                                            showCopiableUsername: !0
                                        }), (0, a.jsx)(M.default, {
                                            className: q.divider
                                        }), (0, a.jsxs)(E.Menu, {
                                            navId: "account",
                                            "aria-label": z.default.Messages.SET_STATUS,
                                            hideScroller: !0,
                                            className: q.menu,
                                            onClose: o,
                                            onSelect: h,
                                            children: [(0, a.jsxs)(E.MenuGroup, {
                                                children: [(0, a.jsx)(E.MenuItem, {
                                                    id: "status-picker",
                                                    label: (0, a.jsxs)("div", {
                                                        style: {
                                                            display: "flex",
                                                            alignItems: "center",
                                                            justifyContent: "space-between"
                                                        },
                                                        children: [(0, F.humanizeStatus)($), es || el ? (0, a.jsx)(f.BellSlashIcon, {
                                                            width: 12,
                                                            height: 12
                                                        }) : null]
                                                    }),
                                                    focusedClassName: q.menuItemFocused,
                                                    subMenuIconClassName: q.subMenuIcon,
                                                    action: d.isMobile ? function() {
                                                        (0, O.trackUserProfileAction)({
                                                            action: "PRESS_SET_STATUS",
                                                            layout: "ACCOUNT_POPOUT",
                                                            userId: t.id,
                                                            guildId: l,
                                                            analyticsLocations: G
                                                        }), (0, E.openModalLazy)(() => new Promise(e => {
                                                            e(e => (0, a.jsx)(E.ModalRoot, {
                                                                ...e,
                                                                size: E.ModalSize.SMALL,
                                                                className: q.modal,
                                                                "aria-label": z.default.Messages.SET_STATUS,
                                                                children: (0, a.jsx)(E.Menu, {
                                                                    navId: "account",
                                                                    variant: "fixed",
                                                                    "aria-label": z.default.Messages.SET_STATUS,
                                                                    hideScroller: !0,
                                                                    className: q.statusPickerModalMenu,
                                                                    onClose: e.onClose,
                                                                    onSelect: e.onClose,
                                                                    children: et
                                                                })
                                                            }))
                                                        }))
                                                    } : void 0,
                                                    showIconFirst: !0,
                                                    icon: e => {
                                                        let {
                                                            className: t,
                                                            isFocused: n
                                                        } = e;
                                                        return (0, a.jsx)(E.Status, {
                                                            status: $,
                                                            size: 12,
                                                            className: i()(t, q.mainStatusIcon),
                                                            color: n ? "currentColor" : void 0
                                                        })
                                                    },
                                                    children: d.isMobile ? void 0 : et
                                                }, "status-picker"), er]
                                            }), (0, a.jsx)(E.MenuGroup, {
                                                children: (0, a.jsx)(E.MenuItem, {
                                                    id: "switch-account",
                                                    focusedClassName: q.menuItemFocused,
                                                    subMenuIconClassName: q.subMenuIcon,
                                                    label: z.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                                                    icon: w.default,
                                                    showIconFirst: !0,
                                                    action: () => {
                                                        (0, O.trackUserProfileAction)({
                                                            action: "PRESS_SWITCH_ACCOUNTS",
                                                            layout: "ACCOUNT_POPOUT",
                                                            userId: t.id,
                                                            guildId: l,
                                                            analyticsLocations: G
                                                        }), (0, Y.default)()
                                                    },
                                                    children: ei
                                                }, "switch-account")
                                            }), (0, a.jsx)(E.MenuGroup, {
                                                children: eo
                                            })]
                                        })]
                                    })]
                                })
                            })
                        })
                    })
                })
            }

            function $(e) {
                let {
                    userId: t,
                    user: n,
                    guildId: l,
                    onClose: i,
                    onSelect: r
                } = e, u = (0, c.useStateFromStores)([G.default], () => G.default.getUser(t), [t]), d = (0, c.useStateFromStores)([U.default], () => U.default.getCustomStatusActivity()), [f, E] = s.useState(!1), C = null != u ? u : n, _ = (0, c.useStateFromStores)([b.default], () => null != C && null != b.default.getAnyStreamForUser(C.id));
                return (s.useEffect(() => {
                    null == u && e();
                    async function e() {
                        "string" == typeof t && (await (0, h.getUser)(t), E(!0))
                    }
                }, [u, t]), null == C) ? (f && o()(null != C, "Unexpected missing user"), null) : (0, a.jsx)(J, {
                    closePopout: i,
                    user: C,
                    customStatus: d,
                    guildId: l,
                    isApplicationStreaming: _,
                    onClose: i,
                    onSelect: r
                })
            }
        },
        443669: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("447452"),
                l = n("331541"),
                i = n("543993");

            function r(e) {
                let {
                    location: t,
                    ...n
                } = e, {
                    updatedOnAllSurfaces: r
                } = (0, s.useSimplifiedProfileExperiment)({
                    location: t
                });
                return r ? (0, a.jsx)(i.default, {
                    ...n
                }) : (0, a.jsx)(l.default, {
                    ...n
                })
            }
        },
        543993: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return er
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("512722"),
                o = n.n(r),
                u = n("722770"),
                d = n("873546"),
                c = n("442837"),
                f = n("116061"),
                E = n("549080"),
                h = n("481060"),
                C = n("232567"),
                _ = n("2052"),
                m = n("393238"),
                S = n("727637"),
                p = n("100527"),
                I = n("906732"),
                g = n("521868"),
                T = n("299206"),
                A = n("440051"),
                N = n("734934"),
                v = n("158238"),
                R = n("680295"),
                O = n("785717"),
                L = n("318661"),
                P = n("741308"),
                y = n("549546"),
                M = n("681837"),
                D = n("502762"),
                x = n("530"),
                b = n("564440"),
                U = n("796214"),
                j = n("171368"),
                G = n("580512"),
                w = n("67152"),
                k = n("23293"),
                B = n("695346"),
                F = n("199902"),
                H = n("293273"),
                V = n("158776"),
                Y = n("246946"),
                W = n("594174"),
                K = n("626135"),
                z = n("70956"),
                q = n("5192"),
                Q = n("51144"),
                Z = n("246133"),
                X = n("474376"),
                J = n("383832"),
                $ = n("981631"),
                ee = n("228168"),
                et = n("689938"),
                en = n("476002");
            let ea = [{
                duration: 30 * z.default.Millis.MINUTE,
                label: () => et.default.Messages.MUTE_DURATION_30_MINUTES
            }, {
                duration: z.default.Millis.HOUR,
                label: () => et.default.Messages.MUTE_DURATION_1_HOUR
            }, {
                duration: 3 * z.default.Millis.HOUR,
                label: () => et.default.Messages.MUTE_DURATION_3_HOURS
            }, {
                duration: 8 * z.default.Millis.HOUR,
                label: () => et.default.Messages.MUTE_DURATION_8_HOURS
            }, {
                duration: z.default.Millis.DAY,
                label: () => et.default.Messages.MUTE_DURATION_24_HOURS
            }, {
                duration: void 0,
                label: () => et.default.Messages.DURATION_FOREVER
            }];

            function es(e, t, n, s) {
                let l = (0, a.jsx)(a.Fragment, {
                    children: ea.map(s => {
                        let {
                            duration: l,
                            label: i
                        } = s;
                        return (0, a.jsx)(h.MenuItem, {
                            id: "".concat(e, "-").concat(l),
                            label: i(),
                            action: () => (0, Z.default)(e, t, n, l),
                            dontCloseOnAction: !0
                        }, l)
                    })
                });
                return (0, a.jsx)(h.MenuItem, {
                    id: e,
                    className: en.expiringStatusMenuItem,
                    keepItemStyles: !0,
                    hasSubmenu: !0,
                    label: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: en.statusItem,
                            children: [(0, a.jsx)(h.Status, {
                                status: e,
                                className: en.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: en.status,
                                children: (0, Q.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: en.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, Z.default)(e, t, n),
                    dontCloseOnAction: !0,
                    children: e !== $.StatusTypes.ONLINE ? l : void 0
                })
            }

            function el(e, t, n, s) {
                return (0, a.jsx)(h.MenuItem, {
                    id: e,
                    keepItemStyles: !0,
                    render: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: en.statusItem,
                            children: [(0, a.jsx)(h.Status, {
                                status: e,
                                className: en.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: en.status,
                                children: (0, Q.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: en.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, Z.default)(e, t, n),
                    dontCloseOnAction: !0
                })
            }

            function ei(e) {
                let {
                    user: t,
                    customStatus: n,
                    guildId: l,
                    isApplicationStreaming: r,
                    onClose: o,
                    onSelect: C,
                    closePopout: F
                } = e, H = __OVERLAY__, W = (0, L.default)(t.id, l), z = (0, _.useAnalyticsContext)(), {
                    analyticsLocations: Z
                } = (0, I.default)(p.default.ACCOUNT_PROFILE_POPOUT), ei = (0, O.useTrackUserProfileAction)({
                    layout: "SIMPLIFIED_ACCOUNT_POPOUT",
                    userId: t.id,
                    guildId: l
                }), [er, eo] = (0, c.useStateFromStoresArray)([V.default], () => {
                    var e;
                    let n = t.id;
                    return "string" != typeof n ? [void 0, $.StatusTypes.UNKNOWN] : [null !== (e = V.default.findActivity(n, e => e.type !== $.ActivityTypes.CUSTOM_STATUS)) && void 0 !== e ? e : void 0, V.default.getStatus(n)]
                }), eu = function(e, t) {
                    let n = A.ExpiringStatusExperiment.useExperiment({
                            location: "account popout"
                        }).expiringStatus,
                        s = B.StatusExpiresAtSetting.useSetting(),
                        l = (0, N.useFocusModeEnabled)(),
                        i = v.QuietModeExperiment.useExperiment({
                            location: "account popout"
                        }).allowQuietMode || l,
                        r = B.FocusModeExpiresAtSetting.useSetting(),
                        o = e === $.StatusTypes.DND,
                        d = t => {
                            let n = null != s && "0" !== s ? et.default.Messages.STATUS_UNTIL.format({
                                endTime: new Date(Number(s)).toLocaleString(et.default.getLocale(), {
                                    month: "numeric",
                                    day: "numeric",
                                    hour: "numeric",
                                    minute: "2-digit"
                                })
                            }) : void 0;
                            if (e === t && null != n) return n;
                            switch (t) {
                                case $.StatusTypes.DND:
                                    return i ? et.default.Messages.STATUS_DND_HELP_FOCUS_MODE : et.default.Messages.STATUS_DND_HELP;
                                case $.StatusTypes.INVISIBLE:
                                    return et.default.Messages.STATUS_INVISIBLE_HELPER;
                                default:
                                    return
                            }
                        },
                        c = (0, a.jsx)(a.Fragment, {
                            children: ea.map(t => {
                                let {
                                    duration: n,
                                    label: s
                                } = t;
                                return (0, a.jsx)(h.MenuItem, {
                                    id: "".concat(e, "-").concat(n),
                                    label: s(),
                                    action: () => {
                                        (0, N.setFocusMode)(!0, n)
                                    },
                                    dontCloseOnAction: !0
                                }, n)
                            })
                        });
                    return (0, a.jsxs)(a.Fragment, {
                        children: [el($.StatusTypes.ONLINE, e, t), (0, a.jsx)(h.MenuSeparator, {}, "menu-separator-statuses"), n ? es($.StatusTypes.IDLE, e, t, d($.StatusTypes.IDLE)) : el($.StatusTypes.IDLE, e, t, d($.StatusTypes.IDLE)), n ? es($.StatusTypes.DND, e, t, d($.StatusTypes.DND)) : el($.StatusTypes.DND, e, t, d($.StatusTypes.DND)), n ? es($.StatusTypes.INVISIBLE, e, t, d($.StatusTypes.INVISIBLE)) : el($.StatusTypes.INVISIBLE, e, t, d($.StatusTypes.INVISIBLE)), (0, a.jsx)(h.MenuSeparator, {}, "menu-separator-statuses"), i || l ? (0, a.jsx)(h.MenuItem, {
                            id: "quiet-mode",
                            "aria-label": "focus mode",
                            className: en.expiringStatusMenuItem,
                            keepItemStyles: !0,
                            hasSubmenu: !0,
                            showIconFirst: !0,
                            label: () => (0, a.jsxs)("div", {
                                className: en.statusItem,
                                children: [(0, a.jsx)(f.BellSlashIcon, {
                                    width: 12,
                                    height: 12,
                                    className: en.icon
                                }), (0, a.jsxs)("div", {
                                    className: en.focusModeTitle,
                                    children: [et.default.Messages.FOCUS_MODE_TITLE, (0, a.jsx)(h.TextBadge, {
                                        text: l ? et.default.Messages.FOCUS_MODE_BADGE_ON : o ? et.default.Messages.FOCUS_MODE_BADGE_ON_VIA_DND : et.default.Messages.FOCUS_MODE_BADGE_OFF,
                                        color: l ? u.default.BRAND_500 : o ? u.default.RED_400 : u.default.PRIMARY_500
                                    })]
                                }), (0, a.jsx)("div", {
                                    className: en.description,
                                    children: l && null != r && "0" !== r ? et.default.Messages.STATUS_UNTIL.format({
                                        endTime: new Date(Number(r)).toLocaleString(et.default.getLocale(), {
                                            month: "numeric",
                                            day: "numeric",
                                            hour: "numeric",
                                            minute: "2-digit"
                                        })
                                    }) : et.default.Messages.FOCUS_MODE_DESCRIPTION
                                })]
                            }),
                            action: () => {
                                (0, N.setFocusMode)(!l)
                            },
                            dontCloseOnAction: !0,
                            children: c
                        }, "quiet-mode") : null]
                    })
                }(eo, z), {
                    ref: ed
                } = (0, m.default)(), ec = (0, S.default)(ed);
                s.useEffect(() => {
                    K.default.track($.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != n,
                        other_user_id: t.id,
                        application_id: null != er ? er.application_id : void 0,
                        is_streaming: r,
                        application_name: null != er ? er.name : void 0,
                        profile_has_nitro_customization: (null == W ? void 0 : W.banner) != null,
                        location: z.location,
                        has_profile_effect: (null == W ? void 0 : W.profileEffectId) != null
                    })
                }, []);
                let ef = e => {
                        null == F || F(), (0, j.openUserProfileModal)({
                            sourceAnalyticsLocations: Z,
                            userId: t.id,
                            guildId: l,
                            ...e
                        })
                    },
                    eE = (0, N.useFocusModeEnabled)(),
                    eh = eo === $.StatusTypes.DND,
                    eC = (0, X.useMultiAccountMenuItems)(),
                    e_ = (0, g.useCustomStatusMenuItem)(null != n ? n : void 0, en.menuItemFocused),
                    em = (0, T.default)({
                        id: t.id,
                        label: et.default.Messages.COPY_ID_USER,
                        showIconFirst: !0,
                        focusedClassName: en.menuItemFocused
                    }),
                    eS = (0, c.useStateFromStores)([Y.default], () => Y.default.hidePersonalInformation);
                return (0, a.jsx)(I.AnalyticsLocationProvider, {
                    value: Z,
                    children: (0, a.jsx)(O.UserProfileAnalyticsProvider, {
                        layout: "SIMPLIFIED_ACCOUNT_POPOUT",
                        userId: t.id,
                        guildId: l,
                        children: (0, a.jsx)("div", {
                            className: en.popoutContainer,
                            ref: ed,
                            children: (0, a.jsxs)(D.default, {
                                className: en.themeContainer,
                                user: t,
                                displayProfile: W,
                                profileType: ee.UserProfileTypes.BITE_SIZE,
                                children: [(0, a.jsx)(b.default, {
                                    profileType: ee.UserProfileTypes.BITE_SIZE,
                                    children: (0, a.jsx)(U.default, {
                                        onClose: o
                                    })
                                }), (0, a.jsx)(k.default, {
                                    user: t,
                                    displayProfile: W,
                                    onOpenProfile: H ? void 0 : ef
                                }), (0, a.jsxs)("div", {
                                    className: en.body,
                                    children: [(0, a.jsx)(x.default, {
                                        user: t,
                                        className: en.username,
                                        profileType: ee.UserProfileTypes.BITE_SIZE,
                                        nickname: q.default.getName(null, null, t),
                                        onOpenProfile: () => ef({
                                            autoFocusNote: !1
                                        }),
                                        pronouns: null == W ? void 0 : W.pronouns,
                                        tags: (0, a.jsx)(P.default, {
                                            displayProfile: W,
                                            profileType: ee.UserProfileTypes.BITE_SIZE,
                                            onClose: o
                                        }),
                                        nicknameIcons: (0, a.jsxs)(a.Fragment, {
                                            children: [(0, a.jsx)(M.default, {
                                                userId: t.id
                                            }), (0, a.jsx)(y.default, {
                                                user: t,
                                                isHovering: ec
                                            })]
                                        })
                                    }), (0, a.jsx)(w.default, {
                                        user: t,
                                        bio: null == W ? void 0 : W.bio,
                                        hidePersonalInformation: eS,
                                        onClose: o
                                    }), (0, a.jsx)(G.default, {
                                        user: t,
                                        onClose: o
                                    }), (0, a.jsxs)("div", {
                                        className: en.menus,
                                        children: [(0, a.jsxs)(h.Menu, {
                                            navId: "status",
                                            "aria-label": et.default.Messages.STATUS_MENU_LABEL,
                                            hideScroller: !0,
                                            className: en.menu,
                                            onClose: o,
                                            onSelect: C,
                                            children: [(0, a.jsx)(h.MenuGroup, {
                                                children: (0, a.jsx)(h.MenuItem, {
                                                    id: "status-picker",
                                                    label: (0, a.jsxs)("div", {
                                                        style: {
                                                            display: "flex",
                                                            alignItems: "center",
                                                            justifyContent: "space-between"
                                                        },
                                                        children: [(0, Q.humanizeStatus)(eo), eE || eh ? (0, a.jsx)(f.BellSlashIcon, {
                                                            width: 12,
                                                            height: 12
                                                        }) : null]
                                                    }),
                                                    focusedClassName: en.menuItemFocused,
                                                    subMenuIconClassName: en.subMenuIcon,
                                                    action: d.isMobile ? function() {
                                                        ei({
                                                            action: "PRESS_SET_STATUS",
                                                            analyticsLocations: Z
                                                        }), (0, h.openModalLazy)(() => new Promise(e => {
                                                            e(e => (0, a.jsx)(h.ModalRoot, {
                                                                ...e,
                                                                size: h.ModalSize.SMALL,
                                                                className: en.modal,
                                                                "aria-label": et.default.Messages.SET_STATUS,
                                                                children: (0, a.jsx)(h.Menu, {
                                                                    navId: "status-mobile-web",
                                                                    variant: "fixed",
                                                                    "aria-label": et.default.Messages.STATUS_MENU_LABEL,
                                                                    hideScroller: !0,
                                                                    className: en.statusPickerModalMenu,
                                                                    onClose: e.onClose,
                                                                    onSelect: e.onClose,
                                                                    children: eu
                                                                })
                                                            }))
                                                        }))
                                                    } : void 0,
                                                    showIconFirst: !0,
                                                    icon: e => {
                                                        let {
                                                            className: t,
                                                            isFocused: n
                                                        } = e;
                                                        return (0, a.jsx)(h.Status, {
                                                            status: eo,
                                                            size: 12,
                                                            className: i()(t, en.mainStatusIcon),
                                                            color: n ? "currentColor" : void 0
                                                        })
                                                    },
                                                    children: d.isMobile ? void 0 : eu
                                                }, "status-picker")
                                            }), (0, a.jsx)(h.MenuGroup, {
                                                children: e_
                                            })]
                                        }), (0, a.jsxs)(h.Menu, {
                                            navId: "account",
                                            "aria-label": et.default.Messages.MULTI_ACCOUNT_MENU_LABEL,
                                            hideScroller: !0,
                                            className: en.menu,
                                            onClose: o,
                                            onSelect: C,
                                            children: [(0, a.jsx)(h.MenuGroup, {
                                                children: (0, a.jsx)(h.MenuItem, {
                                                    id: "switch-account",
                                                    focusedClassName: en.menuItemFocused,
                                                    subMenuIconClassName: en.subMenuIcon,
                                                    label: et.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                                                    icon: E.UserCircleIcon,
                                                    showIconFirst: !0,
                                                    action: () => {
                                                        ei({
                                                            action: "PRESS_SWITCH_ACCOUNTS",
                                                            analyticsLocations: Z
                                                        }), (0, J.default)()
                                                    },
                                                    children: eC
                                                })
                                            }), (0, a.jsx)(h.MenuGroup, {
                                                children: em
                                            })]
                                        })]
                                    })]
                                }), (null == W ? void 0 : W.profileEffectId) != null && (0, a.jsx)(R.default, {
                                    profileEffectId: null == W ? void 0 : W.profileEffectId,
                                    isHovering: ec
                                })]
                            })
                        })
                    })
                })
            }

            function er(e) {
                let {
                    userId: t,
                    user: n,
                    guildId: l,
                    onClose: i,
                    onSelect: r
                } = e, u = (0, c.useStateFromStores)([W.default], () => W.default.getUser(t), [t]), d = (0, c.useStateFromStores)([H.default], () => H.default.getCustomStatusActivity()), [f, E] = s.useState(!1), h = null != u ? u : n, _ = (0, c.useStateFromStores)([F.default], () => null != h && null != F.default.getAnyStreamForUser(h.id));
                return (s.useEffect(() => {
                    null == u && e();
                    async function e() {
                        "string" == typeof t && (await (0, C.getUser)(t), E(!0))
                    }
                }, [u, t]), null == h) ? (f && o()(null != h, "Unexpected missing user"), null) : (0, a.jsx)(ei, {
                    closePopout: i,
                    user: h,
                    customStatus: d,
                    guildId: l,
                    isApplicationStreaming: _,
                    onClose: i,
                    onSelect: r
                })
            }
        },
        383832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("798077");

            function r() {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await Promise.all([n.e("49237"), n.e("99387"), n.e("52030"), n.e("93669"), n.e("55944")]).then(n.bind(n, "266653"));
                    return t => (0, a.jsx)(e, {
                        ...t
                    })
                }, {
                    onCloseCallback: () => {
                        l.default.dispatch({
                            type: "CLEAR_AUTHENTICATION_ERRORS"
                        }), l.default.dispatch({
                            type: "LOGIN_RESET",
                            isMultiAccount: !0
                        })
                    },
                    modalKey: i.SWITCH_ACCOUNTS_MODAL_KEY
                })
            }
        },
        474376: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMultiAccountMenuItems: function() {
                    return g
                }
            }), n("653041");
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("44315"),
                r = n("598077"),
                o = n("246946"),
                u = n("594174"),
                d = n("441674"),
                c = n("759231"),
                f = n("626135"),
                E = n("51144"),
                h = n("480387"),
                C = n("726745"),
                _ = n("251423"),
                m = n("383832"),
                S = n("981631"),
                p = n("689938"),
                I = n("368110");

            function g() {
                let e = (0, s.useStateFromStores)([u.default], () => u.default.getCurrentUser()),
                    t = (0, s.useStateFromStores)([o.default], () => o.default.hidePersonalInformation),
                    {
                        multiAccountUsers: n
                    } = (0, _.useMultiAccountUsers)(),
                    g = t => {
                        t !== (null == e ? void 0 : e.id) && (f.default.track(S.AnalyticEvents.MULTI_ACCOUNT_SWITCH_ATTEMPT, {
                            location: {
                                section: S.AnalyticsSections.PROFILE_POPOUT
                            }
                        }), h.switchAccount(t))
                    },
                    T = n.map(n => {
                        let s = new r.default(n),
                            o = s.id === (null == e ? void 0 : e.id),
                            u = n.tokenStatus === C.MultiAccountTokenStatus.INVALID,
                            f = t ? null : "#".concat(s.discriminator);
                        return (0, a.jsx)(l.MenuItem, {
                            id: s.id,
                            focusedClassName: I.focused,
                            label: e => {
                                let {
                                    isFocused: r
                                } = e;
                                return (0, a.jsxs)("div", {
                                    className: I.userMenuItem,
                                    children: [(0, a.jsx)(l.Avatar, {
                                        src: s.getAvatarURL(void 0, 40),
                                        size: l.AvatarSizes.SIZE_24,
                                        "aria-label": n.username
                                    }), (0, a.jsxs)("div", {
                                        className: I.userMenuUsername,
                                        children: [(0, a.jsx)(l.Text, {
                                            className: I.userMenuText,
                                            variant: "text-sm/normal",
                                            children: E.default.getUserTag(s, {
                                                mode: "username",
                                                identifiable: t ? "never" : "always"
                                            })
                                        }), !s.isPomelo() && (0, a.jsx)(l.Text, {
                                            className: I.userMenuDiscriminator,
                                            variant: "text-sm/normal",
                                            children: f
                                        })]
                                    }), o && (0, a.jsx)(d.default, {
                                        color: (0, i.getColor)(r ? S.Color.WHITE_500 : S.Color.BRAND_500),
                                        backgroundColor: (0, i.getColor)(r ? S.Color.BRAND_500 : S.Color.WHITE_500),
                                        width: 18,
                                        height: 18,
                                        className: I.activeIcon
                                    }), u && (0, a.jsx)(c.default, {
                                        color: (0, i.getColor)(S.Color.RED_400),
                                        backgroundColor: (0, i.getColor)(S.Color.WHITE_500),
                                        width: 15,
                                        height: 15,
                                        className: I.activeIcon
                                    })]
                                })
                            },
                            action: () => {
                                u ? (0, m.default)() : g(s.id)
                            }
                        }, s.id)
                    });
                return T.push((0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.MenuSeparator, {}), (0, a.jsx)(l.MenuItem, {
                        id: "manage-accounts",
                        label: p.default.Messages.SWITCH_ACCOUNTS_MANAGE_ACCOUNTS,
                        action: m.default
                    })]
                })), T
            }
        },
        440051: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExpiringStatusExperiment: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2024-01_expiring_status",
                label: "Expiring status Experiment ",
                defaultConfig: {
                    expiringStatus: !1
                },
                treatments: [{
                    id: 1,
                    label: "allow expiring status",
                    config: {
                        expiringStatus: !0
                    }
                }]
            })
        },
        109497: function(e, t, n) {
            "use strict";
            n.r(t), n("653041");
            var a, s = n("442837"),
                l = n("570140"),
                i = n("695346"),
                r = n("885110"),
                o = n("70956"),
                u = n("981631");

            function d(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let c = [],
                f = !1;

            function E() {
                return c.length >= 4 && c.some(e => e < Date.now() - 3 * o.default.Millis.DAY)
            }
            class h extends(a = s.default.PersistedStore) {
                initialize(e) {
                    null != e && Array.isArray(e.sessionStartsWithDND) && (c = e.sessionStartsWithDND)
                }
                showNagBar() {
                    return f
                }
                getState() {
                    return {
                        sessionStartsWithDND: c
                    }
                }
                getTemp() {
                    return {
                        x: i.StatusExpiresAtSetting.getSetting()
                    }
                }
            }
            d(h, "displayName", "HabitualDNDStore"), d(h, "persistKey", "habitualDND"), new h(l.default, {
                POST_CONNECTION_OPEN: function() {
                    r.default.getStatus() === u.StatusTypes.DND && "0" === i.StatusExpiresAtSetting.getSetting() ? (c.push(Date.now()), c = c.filter(e => e > Date.now() - 5 * o.default.Millis.DAY), E() && setTimeout(() => {
                        l.default.dispatch({
                            type: "HABITUAL_DND_CLEAR"
                        })
                    }, 15 * o.default.Millis.SECOND)) : c = []
                },
                HABITUAL_DND_CLEAR: function() {
                    f = !!E() || !1, c = []
                }
            })
        },
        158238: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                QuietModeExperiment: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2024-01_quiet_mode",
                label: "Quiet Mode (dnd-equivalent) Experiment ",
                defaultConfig: {
                    allowQuietMode: !1
                },
                treatments: [{
                    id: 1,
                    label: "allow quiet mode",
                    config: {
                        allowQuietMode: !0
                    }
                }]
            })
        },
        225559: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                mount: function() {
                    return s
                },
                unmount: function() {
                    return l
                }
            });
            var a = n("570140");

            function s() {
                a.default.dispatch({
                    type: "NOW_PLAYING_MOUNTED"
                })
            }

            function l() {
                a.default.dispatch({
                    type: "NOW_PLAYING_UNMOUNTED"
                })
            }
        },
        791359: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("954955"),
                o = n.n(r),
                u = n("442837"),
                d = n("481060"),
                c = n("570140"),
                f = n("265875"),
                E = n("569984"),
                h = n("918701"),
                C = n("800599"),
                _ = n("594174"),
                m = n("801077"),
                S = n("626135"),
                p = n("70956"),
                I = n("225559"),
                g = n("910436"),
                T = n("203028"),
                A = n("358924"),
                N = n("292140"),
                v = n("525296"),
                R = n("981631"),
                O = n("674563"),
                L = n("689938"),
                P = n("676563");
            let y = 15 * p.default.Millis.MINUTE,
                M = (0, v.default)(function(e) {
                    let {
                        party: t,
                        onUserContextMenu: n,
                        onChannelContextMenu: l,
                        quest: i
                    } = e, r = (0, a.jsx)(T.default, {
                        party: t,
                        onUserContextMenu: n
                    }), u = (0, a.jsx)(g.default, {
                        party: t,
                        onChannelContextMenu: l,
                        quest: i
                    }), {
                        partiedMembers: c,
                        applicationStreams: f,
                        currentActivities: E,
                        voiceChannels: h
                    } = t, C = c.length, _ = f.length, m = E.length, p = h.length > 0, I = s.useCallback(() => {
                        let e = E.filter(e => {
                            var t, n;
                            return (null === (t = e.game) || void 0 === t ? void 0 : t.name) != null && (null === (n = e.game) || void 0 === n ? void 0 : n.type) === O.ApplicationTypes.GAME
                        }).map(e => e.game.name);
                        S.default.track(R.AnalyticEvents.NOW_PLAYING_CARD_HOVERED, {
                            num_users: C,
                            num_streams: _,
                            num_activities: m,
                            in_voice_channel: p,
                            games_detected: e
                        })
                    }, [C, _, m, p, E]), v = o()(I, y);
                    return null != r || null != u ? (0, a.jsx)(d.Popout, {
                        position: "left",
                        renderPopout: e => {
                            let {
                                closePopout: n
                            } = e;
                            return (0, a.jsx)(N.default, {
                                party: t,
                                close: n
                            })
                        },
                        spacing: 8,
                        children: (e, t) => {
                            let {
                                isShown: n
                            } = t;
                            return (0, a.jsx)(A.default, {
                                ...e,
                                onMouseEnter: v,
                                "aria-haspopup": "menu",
                                className: P.itemCard,
                                active: n,
                                children: (0, a.jsxs)("div", {
                                    children: [r, u]
                                })
                            })
                        }
                    }) : null
                }),
                D = i().throttle(() => f.fetchUserAffinities(!1), 3e5);

            function x() {
                let {
                    nowPlayingCards: e,
                    loaded: t,
                    needsRefresh: n,
                    fetching: l,
                    currentUser: i
                } = (0, u.useStateFromStoresObject)([m.default, C.default, _.default], () => ({
                    nowPlayingCards: m.default.nowPlayingCards,
                    loaded: m.default.loaded,
                    needsRefresh: C.default.needsRefresh(),
                    fetching: C.default.getFetching(),
                    currentUser: _.default.getCurrentUser()
                })), r = (0, u.useStateFromStores)([E.default], () => E.default.quests);
                s.useEffect(() => (c.default.wait(() => I.mount()), () => c.default.wait(() => I.unmount())), [null == i ? void 0 : i.id]), s.useEffect(() => {
                    n && !l && D()
                }, [n, l]);
                let o = s.useMemo(() => {
                        let t = new Map,
                            n = new Set;
                        for (let a of e) a.party.currentActivities.forEach(e => {
                            let {
                                game: s
                            } = e;
                            if (null != s) {
                                let e = (0, h.getQuestByApplicationId)(r, s.id);
                                null != e && !n.has(e.id) && (t.set(a.party.id, e), n.add(e.id))
                            }
                        });
                        return t
                    }, [e, r]),
                    f = null;
                return t ? (f = e.length > 0 ? e.map(e => {
                    let {
                        party: t
                    } = e;
                    return (0, a.jsx)(M, {
                        party: t,
                        quest: o.get(t.id)
                    }, t.id)
                }) : (0, a.jsxs)("div", {
                    className: P.emptyCard,
                    children: [(0, a.jsx)(d.Heading, {
                        variant: "heading-md/semibold",
                        className: P.emptyHeader,
                        children: L.default.Messages.ACTIVITY_FEED_NONE_PLAYING_HEADER
                    }), (0, a.jsx)(d.Text, {
                        color: "none",
                        className: P.emptyText,
                        variant: "text-sm/normal",
                        children: L.default.Messages.ACTIVITY_FEED_NONE_PLAYING_BODY
                    })]
                }), (0, a.jsx)(a.Fragment, {
                    children: f
                })) : (0, a.jsx)("div", {
                    className: P.emptyCard,
                    children: (0, a.jsx)(d.Spinner, {})
                })
            }
        },
        910436: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("653041"), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("287734"),
                l = n("872810"),
                i = n("122810"),
                r = n("841784"),
                o = n("503438"),
                u = n("802856"),
                d = n("420660"),
                c = n("566078"),
                f = n("23404"),
                E = n("769654"),
                h = n("81063"),
                C = n("761282"),
                _ = n("358924"),
                m = n("868854"),
                S = n("817915"),
                p = n("981631");

            function I(e) {
                let {
                    party: t,
                    onChannelContextMenu: n,
                    quest: I
                } = e, g = (0, m.useNowPlayingVisible)(), {
                    voiceChannels: T,
                    currentActivities: A,
                    partiedMembers: N,
                    applicationStreams: v,
                    guildContext: R
                } = t, O = [], L = e => {
                    var t, n;
                    let {
                        length: s
                    } = O;
                    if (0 === s) {
                        O.push(e);
                        return
                    }
                    let l = O[s - 1],
                        i = "".concat(null !== (t = null == e ? void 0 : e.key) && void 0 !== t ? t : ""),
                        r = "".concat(null !== (n = null == l ? void 0 : l.key) && void 0 !== n ? n : "").startsWith("game") && i.startsWith("rich-presence");
                    O.push((0, a.jsx)(_.default.Separator, {
                        inset: r
                    }, "sep-".concat(i))), O.push(e)
                };
                for (let {
                        activity: e
                    }
                    of(T.length > 0 && T.forEach(e => {
                        let {
                            members: t,
                            channel: s,
                            guild: l
                        } = e;
                        L((0, a.jsx)(_.default.VoiceSection, {
                            guild: l,
                            channel: s,
                            members: t,
                            partySize: function(e, t) {
                                let n;
                                let a = e.length,
                                    s = 0;
                                if (null != t && null != t.party && null != t.party.size && t.party.size.length >= 2) {
                                    let a = t.party.size;
                                    s = Math.max(a[0] - e.length, 0), n = a[1]
                                } else n = a + s;
                                return {
                                    knownSize: a,
                                    unknownSize: s,
                                    totalSize: n
                                }
                            }(t),
                            onChannelContextMenu: n,
                            onGuildClick: () => {
                                (0, E.transitionToGuild)(l.id)
                            }
                        }, "voice-".concat(s.id)))
                    }), t.currentActivities))
                    if (null != e) {
                        let t = C.createBody(e);
                        if (null != t) {
                            L(t);
                            break
                        }
                    } return v.length > 0 && g && v.forEach(e => {
                    let {
                        stream: t,
                        streamUser: n,
                        activity: i
                    } = e;
                    L((0, a.jsx)(_.default.ApplicationStreamingSection, {
                        guildId: null == R ? void 0 : R.id,
                        user: n,
                        activity: i,
                        applicationStream: t,
                        onPreviewClick: () => {
                            s.default.selectVoiceChannel(t.channelId), (0, l.watchStreamAndTransitionToStream)(t)
                        }
                    }, "application-stream-".concat(t.ownerId)))
                }), A.forEach((e, t) => {
                    var n, s, l, E, C, m, g, v, O;
                    let {
                        activity: P,
                        game: y,
                        playingMembers: M,
                        activityUser: D
                    } = e;
                    if (null == P || null == P.type) return null;
                    if (A.length > 1 && P.type === p.ActivityTypes.PLAYING && !(0, i.default)(P) && null != y) L((0, a.jsx)(_.default.GameSection, {
                        icon: y.getIconURL(S.ICON_SIZE),
                        name: y.name,
                        partySize: {
                            knownSize: M.length,
                            unknownSize: 0,
                            totalSize: M.length
                        },
                        members: M
                    }, "game-".concat(null !== (n = P.session_id) && void 0 !== n ? n : t, "-").concat(null !== (s = P.application_id) && void 0 !== s ? s : t)));
                    else if ((0, r.default)(P)) {
                        let e = new Set(M.map(e => e.id)),
                            t = null === (l = T.find(e => null != e)) || void 0 === l ? void 0 : l.channel;
                        null != t && L((0, a.jsx)(_.default.EmbeddedActivitySection, {
                            activity: P,
                            participants: e,
                            channel: t,
                            guildId: t.guild_id
                        }, "embedded-activity-".concat(P.application_id)))
                    } else if ((null != P.assets || (0, i.default)(P)) && P.type === p.ActivityTypes.PLAYING) L((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: P,
                        getAssetImage: h.getAssetImage
                    }, "rich-presence-".concat(null !== (E = P.session_id) && void 0 !== E ? E : t, "-").concat(D.id)));
                    else if ((0, d.default)(P)) {
                        let e = T.length > 0 && T[0].members.length > 1,
                            n = M.length > 1;
                        L((0, a.jsx)(_.default.TwitchSection, {
                            guildId: null == R ? void 0 : R.id,
                            activity: P,
                            user: e || n ? D : null,
                            getAssetImage: h.getAssetImage
                        }, "streaming-".concat(null !== (C = P.session_id) && void 0 !== C ? C : t)))
                    } else(0, o.default)(P) ? L((0, a.jsx)(_.default.SpotifySection, {
                        activity: P,
                        isSolo: 1 === N.length,
                        partySize: {
                            knownSize: M.length,
                            unknownSize: 0,
                            totalSize: M.length
                        },
                        getAssetImage: h.getAssetImage,
                        members: M
                    }, "spotify-".concat(null !== (m = P.session_id) && void 0 !== m ? m : t, "-").concat(D.id))) : (null != P.assets || (0, i.default)(P)) && P.type === p.ActivityTypes.LISTENING ? L((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: P,
                        getAssetImage: h.getAssetImage
                    }, "rich-presence-".concat(null !== (g = P.session_id) && void 0 !== g ? g : t, "-").concat(D.id))) : (0, u.default)(P) && L((0, a.jsx)(_.default.XboxSection, {
                        title: y.name
                    }, "xbox-".concat(null !== (v = P.session_id) && void 0 !== v ? v : t)));
                    null != I && null != y && y.id === c.SharedQuestFields.build(I.config).application.id && L((0, a.jsx)(f.default, {
                        quest: I
                    }, "quest-".concat(I.id, "-").concat(null !== (O = P.session_id) && void 0 !== O ? O : t)))
                }), O.length > 0 ? (0, a.jsx)(_.default.Body, {
                    children: O
                }) : null
            }
        },
        203028: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("512722"),
                l = n.n(s),
                i = n("841784"),
                r = n("503438"),
                o = n("802856"),
                u = n("366966"),
                d = n("51144"),
                c = n("761282"),
                f = n("358924"),
                E = n("817915"),
                h = n("981631"),
                C = n("689938");

            function _(e) {
                let {
                    party: t,
                    onUserContextMenu: s
                } = e, {
                    priorityMembers: _,
                    guildContext: m
                } = t, S = _[0], p = function(e) {
                    let {
                        priorityMembers: t,
                        partiedMembers: n
                    } = e, a = new Set(t.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    })), s = n.filter(e => !a.has(e.id)), l = d.default.getName(t[0].user), i = null != t[1] ? d.default.getName(t[1].user) : null != s[0] ? d.default.getName(s[0]) : null;
                    switch (n.length) {
                        case 1:
                            return l;
                        case 2:
                            return C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN_ONLY.format({
                                user1: l,
                                user2: i
                            });
                        default:
                            return C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN.format({
                                user1: l,
                                user2: i,
                                extras: n.length - 2
                            })
                    }
                }(t), {
                    subtitle: I,
                    icon: g
                } = function(e) {
                    var t;
                    let {
                        priorityMembers: s,
                        partiedMembers: d,
                        voiceChannels: _,
                        currentActivities: m
                    } = e, S = s.length, p = d.length - S, I = m[0], g = null == I ? void 0 : I.activity, T = null == I ? void 0 : I.startedPlayingTime, A = {
                        name: null !== (t = null == g ? void 0 : g.name) && void 0 !== t ? t : ""
                    };
                    if ((0, i.default)(g) && null != g) return {
                        subtitle: (0, a.jsx)(u.default, {
                            start: T,
                            location: u.default.Locations.ACTIVITY_FEED_NEW,
                            messageProps: A
                        }),
                        icon: null
                    };
                    if (S + p === 1 && null != I) {
                        let {
                            game: e
                        } = I;
                        if (null == g) return {
                            subtitle: null,
                            icon: null
                        };
                        let t = c.createHeader(g);
                        if (null != t) return t;
                        switch (g.type) {
                            case h.ActivityTypes.PLAYING:
                                if ((0, o.default)(g)) return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_XBOX,
                                    icon: (0, a.jsx)(f.default.Header.Icon, {
                                        src: f.default.Header.Icon.Src.XBOX
                                    })
                                };
                                return {
                                    subtitle: (0, a.jsx)(u.default, {
                                        start: T,
                                        location: u.default.Locations.ACTIVITY_FEED_NEW,
                                        messageProps: A
                                    }), icon: null != e ? (0, a.jsx)(f.default.Header.Icon, {
                                        src: null != e.getIconURL(E.ICON_SIZE) ? e.getIconURL(E.ICON_SIZE) : n("211827")
                                    }) : null
                                };
                            case h.ActivityTypes.STREAMING:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_STREAMING_TWITCH, icon: null != e && null != e.getIconURL(E.ICON_SIZE) ? (0, a.jsx)(f.default.Header.Icon, {
                                        src: e.getIconURL(E.ICON_SIZE)
                                    }) : null
                                };
                            case h.ActivityTypes.LISTENING:
                                let s;
                                return s = (0, r.default)(g) ? (0, a.jsx)(f.default.Header.Icon, {
                                    src: f.default.Header.Icon.Src.SPOTIFY
                                }) : null != e.getIconURL(E.ICON_SIZE) ? (0, a.jsx)(f.default.Header.Icon, {
                                    src: e.getIconURL(E.ICON_SIZE)
                                }) : (0, a.jsx)(f.default.Header.Icon, {
                                    src: n("211827")
                                }), {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_LISTENING.format({
                                        name: g.name
                                    }),
                                    icon: s
                                };
                            case h.ActivityTypes.WATCHING:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_WATCHING, icon: null != e && null != e.getIconURL(E.ICON_SIZE) ? (0, a.jsx)(f.default.Header.Icon, {
                                        src: e.getIconURL(E.ICON_SIZE)
                                    }) : null
                                };
                            default:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL, icon: null
                                }
                        }
                    }
                    if (0 === m.length) {
                        if (_.length > 0) return {
                            subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL,
                            icon: null
                        };
                        let e = m[0];
                        if (null != e) {
                            let {
                                activity: t
                            } = e;
                            if (null != t) {
                                let e = c.createHeader(t);
                                if (null != e) return e
                            }
                            if (null != t && t.type === h.ActivityTypes.LISTENING) return {
                                subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_SPOTIFY,
                                icon: (0, a.jsx)(f.default.Header.Icon, {
                                    src: f.default.Header.Icon.Src.SPOTIFY
                                })
                            }
                        }
                    } else if (1 === m.length) {
                        let e = m.find(e => null != e.activity);
                        if (null == e) return {
                            subtitle: null,
                            icon: null
                        };
                        let {
                            activity: t,
                            game: n,
                            startedPlayingTime: s
                        } = e;
                        return l()(null != t, "Activity was null somehow"), {
                            subtitle: (0, a.jsx)(u.default, {
                                start: s,
                                location: u.default.Locations.ACTIVITY_FEED_NEW,
                                messageProps: A
                            }),
                            icon: null != n && null != n.getIconURL(E.ICON_SIZE) ? (0, a.jsx)(f.default.Header.Icon, {
                                src: n.getIconURL(E.ICON_SIZE)
                            }) : null
                        }
                    }
                    return {
                        subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_MULTIPLE_GAMES,
                        icon: (0, a.jsx)(f.default.Header.Icon, {
                            src: f.default.Header.Icon.Src.MULTIPLE
                        })
                    }
                }(t);
                return (0, a.jsx)(f.default.Header, {
                    priorityUser: S,
                    guildId: null == m ? void 0 : m.id,
                    title: p,
                    subtitle: I,
                    icon: g,
                    onContextMenu: e => s(e, S.user)
                })
            }
        },
        358924: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l = n("735250"),
                i = n("470079"),
                r = n("120356"),
                o = n.n(r),
                u = n("442837"),
                d = n("692547"),
                c = n("481060"),
                f = n("438139"),
                E = n("2052"),
                h = n("726542"),
                C = n("638880"),
                _ = n("655922"),
                m = n("122810"),
                S = n("833664"),
                p = n("503438"),
                I = n("420660"),
                g = n("74433"),
                T = n("952561"),
                A = n("513202"),
                N = n("906732"),
                v = n("812206"),
                R = n("933557"),
                O = n("102172"),
                L = n("871118"),
                P = n("849171"),
                y = n("314897"),
                M = n("592125"),
                D = n("594174"),
                x = n("368874"),
                b = n("366695"),
                U = n("366966"),
                j = n("446753"),
                G = n("619271"),
                w = n("395361"),
                k = n("639351"),
                B = n("632184"),
                F = n("368666"),
                H = n("81063"),
                V = n("823379"),
                Y = n("51144"),
                W = n("599706"),
                K = n("981631"),
                z = n("689938"),
                q = n("691970");
            let Q = {
                    SMALL: 64,
                    LARGE: 160
                },
                Z = [14, 14, 12, 12, 10, 8, 6],
                X = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, l.jsx)(c.Text, {
                        className: o()(q.textContent, t),
                        variant: "text-sm/semibold",
                        children: e
                    })
                },
                J = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, l.jsx)(c.Text, {
                        className: o()(q.textContent, t),
                        variant: "text-xs/normal",
                        children: e
                    })
                },
                $ = (0, f.default)(e => {
                    let {
                        message: t
                    } = e;
                    return (0, l.jsx)("div", {
                        className: q.__invalid_timestamp,
                        children: t
                    })
                }),
                ee = e => {
                    let {
                        children: t
                    } = e;
                    return (0, l.jsx)("section", {
                        className: q.section,
                        children: t
                    })
                };
            class et extends i.Component {
                renderTimePlayed() {
                    let e;
                    let {
                        activity: t
                    } = this.props, {
                        timestamps: n
                    } = t;
                    return null == n || !(0, S.default)(t) || (0, p.default)(t) ? null : J(e = (0, m.default)(t) ? (0, l.jsx)($, {
                        timestamps: n
                    }) : (0, l.jsx)(U.default, {
                        start: n.start,
                        end: n.end,
                        location: U.default.Locations.USER_ACTIVITY,
                        className: q.__invalid_playTime
                    }))
                }
                render() {
                    var e, t;
                    let {
                        activity: {
                            assets: a,
                            details: s,
                            state: i,
                            application_id: r
                        },
                        getAssetImage: u
                    } = this.props;
                    return (0, l.jsx)(ee, {
                        children: (0, l.jsxs)("div", {
                            className: q.activitySection,
                            children: [null != a && 0 !== Object.keys(a).length ? (0, l.jsxs)("div", {
                                className: q.activitySectionAssets,
                                children: [(0, l.jsx)("img", {
                                    alt: null !== (e = a.large_text) && void 0 !== e ? e : "",
                                    src: u(r, a.large_image, [Q.LARGE, Q.LARGE]),
                                    className: o()(q.largeImage, {
                                        [q.largeImageMask]: null != a.small_image
                                    })
                                }), null != a.small_image ? (0, l.jsx)("img", {
                                    alt: null !== (t = a.small_text) && void 0 !== t ? t : "",
                                    src: u(r, a.small_image, [Q.SMALL, Q.SMALL]),
                                    className: q.smallImage
                                }) : null]
                            }) : (0, l.jsx)("div", {
                                className: q.activitySectionAssets,
                                children: (0, l.jsx)("img", {
                                    alt: "",
                                    src: n("211827"),
                                    className: q.largeImage
                                })
                            }), (0, l.jsxs)("div", {
                                children: [X(null != s && "" !== s ? s : z.default.Messages.USER_ACTIVITY_HEADER_PLAYING), null != i ? J(i) : null, this.renderTimePlayed()]
                            })]
                        })
                    })
                }
            }(s = a || (a = {})).XBOX = "XBOX", s.SPOTIFY = "SPOTIFY", s.MULTIPLE = "MULTIPLE";
            let en = e => {
                let t, {
                    src: n,
                    onClick: a,
                    onContextMenu: s
                } = e;
                switch (n) {
                    case "XBOX":
                        t = (0, l.jsx)(k.default, {
                            className: q.headerIcon,
                            color: d.default.unsafe_rawColors.PRIMARY_300.css
                        });
                        break;
                    case "SPOTIFY":
                        t = (0, l.jsx)(w.default, {
                            className: q.headerIcon,
                            color: d.default.unsafe_rawColors.SPOTIFY.css
                        });
                        break;
                    case "MULTIPLE":
                        t = (0, l.jsx)("div", {
                            className: q.multipleIconWrapper,
                            children: (0, l.jsx)(G.default, {
                                className: o()(q.headerIcon, q.multipleIcon),
                                color: d.default.unsafe_rawColors.PRIMARY_300.css
                            })
                        });
                        break;
                    default:
                        t = (0, l.jsx)("img", {
                            src: null != n ? n : void 0,
                            alt: "",
                            className: q.headerIcon
                        })
                }
                return null != a || null != s ? (0, l.jsx)(c.Clickable, {
                    onClick: a,
                    className: o()(null != a ? q.clickableIcon : ""),
                    onContextMenu: s,
                    children: t
                }) : t
            };
            en.Src = a;
            let ea = e => {
                let {
                    priorityUser: t,
                    title: n,
                    subtitle: a,
                    icon: s,
                    onContextMenu: i,
                    guildId: r
                } = e;
                return (0, l.jsxs)("header", {
                    className: null != s ? q.headerFull : q.headerSimple,
                    children: [(0, l.jsx)(c.Avatar, {
                        src: t.user.getAvatarURL(r, 32),
                        "aria-label": t.user.username,
                        size: c.AvatarSizes.SIZE_32,
                        className: q.headerAvatar,
                        status: t.status,
                        onContextMenu: i
                    }), (0, l.jsxs)("div", {
                        className: q.__invalid_headerDetails,
                        children: [(0, l.jsx)(c.Text, {
                            className: o()(q.textContent),
                            variant: "text-md/semibold",
                            children: n
                        }), (0, l.jsx)(c.Text, {
                            color: "header-secondary",
                            className: q.textContent,
                            variant: "text-sm/normal",
                            children: a
                        })]
                    }), null != s ? s : null]
                })
            };
            ea.Icon = en;
            let es = e => {
                let {
                    children: t,
                    className: n,
                    ...a
                } = e;
                return (0, l.jsx)(c.FocusRing, {
                    children: (0, l.jsx)(j.default, {
                        className: o()(n, q.wrapper),
                        padded: !0,
                        ...a,
                        children: t
                    })
                })
            };
            es.Header = ea, es.Body = e => {
                let {
                    children: t
                } = e;
                return (0, l.jsx)(j.default, {
                    inset: !0,
                    padded: !1,
                    className: q.body,
                    children: t
                })
            }, es.Separator = e => {
                let {
                    inset: t,
                    className: n
                } = e;
                return (0, l.jsx)("div", {
                    className: o()(q.separator, {
                        [q.inset]: t
                    }, n)
                })
            }, es.VoiceSection = e => {
                var t, n;
                let {
                    guild: a,
                    channel: s,
                    onGuildClick: r,
                    partySize: u,
                    members: d,
                    onChannelContextMenu: f
                } = e, E = i.useRef(null), h = (0, R.default)(s, !0);
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.voiceSection,
                        ref: E,
                        onContextMenu: e => f(e, s),
                        children: [(0, l.jsx)(c.Clickable, {
                            onClick: r,
                            "aria-hidden": !0,
                            tabIndex: -1,
                            children: (0, l.jsxs)("div", {
                                className: q.voiceSectionAssets,
                                children: [null != a.getIconURL(32) ? (0, l.jsx)("img", {
                                    alt: "",
                                    src: null !== (t = a.getIconURL(32)) && void 0 !== t ? t : void 0,
                                    className: o()(q.voiceSectionGuildImage, q.largeImageMask)
                                }) : (0, l.jsx)("div", {
                                    className: q.voiceSectionNoGuildImageWrapper,
                                    children: (0, l.jsx)("div", {
                                        className: q.voiceSectionNoGuildImage,
                                        style: {
                                            fontSize: null !== (n = Z[a.acronym.length]) && void 0 !== n ? n : Z[Z.length - 1]
                                        },
                                        children: a.acronym
                                    })
                                }), (0, l.jsx)("div", {
                                    className: q.voiceSectionIconWrapper,
                                    children: (0, l.jsx)(B.default, {
                                        className: q.voiceSectionIcon
                                    })
                                })]
                            })
                        }), (0, l.jsx)(c.Clickable, {
                            onClick: r,
                            focusProps: {
                                ringTarget: E
                            },
                            children: (0, l.jsxs)("div", {
                                className: q.voiceSectionDetails,
                                children: [X(a.toString(), q.voiceSectionText), J(h, q.voiceSectionText)]
                            })
                        }), (0, l.jsx)(W.default, {
                            partySize: u,
                            members: d,
                            guildId: a.id
                        })]
                    })
                })
            }, es.GameSection = e => {
                let {
                    icon: t,
                    name: n,
                    partySize: a,
                    members: s
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.gameSection,
                        children: [null != t ? (0, l.jsx)("img", {
                            alt: "",
                            src: t,
                            className: q.gameSectionIcon
                        }) : null, (0, l.jsxs)("div", {
                            children: [X(n), J(z.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                                memberCount: a.totalSize
                            }))]
                        }), (0, l.jsx)(W.default, {
                            partySize: a,
                            members: s
                        })]
                    })
                })
            }, es.RichPresenceSection = et, es.XboxSection = e => {
                let {
                    title: t
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.xboxSection,
                        children: [(0, l.jsx)(k.default, {
                            className: q.xboxSectionIcon
                        }), (0, l.jsxs)("div", {
                            className: q.__invalid_xboxSectionDetails,
                            children: [X(t), J(z.default.Messages.GAME_FEED_ACTIVITY_PLAYING_XBOX)]
                        })]
                    })
                })
            }, es.SpotifySection = e => {
                var t;
                let {
                    activity: {
                        assets: n,
                        details: a,
                        state: s,
                        application_id: i
                    },
                    partySize: r,
                    members: u,
                    isSolo: c,
                    getAssetImage: f
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.spotifySection,
                        children: [null != n ? (0, l.jsxs)("div", {
                            className: q.activitySectionAssets,
                            children: [(0, l.jsx)("img", {
                                alt: null !== (t = n.large_text) && void 0 !== t ? t : "",
                                src: f(i, n.large_image, [Q.LARGE, Q.LARGE]),
                                className: o()(q.largeImage, q.borderRadius0, {
                                    [q.largeImageMask]: null != n.small_image
                                })
                            }), c ? null : (0, l.jsx)(w.default, {
                                className: q.smallImage,
                                color: d.default.unsafe_rawColors.SPOTIFY.css
                            })]
                        }) : (0, l.jsx)("div", {}), (0, l.jsxs)("div", {
                            children: [null != a ? X(a) : null, null != s ? J(s) : null]
                        }), (0, l.jsx)(W.default, {
                            minAvatarsShown: c ? 2 : 1,
                            partySize: r,
                            members: u
                        })]
                    })
                })
            }, es.TwitchSection = e => {
                let t, {
                        activity: a,
                        user: s,
                        getAssetImage: i,
                        guildId: r
                    } = e,
                    {
                        name: u,
                        details: d,
                        assets: f,
                        application_id: E
                    } = a;
                if (null != f && (0, I.default)(a)) {
                    var C;
                    t = (0, l.jsx)(x.default, {
                        className: q.twitchSectionPreviewWrapper,
                        aspectRatio: 16 / 9,
                        children: (0, l.jsxs)(c.Clickable, {
                            href: (0, _.default)(a),
                            tag: "a",
                            target: "_blank",
                            children: [(0, l.jsx)("img", {
                                alt: null !== (C = f.large_text) && void 0 !== C ? C : "",
                                src: i(E, f.large_image, [900, 500]),
                                className: q.twitchSectionPreview
                            }), (0, l.jsx)("img", {
                                src: n("497726"),
                                className: q.twitchSectionPlayButton,
                                alt: ""
                            })]
                        })
                    })
                }
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: o()({
                            [q.twitchSectionSimple]: null == s,
                            [q.twitchSectionFull]: null != s
                        }),
                        children: [(0, l.jsx)("img", {
                            alt: "",
                            src: h.default.get(K.PlatformTypes.TWITCH).icon.lightSVG,
                            className: q.twitchSectionIcon
                        }), (0, l.jsxs)("div", {
                            children: [X(u), null != d ? J(d) : null]
                        }), null != s ? (0, l.jsx)(c.Avatar, {
                            src: s.getAvatarURL(r, 24),
                            "aria-label": s.username,
                            className: q.twitchSectionAvatar,
                            size: c.AvatarSizes.SIZE_24
                        }) : null]
                    }), t]
                })
            }, es.ApplicationStreamingSection = e => {
                var t, n;
                let {
                    activity: a,
                    user: s,
                    applicationStream: i,
                    onPreviewClick: r,
                    guildId: o
                } = e, d = (0, u.useStateFromStores)([M.default], () => M.default.getChannel(i.channelId)), [f, E] = (0, O.useCanWatchStream)(d), h = (0, l.jsxs)(c.Clickable, {
                    onClick: f ? r : void 0,
                    className: q.applicationStreamingPreviewWrapper,
                    children: [(0, l.jsx)(L.default, {
                        stream: i,
                        className: q.applicationStreamingPreviewSize
                    }), (0, l.jsx)("div", {
                        className: q.applicationStreamingHoverWrapper,
                        children: (0, l.jsx)("div", {
                            className: q.applicationStreamingHoverText,
                            children: (0, O.getStreamCTAString)(E)
                        })
                    })]
                }), C = null !== (n = null === (t = (0, g.default)(a, i)) || void 0 === t ? void 0 : t.activityText) && void 0 !== n ? n : z.default.Messages.SHARING_SCREEN;
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: q.applicationStreamingSection,
                        children: [(0, l.jsx)(c.Avatar, {
                            size: c.AvatarSizes.SIZE_32,
                            src: s.getAvatarURL(o, 32),
                            "aria-label": s.username,
                            className: q.applicationStreamingAvatar
                        }), (0, l.jsxs)("div", {
                            children: [X(Y.default.getName(s)), J(C)]
                        }), (0, l.jsx)(F.default, {
                            size: F.default.Sizes.SMALL
                        })]
                    }), h]
                })
            }, es.EmbeddedActivitySection = e => {
                let {
                    activity: t,
                    channel: n,
                    guildId: a,
                    participants: s
                } = e, r = (0, T.default)(), [o, d] = i.useState(null), f = t.application_id;
                i.useEffect(() => {
                    null != f && (0, H.fetchAssetIds)(f, ["embedded_background"]).then(e => {
                        let [t] = e;
                        return d(t)
                    })
                }, [f]);
                let h = (0, u.useStateFromStoresArray)([D.default, y.default], () => Array.from(s).map(e => y.default.getId() === e ? null : D.default.getUser(e)).filter(V.isNotNullish)),
                    _ = (0, E.useAnalyticsContext)(),
                    {
                        analyticsLocations: m
                    } = (0, N.default)();
                if (null == f) return null;
                let S = v.default.getApplication(f);
                if (null == S) return null;
                let p = null != t.created_at && t.created_at > 0 ? {
                        start: t.created_at
                    } : void 0,
                    I = (0, H.getAssetImage)(S.id, o, 300);
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: q.embeddedActivityTopRow,
                        children: [(0, l.jsx)(b.default, {
                            game: S,
                            size: b.default.Sizes.XSMALL,
                            className: q.embeddedActivityIcon
                        }), (0, l.jsx)("div", {
                            className: q.embeddedActivityName,
                            children: (0, l.jsx)(c.Text, {
                                variant: "text-sm/semibold",
                                children: S.name
                            })
                        }), null != p ? (0, l.jsx)("div", {
                            className: q.embeddedActivityTimeElapsed,
                            children: (0, l.jsx)(c.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: (0, l.jsx)($, {
                                    timestamps: p
                                })
                            })
                        }) : null]
                    }), (0, l.jsxs)("div", {
                        className: q.embeddedActivityPlayerContainer,
                        children: [null != I ? (0, l.jsx)("img", {
                            src: I,
                            alt: S.name,
                            className: q.embeddedActivityImage
                        }) : null, (0, l.jsxs)("div", {
                            className: q.embeddedActivityImageOverlay,
                            children: [(0, l.jsx)(P.Avatars, {
                                users: h,
                                guildId: a,
                                channelId: n.id
                            }), (0, l.jsx)("div", {
                                className: q.embeddedActivityJoinWrapper,
                                children: (0, l.jsx)(c.Button, {
                                    size: c.Button.Sizes.SMALL,
                                    onClick: e => {
                                        e.stopPropagation(), (0, C.default)({
                                            applicationId: f,
                                            currentEmbeddedApplication: r,
                                            activityChannelId: n.id,
                                            locationObject: _.location,
                                            embeddedActivitiesManager: A.default,
                                            analyticsLocations: m
                                        })
                                    },
                                    children: z.default.Messages.JOIN
                                })
                            })]
                        })]
                    })]
                })
            }, t.default = es
        },
        199104: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("704215"),
                i = n("481060"),
                r = n("410575"),
                o = n("100527"),
                u = n("906732"),
                d = n("243778"),
                c = n("352455"),
                f = n("480294"),
                E = n("153124"),
                h = n("791359"),
                C = n("981631"),
                _ = n("689938"),
                m = n("995858");

            function S() {
                let {
                    analyticsLocations: e
                } = (0, u.default)(o.default.ACTIVE_NOW_COLUMN), t = (0, s.useStateFromStores)([f.default], () => f.default.hasConsented(C.Consents.PERSONALIZATION)) ? [] : [l.DismissibleContent.NOW_PLAYING_CONSENT_CARD], n = (0, E.useUID)();
                return (0, a.jsx)(u.AnalyticsLocationProvider, {
                    value: e,
                    children: (0, a.jsx)(r.default, {
                        section: C.AnalyticsSections.ACTIVE_NOW_COLUMN,
                        children: (0, a.jsx)("aside", {
                            className: m.container,
                            "aria-labelledby": n,
                            children: (0, a.jsxs)(i.Scroller, {
                                className: m.scroller,
                                children: [(0, a.jsx)(i.Heading, {
                                    variant: "heading-lg/semibold",
                                    className: m.header,
                                    id: n,
                                    children: _.default.Messages.GAME_FEED_CURRENT_HEADER_TITLE
                                }), (0, a.jsx)(d.default, {
                                    contentTypes: t,
                                    children: e => {
                                        let {
                                            visibleContent: t,
                                            markAsDismissed: n
                                        } = e;
                                        if (t === l.DismissibleContent.NOW_PLAYING_CONSENT_CARD) return (0, a.jsx)(c.default, {
                                            className: m.__invalid_consentCard,
                                            markAsDismissed: n
                                        })
                                    }
                                }), (0, a.jsx)(h.default, {})]
                            })
                        })
                    })
                })
            }
        },
        292140: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("626135"),
                r = n("144145"),
                o = n("555927"),
                u = n("738762"),
                d = n("244080"),
                c = n("247530"),
                f = n("260889"),
                E = n("981631"),
                h = n("674563"),
                C = n("689938");

            function _(e) {
                let {
                    party: t,
                    close: n,
                    onSelect: _
                } = e, m = (0, u.default)(t), S = (0, f.default)(t), p = (0, c.default)(t), I = (0, d.default)(t), g = (0, r.default)(t), T = (0, o.default)(t);
                return s.useEffect(() => {
                    let e = t.currentActivities.filter(e => {
                        var t, n;
                        return (null === (t = e.game) || void 0 === t ? void 0 : t.name) != null && (null === (n = e.game) || void 0 === n ? void 0 : n.type) === h.ApplicationTypes.GAME
                    }).map(e => e.game.name);
                    i.default.track(E.AnalyticEvents.OPEN_POPOUT, {
                        type: "Now Playing Card Popout",
                        games_detected: e
                    })
                }, []), (0, a.jsxs)(l.Menu, {
                    navId: "now-playing-menu",
                    onClose: n,
                    "aria-label": C.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onSelect: _,
                    children: [m, (0, a.jsxs)(l.MenuGroup, {
                        children: [S, p]
                    }), (0, a.jsx)(l.MenuGroup, {
                        children: I
                    }), (0, a.jsx)(l.MenuGroup, {
                        children: g
                    }), T]
                })
            }
        },
        841710: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NowPlayingUnknownMemberMenuItem: function() {
                    return d
                },
                default: function() {
                    return u
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("481060"),
                r = n("129861"),
                o = n("955124");

            function u(e) {
                let {
                    user: t,
                    status: n,
                    isFocused: s,
                    guildId: l
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)(i.Avatar, {
                        src: t.getAvatarURL(l, 24),
                        className: o.avatar,
                        "aria-label": t.username,
                        size: i.AvatarSizes.SIZE_24,
                        status: n,
                        statusColor: s ? "currentColor" : void 0
                    }), (0, a.jsx)(r.default, {
                        user: t,
                        hideDiscriminator: !0
                    })]
                })
            }

            function d(e) {
                let {
                    label: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)("div", {
                        className: l()(o.avatar, o.unknown)
                    }), (0, a.jsx)("div", {
                        children: t
                    })]
                })
            }
        },
        144145: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            }), n("653041"), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("278323"),
                o = n("287734"),
                u = n("230711"),
                d = n("726542"),
                c = n("620662"),
                f = n("841784"),
                E = n("802856"),
                h = n("594190"),
                C = n("592745"),
                _ = n("553795"),
                m = n("757266"),
                S = n("283595"),
                p = n("417363"),
                I = n("626135"),
                g = n("804739"),
                T = n("346329"),
                A = n("981631"),
                N = n("689938");
            let v = d.default.get(A.PlatformTypes.XBOX).name;

            function R(e) {
                let {
                    currentActivities: t
                } = e, n = t.length > 1, R = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = (0, l.useStateFromStores)([_.default], () => _.default.getAccounts().some(e => e.type === d.default.get(A.PlatformTypes.XBOX).type)), s = t.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, E.default)(t)
                    });
                    return n || !s ? null : (0, a.jsx)(i.MenuItem, {
                        id: "xbox-connect",
                        action: () => u.default.open(A.UserSettingsSections.CONNECTIONS),
                        label: N.default.Messages.USER_ACTIVITY_CONNECT_PLATFORM.format({
                            platform: v
                        })
                    })
                }(e), O = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = s.useContext(I.AnalyticsContext);
                    return (0, l.useStateFromStoresArray)([h.default, S.default, C.default, p.default, m.default], () => t.filter(e => !(0, f.default)(e.activity)).map(e => {
                        let {
                            activity: t,
                            game: a
                        } = e, s = S.default.getActiveLibraryApplication(a.id);
                        return {
                            ...e,
                            libraryApplication: s,
                            canJoin: null != t && (0, c.default)(t, A.ActivityFlags.JOIN) && t.type === A.ActivityTypes.PLAYING,
                            canPlay: (0, g.isLaunchable)({
                                LibraryApplicationStore: S.default,
                                LaunchableGameStore: C.default,
                                DispatchApplicationStore: p.default,
                                ConnectedAppsStore: m.default,
                                applicationId: a.id,
                                branchId: null != s ? s.branchId : null
                            }),
                            isLaunching: C.default.launchingGames.has(a.id),
                            isRunning: h.default.getRunningVerifiedApplicationIds().includes(a.id),
                            location: n.location
                        }
                    }), [n.location, t])
                }(e), L = [];
                for (let e of O) {
                    let {
                        activity: t
                    } = e;
                    null != t && null != t.type && L.push(function(e, t) {
                        let {
                            canJoin: n,
                            activity: s,
                            activityUser: l
                        } = e;
                        if (!n || null == s) return null;
                        async function u() {
                            if (null == s) return;
                            let e = await r.default.sendActivityInviteUser({
                                type: A.ActivityActionTypes.JOIN_REQUEST,
                                userId: l.id,
                                activity: s,
                                location: A.AnalyticsLocations.PROFILE_POPOUT
                            });
                            null != e && o.default.selectPrivateChannel(e.id)
                        }
                        return (0, a.jsx)(i.MenuItem, {
                            id: "join-".concat(s.session_id),
                            label: t ? N.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN_USER.format({
                                name: l.toString()
                            }) : N.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN,
                            action: u
                        })
                    }(e, n), function(e, t) {
                        let {
                            activity: n,
                            game: s,
                            libraryApplication: l,
                            location: r,
                            canPlay: o,
                            isRunning: u,
                            isLaunching: d
                        } = e;
                        if (!o || null == n) return null;
                        let c = u ? N.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_RUNNING.format({
                            name: s.name
                        }) : d ? N.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_LAUNCHING.format({
                            name: s.name
                        }) : void 0;
                        return (0, a.jsx)(i.MenuItem, {
                            id: "play-".concat(n.session_id),
                            action: function() {
                                (0, T.playApplication)(s.id, l, {
                                    analyticsParams: {
                                        location: {
                                            ...r,
                                            object: A.AnalyticsObjects.LIST_ITEM
                                        }
                                    }
                                })
                            },
                            label: t ? N.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH_APPLICATION_NAME.format({
                                name: s.name
                            }) : N.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH,
                            subtext: c
                        })
                    }(e, n))
                }
                return [R, ...L]
            }
        },
        555927: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("653041"), n("47120"), n("390547");
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("906732"),
                r = n("171368"),
                o = n("841710"),
                u = n("981631"),
                d = n("689938");

            function c(e) {
                let {
                    priorityMembers: t,
                    otherMembers: n,
                    totalMembers: s,
                    activity: i,
                    guildId: c,
                    sourceAnalyticsLocations: f
                } = e, E = [];
                for (let {
                        user: e,
                        status: n
                    }
                    of t) E.push((0, a.jsx)(l.MenuItem, {
                    id: e.id,
                    keepItemStyles: !0,
                    render: t => (0, a.jsx)(o.default, {
                        ...t,
                        user: e,
                        status: n,
                        guildId: c
                    }),
                    action: () => (0, r.openUserProfileModal)({
                        userId: e.id,
                        guildId: c,
                        sourceAnalyticsLocations: f,
                        analyticsLocation: {
                            section: u.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                for (let e of n) E.push((0, a.jsx)(l.MenuItem, {
                    id: e.id,
                    keepItemStyles: !0,
                    render: t => (0, a.jsx)(o.default, {
                        ...t,
                        user: e,
                        guildId: c
                    }),
                    action: () => (0, r.openUserProfileModal)({
                        userId: e.id,
                        guildId: c,
                        sourceAnalyticsLocations: f,
                        analyticsLocation: {
                            section: u.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                let h = s - E.length;
                return h > 0 && E.push((0, a.jsx)(l.MenuItem, {
                    id: "unknown-members-".concat(null == i ? void 0 : i.session_id),
                    render: e => (0, a.jsx)(o.NowPlayingUnknownMemberMenuItem, {
                        ...e,
                        label: d.default.Messages.GAME_FEED_UNKNOWN_PLAYERS.format({
                            count: h
                        })
                    })
                })), E
            }

            function f(e) {
                let {
                    priorityMembers: t,
                    partiedMembers: n,
                    currentActivities: r,
                    guildContext: o
                } = e, u = new Set(t.map(e => {
                    let {
                        user: t
                    } = e;
                    return t.id
                })), f = n.filter(e => !u.has(e.id)), {
                    analyticsLocations: E
                } = (0, i.default)(), h = s.useMemo(() => {
                    let e = r.flatMap(e => {
                        let {
                            playingMembers: t
                        } = e;
                        return t
                    }).map(e => e.id);
                    return n.filter(t => !e.includes(t.id))
                }, [n, r]);
                if (r.length <= 1 && 0 === h.length) {
                    var C, _;
                    return (0, a.jsx)(l.MenuGroup, {
                        label: n.length > 1 ? d.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                            memberCount: n.length
                        }) : void 0,
                        children: c({
                            priorityMembers: t,
                            otherMembers: f,
                            totalMembers: n.length,
                            activity: null !== (_ = null === (C = r[0]) || void 0 === C ? void 0 : C.activity) && void 0 !== _ ? _ : void 0,
                            guildId: null == o ? void 0 : o.id,
                            sourceAnalyticsLocations: E
                        })
                    })
                }
                let m = r.map((e, n) => {
                        let {
                            playingMembers: s,
                            game: i,
                            activity: r
                        } = e, d = new Set(s.map(e => e.id));
                        return (0, a.jsx)(l.MenuGroup, {
                            label: "".concat(i.name, " - ").concat(s.length),
                            children: c({
                                priorityMembers: t.filter(e => {
                                    let {
                                        user: t
                                    } = e;
                                    return d.has(t.id)
                                }),
                                otherMembers: s.filter(e => !u.has(e.id)),
                                totalMembers: s.length,
                                activity: null != r ? r : void 0,
                                guildId: null == o ? void 0 : o.id,
                                sourceAnalyticsLocations: E
                            })
                        }, n)
                    }),
                    S = h.map(e => e.id);
                return [...m, (0, a.jsx)(l.MenuGroup, {
                    label: "".concat(d.default.Messages.ACTIVITY_FEED_OTHER_MEMBER_LIST_HEADER, " - ").concat(h.length),
                    children: c({
                        priorityMembers: t.filter(e => {
                            let {
                                user: t
                            } = e;
                            return S.includes(t.id)
                        }),
                        otherMembers: h.filter(e => !u.has(e.id)),
                        totalMembers: h.length,
                        guildId: null == o ? void 0 : o.id,
                        sourceAnalyticsLocations: E
                    })
                })]
            }
        },
        738762: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("493683"),
                r = n("367907"),
                o = n("205129"),
                u = n("626135"),
                d = n("981631"),
                c = n("689938");

            function f(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        priorityMembers: n,
                        partiedMembers: f
                    } = e,
                    E = s.useContext(u.AnalyticsContext),
                    h = n.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    }),
                    C = 1 === f.length && 1 === n.length,
                    _ = n.length - f.length > 0;
                return (C || t) && !_ && 0 !== h.length ? (0, a.jsx)(l.MenuItem, {
                    id: "message",
                    action: function() {
                        i.default.openPrivateChannel(h).then(t => r.default.trackWithMetadata(d.AnalyticEvents.ACTIVITY_FEED_DM_VISITED, {
                            source: {
                                ...E.location,
                                object: d.AnalyticsObjects.LIST_ITEM
                            },
                            channel_id: t,
                            recipient_id: "string" == typeof h ? h : h[0],
                            af_recently_played: !1,
                            ...(0, o.getPartyMetadata)(e)
                        }))
                    },
                    label: c.default.Messages.SEND_DM
                }) : null
            }
        },
        244080: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("380349");

            function s(e) {
                let {
                    currentActivities: t,
                    isSpotifyActivity: n
                } = e, s = t[0], l = (0, a.default)(null == s ? void 0 : s.activity, null == s ? void 0 : s.activityUser);
                return n ? l : null
            }
        },
        247530: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("287734"),
                i = n("872810"),
                r = n("51144"),
                o = n("689938");

            function u(e) {
                let {
                    applicationStreams: t
                } = e;
                return t.map(e => {
                    let {
                        stream: t,
                        streamUser: n
                    } = e;
                    return (0, a.jsx)(s.MenuItem, {
                        id: "spectate-".concat(t.ownerId),
                        action: () => {
                            l.default.selectVoiceChannel(t.channelId), (0, i.watchStreamAndTransitionToStream)(t)
                        },
                        label: o.default.Messages.WATCH_USER_STREAM.format({
                            streamerName: r.default.getName(n)
                        })
                    }, "spectate-".concat(t.ownerId))
                })
            }
        },
        260889: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("481060"),
                r = n("287734"),
                o = n("367907"),
                u = n("769654"),
                d = n("496675"),
                c = n("205129"),
                f = n("626135"),
                E = n("981631"),
                h = n("689938");

            function C(e) {
                let t = s.useContext(f.AnalyticsContext),
                    n = e.voiceChannels[0],
                    C = (0, l.useStateFromStores)([d.default], () => null != n && d.default.can(E.Permissions.CONNECT, n.channel));
                return null == n ? null : [(0, a.jsx)(i.MenuItem, {
                    id: "join-voice",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), r.default.selectVoiceChannel(n.channel.id), o.default.trackWithMetadata(E.AnalyticEvents.ACTIVITY_FEED_VOICE_CHANNEL_VISITED, {
                            source: {
                                ...t.location,
                                object: E.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            channel_id: n.channel.id,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: h.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_JOIN_CHANNEL,
                    disabled: !C
                }, "join-voice"), (0, a.jsx)(i.MenuItem, {
                    id: "goto-server",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), o.default.trackWithMetadata(E.AnalyticEvents.ACTIVITY_FEED_GUILD_VISITED, {
                            source: {
                                ...t.location,
                                object: E.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            af_recently_played: !1,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: h.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_GO_TO_SERVER
                }, "goto-server")]
            }
        },
        525296: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("493683"),
                i = n("239091"),
                r = n("730749"),
                o = n("430824");

            function u(e) {
                return (0, r.default)(class extends s.Component {
                    render() {
                        return (0, a.jsx)(e, {
                            ...this.props,
                            onMessageUser: this.handleMessageUser,
                            onUserContextMenu: this.handleUserContextMenu,
                            onGuildContextMenu: this.handleGuildContextMenu,
                            onChannelContextMenu: this.handleChannelContextMenu
                        })
                    }
                    handleMessageUser(e, t) {
                        return l.default.openPrivateChannel(t.id)
                    }
                    handleUserContextMenu(e, t, s) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: s
                        })
                    }
                    handleGuildContextMenu(e, t) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("7654"), n.e("33053"), n.e("49146"), n.e("75475"), n.e("85093"), n.e("85552"), n.e("58227"), n.e("43502"), n.e("69760"), n.e("33213")]).then(n.bind(n, "545135"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }
                    handleChannelContextMenu(e, t) {
                        let s = o.default.getGuild(t.getGuildId());
                        if (null == s) return null;
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.e("40283").then(n.bind(n, "428108"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t,
                                guild: s
                            })
                        })
                    }
                })
            }
        },
        929809: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setNewUser: function() {
                    return s
                },
                setNewUserFlowCompleted: function() {
                    return l
                }
            });
            var a = n("570140");

            function s(e) {
                a.default.wait(() => a.default.dispatch({
                    type: "NUF_NEW_USER",
                    newUserType: e
                }))
            }

            function l() {
                a.default.wait(() => a.default.dispatch({
                    type: "NUF_COMPLETE"
                }))
            }
        },
        701476: function(e, t, n) {
            "use strict";
            var a, s;
            n.r(t), n.d(t, {
                NewUserTypes: function() {
                    return a
                }
            }), (s = a || (a = {}))[s.MARKETING_UNCLAIMED = 0] = "MARKETING_UNCLAIMED", s[s.INVITE_UNCLAIMED = 1] = "INVITE_UNCLAIMED", s[s.ORGANIC_REGISTERED = 2] = "ORGANIC_REGISTERED", s[s.ORGANIC_REGISTERED_GUILD_TEMPLATE = 3] = "ORGANIC_REGISTERED_GUILD_TEMPLATE"
        },
        179645: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s = n("442837"),
                l = n("570140");

            function i(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let r = null;
            class o extends(a = s.default.PersistedStore) {
                initialize(e) {
                    var t;
                    r = null !== (t = null == e ? void 0 : e.type) && void 0 !== t ? t : null
                }
                getType() {
                    return r
                }
                getState() {
                    return {
                        type: r
                    }
                }
            }
            i(o, "displayName", "NewUserStore"), i(o, "persistKey", "nuf"), t.default = new o(l.default, {
                NUF_NEW_USER: function(e) {
                    let {
                        newUserType: t
                    } = e;
                    r = t
                },
                NUF_COMPLETE: function() {
                    r = null
                }
            })
        },
        785997: function(e, t, n) {
            "use strict";
            var a, s;
            n.r(t), n.d(t, {
                NUFSlides: function() {
                    return a
                }
            }), (s = a || (a = {})).AGE_GATE = "age-gate", s.CHOOSE_TEMPLATE = "choose-template", s.CUSTOMIZE_GUILD = "customize-server", s.CHANNEL_PROMPT = "channel-prompt", s.JOIN_GUILD = "join-server", s.CREATION_INTENT = "creation-intent", s.COMPLETE = "complete"
        },
        122333: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n("47120");
            var s = n("735250");
            n("470079");
            var l = n("481060"),
                i = n("570140"),
                r = n("317770"),
                o = n("622822"),
                u = n("391650"),
                d = n("305325"),
                c = n("341298"),
                f = n("390885"),
                E = n("524329"),
                h = n("995532"),
                C = n("486472"),
                _ = n("430824"),
                m = n("914010"),
                S = n("594174"),
                p = n("823379"),
                I = n("358085"),
                g = n("929809"),
                T = n("179645"),
                A = n("701476"),
                N = n("785997"),
                v = n("981631"),
                R = n("188785"),
                O = n("630724");

            function L() {
                null != a && (0, l.closeModal)(a)
            }
            class P extends r.default {
                _initialize() {
                    i.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.subscribe("LOGOUT", L)
                }
                _terminate() {
                    i.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.unsubscribe("LOGOUT", L)
                }
                handleConnectionOpen() {
                    var e;
                    let t, i = T.default.getType();
                    if (null == i) return;
                    switch (i) {
                        case A.NewUserTypes.INVITE_UNCLAIMED:
                            f.default.flowStart(O.FlowType.INVITE, O.RegistrationSteps.NUF_STARTED);
                            break;
                        case A.NewUserTypes.ORGANIC_REGISTERED:
                            f.default.flowStart(O.FlowType.ORGANIC, O.RegistrationSteps.NUF_STARTED);
                            break;
                        case A.NewUserTypes.MARKETING_UNCLAIMED:
                            f.default.flowStart(O.FlowType.ORGANIC_MARKETING, O.RegistrationSteps.NUF_STARTED)
                    }
                    let r = !1,
                        L = m.default.getGuildId();
                    if (i === A.NewUserTypes.INVITE_UNCLAIMED) {
                        let e = _.default.getGuild(L);
                        (null == e ? void 0 : e.hasVerificationGate()) && (r = !0, (0, E.fetchWelcomeScreen)(e.id))
                    }
                    let P = () => 0 === C.default.totalGuilds && !I.isPlatformEmbedded,
                        y = o.userNeedsAgeGate();
                    e = [{
                        key: "Unified NUF Modal",
                        open: async function e(e) {
                            let t = e => {
                                switch (e) {
                                    case N.NUFSlides.AGE_GATE:
                                        f.default.flowStep(O.FlowType.ANY, O.RegistrationSteps.AGE_GATE);
                                        break;
                                    case N.NUFSlides.CHOOSE_TEMPLATE:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.GUILD_TEMPLATES);
                                        break;
                                    case N.NUFSlides.CUSTOMIZE_GUILD:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.GUILD_CREATE);
                                        break;
                                    case N.NUFSlides.CHANNEL_PROMPT:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.CHANNEL_PROMPT);
                                        break;
                                    case N.NUFSlides.JOIN_GUILD:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.JOIN_GUILD);
                                        break;
                                    case N.NUFSlides.CREATION_INTENT:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.CREATION_INTENT);
                                        break;
                                    case N.NUFSlides.COMPLETE:
                                        f.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.SUCCESS);
                                        break;
                                    case null:
                                        break;
                                    default:
                                        p.assertNever(e)
                                }
                            };
                            a = await (0, l.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("42483"), n.e("22458")]).then(n.bind(n, "599219"));
                                return n => (0, s.jsx)(e, {
                                    ...n,
                                    onSlideChange: t
                                })
                            }, {
                                onCloseRequest: v.NOOP,
                                onCloseCallback: e,
                                modalKey: a
                            })
                        },
                        predicate: () => P() && !R.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "New User Age Gate",
                        open: u.openNewUserAgeGateModal,
                        predicate: () => y && !P() && !R.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "Claim Account Modal",
                        open: e => u.openClaimAccountModal(I.isPlatformEmbedded, e),
                        predicate: () => {
                            var e;
                            return !r && null != S.default.getCurrentUser() && !(null === (e = S.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !R.CONFERENCE_MODE_ENABLED && !(0, c.isMidjourneyOnboardingFlow)("new_user_manager")
                        }
                    }, {
                        key: "Verification Gate with Claim Account",
                        open: e => (0, d.openMemberVerificationModal)(L, null != e ? e : void 0),
                        predicate: () => {
                            var e;
                            return r && !(null === (e = S.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !R.CONFERENCE_MODE_ENABLED
                        }
                    }, {
                        key: "Guild Welcome Modal",
                        open: e => (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("77578")]).then(n.bind(n, "184782"));
                            return t => (0, s.jsx)(e, {
                                ...t,
                                guildId: L
                            })
                        }, {
                            onCloseCallback: e
                        }),
                        predicate: () => null != L && null != h.default.get(L) && h.default.get(L) !== h.NO_WELCOME_SCREEN
                    }], t = () => {
                        g.setNewUserFlowCompleted(), f.default.flowStep(O.FlowType.ANY, O.RegistrationSteps.NUF_COMPLETE, !0)
                    }, [...e].reverse().forEach(e => {
                        let n = t;
                        t = () => {
                            e.predicate() ? e.open(n) : n()
                        }
                    }), t()
                }
            }
            t.default = new P
        },
        886355: function(e, t, n) {
            "use strict";
            n.r(t), t.default = {
                isScreenLandscape: () => null
            }
        },
        720734: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eq
                }
            }), n("47120"), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("704215"),
                u = n("846519"),
                d = n("742444"),
                c = n("247636"),
                f = n("128951"),
                E = n("952826"),
                h = n("400354"),
                C = n("652844"),
                _ = n("789639"),
                m = n("481060"),
                S = n("355467"),
                p = n("239091"),
                I = n("230711"),
                g = n("255952"),
                T = n("410575"),
                A = n("941129"),
                N = n("83200"),
                v = n("634894"),
                R = n("586902"),
                O = n("515550"),
                L = n("1585"),
                P = n("304761"),
                y = n("865427"),
                M = n("571250"),
                D = n("628581"),
                x = n("55311"),
                b = n("575175"),
                U = n("64220"),
                j = n("377171"),
                G = n("676035"),
                w = n("427217"),
                k = n("605236"),
                B = n("243778"),
                F = n("730417"),
                H = n("524347"),
                V = n("853197"),
                Y = n("810280"),
                W = n("60762"),
                K = n("258609"),
                z = n("278464"),
                q = n("917112"),
                Q = n("443669"),
                Z = n("332473"),
                X = n("240504"),
                J = n("804545"),
                $ = n("637906"),
                ee = n("39370"),
                et = n("19199"),
                en = n("111653"),
                ea = n("212704"),
                es = n("14357"),
                el = n("393333"),
                ei = n("763296"),
                er = n("640806"),
                eo = n("484459"),
                eu = n("584427"),
                ed = n("52538"),
                ec = n("331187"),
                ef = n("879815"),
                eE = n("294629"),
                eh = n("314897"),
                eC = n("592125"),
                e_ = n("819640"),
                em = n("131951"),
                eS = n("19780"),
                ep = n("885110"),
                eI = n("246946"),
                eg = n("594174"),
                eT = n("78839"),
                eA = n("285952"),
                eN = n("546591"),
                ev = n("86813"),
                eR = n("826026"),
                eO = n("937482"),
                eL = n("87888"),
                eP = n("976401"),
                ey = n("333454"),
                eM = n("864441"),
                eD = n("626135"),
                ex = n("768581"),
                eb = n("572004"),
                eU = n("70956"),
                ej = n("374023"),
                eG = n("51144"),
                ew = n("998502"),
                ek = n("981631"),
                eB = n("215023"),
                eF = n("702512"),
                eH = n("689938"),
                eV = n("999872");

            function eY(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let eW = ew.default.getEnableHardwareAcceleration() ? m.AnimatedAvatar : m.Avatar,
                eK = 30 * eU.default.Millis.DAY;
            class ez extends s.PureComponent {
                get isCopiedStreakGodlike() {
                    let {
                        copiedStreak: e
                    } = this.state;
                    return e >= 10
                }
                componentDidUpdate(e) {
                    let {
                        speakingWhileMuted: t,
                        occluded: n
                    } = e, {
                        speakingWhileMuted: a,
                        occluded: s
                    } = this.props;
                    s !== n && this.handleOccludedChanged(), a !== t && this.handleSpeakingWhileMutedChanged()
                }
                componentWillUnmount() {
                    this.copiedTimeout.stop(), this.copiedDecayTimeout.stop(), this.speakingWhileMutedTooltipTimeout.stop()
                }
                renderCopiedSuccess() {
                    let {
                        copiedStreak: e
                    } = this.state, t = [eH.default.Messages.COPY_SUCCESS_1, eH.default.Messages.COPY_SUCCESS_2, eH.default.Messages.COPY_SUCCESS_3, eH.default.Messages.COPY_SUCCESS_4, eH.default.Messages.COPY_SUCCESS_5, eH.default.Messages.COPY_SUCCESS_6, eH.default.Messages.COPY_SUCCESS_7, eH.default.Messages.COPY_SUCCESS_8, eH.default.Messages.COPY_SUCCESS_9, eH.default.Messages.COPY_SUCCESS_10, eH.default.Messages.COPY_SUCCESS_11], n = Math.min(Math.max(0, e - 1), t.length - 1);
                    return (0, a.jsx)(m.Shaker, {
                        isShaking: this.isCopiedStreakGodlike,
                        children: t[n]
                    })
                }
                renderNameTag() {
                    let e;
                    let {
                        hovered: t
                    } = this.state, {
                        customStatusActivity: n,
                        userTag: s,
                        currentUser: l,
                        status: i
                    } = this.props;
                    if (null == l) return null;
                    let r = eG.default.getName(l),
                        o = null != i && i !== ek.StatusTypes.UNKNOWN,
                        u = null != n;
                    return (u || o && l.isPomelo()) && (e = (0, a.jsx)(eN.default, {
                        hoverText: s,
                        forceHover: t,
                        children: u ? (0, a.jsx)(w.default, {
                            activity: n,
                            emojiClassName: eV.emoji,
                            className: eV.customStatus
                        }) : eG.default.humanizeStatus(i)
                    })), (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: eV.panelTitleContainer,
                            children: (0, a.jsx)(eM.default, {
                                children: r
                            })
                        }), (0, a.jsx)("div", {
                            className: eV.panelSubtextContainer,
                            children: (0, a.jsx)(ey.default, {
                                children: null != e ? e : s
                            })
                        })]
                    })
                }
                renderCopiableNameTag() {
                    let {
                        currentUser: e
                    } = this.props, {
                        shouldShowNametagTooltip: t,
                        shouldShowCopiedFeedback: n
                    } = this.state;
                    if (null == e) return null;
                    let s = null,
                        l = m.TooltipColors.PRIMARY;
                    return eb.SUPPORTS_COPY && (s = eH.default.Messages.ACCOUNT_CLICK_TO_COPY, n && (s = this.renderCopiedSuccess(), l = this.isCopiedStreakGodlike ? m.TooltipColors.RED : m.TooltipColors.GREEN)), (0, a.jsx)(m.Tooltip, {
                        text: s,
                        forceOpen: t,
                        "aria-label": !!eb.SUPPORTS_COPY && eH.default.Messages.ACCOUNT_CLICK_TO_COPY,
                        color: l,
                        delay: 500,
                        onAnimationRest: (e, a) => {
                            n && !t && a.phase === ek.SpringTransitionPhases.LEAVE && this.setState({
                                shouldShowCopiedFeedback: !1
                            })
                        },
                        children: e => {
                            let {
                                onClick: t,
                                onMouseEnter: s,
                                ...l
                            } = e;
                            return (0, a.jsx)(m.Clickable, {
                                ...l,
                                onMouseEnter: () => {
                                    n ? (this.copiedTimeout.stop(), this.setState({
                                        shouldShowNametagTooltip: !1
                                    }, s)) : null == s || s()
                                },
                                onClick: () => {
                                    null == t || t(), this.handleCopyTag()
                                },
                                className: i()(eV.nameTag, {
                                    [eV.canCopy]: eb.SUPPORTS_COPY
                                }),
                                children: this.renderNameTag()
                            })
                        }
                    })
                }
                renderAvatarWithPopout() {
                    let {
                        speaking: e,
                        streaming: t,
                        currentUser: n,
                        status: s,
                        showTagAsButton: l,
                        showTaglessAccountPanel: r
                    } = this.props;
                    if (null == n) return null;
                    let o = (0, ex.getAvatarDecorationURL)({
                        avatarDecoration: n.avatarDecoration,
                        size: (0, L.getDecorationSizeForAvatarSize)(m.AvatarSizes.SIZE_32)
                    });
                    return (0, a.jsx)(T.default, {
                        object: ek.AnalyticsObjects.AVATAR,
                        children: (0, a.jsx)(m.Popout, {
                            renderPopout: this.renderStatusPickerPopout,
                            position: "top",
                            align: "left",
                            animation: m.Popout.Animation.FADE,
                            spacing: 14,
                            fixed: !0,
                            preload: () => (0, eo.default)(n.id, null == n ? void 0 : n.getAvatarURL(null, 80)),
                            children: (u, d) => (0, a.jsxs)(m.Clickable, {
                                ...u,
                                "aria-label": eH.default.Messages.SET_STATUS,
                                className: i()(eV.avatarWrapper, {
                                    [eV.withTagAsButton]: l,
                                    [eV.withTagless]: r
                                }),
                                children: [(0, a.jsx)(eW, {
                                    size: m.AvatarSizes.SIZE_32,
                                    src: n.getAvatarURL(void 0, 32, !1),
                                    avatarDecoration: o,
                                    "aria-label": n.username,
                                    status: t ? ek.StatusTypes.STREAMING : s,
                                    isSpeaking: e,
                                    className: eV.avatar
                                }), l || r ? (0, a.jsx)("div", {
                                    className: i()(eV.nameTag, {
                                        [eV.canCopy]: eb.SUPPORTS_COPY
                                    }),
                                    children: r ? (0, a.jsx)(eP.default, {
                                        tooltipText: null,
                                        icon: d.isShown ? ev.default : eR.default,
                                        role: "switch",
                                        "aria-label": eH.default.Messages.SET_STATUS
                                    }) : this.renderNameTag()
                                }) : null]
                            })
                        })
                    })
                }
                renderNameZone() {
                    let {
                        currentUser: e,
                        dismissibleContents: t
                    } = this.props, {
                        showTagAsButton: n,
                        showTaglessAccountPanel: s
                    } = this.props;
                    return null == e ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(B.default, {
                            contentTypes: t.avatar,
                            children: e => {
                                let {
                                    visibleContent: t,
                                    markAsDismissed: n
                                } = e;
                                if (t === o.DismissibleContent.PREMIUM_SUBSCRIPTION_APRIL_MARKETING_DECO_TOOLTIP) return (0, a.jsx)(U.default, {
                                    markAsDismissed: n,
                                    children: () => this.renderAvatarWithPopout()
                                });
                                return this.renderAvatarWithPopout()
                            }
                        }), n || s ? null : this.renderCopiableNameTag()]
                    })
                }
                render() {
                    let {
                        currentUser: e,
                        selfDeaf: t,
                        selfMute: n,
                        awaitingRemote: s,
                        serverMute: l,
                        serverDeaf: i,
                        suppress: r,
                        dismissibleContents: u
                    } = this.props, {
                        shouldShowSpeakingWhileMutedTooltip: d
                    } = this.state;
                    return null == e ? null : (0, a.jsxs)("div", {
                        className: eV.container,
                        onMouseEnter: this.handleMouseEnter,
                        onMouseLeave: this.handleMouseLeave,
                        children: [this.renderNameZone(), (0, a.jsxs)(eA.default, {
                            grow: 0,
                            children: [(0, a.jsx)(eZ, {
                                selfMute: n,
                                serverMute: l,
                                suppress: r,
                                awaitingRemote: s,
                                tooltipText: d ? eH.default.Messages.ACCOUNT_SPEAKING_WHILE_MUTED : (0, D.default)(n, l, r, s),
                                tooltipColor: d ? m.TooltipColors.GREEN : void 0,
                                tooltipForceOpen: d || void 0,
                                onMouseEnter: this.handleMouseEnterMute,
                                onMouseLeave: this.handleMouseLeaveMute,
                                onClick: this.handleToggleSelfMute,
                                onContextMenu: this.handleInputAudioContextMenu
                            }), (0, a.jsx)(eX, {
                                selfDeaf: t,
                                serverDeaf: i,
                                onClick: this.handleToggleSelfDeaf,
                                onContextMenu: this.handleOutputAudioContextMenu,
                                awaitingRemote: s
                            }), (0, a.jsx)(B.default, {
                                contentTypes: u.settings,
                                children: e => {
                                    let {
                                        visibleContent: t,
                                        markAsDismissed: n
                                    } = e;
                                    switch (t) {
                                        case o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ee.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(Y.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eF.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(W.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eF.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ec.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ea.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(es.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(er.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(el.UserSafetyEducationReportingCoachmark, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ed.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.PRIDE_ICONS_COACHMARK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(O.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        default:
                                            return this.renderSettingsGear()
                                    }
                                }
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), eY(this, "copiedTimeout", new u.Timeout), eY(this, "copiedDecayTimeout", new u.Timeout), eY(this, "speakingWhileMutedTooltipTimeout", new u.Timeout), eY(this, "state", {
                        hovered: !1,
                        copiedStreak: 0,
                        shouldShowNametagTooltip: !1,
                        shouldShowCopiedFeedback: !1,
                        shouldShowSpeakingWhileMutedTooltip: !1,
                        hoveringOnMute: !1
                    }), eY(this, "handleToggleSelfMute", () => {
                        let {
                            serverMute: e,
                            suppress: t
                        } = this.props;
                        (0, b.default)(e, t)
                    }), eY(this, "handleToggleSelfDeaf", () => {
                        let {
                            serverDeaf: e
                        } = this.props;
                        (0, x.default)(e)
                    }), eY(this, "handleOpenAccountSettings", () => {
                        this.handleOpenSettings()
                    }), eY(this, "handleOpenSettings", function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ek.UserSettingsSections.ACCOUNT,
                            t = arguments.length > 1 ? arguments[1] : void 0,
                            n = arguments.length > 2 ? arguments[2] : void 0;
                        I.default.open(e, t, n)
                    }), eY(this, "handleOpenSettingsContextMenu", e => {
                        let {
                            currentUser: t
                        } = this.props;
                        null != t && (0, p.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("99387"), n.e("96427"), n.e("40326"), n.e("23357"), n.e("49368"), n.e("19503"), n.e("15972"), n.e("12013"), n.e("6416"), n.e("43906"), n.e("32776"), n.e("95900"), n.e("33053"), n.e("8016"), n.e("49146"), n.e("68136"), n.e("76540"), n.e("22646"), n.e("4934"), n.e("87624"), n.e("36861"), n.e("43331"), n.e("18824"), n.e("30419"), n.e("35522"), n.e("5528"), n.e("31649"), n.e("2535")]).then(n.bind(n, "923422"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t,
                                premiumSubscription: this.props.premiumSubscription,
                                webBuildOverride: this.props.webBuildOverride
                            })
                        })
                    }), eY(this, "handleInputAudioContextMenu", e => {
                        (0, p.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "659580"));
                            return () => (0, a.jsx)(e, {
                                onClose: p.closeContextMenu,
                                renderInputDevices: !0,
                                renderInputModes: !0,
                                renderInputVolume: !0
                            })
                        })
                    }), eY(this, "handleOutputAudioContextMenu", e => {
                        (0, p.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "659580"));
                            return () => (0, a.jsx)(e, {
                                onClose: p.closeContextMenu,
                                renderOutputDevices: !0,
                                renderOutputVolume: !0
                            })
                        })
                    }), eY(this, "handleMouseEnter", () => {
                        this.setState({
                            hovered: !0
                        })
                    }), eY(this, "handleMouseLeave", () => {
                        this.setState({
                            hovered: !1
                        })
                    }), eY(this, "handleMouseEnterMute", () => {
                        this.setState({
                            hoveringOnMute: !0,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop()
                    }), eY(this, "handleMouseLeaveMute", () => {
                        this.setState({
                            hoveringOnMute: !1
                        })
                    }), eY(this, "handleCopyTag", () => {
                        let {
                            currentUser: e
                        } = this.props, {
                            shouldShowNametagTooltip: t,
                            copiedStreak: n
                        } = this.state;
                        if (null == e) return;
                        (0, eb.copy)(eG.default.getUserTag(e, {
                            decoration: "never",
                            identifiable: "always"
                        })), eD.default.track(ek.AnalyticEvents.TEXT_COPIED, {
                            type: "User Tag"
                        });
                        let a = {
                            shouldShowCopiedFeedback: !0,
                            shouldShowNametagTooltip: !0
                        };
                        !t && (a.copiedStreak = n + 1), this.setState(a, () => {
                            this.copiedTimeout.start(1e3, () => this.setState({
                                shouldShowNametagTooltip: !1
                            })), this.copiedDecayTimeout.start(2e3, () => this.setState({
                                copiedStreak: 0
                            }))
                        })
                    }), eY(this, "handleOccludedChanged", () => {
                        let {
                            occluded: e
                        } = this.props;
                        e && this.setState({
                            shouldShowNametagTooltip: !1,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        })
                    }), eY(this, "handleSpeakingWhileMutedChanged", () => {
                        let {
                            selfMute: e,
                            serverMute: t,
                            suppress: n,
                            speakingWhileMuted: a,
                            occluded: s
                        } = this.props, {
                            hoveringOnMute: l
                        } = this.state;
                        a ? !l && e && !t && !n && !s && this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !0
                        }, () => {
                            this.speakingWhileMutedTooltipTimeout.start(2e3, () => this.setState({
                                shouldShowSpeakingWhileMutedTooltip: !1
                            }))
                        }) : (this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop())
                    }), eY(this, "renderStatusPickerPopout", e => {
                        let {
                            closePopout: t
                        } = e, {
                            showRichProfilePopup: n,
                            currentUser: s
                        } = this.props;
                        if (n) {
                            let e = {
                                userId: null == s ? void 0 : s.id,
                                user: s,
                                onClose: () => {
                                    this.handleMouseLeave(), null == t || t()
                                }
                            };
                            return (0, a.jsx)("div", {
                                className: eV.accountProfilePopoutWrapper,
                                children: (0, a.jsx)(Q.default, {
                                    location: "StatusPickerPopout",
                                    ...e
                                })
                            })
                        }
                        return (0, a.jsx)(g.default, {
                            onClose: () => {
                                this.handleMouseLeave(), null == t || t()
                            }
                        })
                    }), eY(this, "renderSettingsGear", () => (0, a.jsx)(eQ, {
                        isEligibleForPomelo: this.props.isEligibleForPomelo,
                        webBuildOverride: this.props.webBuildOverride,
                        onClick: this.handleOpenAccountSettings,
                        onContextMenu: this.handleOpenSettingsContextMenu
                    }))
                }
            }

            function eq() {
                var e, t;
                let n = (0, r.useStateFromStores)([eg.default], () => eg.default.getCurrentUser()),
                    l = (0, F.useShowEligibilityEnrollmentTooltip)(eF.PartnerGame.FORTNITE),
                    i = (0, r.useStateFromStores)([eh.default], () => eh.default.getId()),
                    u = (0, G.useCustomStatusActivity)(),
                    {
                        streaming: d,
                        status: c
                    } = (0, r.useStateFromStoresObject)([ep.default], () => ({
                        streaming: null != ep.default.findActivity(e => e.type === ek.ActivityTypes.STREAMING),
                        status: ep.default.getStatus()
                    })),
                    f = (0, R.default)({
                        userId: i
                    }),
                    E = eG.default.useUserTag(n, {
                        decoration: "never"
                    }),
                    h = (0, r.useStateFromStores)([eI.default], () => eI.default.hidePersonalInformation),
                    C = (0, r.useStateFromStores)([eS.default, eC.default], () => {
                        let e = eS.default.getChannelId();
                        return null != e ? eC.default.getChannel(e) : null
                    }),
                    {
                        mute: _,
                        selfMute: p,
                        suppress: I
                    } = (0, eE.default)(C),
                    {
                        selfDeaf: g,
                        deaf: T
                    } = (0, ef.default)(C),
                    O = (0, r.useStateFromStores)([P.default], () => {
                        var e;
                        return (0, y.probablyHasBuildOverride)() ? null === (e = P.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                    }),
                    L = (0, r.useStateFromStores)([eT.default], () => eT.default.getPremiumTypeSubscription()),
                    M = (0, r.useStateFromStores)([em.default], () => em.default.getEverSpeakingWhileMuted()),
                    D = (0, r.useStateFromStores)([e_.default], () => e_.default.hasLayers()),
                    x = (0, m.useModalsStore)(m.hasAnyModalOpenSelector) || D || ej.ProcessArgs.isDisallowPopupsSet(),
                    b = (0, Z.useIsEligibleForPomelo)();
                s.useEffect(() => {
                    q.default.trackExposure({
                        location: "08bd40_3"
                    })
                });
                let U = (0, r.useStateFromStores)([K.default], () => null != K.default.getAwaitingRemoteSessionInfo()),
                    {
                        isPopupEnabled: j,
                        isJoinedTagButtonEnabled: w,
                        isTaglessAccountPanelEnabled: B
                    } = q.default.useExperiment({
                        location: "08bd40_4"
                    }, {
                        autoTrackExposure: !1
                    }),
                    Y = (0, r.useStateFromStores)([H.default], () => H.default.isCurrentQuestCompleted),
                    W = (0, r.useStateFromStores)([H.default], () => H.default.currentDropQuestGameTitle),
                    Q = (0, z.useIsHomeSelected)(),
                    ee = (0, N.useIsDmSpamFilterCoachmarkEnabled)(),
                    ea = (0, et.useCanSeeSafetyEducationBlockMuteCoachmark)(),
                    es = (0, A.useIsSafetyConsumerEducationBlockMuteBucket)(),
                    el = (0, en.useCanSeeSafetyEducationReportingCoachmark)(),
                    er = (0, eu.default)(n),
                    eo = (null == n ? void 0 : null === (e = n.avatarDecoration) || void 0 === e ? void 0 : e.skuId) === eB.GYOIKO_SAKURA_DECO_SKU_ID,
                    ed = "account";
                (0, v.useTriggerDebuggingAA)({
                    location: ed + " auto on",
                    autoTrackExposure: !0
                }), (0, v.useTriggerDebuggingAA)({
                    location: ed + " auto off",
                    autoTrackExposure: !1
                }), (0, et.useSafetyEducationAATriggerPoint)();
                let ec = (0, r.useStateFromStores)([ei.default], () => ei.default.hasHadOtherUserPlaySoundInSession()),
                    eA = function() {
                        let e = (0, k.useIsDismissibleContentDismissed)(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2),
                            [t, n] = (0, r.useStateFromStoresArray)([X.default], () => [X.default.hasFetchedRelevance, X.default.profileThemesRelevanceExceeded]),
                            [a, l] = (0, r.useStateFromStoresArray)([eT.default], () => [eT.default.hasFetchedMostRecentPremiumTypeSubscription(), eT.default.getMostRecentPremiumTypeSubscription()]),
                            {
                                enabled: i
                            } = $.default.useExperiment({
                                location: "08bd40_1"
                            }, {
                                autoTrackExposure: !0
                            }),
                            u = s.useMemo(() => {
                                let e = new Date().getTime();
                                return null != l && (l.status === ek.SubscriptionStatusTypes.ACTIVE || e - l.currentPeriodEnd.getTime() < eK)
                            }, [l]);
                        return s.useEffect(() => {
                            (async () => {
                                if (!e && null == n && !!i) {
                                    if (!a) {
                                        await (0, S.fetchMostRecentSubscription)();
                                        return
                                    }!u && !t && await (0, S.getPerksRelevance)()
                                }
                            })()
                        }, [i, n, e, a, t, u]), !e && !!i && !u && null != n && n
                    }(),
                    {
                        enabled: eN
                    } = (0, J.usePrideMonthPerksExperiment)({
                        location: "AccountConnected"
                    }),
                    ev = {
                        avatar: [],
                        settings: []
                    };
                return !x && (eA && ev.settings.push(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2), l && (ev.settings.push(o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP), Y && W === (null === (t = (0, V.getDrop)(eF.PartnerGame.FORTNITE)) || void 0 === t ? void 0 : t.title) && ev.settings.push(o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP)), Q && ee && ev.settings.push(o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING), ea && (1 === es ? ev.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE) : ev.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK)), ec && ev.settings.push(o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION), el && ev.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING), er && ev.settings.push(o.DismissibleContent.PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK), eN && ev.settings.push(o.DismissibleContent.PRIDE_ICONS_COACHMARK), eo && ev.avatar.push(o.DismissibleContent.PREMIUM_SUBSCRIPTION_APRIL_MARKETING_DECO_TOOLTIP)), (0, a.jsx)(ez, {
                    currentUser: n,
                    customStatusActivity: u,
                    dismissibleContents: ev,
                    userTag: E,
                    hidePrivateData: h,
                    occluded: x,
                    premiumSubscription: L,
                    selfDeaf: g,
                    selfMute: p,
                    serverDeaf: T,
                    serverMute: _,
                    showRichProfilePopup: j,
                    showTagAsButton: w,
                    showTaglessAccountPanel: B,
                    speaking: f,
                    speakingWhileMuted: M,
                    status: c,
                    streaming: d,
                    suppress: I,
                    webBuildOverride: O,
                    awaitingRemote: U,
                    isEligibleForPomelo: b
                })
            }

            function eQ(e) {
                let {
                    webBuildOverride: t,
                    isEligibleForPomelo: n,
                    onClick: s,
                    onContextMenu: l
                } = e, i = (0, m.useRedesignIconContext)().enabled, r = null, o = eO.default, u = (0, _.useSettingsLottie)();
                return i ? o = null != t ? E.SettingsInfoIcon : n ? f.SettingsCircleIcon : u.Component : null != t ? r = (0, a.jsx)(eL.default, {
                    width: 9,
                    height: 9,
                    className: eV.hasBuildOverride,
                    "aria-hidden": !0
                }) : n && (r = (0, a.jsx)(m.CircleBadge, {
                    color: j.default.STATUS_DANGER,
                    className: eV.hasBuildOverride,
                    "aria-hidden": !0
                })), (0, a.jsx)(eP.default, {
                    tooltipText: null != t ? eH.default.Messages.USER_SETTINGS_WITH_BUILD_OVERRIDE.format({
                        webBuildOverride: t.id
                    }) : eH.default.Messages.USER_SETTINGS,
                    onClick: s,
                    onContextMenu: l,
                    innerClassName: null != t || n ? eV.buildOverrideButton : null,
                    icon: o,
                    ...u.events,
                    children: r
                })
            }

            function eZ(e) {
                let {
                    selfMute: t,
                    serverMute: n,
                    suppress: l,
                    awaitingRemote: i,
                    tooltipText: r,
                    tooltipColor: o,
                    tooltipForceOpen: u,
                    onMouseEnter: d,
                    onMouseLeave: f,
                    onClick: E,
                    onContextMenu: h
                } = e, _ = t || l || n, {
                    Component: S,
                    play: p,
                    events: I
                } = (0, C.useMicrophoneLottie)(_ ? "unmute" : "mute"), g = n || l ? c.MicrophoneDenyIcon : S;
                return s.useEffect(() => () => p(), [_, p]), (0, a.jsx)(eP.default, {
                    tooltipText: r,
                    tooltipColor: o,
                    tooltipForceOpen: u,
                    onMouseEnter: () => {
                        d(), I.onMouseEnter()
                    },
                    onMouseLeave: () => {
                        f(), I.onMouseLeave()
                    },
                    icon: (0, a.jsx)(g, {
                        size: "custom",
                        width: 20,
                        height: 20,
                        color: _ ? m.tokens.colors.STATUS_DANGER : "currentColor"
                    }),
                    iconForeground: _ ? eV.strikethrough : null,
                    onClick: E,
                    onContextMenu: h,
                    role: "switch",
                    "aria-label": eH.default.Messages.MUTE,
                    "aria-checked": _,
                    disabled: i
                })
            }

            function eX(e) {
                let {
                    selfDeaf: t,
                    serverDeaf: n,
                    awaitingRemote: l,
                    onClick: r,
                    onContextMenu: o
                } = e, u = t || n, {
                    Component: c,
                    play: f,
                    events: {
                        onMouseEnter: E,
                        onMouseLeave: C
                    }
                } = (0, h.useHeadphonesLottie)(u ? "undeafen" : "deafen"), _ = n ? d.HeadphonesDenyIcon : c;
                return s.useEffect(() => () => f(), [u, f]), (0, a.jsx)(eP.default, {
                    tooltipText: (0, M.default)(t, n, l),
                    onMouseEnter: E,
                    onMouseLeave: C,
                    icon: (0, a.jsx)(_, {
                        size: "custom",
                        width: 20,
                        height: 20,
                        color: u ? m.tokens.colors.STATUS_DANGER : "currentColor"
                    }),
                    onClick: r,
                    onContextMenu: o,
                    innerClassName: i()({
                        [eV.redIcon]: n
                    }),
                    iconForeground: u ? eV.strikethrough : null,
                    role: "switch",
                    "aria-label": eH.default.Messages.DEAFEN,
                    "aria-checked": u,
                    disabled: l
                })
            }
        },
        235555: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("442837"),
                o = n("239091"),
                u = n("476669"),
                d = n("524331"),
                c = n("768419"),
                f = n("831506"),
                E = n("699516"),
                h = n("594174"),
                C = n("643126"),
                _ = n("823379"),
                m = n("689938");

            function S(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class p extends s.PureComponent {
                hasParty(e) {
                    return e.length > 1
                }
                handleStopListening() {
                    (0, d.default)()
                }
                render() {
                    let {
                        currentUser: e,
                        host: t,
                        party: n
                    } = this.props;
                    return this.hasParty(n) && null != e ? (0, a.jsx)(C.default, {
                        currentUser: e,
                        host: t,
                        party: n,
                        renderOverflowPopout: this.renderOverflowPopout,
                        onStopListening: this.handleStopListening,
                        onUserContextMenu: this.handleUserContextMenu
                    }) : null
                }
                constructor(...e) {
                    super(...e), S(this, "handleUserContextMenu", (e, t) => {
                        (0, o.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        })
                    }), S(this, "renderOverflowPopout", () => {
                        let {
                            party: e
                        } = this.props;
                        return (0, a.jsx)(u.default, {
                            party: e,
                            header: m.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENING_ALONG_COUNT.format({
                                count: e.length
                            })
                        })
                    })
                }
            }
            t.default = r.default.connectStores([c.default, h.default, E.default, f.default], () => {
                let e, t;
                let n = c.default.getSyncingWith(),
                    a = c.default.getActivity(),
                    s = h.default.getCurrentUser(),
                    l = [];
                if (null != n ? (e = h.default.getUser(n.userId), t = n.partyId) : null != a && null != a.party && null != a.party.id && (e = s, t = a.party.id), null != t) {
                    var r;
                    l = i()(Array.from(null !== (r = f.default.getParty(t)) && void 0 !== r ? r : [])).map(e => h.default.getUser(e)).filter(_.isNotNullish).orderBy([t => null == e || e.id === t.id, e => E.default.isFriend(e.id)], ["desc", "desc"]).value()
                }
                return {
                    currentUser: s,
                    host: e,
                    party: l
                }
            })(p)
        },
        746508: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("512722"),
                o = n.n(r),
                u = n("613828"),
                d = n("442837"),
                c = n("592471"),
                f = n("864094"),
                E = n("75735"),
                h = n("382600"),
                C = n("481060"),
                _ = n("846027"),
                m = n("239091"),
                S = n("925549"),
                p = n("284056"),
                I = n("324315"),
                g = n("730749"),
                T = n("2052"),
                A = n("40851"),
                N = n("317381"),
                v = n("596040"),
                R = n("588580"),
                O = n("374065"),
                L = n("451576"),
                P = n("938655"),
                y = n("403404"),
                M = n("100527"),
                D = n("906732"),
                x = n("158631"),
                b = n("793865"),
                U = n("933557"),
                j = n("258609"),
                G = n("446226"),
                w = n("935261"),
                k = n("74299"),
                B = n("803647"),
                F = n("142497"),
                H = n("810788"),
                V = n("160404"),
                Y = n("703656"),
                W = n("641015"),
                K = n("848543"),
                z = n("565799"),
                q = n("501655"),
                Q = n("71275"),
                Z = n("600518"),
                X = n("485287"),
                J = n("754277"),
                $ = n("590415"),
                ee = n("695346"),
                et = n("923973"),
                en = n("829750"),
                ea = n("189771"),
                es = n("544384"),
                el = n("560688"),
                ei = n("127608"),
                er = n("76021"),
                eo = n("173507"),
                eu = n("25827"),
                ed = n("199902"),
                ec = n("314897"),
                ef = n("592125"),
                eE = n("430824"),
                eh = n("819640"),
                eC = n("131951"),
                e_ = n("496675"),
                em = n("19780"),
                eS = n("699516"),
                ep = n("594174"),
                eI = n("979651"),
                eg = n("938475"),
                eT = n("285952"),
                eA = n("762854"),
                eN = n("250183"),
                ev = n("87128"),
                eR = n("976401"),
                eO = n("333454"),
                eL = n("626135"),
                eP = n("63063"),
                ey = n("51144"),
                eM = n("594117"),
                eD = n("226323"),
                ex = n("981631"),
                eb = n("190378"),
                eU = n("689938"),
                ej = n("726271"),
                eG = n("611273");

            function ew(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function ek(e) {
                let t = e.currentTarget;
                eL.default.track(ex.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
                    text: t.text,
                    href: t.href,
                    location: {
                        section: ex.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    }
                })
            }

            function eB() {
                let e = s.useRef(null);
                (0, C.useFocusLock)(e), s.useEffect(() => {
                    eL.default.track(ex.AnalyticEvents.OPEN_POPOUT, {
                        type: ex.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    })
                }, []);
                let t = (0, d.useStateFromStores)([eC.default], () => eC.default.getNoiseCancellation());
                return (0, a.jsxs)("div", {
                    ref: e,
                    className: ej.noiseCancellationPopout,
                    children: [(0, a.jsx)(C.FormSwitch, {
                        hideBorder: !0,
                        className: eG.marginBottom4,
                        value: t,
                        onChange: () => _.default.setNoiseCancellation(!t, {
                            section: ex.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }),
                        note: eU.default.Messages.NOISE_CANCELLATION_POPOUT_DESCRIPTION,
                        children: eU.default.Messages.NOISE_CANCELLATION_POPOUT_HEADER
                    }), (0, a.jsx)(p.default, {
                        title: eU.default.Messages.NOISE_CANCELLATION_POPOUT_MIC_TEST_TITLE,
                        notchBackground: p.NotchBackground.BLACK,
                        buttonTest: eU.default.Messages.NOISE_CANCELLATION_POPOUT_TEST,
                        buttonStop: eU.default.Messages.NOISE_CANCELLATION_POPOUT_STOP,
                        buttonClassName: ej.micTestButton,
                        buttonColor: C.Button.Colors.PRIMARY,
                        location: {
                            section: ex.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }
                    }), (0, a.jsx)(C.FormTitle, {
                        tag: C.FormTitleTags.H5,
                        className: i()(eG.marginBottom8, eG.marginTop20),
                        children: eU.default.Messages.NOISE_CANCELLATION_POPOUT_FOOTER
                    }), (0, a.jsxs)(eT.default, {
                        justify: eT.default.Justify.BETWEEN,
                        className: ej.__invalid_footer,
                        children: [(0, a.jsx)(C.Anchor, {
                            href: ex.MarketingURLs.KRISP,
                            onClick: e => ek(e),
                            children: (0, a.jsx)("div", {
                                className: ej.krispLogo
                            })
                        }), (0, a.jsx)(C.Anchor, {
                            href: eP.default.getArticleURL(ex.HelpdeskArticles.NOISE_SUPPRESSION),
                            className: ej.krispLink,
                            onClick: e => ek(e),
                            children: eU.default.Messages.LEARN_MORE
                        })]
                    })]
                })
            }

            function eF() {
                let e = (0, d.useStateFromStores)([J.default], () => J.default.isMuted()),
                    t = e ? eU.default.Messages.STAGE_MUSIC_UNMUTE : eU.default.Messages.STAGE_MUSIC_MUTE;
                return (0, a.jsx)(eR.default, {
                    "aria-label": t,
                    tooltipText: t,
                    icon: e ? ev.default : eN.default,
                    onClick: () => (0, Z.updateStageMusicMuted)(!e)
                })
            }

            function eH(e) {
                let {
                    channel: t,
                    enableActivities: n,
                    disabled: l
                } = e, r = (0, et.default)(), o = (0, ea.default)(t), u = (0, d.useStateFromStoresObject)([N.default], () => null != N.default.getSelfEmbeddedActivityForChannel(t.id)), c = (0, W.default)(t), {
                    reachedLimit: f,
                    limit: h
                } = (0, en.default)(t), m = s.useCallback(() => {
                    (0, el.default)()
                }, []), S = (0, A.useAppContext)(), p = s.useCallback(e => {
                    if (eC.default.isVideoEnabled() === e) return;
                    let n = () => {
                        var n;
                        _.default.setVideoEnabled(e), e && (0, Y.transitionTo)(ex.Routes.CHANNEL(null !== (n = t.getGuildId()) && void 0 !== n ? n : ex.ME, t.id))
                    };
                    e ? (0, eo.default)(n, S) : n()
                }, [t, S]), I = u || n || c, {
                    Component: g,
                    play: T,
                    events: v
                } = (0, E.useVideoLottie)(r.enabled ? "disable" : "enable");
                return s.useEffect(() => () => T(), [r.enabled, T]), (0, a.jsx)(eu.VideoButtonWrapper, {
                    onChange: p,
                    onCameraUnavailable: m,
                    hasPermission: o,
                    channelLimit: h,
                    channelLimitReached: f,
                    ...r,
                    enabled: !l && r.enabled,
                    children: e => {
                        let {
                            unavailable: t,
                            active: n,
                            label: s,
                            iconComponent: l,
                            ...r
                        } = e, o = (0, a.jsx)(g, {
                            size: "custom",
                            width: 20,
                            height: 20,
                            className: i()(ej.buttonIcon, {
                                [ej.withText]: !I
                            }),
                            color: "currentColor"
                        });
                        return (0, a.jsx)(C.Popout, {
                            renderPopout: e => {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(b.default, {
                                    onClose: t
                                })
                            },
                            position: "top",
                            align: "center",
                            animation: C.Popout.Animation.FADE,
                            children: (e, l) => {
                                let {
                                    onClick: u,
                                    ...d
                                } = e, {
                                    isShown: c
                                } = l;
                                return (0, a.jsx)(C.Tooltip, {
                                    text: s,
                                    children: e => (0, a.jsx)(C.Button, {
                                        ...r,
                                        ...e,
                                        ...d,
                                        onClick: t => {
                                            var n;
                                            r.onClick(t), null === (n = e.onClick) || void 0 === n || n.call(e), c && u(t)
                                        },
                                        onMouseEnter: () => {
                                            var t, n;
                                            null === (t = e.onMouseEnter) || void 0 === t || t.call(e), null === (n = d.onMouseEnter) || void 0 === n || n.call(d), v.onMouseEnter()
                                        },
                                        onMouseLeave: () => {
                                            var t;
                                            null === (t = e.onMouseLeave) || void 0 === t || t.call(e), v.onMouseLeave()
                                        },
                                        onContextMenu: t => {
                                            var n;
                                            u(t), null === (n = e.onContextMenu) || void 0 === n || n.call(e)
                                        },
                                        size: C.Button.Sizes.SMALL,
                                        className: i()(ej.button, ej.buttonColor, {
                                            [ej.buttonActive]: n,
                                            [ej.fauxDisabled]: t,
                                            [ej.disabled]: r.disabled
                                        }),
                                        innerClassName: ej.buttonContents,
                                        wrapperClassName: ej.button,
                                        fullWidth: !0,
                                        children: I ? o : (0, a.jsxs)(eT.default, {
                                            align: eT.default.Align.CENTER,
                                            children: [o, eU.default.Messages.VIDEO]
                                        })
                                    })
                                })
                            }
                        })
                    }
                })
            }

            function eV(e) {
                let {
                    channel: t,
                    enableActivities: n
                } = e, s = (0, A.useAppContext)(), {
                    analyticsLocations: l
                } = (0, D.default)(), r = s === ex.AppContext.POPOUT, o = (0, O.useEmbeddedActivityLaunchability)(t.id), u = (0, O.getEmbeddedActivityLaunchabilityLabel)(o), [f] = (0, d.useStateFromStores)([N.default], () => null != t.id && "" !== t.id ? N.default.getEmbeddedActivitiesForChannel(t.id) : N.NO_ACTIVITIES), {
                    userInActivity: E
                } = (0, d.useStateFromStoresObject)([N.default], () => ({
                    userInActivity: null != N.default.getSelfEmbeddedActivityForChannel(t.id)
                })), h = (0, T.useAnalyticsContext)(), _ = (0, R.useShowActivityIndicator)(), m = o !== O.EmbeddedActivityLaunchability.CAN_LAUNCH, {
                    Component: S,
                    events: p
                } = (0, c.useActivityLottie)();
                return n ? (0, a.jsx)(C.Tooltip, {
                    text: u,
                    children: e => (0, a.jsxs)(C.Button, {
                        ...e,
                        fullWidth: !0,
                        size: C.Button.Sizes.SMALL,
                        ...p,
                        onClick: () => {
                            var n;
                            p.onClick(), (0, y.default)({
                                channel: t,
                                guildId: t.guild_id,
                                locationObject: h.location,
                                openInPopout: r,
                                analyticsLocations: l
                            }), null === (n = e.onClick) || void 0 === n || n.call(e)
                        },
                        onMouseEnter: () => {
                            var t;
                            p.onMouseEnter(), null == e || null === (t = e.onMouseEnter) || void 0 === t || t.call(e)
                        },
                        onMouseLeave: () => {
                            var t;
                            p.onMouseLeave(), null == e || null === (t = e.onMouseLeave) || void 0 === t || t.call(e)
                        },
                        disabled: m,
                        className: i()(ej.button, ej.buttonColor, {
                            [ej.buttonActive]: E || null != f,
                            [ej.disabled]: m
                        }),
                        innerClassName: ej.buttonContents,
                        wrapperClassName: ej.button,
                        children: [_ ? (0, a.jsx)(P.FreeActivityIndicatorDot, {
                            top: -1,
                            right: -1
                        }) : null, (0, a.jsx)(S, {
                            size: "sm",
                            color: "currentColor",
                            className: ej.buttonIcon
                        })]
                    })
                }) : null
            }

            function eY(e) {
                let t, {
                        channel: n,
                        canGoLive: l,
                        enableActivities: r,
                        disabled: o
                    } = e,
                    u = (0, d.useStateFromStores)([ep.default], () => ep.default.getCurrentUser()),
                    c = (0, d.useStateFromStoresArray)([ed.default], () => ed.default.getAllActiveStreams()),
                    E = (0, ea.default)(n),
                    h = n.getGuildId(),
                    _ = (0, d.useStateFromStoresObject)([N.default], () => null != N.default.getSelfEmbeddedActivityForChannel(n.id)),
                    m = (0, W.default)(n),
                    S = s.useCallback(() => {
                        (0, er.default)(h, n.id, ex.AnalyticsSections.ACTIVITY_PANEL)
                    }, [h, n.id]),
                    p = c.find(e => e.ownerId === (null == u ? void 0 : u.id)),
                    I = (0, es.useOtherStreams)(n, u, c);
                t = null == p ? l ? S : ei.default : () => (0, B.default)(p);
                let g = null != p || I.length > 0,
                    T = E ? eU.default.Messages.SHARE_YOUR_SCREEN : eU.default.Messages.ACTIVITY_PANEL_GO_LIVE_TOOLTIP_NO_PERMISSION_IN_VOICE,
                    A = _ || r || m,
                    v = null != p,
                    {
                        Component: R,
                        events: O,
                        play: L
                    } = (0, f.useScreenshareLottie)(v ? "disable" : "enable");
                s.useEffect(() => () => L(), [L, v]);
                let P = (0, a.jsx)(R, {
                    color: "currentColor",
                    className: i()(ej.buttonIcon, {
                        [ej.withText]: !A
                    })
                });
                return (0, a.jsx)(C.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(es.default, {
                            channel: n,
                            currentUser: u,
                            activeStreams: c,
                            onClose: t,
                            handleGoLive: l ? S : ei.default
                        })
                    },
                    position: "top",
                    align: "center",
                    animation: C.Popout.Animation.FADE,
                    children: e => {
                        let {
                            onClick: n,
                            onMouseEnter: s,
                            ...l
                        } = e;
                        return (0, a.jsx)(C.Tooltip, {
                            text: T,
                            children: e => (0, a.jsx)(C.Button, {
                                ...e,
                                size: C.Button.Sizes.SMALL,
                                onClick: a => {
                                    var s;
                                    g ? n(a) : t(), null === (s = e.onClick) || void 0 === s || s.call(e)
                                },
                                disabled: !E || o,
                                className: i()(ej.button, ej.buttonColor, {
                                    [ej.buttonActive]: null != p,
                                    [ej.disabled]: !E || o
                                }),
                                ...g ? l : null,
                                onMouseEnter: () => {
                                    var t;
                                    null == s || s(), null === (t = e.onMouseEnter) || void 0 === t || t.call(e), O.onMouseEnter()
                                },
                                onMouseLeave: () => {
                                    var t;
                                    null === (t = e.onMouseLeave) || void 0 === t || t.call(e), O.onMouseLeave()
                                },
                                innerClassName: ej.buttonContents,
                                wrapperClassName: ej.button,
                                children: A ? P : (0, a.jsxs)(eT.default, {
                                    align: eT.default.Align.CENTER,
                                    children: [P, eU.default.Messages.GO_LIVE_SHARE_SCREEN]
                                })
                            })
                        })
                    }
                })
            }
            class eW extends s.PureComponent {
                renderConnectionStatus() {
                    let e;
                    let {
                        channel: t,
                        guild: n,
                        rtcConnectionQuality: s,
                        rtcConnectionState: l,
                        rtcConnectionLastPing: i,
                        hasVideo: r,
                        isBroadcasting: o
                    } = this.props;
                    if (null == t) return null;
                    let d = (0, U.computeChannelName)(t, ep.default, eS.default);
                    return null != n ? (e = ex.Routes.CHANNEL(n.id, t.id), d = "".concat(d, " / ").concat(n.name)) : e = ex.Routes.CHANNEL(ex.ME, t.id), o && t.isBroadcastChannel() && (d = eU.default.Messages.BROADCASTING), (0, a.jsx)(I.default, {
                        statusTextClassName: ej.statusWithPopout,
                        quality: s,
                        state: l,
                        lastPing: i,
                        hasVideo: r,
                        children: (0, a.jsx)(C.FocusRing, {
                            children: (0, a.jsx)(u.Link, {
                                to: e,
                                onClick: this.handleChannelLinkClick,
                                onContextMenu: this.handleChannelLinkContextMenu,
                                children: (0, a.jsx)(eO.default, {
                                    className: ej.channel,
                                    children: d
                                })
                            })
                        })
                    })
                }
                renderNoiseCancellation() {
                    let {
                        noiseCancellationActive: e,
                        noiseCancellationError: t,
                        hasLayers: n,
                        remoteVoiceState: s,
                        channel: l,
                        voiceStates: i
                    } = this.props;
                    return null != s ? null : (null == l ? void 0 : l.isGuildStageVoice()) && !(null != i.find(e => e.user.id === ec.default.getId() && (0, $.getAudienceRequestToSpeakState)(e.voiceState) === $.RequestToSpeakStates.ON_STAGE)) && (0, X.shouldShowStageMusicMuteButton)(l.id) ? (0, a.jsx)(eF, {}) : !n && t ? (0, a.jsx)(C.Tooltip, {
                        text: eU.default.Messages.NOISE_CANCELLATION_CPU_OVERUSE,
                        tooltipClassName: ej.noiseCancellationTooltip,
                        forceOpen: !0,
                        children: e => {
                            let {
                                "aria-label": t
                            } = e;
                            return (0, a.jsx)(eR.default, {
                                "aria-label": t,
                                tooltipText: null,
                                disabled: !0,
                                icon: eA.default
                            })
                        }
                    }) : (0, a.jsx)(C.Popout, {
                        position: "top",
                        align: "center",
                        renderPopout: () => (0, a.jsx)(eB, {}),
                        children: (t, n) => {
                            let {
                                isShown: s
                            } = n;
                            return (0, a.jsx)(eK, {
                                popoutProps: t,
                                isShown: s,
                                noiseCancellationActive: e
                            })
                        }
                    }, "krisp-popout")
                }
                renderVoiceStates() {
                    let {
                        channel: e,
                        voiceStates: t,
                        showVoiceStates: n
                    } = this.props;
                    return null != e && n && 0 !== t.length ? (0, a.jsx)(eD.default, {
                        voiceStates: t,
                        channel: e,
                        className: ej.voiceUsers
                    }) : null
                }
                renderChannelButtons() {
                    let {
                        channel: e,
                        canGoLive: t,
                        remoteVoiceState: n,
                        enableActivities: s,
                        voiceStates: l,
                        selfStream: r,
                        isPrivateChannelWithEnabledActivities: o
                    } = this.props;
                    if (null == e || null != n) return null;
                    let u = ec.default.getId();
                    if (e.isGuildStageVoice()) {
                        if (!(0, Q.isStageVideoEnabled)(e.guild_id) || !t) return null;
                        let n = l.find(e => e.user.id === u);
                        if (null == n || n.voiceState.suppress) return null
                    }
                    let d = (e.isGuildVoice() || o) && s,
                        {
                            reachedLimit: c
                        } = (0, en.getChannelVideoLimit)(e),
                        f = (0, Q.getStageHasMedia)(e.id);
                    return (0, a.jsxs)("div", {
                        className: ej.actionButtons,
                        children: [(0, a.jsx)(eH, {
                            channel: e,
                            enableActivities: d,
                            disabled: !f && c
                        }), (0, a.jsx)(eY, {
                            channel: e,
                            canGoLive: t,
                            enableActivities: d,
                            disabled: e.isGuildStageVoice() && (f && null == r || !f && c)
                        }), (0, a.jsxs)(a.Fragment, {
                            children: [d ? (0, a.jsx)(eV, {
                                channel: e,
                                enableActivities: s
                            }) : null, (0, W.default)(e) ? (0, a.jsx)(K.default, {
                                className: i()(ej.button, ej.buttonColor),
                                innerClassName: ej.buttonContents,
                                iconClassName: ej.buttonIcon,
                                channel: e
                            }) : null]
                        })]
                    })
                }
                render() {
                    let {
                        channel: e,
                        noiseCancellationSupported: t,
                        shouldShowVoicePanelIntroduction: n
                    } = this.props;
                    return null == e ? null : (0, a.jsx)(C.Popout, {
                        renderPopout: this.renderVoicePanelIntroduction,
                        position: "top",
                        align: "center",
                        animation: C.Popout.Animation.TRANSLATE,
                        shouldShow: n,
                        children: () => (0, a.jsxs)("div", {
                            className: ej.container,
                            children: [(0, a.jsxs)(eT.default, {
                                className: ej.connection,
                                align: eT.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    className: ej.inner,
                                    children: this.renderConnectionStatus()
                                }), (0, a.jsxs)(eT.default, {
                                    grow: 0,
                                    shrink: 0,
                                    children: [t ? this.renderNoiseCancellation() : null, (0, a.jsx)(eM.default, {
                                        channel: e
                                    })]
                                })]
                            }), this.renderVoiceStates(), this.renderChannelButtons()]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), ew(this, "canScreenshare", () => {
                        let {
                            channel: e,
                            canGoLive: t
                        } = this.props;
                        return t && null != e && null != e.getGuildId()
                    }), ew(this, "handleNoiseCancellationClicked", () => {
                        let {
                            noiseCancellationActive: e
                        } = this.props;
                        _.default.setNoiseCancellation(!e, {
                            section: ex.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        })
                    }), ew(this, "handleGoLive", () => {
                        let {
                            guild: e,
                            channel: t
                        } = this.props, n = null != t ? t.getGuildId() : null != e ? e.id : null;
                        null != n && (0, er.default)(n, t.id, ex.AnalyticsLocations.VOICE_PANEL)
                    }), ew(this, "handleChannelLinkClick", e => {
                        var t;
                        let {
                            guild: n,
                            channel: a
                        } = this.props;
                        o()(null != a, "Channel is null during navigation click"), e.stopPropagation(), S.default.channelListScrollTo(null !== (t = null == n ? void 0 : n.id) && void 0 !== t ? t : ex.ME, a.id)
                    }), ew(this, "handleChannelLinkContextMenu", e => {
                        let {
                            channel: t
                        } = this.props;
                        (0, m.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.e("56944").then(n.bind(n, "600830"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t
                            })
                        })
                    }), ew(this, "handleCloseVoicePanelIntroduction", () => {
                        F.hideHotspot(eb.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                    }), ew(this, "renderVoicePanelIntroduction", () => (0, a.jsxs)("div", {
                        className: i()(ej.voicePanelIntroductionWrapper, "theme-light"),
                        children: [(0, a.jsx)(C.Heading, {
                            className: ej.voicePanelIntroductionHeader,
                            variant: "heading-md/semibold",
                            children: eU.default.Messages.VOICE_PANEL_INTRODUCTION_HEADER
                        }), (0, a.jsx)(C.Text, {
                            className: ej.voicePanelIntroductionText,
                            variant: "text-sm/normal",
                            children: eU.default.Messages.VOICE_PANEL_INTRODUCTION_TEXT
                        }), (0, a.jsx)(C.Button, {
                            className: ej.voicePanelIntroductionButton,
                            color: C.Button.Colors.BRAND,
                            onClick: this.handleCloseVoicePanelIntroduction,
                            children: eU.default.Messages.VOICE_PANEL_INTRODUCTION_CLOSE
                        })]
                    }))
                }
            }

            function eK(e) {
                let {
                    popoutProps: t,
                    isShown: n,
                    noiseCancellationActive: l
                } = e, {
                    play: i,
                    Component: r,
                    events: o
                } = (0, h.useWaveformLottie)(l ? "disable" : "enable");
                return s.useEffect(() => () => i(), [l, i]), (0, a.jsx)(eR.default, {
                    ...t,
                    onMouseEnter: () => {
                        var e;
                        null === (e = t.onMouseEnter) || void 0 === e || e.call(t), o.onMouseEnter()
                    },
                    onMouseLeave: () => {
                        o.onMouseLeave()
                    },
                    tooltipClassName: ej.noiseCancellationTooltip,
                    tooltipText: n ? null : eU.default.Messages.NOISE_CANCELLATION_TOOLTIP,
                    icon: r
                })
            }
            t.default = (0, g.default)(function(e) {
                let t = (0, G.default)(),
                    n = (0, d.useStateFromStores)([j.default], () => j.default.getAwaitingRemoteSessionInfo()),
                    l = (0, d.useStateFromStores)([ep.default], () => ep.default.getCurrentUser()),
                    {
                        channelId: i,
                        ...r
                    } = (0, d.useStateFromStoresObject)([em.default], () => null != t ? {
                        channelId: t.channelId,
                        rtcConnectionQuality: ex.RTCConnectionQuality.FINE,
                        rtcConnectionState: ex.RTCConnectionStates.RTC_CONNECTED,
                        rtcConnectionLastPing: 0
                    } : {
                        channelId: em.default.getChannelId(),
                        rtcConnectionQuality: em.default.getQuality(),
                        rtcConnectionState: em.default.getState(),
                        rtcConnectionLastPing: em.default.getLastPing()
                    }),
                    o = (0, d.useStateFromStores)([ef.default], () => ef.default.getChannel(i), [i]),
                    u = null == o ? void 0 : o.getGuildId(),
                    c = (0, d.useStateFromStores)([eE.default], () => eE.default.getGuild(u), [u]),
                    f = (0, d.useStateFromStoresObject)([eC.default], () => ({
                        noiseCancellationSupported: eC.default.isNoiseCancellationSupported(),
                        noiseCancellationActive: eC.default.getNoiseCancellation(),
                        noiseCancellationError: eC.default.isNoiseCancellationError(),
                        canGoLive: (0, k.default)(eC.default)
                    })),
                    E = (0, d.useStateFromStores)([eC.default, H.default], () => H.default.hasHotspot(eb.HotspotLocations.VOICE_PANEL_INTRODUCTION) && (0, ey.isNewUser)(l) && !eC.default.isInteractionRequired() && !(null == o ? void 0 : o.isGuildStageVoice())),
                    h = (0, d.useStateFromStores)([eI.default], () => null != i && eI.default.hasVideo(i), [i]),
                    _ = (0, d.useStateFromStores)([ed.default], () => ed.default.getCurrentUserActiveStream()),
                    m = (0, d.useStateFromStores)([eh.default], () => eh.default.hasLayers()),
                    S = (0, d.useStateFromStores)([V.default], () => V.default.isViewingRoles(u)),
                    p = (0, d.useStateFromStores)([e_.default], () => S && !e_.default.can(ex.Permissions.VIEW_CHANNEL, o), [S, o]),
                    I = ee.RtcPanelShowVoiceStates.useSetting(),
                    [g, T, A] = (0, d.useStateFromStoresArray)([eg.default, z.default], () => (null == o ? void 0 : o.isGuildStageVoice()) ? [z.default.getMutableParticipants(o.id, q.StageChannelParticipantNamedIndex.SPEAKER), z.default.getParticipantsVersion(o.id), null] : [null, null, null != o ? eg.default.getVoiceStatesForChannel(o) : null], [o]),
                    N = s.useMemo(() => {
                        var e, t;
                        return null !== (t = null !== (e = null == g ? void 0 : g.map(e => {
                            let {
                                user: t,
                                userNick: n,
                                voiceState: a
                            } = e;
                            return {
                                user: t,
                                nick: n,
                                voiceState: a
                            }
                        })) && void 0 !== e ? e : A) && void 0 !== t ? t : []
                    }, [g, T, A]),
                    [R, O] = s.useState(!1);
                s.useEffect(() => {
                    (S || p) && O(!1)
                }, [S, p, O]);
                let {
                    analyticsLocations: P
                } = (0, D.default)(M.default.RTC_PANEL), y = (0, v.default)(null != u ? u : ex.EMPTY_STRING_SNOWFLAKE_ID, null == o ? void 0 : o.id), b = (0, L.default)(null == o ? void 0 : o.id), U = (0, x.default)();
                return (0, a.jsx)(D.AnalyticsLocationProvider, {
                    value: P,
                    children: (0, a.jsxs)("div", {
                        className: ej.wrapper,
                        children: [null != t || null != n ? (0, a.jsx)(w.default, {
                            voiceState: t,
                            awaitingRemoteSessionInfo: n
                        }) : null, (0, a.jsx)(eW, {
                            ...e,
                            ...f,
                            ...r,
                            enableActivities: y,
                            remoteVoiceState: t,
                            guild: c,
                            channel: o,
                            hasVideo: h,
                            selfStream: _,
                            hasLayers: m,
                            voiceStates: N,
                            showVoiceStates: I,
                            shouldShowVoicePanelIntroduction: E,
                            isPrivateChannelWithEnabledActivities: b,
                            isBroadcasting: U
                        }), !R && S && null != u ? (0, a.jsxs)("div", {
                            className: ej.viewAsRolesWarning,
                            children: [(0, a.jsx)(C.Text, {
                                variant: "text-sm/normal",
                                className: ej.viewAsRolesWarningText,
                                children: p ? eU.default.Messages.VIEW_AS_ROLES_HIDDEN_VC_WARNING : eU.default.Messages.VIEW_AS_ROLES_VOICE_WARNING
                            }), (0, a.jsx)(C.Button, {
                                className: ej.viewAsRolesWarningButton,
                                size: C.Button.Sizes.MIN,
                                onClick: () => {
                                    O(!0)
                                },
                                children: eU.default.Messages.DISMISS
                            })]
                        }) : null]
                    })
                })
            })
        },
        594117: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("685072"),
                l = n("287734"),
                i = n("67212"),
                r = n("158631"),
                o = n("15274"),
                u = n("389303"),
                d = n("881824"),
                c = n("719100"),
                f = n("976401"),
                E = n("689938");

            function h(e) {
                let {
                    tooltipText: t,
                    onClick: n
                } = e, l = (0, s.useEndCallLottie)();
                return (0, a.jsx)(f.default, {
                    tooltipText: t,
                    onClick: n,
                    ...l.events,
                    icon: l.Component
                })
            }

            function C() {
                return (0, a.jsx)(h, {
                    tooltipText: E.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        (0, i.stopBroadcast)(), l.default.disconnect()
                    }
                })
            }

            function _(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(h, {
                    tooltipText: E.default.Messages.AUDIENCE_DISCONNECT,
                    onClick: () => {
                        if ((0, c.default)(t)) {
                            (0, d.openEndStageModal)(t);
                            return
                        }
                        l.default.disconnect()
                    }
                })
            }

            function m(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(h, {
                    tooltipText: E.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        if ((0, u.default)(t)) {
                            (0, o.openEndEventModal)(t);
                            return
                        }
                        l.default.disconnect()
                    }
                })
            }

            function S(e) {
                let {
                    channel: t
                } = e, n = (0, r.default)();
                return t.isGuildStageVoice() ? (0, a.jsx)(_, {
                    channel: t
                }) : n && t.isBroadcastChannel() ? (0, a.jsx)(C, {}) : (0, a.jsx)(m, {
                    channel: t
                })
            }
        },
        226323: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            }), n("653041"), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("742444"),
                u = n("498503"),
                d = n("247636"),
                c = n("278724"),
                f = n("481060"),
                E = n("239091"),
                h = n("586902"),
                C = n("512384"),
                _ = n("484459"),
                m = n("103575"),
                S = n("314897"),
                p = n("131951"),
                I = n("381238"),
                g = n("779863"),
                T = n("729285"),
                A = n("150954"),
                N = n("51144"),
                v = n("524484"),
                R = n("689938"),
                O = n("164159");
            let L = {
                    offset: 2
                },
                P = {
                    serverDeaf: {
                        icon: I.default,
                        colorize: !0,
                        getStatus: () => R.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: g.default,
                        colorize: !0,
                        getStatus: () => R.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: I.default,
                        colorize: !1,
                        getStatus: () => R.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: g.default,
                        colorize: !1,
                        getStatus: () => R.default.Messages.VOICE_CHANNEL_MUTED
                    }
                },
                y = {
                    serverDeaf: {
                        icon: o.HeadphonesDenyIcon,
                        colorize: !0,
                        getStatus: () => R.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !0,
                        getStatus: () => R.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: u.HeadphonesSlashIcon,
                        colorize: !1,
                        getStatus: () => R.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: c.MicrophoneSlashIcon,
                        colorize: !1,
                        getStatus: () => R.default.Messages.VOICE_CHANNEL_MUTED
                    },
                    localMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !1,
                        getStatus: () => R.default.Messages.VOICE_CHANNEL_LOCAL_MUTED
                    }
                };

            function M(e) {
                var t, s;
                let {
                    channel: l,
                    user: o,
                    nick: u,
                    mute: d,
                    deaf: c,
                    serverMute: S,
                    serverDeaf: I
                } = e, g = (0, r.useStateFromStores)([p.default], () => p.default.isLocalMute(o.id)), T = (0, h.default)({
                    userId: o.id,
                    checkSoundSharing: !0
                }), A = null !== (t = l.getGuildId()) && void 0 !== t ? t : void 0, M = o.getAvatarURL(l.guild_id, 24), D = null != u ? u : N.default.getName(o), {
                    icon: x,
                    colorize: b,
                    getStatus: U
                } = null !== (s = function(e) {
                    let {
                        serverDeaf: t,
                        deaf: n,
                        serverMute: a,
                        mute: s,
                        localMute: l
                    } = e, i = (0, f.useRedesignIconContext)().enabled;
                    if (t) return i ? y.serverDeaf : P.serverDeaf;
                    if (n) return i ? y.deaf : P.deaf;
                    if (a) return i ? y.serverMute : P.serverMute;
                    else if (l) return i ? y.localMute : P.mute;
                    else if (s) return i ? y.mute : P.mute
                }({
                    serverDeaf: I,
                    deaf: c,
                    serverMute: S,
                    mute: d,
                    localMute: g
                })) && void 0 !== s ? s : {}, j = null != U ? R.default.Messages.VOICE_PANEL_USER_TOOLTIP.format({
                    userName: D,
                    status: U()
                }) : D;

                function G(e) {
                    null != A ? (0, E.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("36441"), n.e("12435"), n.e("7717")]).then(n.bind(n, "757387"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            guildId: A,
                            channel: l,
                            showMediaItems: !0
                        })
                    }) : (0, E.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            showMediaItems: !0
                        })
                    })
                }
                return (0, a.jsx)(f.Popout, {
                    preload: () => (0, _.maybeFetchUserProfileForPopout)(o.id, o.getAvatarURL(A, 80), {
                        guildId: A,
                        channelId: l.id
                    }),
                    position: "top",
                    renderPopout: e => (0, a.jsx)(m.default, {
                        location: "RTCConnectionVoiceUsers",
                        userId: o.id,
                        guildId: A,
                        channelId: l.id,
                        ...e
                    }),
                    children: e => (0, a.jsx)(f.Tooltip, {
                        text: j,
                        children: t => (0, a.jsx)(f.Clickable, {
                            ...t,
                            ...e,
                            className: O.avatarContainer,
                            onContextMenu: G,
                            focusProps: L,
                            children: (0, a.jsx)(C.default, {
                                shakeLocation: v.ShakeLocation.VOICE_USER,
                                isShaking: T,
                                children: (0, a.jsx)("div", {
                                    className: i()(O.avatar, {
                                        [O.speaking]: T
                                    }),
                                    style: {
                                        backgroundImage: "url(".concat(M, ")")
                                    },
                                    children: null != x ? (0, a.jsx)(x, {
                                        className: i()(O.avatarIconOverlay, {
                                            [O.avatarIconRed]: b
                                        }),
                                        color: "currentColor",
                                        width: 16,
                                        height: 16,
                                        foreground: O.avatarIconRed
                                    }) : null
                                })
                            })
                        })
                    })
                })
            }

            function D(e) {
                let {
                    voiceStates: t,
                    channel: n,
                    className: l
                } = e, [o, u] = s.useState(!1), d = o ? A.default : T.default, c = (0, a.jsx)(f.CircleIconButton, {
                    className: O.expandButton,
                    onClick: () => u(!o),
                    color: f.CircleIconButtonColors.PRIMARY,
                    size: f.CircleIconButtonSizes.SIZE_24,
                    tooltip: o ? R.default.Messages.VOICE_PANEL_HIDE_EXTRAS : R.default.Messages.VOICE_PANEL_SHOW_EXTRAS,
                    icon: (0, a.jsx)(d, {
                        width: 16,
                        height: 16
                    }),
                    focusProps: L
                }), E = (0, r.useStateFromStores)([S.default], () => S.default.getId(), []), [h, C] = function(e, t) {
                    let n = [];
                    for (let a of e) {
                        if (a.user.id !== t) {
                            if (!n.some(e => e.user.id === a.user.id)) {
                                if (n.length >= 7) return [n, !0];
                                n.push(a)
                            }
                        }
                    }
                    return [n, !1]
                }(t, E), _ = C && o ? t : h;
                return _.length <= 0 ? null : (0, a.jsx)(f.ScrollerThin, {
                    className: i()(O.scroller, l),
                    fade: !0,
                    children: (0, a.jsxs)("div", {
                        className: O.voiceUsers,
                        role: "group",
                        "aria-label": R.default.Messages.VOICE_PANEL_USERS_A11Y_LABEL,
                        children: [_.map(e => {
                            let {
                                user: t,
                                nick: s,
                                voiceState: l
                            } = e;
                            return t.id !== E ? (0, a.jsx)(M, {
                                channel: n,
                                user: t,
                                nick: s,
                                mute: l.isVoiceMuted(),
                                deaf: l.isVoiceDeafened(),
                                video: l.selfVideo,
                                serverMute: l.mute,
                                serverDeaf: l.deaf
                            }, t.id) : null
                        }), C ? c : null]
                    })
                })
            }
        },
        179742: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("613828"),
                l = n("880257"),
                i = n("106939"),
                r = n("981631");

            function o() {
                return !1 === (0, l.default)() ? (0, a.jsx)(s.Redirect, {
                    to: r.Routes.SETTINGS("family-center")
                }) : (0, a.jsx)(i.default, {})
            }
        },
        390697: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsClearIncomingFriendRequestsEnabled: function() {
                    return s
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-05_clear_pending_incoming_friend_requests",
                label: "Enable ability to clear incoming friend requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function s() {
                return a.useExperiment({
                    location: "ca2288_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        617015: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL: function() {
                    return i
                },
                PEOPLE_LIST_ITEM_HEIGHT: function() {
                    return s
                },
                RELATIONSHIP_COUNT_ANIMATION_THRESHOLD: function() {
                    return a
                },
                STATUS_HEADER_HEIGHT: function() {
                    return l
                }
            });
            let a = 64,
                s = 62,
                l = 24,
                i = 5
        },
        321488: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l = n("735250");
            n("470079");
            var i = n("120356"),
                r = n.n(i),
                o = n("873546"),
                u = n("481060"),
                d = n("742274");

            function c(e) {
                let {
                    icon: t,
                    tooltip: n,
                    onClick: a,
                    actionType: s = 2,
                    shouldHighlight: i
                } = e;
                return (0, l.jsx)(u.Tooltip, {
                    text: n,
                    children: e => (0, l.jsx)(u.Clickable, {
                        ...e,
                        "aria-label": n,
                        onClick: a,
                        className: r()(d.actionButton, {
                            [d.actionAccept]: 0 === s,
                            [d.actionDeny]: 1 === s,
                            [d.highlight]: i,
                            [d.actionButtonMobile]: o.isMobile
                        }),
                        children: (0, l.jsx)(t, {
                            className: d.icon
                        })
                    })
                })
            }(a = s || (s = {}))[a.ACCEPT = 0] = "ACCEPT", a[a.DENY = 1] = "DENY", a[a.DEFAULT = 2] = "DEFAULT", c.ActionTypes = s, t.default = c
        },
        666286: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("115849"),
                r = n("645792"),
                o = n("787642"),
                u = n("437314"),
                d = n("981631"),
                c = n("689938"),
                f = n("910040");

            function E() {
                return (0, a.jsxs)("header", {
                    className: f.header,
                    children: [(0, a.jsx)(l.FormTitle, {
                        tag: "h2",
                        className: f.title,
                        children: c.default.Messages.ADD_FRIEND
                    }), (0, a.jsx)(i.default, {})]
                })
            }
            t.default = function() {
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)(E, {}), (0, r.backToSchoolEnabled)() && (0, a.jsx)(o.default, {}), (0, a.jsx)("div", {
                        className: f.emptyState,
                        children: (0, a.jsx)(u.default, {
                            type: d.FriendsSections.ADD_FRIEND
                        })
                    })]
                })
            }
        },
        787642: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("212093"),
                r = n("703656"),
                o = n("769654"),
                u = n("430824"),
                d = n("104259"),
                c = n("626135"),
                f = n("768581"),
                E = n("125631"),
                h = n("981631"),
                C = n("689938"),
                _ = n("385702");

            function m(e, t, n) {
                return (0, a.jsxs)("button", {
                    className: _.container,
                    onClick: n,
                    children: ["function" == typeof e ? (0, a.jsx)("div", {
                        className: _.icon,
                        children: (0, a.jsx)(e, {
                            className: _.__invalid_iconInner,
                            color: l.tokens.colors.WHITE.css
                        })
                    }) : (0, a.jsx)("img", {
                        className: _.icon,
                        alt: "",
                        src: e
                    }), (0, a.jsx)(l.Text, {
                        className: _.text,
                        variant: "text-md/medium",
                        children: t
                    }), (0, a.jsx)(E.default, {
                        className: _.arrow
                    })]
                }, t)
            }

            function S() {
                let e = Object.values(u.default.getGuilds()).filter(e => e.hasFeature(h.GuildFeatures.HUB)),
                    t = e => {
                        c.default.track(h.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED, {
                            guild_id: e
                        }), (0, o.transitionToGuild)(e)
                    };
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)("header", {
                        className: _.header,
                        children: (0, a.jsx)(l.FormTitle, {
                            tag: "h2",
                            className: _.title,
                            children: C.default.Messages.ADD_FRIEND_MAKE_FRIENDS
                        })
                    }), (0, a.jsxs)("div", {
                        className: _.grid,
                        children: [e.map(e => m(f.default.getGuildIconURL({
                            id: e.id,
                            icon: e.icon,
                            size: 240
                        }), e.name, () => {
                            t(e.id)
                        })), m(d.default, C.default.Messages.ADD_FRIEND_EXPLORE_PUBLIC_SERVERS, () => {
                            (0, i.clearSearch)(), c.default.track(h.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_DISCOVERY_CLICKED), (0, r.transitionTo)(h.Routes.GUILD_DISCOVERY)
                        })]
                    })]
                })
            }
        },
        125631: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("735250");

            function s(e) {
                let {
                    color: t = "currentColor",
                    ...n
                } = e;
                return (0, a.jsx)("svg", {
                    ...n,
                    fill: "none",
                    height: "20",
                    viewBox: "0 0 20 20",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: (0, a.jsx)("path", {
                        clipRule: "evenodd",
                        d: "m5.41667 4.2625 5.66573 5.7375-5.66573 5.7375 1.74426 1.7625 7.42237-7.5-7.42237-7.5z",
                        fill: t,
                        fillRule: "evenodd"
                    })
                })
            }
            n("470079")
        },
        434184: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("194359"),
                i = n("906732"),
                r = n("171368"),
                o = n("877410"),
                u = n("626135"),
                d = n("321488"),
                c = n("417183"),
                f = n("170245"),
                E = n("981631"),
                h = n("689938"),
                C = n("621982");

            function _(e) {
                let {
                    user: t,
                    key: n,
                    isFocused: _
                } = e, m = s.useContext(u.AnalyticsContext), {
                    analyticsLocations: S
                } = (0, i.default)(), p = e => {
                    e.stopPropagation(), l.default.unblockUser(t.id, {
                        location: "Friends"
                    })
                };
                return (0, a.jsx)(c.default, {
                    isFocused: _,
                    onClick: () => (0, r.openUserProfileModal)({
                        userId: t.id,
                        sourceAnalyticsLocations: S,
                        analyticsLocation: m.location
                    }),
                    user: t,
                    children: e => (0, a.jsxs)("div", {
                        className: C.listItemContents,
                        children: [(0, a.jsx)(f.default, {
                            user: t,
                            hovered: e,
                            status: E.StatusTypes.UNKNOWN,
                            subText: h.default.Messages.BLOCKED
                        }), (0, a.jsx)(d.default, {
                            icon: o.default,
                            actionType: d.default.ActionTypes.DENY,
                            tooltip: h.default.Messages.UNBLOCK,
                            onClick: p,
                            shouldHighlight: e
                        })]
                    })
                }, n)
            }
        },
        352455: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("481060"),
                r = n("409700"),
                o = n("230711"),
                u = n("446753"),
                d = n("981631"),
                c = n("921944"),
                f = n("689938"),
                E = n("801317");

            function h(e) {
                let {
                    className: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsxs)(u.default, {
                    className: l()(E.card, t),
                    children: [(0, a.jsx)(i.Heading, {
                        variant: "heading-md/semibold",
                        className: E.header,
                        children: f.default.Messages.NOW_PLAYING_GDPR_HEADER
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/normal",
                        children: f.default.Messages.NOW_PLAYING_GDPR_BODY.format({
                            onPrivacyClick: () => o.default.open(d.UserSettingsSections.PRIVACY_AND_SAFETY)
                        })
                    }), (0, a.jsxs)("div", {
                        className: E.buttonContainer,
                        children: [(0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            onClick: () => (0, r.setConsents)([d.Consents.PERSONALIZATION], []),
                            children: f.default.Messages.ACTIVITY_FEED_CARD_GDPR_BUTTON_YES
                        }), (0, a.jsx)(i.Button, {
                            color: i.Button.Colors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => n(c.ContentDismissActionType.DISMISS),
                            look: i.Button.Looks.LINK,
                            children: f.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        701861: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("392711"),
                i = n.n(l),
                r = n("442837"),
                o = n("481060"),
                u = n("493683"),
                d = n("239091"),
                c = n("194359"),
                f = n("703656"),
                E = n("592125"),
                h = n("131951"),
                C = n("974029"),
                _ = n("621113"),
                m = n("51144"),
                S = n("321488"),
                p = n("417183"),
                I = n("825682"),
                g = n("170245"),
                T = n("981631"),
                A = n("65154"),
                N = n("689938"),
                v = n("965831");

            function R(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function O(e) {
                let {
                    user: t,
                    onSelect: n
                } = e, s = () => {
                    c.default.removeFriend(t.id, {
                        location: "Friends"
                    })
                }, l = (0, r.useStateFromStores)([h.default], () => h.default.supports(A.Features.VIDEO));
                return (0, a.jsxs)(o.Menu, {
                    navId: "friend-row",
                    "aria-label": N.default.Messages.USER_ACTIONS_MENU_LABEL,
                    onClose: d.closeContextMenu,
                    onSelect: n,
                    children: [l ? (0, a.jsx)(o.MenuItem, {
                        id: "start-video-call",
                        label: N.default.Messages.START_VIDEO_CALL,
                        action: function() {
                            u.default.openPrivateChannel(t.id, !0, !0)
                        }
                    }) : null, (0, a.jsx)(o.MenuItem, {
                        id: "start-voice-call",
                        label: N.default.Messages.START_VOICE_CALL,
                        action: () => {
                            u.default.openPrivateChannel(t.id, !0)
                        }
                    }), (0, a.jsx)(o.MenuItem, {
                        id: "remove-friend",
                        label: N.default.Messages.REMOVE_FRIEND,
                        action: () => {
                            (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                                header: N.default.Messages.REMOVE_FRIEND_TITLE.format({
                                    name: m.default.getName(t)
                                }),
                                confirmText: N.default.Messages.REMOVE_FRIEND,
                                cancelText: N.default.Messages.CANCEL,
                                onConfirm: s,
                                ...e,
                                children: (0, a.jsx)(o.Text, {
                                    variant: "text-md/normal",
                                    children: N.default.Messages.REMOVE_FRIEND_BODY.format({
                                        name: m.default.getName(t)
                                    })
                                })
                            }))
                        },
                        color: "danger"
                    })]
                })
            }
            class L extends s.PureComponent {
                componentWillLeave(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillLeave(e)
                }
                componentWillEnter(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillEnter(e)
                }
                render() {
                    let {
                        user: e,
                        isFocused: t,
                        activities: n,
                        applicationStream: s,
                        status: l,
                        lastOnlineTimestamp: i,
                        isMobile: r
                    } = this.props, {
                        isActiveRow: o
                    } = this.state;
                    return (0, a.jsx)(p.default, {
                        ref: this.peopleListItemRef,
                        isFocused: t,
                        isActive: o,
                        user: e,
                        onOtherHover: () => o ? null : (0, d.closeContextMenu)(),
                        onClick: this.handleOpenPrivateChannel,
                        children: t => (0, a.jsxs)("div", {
                            className: v.listItemContents,
                            children: [(0, a.jsx)(g.default, {
                                user: e,
                                status: l,
                                isMobile: r,
                                subText: (0, a.jsx)(I.default, {
                                    hovered: t,
                                    activities: n,
                                    applicationStream: s,
                                    status: l,
                                    user: e,
                                    lastOnlineTimestamp: i,
                                    experimentLocation: "friend_row"
                                }),
                                hovered: t,
                                showAccountIdentifier: !0
                            }), (0, a.jsxs)("div", {
                                className: v.actions,
                                children: [(0, a.jsx)(S.default, {
                                    icon: C.default,
                                    tooltip: N.default.Messages.SEND_DM,
                                    onClick: this.handleOpenPrivateChannel,
                                    shouldHighlight: t
                                }), (0, a.jsx)(S.default, {
                                    icon: _.default,
                                    tooltip: N.default.Messages.MORE,
                                    onClick: this.handleOpenActionsMenu,
                                    shouldHighlight: t
                                })]
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), R(this, "peopleListItemRef", s.createRef()), R(this, "state", {
                        isActiveRow: !1
                    }), R(this, "handleOpenPrivateChannel", e => {
                        let {
                            user: t
                        } = this.props;
                        e.stopPropagation();
                        let n = i().find(E.default.getMutablePrivateChannels(), e => e.type === T.ChannelTypes.DM && e.getRecipientId() === t.id);
                        null != n ? (0, f.transitionTo)(T.Routes.CHANNEL(T.ME, n.id)) : u.default.openPrivateChannel(t.id)
                    }), R(this, "handleOpenActionsMenu", e => {
                        let {
                            user: t
                        } = this.props;
                        (0, d.openContextMenu)(e, e => (0, a.jsx)(O, {
                            ...e,
                            user: t
                        }), {
                            onClose: () => {
                                this.setState({
                                    isActiveRow: !1
                                })
                            }
                        }), this.setState({
                            isActiveRow: !0
                        })
                    })
                }
            }
            t.default = L
        },
        437314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FriendsSearchStatus: function() {
                    return a
                }
            }), n("411104"), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("748780"),
                r = n("442837"),
                o = n("481060"),
                u = n("210887"),
                d = n("981631"),
                c = n("689938"),
                f = n("22988");

            function E(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }(a || (a = {})).SECTION_NO_RESULTS = "SECTION_NO_RESULTS";
            let h = Object.freeze({
                    SECTION_ALL: {
                        lightSrc: n("900933"),
                        darkSrc: n("67764"),
                        width: 376,
                        height: 162,
                        renderContent: e => (0, s.jsxs)(l.Fragment, {
                            children: [(0, s.jsx)(o.EmptyStateText, {
                                note: c.default.Messages.FRIENDS_EMPTY_STATE_ALL
                            }), (0, s.jsx)(o.Button, {
                                className: f.button,
                                onClick: e,
                                children: c.default.Messages.ADD_FRIEND
                            })]
                        })
                    },
                    SECTION_ONLINE: {
                        lightSrc: n("55346"),
                        darkSrc: n("917847"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(o.EmptyStateText, {
                            note: c.default.Messages.FRIENDS_EMPTY_STATE_ONLINE
                        })
                    },
                    SECTION_BLOCKED: {
                        lightSrc: n("459505"),
                        darkSrc: n("356634"),
                        width: 433,
                        height: 232,
                        renderContent: () => (0, s.jsx)(o.EmptyStateText, {
                            note: c.default.Messages.FRIENDS_EMPTY_STATE_BLOCKED
                        })
                    },
                    SECTION_PENDING: {
                        lightSrc: n("979770"),
                        darkSrc: n("138715"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(o.EmptyStateText, {
                            note: c.default.Messages.FRIENDS_EMPTY_STATE_PENDING
                        })
                    },
                    SECTION_SUGGESTIONS: {
                        lightSrc: n("979770"),
                        darkSrc: n("138715"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(o.EmptyStateText, {
                            note: c.default.Messages.FRIENDS_EMPTY_STATE_SUGGESTIONS
                        })
                    },
                    SECTION_NO_RESULTS: {
                        lightSrc: n("55346"),
                        darkSrc: n("917847"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(o.EmptyStateText, {
                            note: c.default.Messages.FRIEND_REQUEST_NO_RESULTS_FOUND
                        })
                    }
                }),
                C = e => {
                    let {
                        theme: t
                    } = e, n = c.default.Messages.FRIENDS_EMPTY_STATE_ALL, a = h.SECTION_ALL;
                    return (0, s.jsx)(l.Fragment, {
                        children: (0, s.jsxs)(o.EmptyState, {
                            theme: t,
                            children: [(0, s.jsx)(o.EmptyStateImage, {
                                width: a.width,
                                height: a.height,
                                lightSrc: a.lightSrc,
                                darkSrc: a.darkSrc
                            }), (0, s.jsx)(o.EmptyStateText, {
                                note: n
                            })]
                        })
                    })
                };
            class _ extends l.PureComponent {
                render() {
                    let {
                        type: e,
                        onClick: t,
                        theme: n
                    } = this.props, a = {
                        opacity: this.state.opacity
                    }, l = function(e) {
                        switch (e) {
                            case d.FriendsSections.ADD_FRIEND:
                            case d.FriendsSections.ALL:
                                return h.SECTION_ALL;
                            case d.FriendsSections.ONLINE:
                                return h.SECTION_ONLINE;
                            case d.FriendsSections.PENDING:
                                return h.SECTION_PENDING;
                            case d.FriendsSections.SUGGESTIONS:
                                return h.SECTION_SUGGESTIONS;
                            case d.FriendsSections.BLOCKED:
                                return h.SECTION_BLOCKED;
                            case "SECTION_NO_RESULTS":
                                return h.SECTION_NO_RESULTS;
                            default:
                                throw Error("FriendsEmptyState: Invalid empty state")
                        }
                    }(e);
                    return e === d.FriendsSections.ADD_FRIEND ? (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: a,
                        children: (0, s.jsx)(C, {
                            theme: n
                        })
                    }) : (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: a,
                        children: (0, s.jsxs)(o.EmptyState, {
                            theme: n,
                            children: [(0, s.jsx)(o.EmptyStateImage, {
                                width: l.width,
                                height: l.height,
                                lightSrc: l.lightSrc,
                                darkSrc: l.darkSrc
                            }), l.renderContent(t)]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), E(this, "state", {
                        opacity: new i.default.Value(1)
                    }), E(this, "componentWillEnter", e => {
                        this.state.opacity.setValue(0), i.default.timing(this.state.opacity, {
                            toValue: 1,
                            duration: 250
                        }).start(e)
                    }), E(this, "componentWillLeave", e => {
                        i.default.timing(this.state.opacity, {
                            toValue: 0,
                            duration: 250
                        }).start(e)
                    })
                }
            }
            t.default = r.default.connectStores([u.default], () => ({
                theme: u.default.theme
            }), {
                forwardRef: !0
            })(_)
        },
        696577: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("692547"),
                i = n("481060"),
                r = n("194359"),
                o = n("906732"),
                u = n("171368"),
                d = n("594174"),
                c = n("263704"),
                f = n("465670"),
                E = n("626135"),
                h = n("321488"),
                C = n("417183"),
                _ = n("170245"),
                m = n("981631"),
                S = n("689938"),
                p = n("615808");

            function I(e) {
                let {
                    user: t,
                    type: n,
                    status: I,
                    isFocused: g
                } = e, T = s.useContext(E.AnalyticsContext), {
                    analyticsLocations: A
                } = (0, o.default)(), N = e => {
                    e.stopPropagation(), r.default.cancelFriendRequest(t.id, {
                        location: "Friends"
                    })
                }, v = e => {
                    e.stopPropagation(), r.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        }
                    })
                }, R = I === m.StatusTypes.OFFLINE ? m.StatusTypes.UNKNOWN : I, O = n === m.RelationshipTypes.PENDING_INCOMING ? S.default.Messages.INCOMING_FRIEND_REQUEST : S.default.Messages.OUTGOING_FRIEND_REQUEST;
                return (0, a.jsx)(C.default, {
                    isFocused: g,
                    user: t,
                    onClick: () => (0, u.openUserProfileModal)({
                        userId: t.id,
                        sourceAnalyticsLocations: A,
                        analyticsLocation: T.location
                    }),
                    children: e => {
                        var s;
                        let r = n === m.RelationshipTypes.PENDING_INCOMING ? (0, a.jsxs)(a.Fragment, {
                            children: [(null === (s = d.default.getCurrentUser()) || void 0 === s ? void 0 : s.isStaff()) && (null == t ? void 0 : t.isStaff()) && (0, a.jsx)("div", {
                                className: p.staffIndicator,
                                children: (0, a.jsx)(i.TextBadge, {
                                    color: l.default.unsafe_rawColors.BRAND_500.css,
                                    text: S.default.Messages.STAFF_BADGE_TOOLTIP
                                })
                            }), (0, a.jsx)(h.default, {
                                icon: c.default,
                                actionType: h.default.ActionTypes.ACCEPT,
                                tooltip: S.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: v,
                                shouldHighlight: e
                            }), (0, a.jsx)(h.default, {
                                icon: f.default,
                                actionType: h.default.ActionTypes.DENY,
                                tooltip: S.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: N,
                                shouldHighlight: e
                            })]
                        }) : (0, a.jsx)(h.default, {
                            icon: f.default,
                            actionType: h.default.ActionTypes.DENY,
                            tooltip: S.default.Messages.FRIEND_REQUEST_CANCEL,
                            onClick: N,
                            shouldHighlight: e
                        });
                        return (0, a.jsxs)("div", {
                            className: p.listItemContents,
                            children: [(0, a.jsx)(_.default, {
                                user: t,
                                hovered: e,
                                showAccountIdentifier: !0,
                                status: R,
                                subText: O,
                                className: p.userInfo
                            }), (0, a.jsx)("div", {
                                className: p.actions,
                                children: r
                            })]
                        })
                    }
                })
            }
        },
        596957: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("481060"),
                u = n("758059"),
                d = n("194359"),
                c = n("410575"),
                f = n("607070"),
                E = n("100527"),
                h = n("906732"),
                C = n("205976"),
                _ = n("699516"),
                m = n("974042"),
                S = n("451478"),
                p = n("390697"),
                I = n("434184"),
                g = n("701861"),
                T = n("437314"),
                A = n("696577"),
                N = n("163417"),
                v = n("492347"),
                R = n("42575"),
                O = n("617015"),
                L = n("981631"),
                P = n("689938"),
                y = n("739426");
            t.default = function(e) {
                let {
                    sectionFilter: t,
                    titleId: n
                } = e, {
                    analyticsLocations: l
                } = (0, h.default)(E.default.FRIENDS_LIST), {
                    rows: M,
                    section: D
                } = (0, r.useStateFromStoresObject)([m.default], () => m.default.getState()), x = (0, r.useStateFromStores)([S.default], () => S.default.isFocused()), b = (0, r.useStateFromStores)([_.default], () => _.default.getRelationshipCount()), U = (0, p.useIsClearIncomingFriendRequestsEnabled)(), [j, G] = s.useState(() => {
                    let e = {};
                    for (let t of Object.values(L.FriendsSections)) e[t] = "";
                    return e
                }), w = s.useCallback(e => {
                    G({
                        ...j,
                        [t]: e
                    })
                }, [j, t]), k = s.useCallback(() => {
                    G({
                        ...j,
                        [t]: ""
                    })
                }, [j, t]), B = M.filter(t, j[t]);
                if (0 === B.length && "" === j[t]) return (0, a.jsxs)("div", {
                    className: y.emptyStateContainer,
                    children: [t === L.FriendsSections.ONLINE && (0, a.jsx)(C.default, {}), (0, a.jsx)(T.default, {
                        type: t,
                        onClick: () => {
                            u.default.setSection(L.FriendsSections.ADD_FRIEND)
                        }
                    }, D)]
                });
                let F = 0 === B.length && "" !== j[t],
                    H = B.filter(e => e.type === L.RelationshipTypes.PENDING_INCOMING).length,
                    V = t === L.FriendsSections.PENDING && H > 0 && U && H >= O.MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL;
                return (0, a.jsx)(h.AnalyticsLocationProvider, {
                    value: l,
                    children: (0, a.jsxs)(c.default, {
                        section: L.AnalyticsSections.FRIENDS_LIST,
                        children: [(0, a.jsx)(o.SearchBar, {
                            className: i()(y.searchBar, F ? y.searchEmptyState : null),
                            query: j[t],
                            onChange: w,
                            onClear: k,
                            size: o.SearchBar.Sizes.MEDIUM
                        }), t === L.FriendsSections.ONLINE && "" === j[t] && (0, a.jsx)(C.default, {}), (0, a.jsxs)("div", {
                            className: y.sectionTitle,
                            children: [(0, a.jsx)(v.default, {
                                id: n,
                                title: function(e, t) {
                                    switch (e) {
                                        case L.FriendsSections.ONLINE:
                                            return P.default.Messages.FRIENDS_ONLINE_HEADER.format({
                                                online: t.toString()
                                            });
                                        case L.FriendsSections.PENDING:
                                            return P.default.Messages.FRIENDS_PENDING_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.SUGGESTIONS:
                                            return P.default.Messages.FRIENDS_FRIEND_SUGGESTIONS_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.BLOCKED:
                                            return P.default.Messages.FRIENDS_BLOCKED_HEADER.format({
                                                count: t.toString()
                                            });
                                        default:
                                            return P.default.Messages.FRIENDS_ALL_HEADER.format({
                                                count: t.toString()
                                            })
                                    }
                                }(t, B.length)
                            }), V && (0, a.jsx)(o.Button, {
                                look: o.ButtonLooks.LINK,
                                color: o.ButtonColors.LINK,
                                className: y.clearButton,
                                size: o.Button.Sizes.TINY,
                                onClick: e => {
                                    e.stopPropagation(), d.default.confirmClearPendingRelationships(H)
                                },
                                "aria-label": P.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON,
                                children: P.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON
                            })]
                        }), F ? (0, a.jsx)("div", {
                            className: y.emptyStateContainer,
                            children: (0, a.jsx)(T.default, {
                                type: T.FriendsSearchStatus.SECTION_NO_RESULTS
                            }, D)
                        }) : (0, a.jsx)(N.default, {
                            relationshipCount: b,
                            statusSections: [B],
                            renderRow: function(e) {
                                switch (t) {
                                    case L.FriendsSections.BLOCKED:
                                        return (0, a.jsx)(I.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.PENDING:
                                        return (0, a.jsx)(A.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.SUGGESTIONS:
                                        return (0, a.jsx)(R.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.ONLINE:
                                    case L.FriendsSections.ALL:
                                    default:
                                        return (0, a.jsx)(g.default, {
                                            ...e,
                                            isFocused: x
                                        })
                                }
                            },
                            sectionFilter: t,
                            searchQuery: j[t],
                            useReducedMotion: f.default.useReducedMotion
                        })]
                    })
                })
            }
        },
        417183: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("748780"),
                o = n("924826"),
                u = n("481060"),
                d = n("239091"),
                c = n("617015"),
                f = n("320981");

            function E(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class h extends s.PureComponent {
                componentWillLeave(e) {
                    r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 0,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: 0,
                        duration: 200
                    })]).start(e)
                }
                componentWillEnter(e) {
                    this.state.opacity.setValue(0), this.state.height.setValue(0), r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 1,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: c.PEOPLE_LIST_ITEM_HEIGHT,
                        duration: 200
                    })]).start(e)
                }
                render() {
                    let {
                        height: e,
                        opacity: t,
                        hovered: n,
                        isContextMenuActive: s
                    } = this.state, {
                        children: l,
                        user: d,
                        onClick: c,
                        isActive: E
                    } = this.props;
                    return (0, a.jsx)(o.ListNavigatorItem, {
                        id: d.id,
                        children: o => (0, a.jsx)(u.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(r.default.div, {
                                className: i()(f.peopleListItem, {
                                    [f.active]: E || s
                                }),
                                onContextMenu: e => this.handleContextMenu(e, d),
                                onMouseEnter: this.handleMouseEnter,
                                onMouseLeave: this.handleMouseLeave,
                                onClick: null != c ? c : void 0,
                                style: {
                                    height: e,
                                    opacity: t
                                },
                                ...o,
                                children: l(n || E || s)
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), E(this, "state", {
                        height: new r.default.Value(c.PEOPLE_LIST_ITEM_HEIGHT),
                        opacity: new r.default.Value(1),
                        hovered: !1,
                        isContextMenuActive: !1
                    }), E(this, "handleMouseEnter", () => {
                        let {
                            isFocused: e,
                            isActive: t,
                            onOtherHover: n
                        } = this.props, {
                            isContextMenuActive: a
                        } = this.state;
                        this.setState({
                            hovered: e
                        }), e && !t && !a && (null == n || n())
                    }), E(this, "handleMouseLeave", () => {
                        this.setState({
                            hovered: !1
                        })
                    }), E(this, "handleContextMenu", (e, t) => {
                        this.setState({
                            isContextMenuActive: !0
                        }), (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("36441"), n.e("69220")]).then(n.bind(n, "881351"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: () => {
                                this.setState({
                                    isContextMenuActive: !1
                                })
                            }
                        })
                    })
                }
            }
            t.default = h
        },
        163417: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("145641"),
                l = n("322701"),
                i = n("617015");

            function r(e) {
                let {
                    relationshipCount: t,
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o,
                    sectionFilter: u,
                    useReducedMotion: d
                } = e;
                return t >= i.RELATIONSHIP_COUNT_ANIMATION_THRESHOLD ? (0, a.jsx)(s.default, {
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o
                }) : (0, a.jsx)(l.default, {
                    statusSections: n,
                    renderRow: r,
                    sectionFilter: u,
                    searchQuery: o,
                    useReducedMotion: d
                })
            }
        },
        145641: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("924826"),
                i = n("442837"),
                r = n("481060"),
                o = n("607070"),
                u = n("617015"),
                d = n("739426");
            t.default = function(e) {
                let {
                    statusSections: t,
                    renderRow: n,
                    searchQuery: c
                } = e, f = e => 0 === t[e].length ? 0 : u.STATUS_HEADER_HEIGHT + 16, E = e => {
                    let {
                        section: a,
                        row: s
                    } = e, l = t[a];
                    if (null == l || null == s) return null;
                    let i = l[s];
                    return null == i ? null : n(i)
                }, h = (0, i.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), C = s.useRef(null), _ = s.useCallback(() => new Promise(e => {
                    let t = C.current;
                    if (null == t) return e();
                    t.scrollToTop({
                        callback: () => requestAnimationFrame(() => e())
                    })
                }), []), m = s.useCallback(() => new Promise(e => {
                    let t = C.current;
                    if (null == t) return e();
                    t.scrollToBottom({
                        callback: () => requestAnimationFrame(() => e())
                    })
                }), []), S = s.useCallback(e => {
                    let t = document.querySelector(e),
                        n = C.current;
                    null != t && null != n && n.scrollIntoViewNode({
                        node: t,
                        padding: 8,
                        callback: () => null == t ? void 0 : t.focus()
                    })
                }, []), p = (0, l.default)({
                    id: "people-list",
                    isEnabled: h,
                    scrollToStart: _,
                    scrollToEnd: m,
                    setFocus: S
                });
                return (0, a.jsx)(l.ListNavigatorProvider, {
                    navigator: p,
                    children: (0, a.jsx)(l.ListNavigatorContainer, {
                        children: e => {
                            let {
                                ref: n,
                                ...s
                            } = e;
                            return (0, a.jsx)(r.ListAuto, {
                                ref: e => {
                                    var t;
                                    C.current = e, n.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null
                                },
                                sectionHeight: f,
                                renderRow: E,
                                rowHeight: u.PEOPLE_LIST_ITEM_HEIGHT,
                                sections: t.map(e => "" !== c && 0 === e.length ? e.length + 1 : e.length),
                                className: d.peopleList,
                                ...s
                            })
                        }
                    })
                })
            }
        },
        322701: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("924826"),
                l = n("442837"),
                i = n("215569"),
                r = n("481060"),
                o = n("607070"),
                u = n("981631"),
                d = n("739426");
            t.default = function(e) {
                let {
                    statusSections: t,
                    renderRow: n,
                    searchQuery: c,
                    sectionFilter: f,
                    useReducedMotion: E
                } = e, h = (0, l.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), C = (0, s.default)({
                    id: "people",
                    isEnabled: h,
                    async scrollToStart() {},
                    async scrollToEnd() {}
                }), _ = f !== u.FriendsSections.ONLINE && f !== u.FriendsSections.ALL, m = E || "" !== c || _, S = t.map((e, t) => m ? (0, a.jsx)("div", {
                    children: e.map(n)
                }, t) : (0, a.jsx)(i.TransitionGroup, {
                    transitionAppear: !1,
                    component: "div",
                    children: e.map(n)
                }, t));
                return (0, a.jsx)(s.ListNavigatorProvider, {
                    navigator: C,
                    children: (0, a.jsx)(s.ListNavigatorContainer, {
                        children: e => {
                            let {
                                ref: t,
                                ...n
                            } = e;
                            return (0, a.jsx)(r.ScrollerAuto, {
                                ref: t,
                                className: d.peopleList,
                                ...n,
                                children: S
                            })
                        }
                    })
                })
            }
        },
        270759: function(e, t, n) {
            "use strict";
            n.r(t), n("610138"), n("216116"), n("78328"), n("815648"), n("47120"), n("757143");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("613828"),
                o = n("873546"),
                u = n("442837"),
                d = n("481060"),
                c = n("570140"),
                f = n("150063"),
                E = n("758059"),
                h = n("252618"),
                C = n("5254"),
                _ = n("984370"),
                m = n("518311"),
                S = n("199104"),
                p = n("108427"),
                I = n("210887"),
                g = n("974042"),
                T = n("153124"),
                A = n("988951"),
                N = n("792125"),
                v = n("666286"),
                R = n("596957"),
                O = n("981631"),
                L = n("723359"),
                P = n("689938"),
                y = n("915128");

            function M() {
                return (0, a.jsxs)("div", {
                    className: y.inviteToolbar,
                    children: [(0, a.jsx)(m.default, {
                        tooltip: P.default.Messages.NEW_GROUP_DM
                    }), (0, a.jsx)(_.default.Divider, {})]
                })
            }
            t.default = function(e) {
                let {
                    initialSection: t
                } = e, n = (0, r.useLocation)(), l = (0, r.useHistory)();
                s.useEffect(() => {
                    "true" === new URLSearchParams(n.search).get("confirm-age") && c.default.dispatch({
                        type: "AGE_GATE_MODAL_OPEN",
                        source: L.AgeGateSource.DEEP_LINK_PROMPT
                    }).then(() => {
                        l.replace(O.Routes.ME)
                    })
                }, [l, n]), s.useEffect(() => {
                    f.setHomeLink(O.Routes.FRIENDS), (0, p.trackAppUIViewed)("friends")
                }, []), s.useEffect(() => {
                    null != t && E.default.setInitialSection(t)
                }, [t]);
                let m = (0, u.useStateFromStores)([I.default], () => I.default.theme),
                    {
                        section: D,
                        pendingCount: x
                    } = (0, u.useStateFromStoresObject)([g.default], () => g.default.getState()),
                    b = (0, u.useStateFromStoresObject)([C.default], () => C.default.getSuggestionCount()),
                    U = (0, T.useUID)(),
                    j = (0, T.useUID)();
                return (0, a.jsxs)("main", {
                    className: y.container,
                    "aria-label": P.default.Messages.FRIENDS,
                    children: [(0, a.jsx)(h.AppPageTitle, {
                        location: P.default.Messages.FRIENDS
                    }), (0, a.jsxs)(_.default, {
                        className: (0, N.getThemeClass)(m),
                        toolbar: (0, a.jsx)(M, {}),
                        scrollable: o.isMobile,
                        role: "navigation",
                        "aria-labelledby": U,
                        children: [(0, a.jsx)(_.default.Icon, {
                            icon: A.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(_.default.Title, {
                            id: U,
                            children: P.default.Messages.FRIENDS
                        }), (0, a.jsx)(_.default.Divider, {}), (0, a.jsxs)(d.TabBar, {
                            "aria-label": P.default.Messages.FRIENDS,
                            selectedItem: D,
                            type: "top-pill",
                            onItemSelect: e => {
                                E.default.setSection(e)
                            },
                            className: y.tabBar,
                            children: [(0, a.jsx)(d.TabBar.Item, {
                                id: O.FriendsSections.ONLINE,
                                className: y.item,
                                children: P.default.Messages.FRIENDS_SECTION_ONLINE
                            }), (0, a.jsx)(d.TabBar.Item, {
                                id: O.FriendsSections.ALL,
                                className: y.item,
                                children: P.default.Messages.FRIENDS_SECTION_ALL
                            }), (0, a.jsxs)(d.TabBar.Item, {
                                id: O.FriendsSections.PENDING,
                                className: y.item,
                                "aria-label": P.default.Messages.FRIENDS_SECTION_PENDING,
                                children: [P.default.Messages.FRIENDS_SECTION_PENDING, x > 0 ? (0, a.jsx)(d.NumberBadge, {
                                    count: x,
                                    className: y.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                }) : null]
                            }), b > 0 ? (0, a.jsxs)(d.TabBar.Item, {
                                id: O.FriendsSections.SUGGESTIONS,
                                className: y.item,
                                "aria-label": P.default.Messages.FRIENDS_SECTION_SUGGESTIONS,
                                children: [P.default.Messages.FRIENDS_SECTION_SUGGESTIONS, (0, a.jsx)(d.NumberBadge, {
                                    count: b,
                                    className: y.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                })]
                            }) : null, (0, a.jsx)(d.TabBar.Item, {
                                id: O.FriendsSections.BLOCKED,
                                className: y.item,
                                children: P.default.Messages.BLOCKED
                            }), (0, a.jsx)(d.TabBar.Item, {
                                "aria-label": P.default.Messages.FRIENDS_SECTION_ADD_FRIEND,
                                className: i()(y.item, y.addFriend),
                                id: O.FriendsSections.ADD_FRIEND,
                                children: (0, a.jsx)("span", {
                                    children: P.default.Messages.FRIENDS_SECTION_ADD_FRIEND
                                })
                            })]
                        })]
                    }), (0, a.jsxs)("div", {
                        className: y.tabBody,
                        children: [(0, a.jsx)(d.TabBar.Panel, {
                            id: D,
                            className: y.peopleColumn,
                            "aria-labelledby": j,
                            children: D === O.FriendsSections.ADD_FRIEND ? (0, a.jsx)(v.default, {}) : (0, a.jsx)(R.default, {
                                titleId: j,
                                sectionFilter: D
                            })
                        }), (0, a.jsx)("div", {
                            className: y.nowPlayingColumn,
                            children: (0, a.jsx)(S.default, {})
                        })]
                    })]
                })
            }
        },
        492347: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("151827"),
                l = n("836519");

            function i(e) {
                let {
                    title: t,
                    id: n
                } = e;
                return (0, a.jsx)(s.default, {
                    className: l.title,
                    id: n,
                    children: t
                })
            }
        },
        825682: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("788307"),
                i = n("280234"),
                r = n("509275"),
                o = n("51144"),
                u = n("908105");
            t.default = function(e) {
                let {
                    hovered: t,
                    activities: n,
                    applicationStream: d,
                    status: c,
                    user: f,
                    lastOnlineTimestamp: E,
                    experimentLocation: h = "status_text"
                } = e, C = n.length > 0, {
                    isRecentlyOnlineShowable: _,
                    isRecentlyOnlineTrackable: m
                } = (0, i.getRecentlyOnlineStrategy)(E);
                if (s.useEffect(() => {
                        m && !C && i.default.trackExposure({
                            location: h
                        })
                    }, [m, C, h]), C) return (0, a.jsx)(l.default, {
                    className: u.activity,
                    textClassName: u.text,
                    emojiClassName: u.customStatusEmoji,
                    activities: n,
                    applicationStream: d,
                    animate: t,
                    user: f
                });
                if (!_) return (0, a.jsx)("div", {
                    className: u.text,
                    children: (0, o.humanizeStatus)(c)
                });
                {
                    let e = (0, r.formatRecentlyOnlineStatus)(E);
                    return (0, a.jsx)("div", {
                        className: u.text,
                        children: e
                    })
                }
            }
        },
        42575: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("194359"),
                i = n("906732"),
                r = n("388380"),
                o = n("171368"),
                u = n("263704"),
                d = n("465670"),
                c = n("626135"),
                f = n("321488"),
                E = n("417183"),
                h = n("170245"),
                C = n("981631"),
                _ = n("689938"),
                m = n("860030");

            function S(e) {
                let {
                    user: t,
                    nickname: n,
                    status: S,
                    isFocused: p
                } = e, I = s.useContext(c.AnalyticsContext), {
                    analyticsLocations: g
                } = (0, i.default)(), T = e => {
                    null == e || e.stopPropagation(), l.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        },
                        type: void 0,
                        friendToken: void 0,
                        fromFriendSuggestion: !0
                    })
                }, A = e => {
                    null == e || e.stopPropagation(), r.default.ignore(t.id)
                }, N = S === C.StatusTypes.OFFLINE ? C.StatusTypes.UNKNOWN : S;
                return (0, a.jsx)(E.default, {
                    isFocused: p,
                    user: t,
                    onClick: () => (0, o.openUserProfileModal)({
                        userId: t.id,
                        sourceAnalyticsLocations: g,
                        analyticsLocation: I.location
                    }),
                    children: e => {
                        let s = (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(f.default, {
                                icon: u.default,
                                actionType: f.default.ActionTypes.ACCEPT,
                                tooltip: _.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: T,
                                shouldHighlight: e
                            }), (0, a.jsx)(f.default, {
                                icon: d.default,
                                actionType: f.default.ActionTypes.DENY,
                                tooltip: _.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: A,
                                shouldHighlight: e
                            })]
                        });
                        return (0, a.jsxs)("div", {
                            className: m.listItemContents,
                            children: [(0, a.jsx)(h.default, {
                                user: t,
                                hovered: e,
                                status: N,
                                subText: n,
                                className: m.__invalid_userInfo
                            }), (0, a.jsx)("div", {
                                className: m.actions,
                                children: s
                            })]
                        })
                    }
                })
            }
        },
        170245: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("442837"),
                r = n("129861"),
                o = n("700582"),
                u = n("699516"),
                d = n("341375");
            t.default = function(e) {
                let {
                    user: t,
                    hovered: n,
                    subText: s,
                    showAccountIdentifier: c,
                    status: f,
                    isMobile: E,
                    className: h
                } = e, C = (0, i.useStateFromStores)([u.default], () => u.default.getNickname(t.id));
                return (0, a.jsxs)("div", {
                    className: l()(d.userInfo, h, {
                        [d.hovered]: n
                    }),
                    children: [(0, a.jsx)(o.default, {
                        user: t,
                        className: d.avatar,
                        animate: n,
                        status: f,
                        isMobile: E
                    }), (0, a.jsxs)("div", {
                        className: d.text,
                        children: [(0, a.jsx)(r.default, {
                            user: t,
                            nick: C,
                            botClass: d.botTag,
                            className: l()(d.discordTag, {
                                [d.alignPomelo]: t.isPomelo()
                            }),
                            usernameClass: d.username,
                            discriminatorClass: d.discriminator,
                            showAccountIdentifier: c
                        }), (0, a.jsx)("div", {
                            className: d.subtext,
                            children: s
                        })]
                    })]
                })
            }
        },
        541692: function(e, t, n) {
            "use strict";
            let a;
            n.r(t);
            var s, l = n("442837"),
                i = n("570140"),
                r = n("133080");

            function o(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let u = (0, r.getDefaultCountryCode)();

            function d(e) {
                var t;
                let {
                    countryCode: n
                } = e;
                null != n && (u = null !== (t = (0, r.getCountryCodeByAlpha2)(n)) && void 0 !== t ? t : (0, r.getDefaultCountryCode)())
            }
            class c extends(s = l.default.DeviceSettingsStore) {
                initialize(e) {
                    null != e && (a = e.selectedCountryCode)
                }
                getUserAgnosticState() {
                    return {
                        selectedCountryCode: a
                    }
                }
                getCountryCode() {
                    return null != a ? a : u
                }
            }
            o(c, "displayName", "PhoneStore"), o(c, "persistKey", "PhoneStore"), t.default = new c(i.default, {
                PHONE_SET_COUNTRY_CODE: function(e) {
                    let {
                        countryCode: t
                    } = e;
                    a = t
                },
                CONNECTION_OPEN: d,
                SET_LOCATION_METADATA: d
            })
        },
        960275: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("317770"),
                l = n("314897"),
                i = n("57562"),
                r = n("882029"),
                o = n("955204"),
                u = n("351780"),
                d = n("843693");

            function c(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let f = new Set;
            class E extends s.default {
                _initialize() {
                    a.default.subscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                _terminate() {
                    a.default.unsubscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                constructor(...e) {
                    super(...e), c(this, "handleSettingsUpdate", e => {
                        let {
                            settings: t
                        } = e;
                        t.enabled ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.ENABLE_POGGERMODE) : !1 === t.enabled && (0, i.unlockAchievement)(o.PoggermodeAchievementId.DISABLE_POGGERMODE), Object.keys(t).some(e => e.startsWith("confetti")) && (0, i.unlockAchievement)(o.PoggermodeAchievementId.CUSTOMIZE_CONFETTI)
                    }), c(this, "handleMessageCreate", e => {
                        var t;
                        let {
                            channelId: n,
                            message: {
                                author: a,
                                nonce: s,
                                mentions: c
                            }
                        } = e;
                        if (!u.default.isEnabled()) return !1;
                        let E = l.default.getId();
                        if ((null == c ? void 0 : c.find(e => e.id === E)) != null ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_ME) : (null !== (t = null == c ? void 0 : c.length) && void 0 !== t ? t : 0) > 0 && (null == a ? void 0 : a.id) === E && (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_SOMEONE), !(0, d.shouldTrackMessage)(null == a ? void 0 : a.id, E, s, f)) return !1;
                        let h = d.default.getMostRecentMessageCombo(n),
                            {
                                combo: C
                            } = null != h ? h : {};
                        if (null == C) return !1;
                        Object.values(o.PoggermodeAchievementId).forEach(e => {
                            if (null != r.default.getUnlocked(e)) return;
                            let t = (0, o.getPoggermodeAchievementData)(e),
                                n = null == t ? void 0 : t.checkUnlock;
                            if (null != n) !1 !== n(C) && (0, i.unlockAchievement)(e)
                        })
                    })
                }
            }
            t.default = new E
        },
        678492: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770"),
                r = n("689938");
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                _terminate() {
                    l.default.unsubscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                handlePoggermodeTemporarilyDisabled() {
                    (0, s.openModal)(e => (0, a.jsx)(s.ConfirmModal, {
                        ...e,
                        header: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_TITLE,
                        confirmText: r.default.Messages.CONFIRM,
                        confirmButtonColor: s.Button.Colors.GREEN,
                        children: (0, a.jsx)(s.Text, {
                            variant: "text-md/normal",
                            children: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_BODY
                        })
                    }))
                }
            }
            t.default = new o
        },
        269089: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("570140"),
                l = n("317770"),
                i = n("663993"),
                r = n("788983"),
                o = n("981631");
            n("746057");
            let u = (0, i.makeLazy)({
                    createPromise: () => n.e("58621").then(n.bind(n, "223455")),
                    webpackId: "223455",
                    name: "PopoutWindowChannelCall"
                }),
                d = (0, i.makeLazy)({
                    createPromise: () => n.e("91032").then(n.bind(n, "432472")),
                    webpackId: "432472",
                    name: "PopoutWindowStageChannelCall"
                }),
                c = (0, i.makeLazy)({
                    createPromise: () => Promise.all([n.e("99387"), n.e("33053"), n.e("92006")]).then(n.bind(n, "945778")),
                    webpackId: "945778",
                    name: "PopoutWindowRTCDebug"
                });
            class f extends l.default {
                _initialize() {
                    s.default.subscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.subscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                _terminate() {
                    s.default.unsubscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.unsubscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                handleOpenChannelCallPopout(e) {
                    let {
                        channel: t
                    } = e;
                    r.open(o.PopoutWindowKeys.CHANNEL_CALL_POPOUT, e => t.isGuildStageVoice() ? (0, a.jsx)(d, {
                        windowKey: e,
                        channelId: t.id
                    }) : (0, a.jsx)(u, {
                        windowKey: e,
                        channelId: t.id
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
                handleOpenRTCDebugPopout() {
                    r.open(o.PopoutWindowKeys.RTC_DEBUG_POPOUT, e => (0, a.jsx)(c, {
                        windowKey: e
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
            }
            t.default = new f
        },
        380570: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("748780"),
                s = n("570140"),
                l = n("317770"),
                i = n("716578"),
                r = n("928518");

            function o(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class u extends l.default {
                _initialize() {
                    r.default.addChangeListener(this.handlePopoutWindowChange), s.default.subscribe("WINDOW_FOCUS", this.handleMainWindowFocus)
                }
                _terminate() {
                    r.default.removeChangeListener(this.handlePopoutWindowChange), s.default.unsubscribe("WINDOW_FOCUS", this.handleMainWindowFocus), this.injectWindowAnimationFrame(window)
                }
                injectWindowAnimationFrame(e) {
                    let t = t => e.requestAnimationFrame(t),
                        n = t => e.cancelAnimationFrame(t);
                    a.default.inject.RequestAnimationFrame(t), a.default.inject.CancelAnimationFrame(n), i.frameLoop.setRAF(t, n)
                }
                constructor(...e) {
                    super(...e), o(this, "handleMainWindowFocus", e => {
                        let {
                            focused: t
                        } = e;
                        t && this.injectWindowAnimationFrame(window)
                    }), o(this, "handlePopoutWindowChange", () => {
                        let e = r.default.getWindowKeys().find(e => r.default.getWindowFocused(e));
                        if (null == e) return this.injectWindowAnimationFrame(window);
                        let t = r.default.getWindow(e);
                        if (null == t || t.closed) return this.injectWindowAnimationFrame(window);
                        this.injectWindowAnimationFrame(t)
                    })
                }
            }
            t.default = new u
        },
        240504: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s = n("442837"),
                l = n("570140");

            function i(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let r = 12 * n("70956").default.Millis.HOUR,
                o = {
                    profileThemesRelevanceExceeded: null,
                    savedAt: null
                },
                u = {
                    hasFetchedRelevance: !1
                },
                d = o,
                c = u;
            class f extends(a = s.default.PersistedStore) {
                initialize(e) {
                    c = u, d = o;
                    let t = new Date;
                    null != e && null != e.savedAt && t.getTime() - e.savedAt < r && (d = e)
                }
                get hasFetchedRelevance() {
                    return c.hasFetchedRelevance
                }
                get profileThemesRelevanceExceeded() {
                    return d.profileThemesRelevanceExceeded
                }
                getState() {
                    return d
                }
            }
            i(f, "displayName", "PerksRelevanceStore"), i(f, "persistKey", "PerksRelevanceStore"), t.default = new f(l.default, {
                BILLING_PERKS_RELEVANCE_FETCH_START: function() {
                    c.hasFetchedRelevance = !0
                },
                BILLING_PERKS_RELEVANCE_FETCH_SUCCESS: function(e) {
                    let {
                        res: t
                    } = e;
                    null != t && (d.profileThemesRelevanceExceeded = t.eligible, d.savedAt = new Date().getTime())
                },
                BILLING_PERKS_RELEVANCE_FETCH_FAIL: function() {},
                LOGOUT: function() {
                    c = u, d = o
                }
            })
        },
        837689: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770"),
                r = n("594174"),
                o = n("295226"),
                u = n("74538"),
                d = n("374023"),
                c = n("913976"),
                f = n("104494"),
                E = n("29920"),
                h = n("786397"),
                C = n("248042"),
                _ = n("318199"),
                m = n("474936");

            function S(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let p = "PremiumServerDriveAnnouncementModal";
            class I extends i.default {
                _initialize() {
                    l.default.subscribe("PREMIUM_MARKETING_DATA_READY", this.mayShowAnnouncementModal), l.default.subscribe("PREMIUM_MARKETING_PREVIEW", this.handlePreview)
                }
                _terminate() {
                    l.default.unsubscribe("PREMIUM_MARKETING_DATA_READY", this.mayShowAnnouncementModal), l.default.unsubscribe("PREMIUM_MARKETING_PREVIEW", this.handlePreview)
                }
                constructor(...e) {
                    super(...e), S(this, "maybeOpenServerDriveAnnouncementModal", (e, t) => {
                        let l = (0, _.extractAnnouncementModalContent)({
                            content: e,
                            isPreview: t
                        });
                        return null != l && ((0, s.closeModal)(p), (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "318199"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t,
                                properties: l
                            })
                        }, {
                            modalKey: p
                        }), !0)
                    }), S(this, "handlePreview", e => {
                        let {
                            properties: t
                        } = e;
                        this.maybeOpenServerDriveAnnouncementModal(t, !0)
                    }), S(this, "getOfferFromStore", () => {
                        let e = r.default.getCurrentUser();
                        if ((0, u.isPremium)(e)) return {};
                        let t = [(0, m.PREMIUM_TIER_2_LIKELIHOOD_DISCOUNT_ID), (0, m.PREMIUM_TIER_2_REACTIVATION_DISCOUNT_ID), (0, m.PREMIUM_TIER_2_LIKELIHOOD_1_MONTH_30_PERCENT_DISCOUNT_ID), (0, m.PREMIUM_TIER_2_LIKELIHOOD_1_MONTH_40_PERCENT_DISCOUNT_ID)].map(e => o.default.getUserDiscountOffer(e)).filter(e => null != e && !(0, f.hasUserDiscountExpired)(e)).shift();
                        if (null != t) return {
                            userDiscountOffer: t
                        };
                        let n = [(0, m.PREMIUM_TIER_2_LIKELIHOOD_TRIAL_ID), (0, m.PREMIUM_TIER_2_REACTIVATION_TRIAL_ID), (0, m.PREMIUM_TIER_2_HFU_ONE_WEEK_TRIAL_ID), (0, m.PREMIUM_TIER_2_HFU_TWO_WEEK_TRIAL_ID), (0, m.PREMIUM_TIER_2_HFU_ONE_MONTH_TRIAL_ID), (0, m.PREMIUM_TIER_0_LIKELIHOOD_TRIAL_ID), (0, m.PREMIUM_TIER_2_AUTH3_TRIAL_ID), (0, m.PREMIUM_TIER_2_NEW_USER_CPV_TRIAL_ID)].map(e => o.default.getUserTrialOffer(e)).filter(e => null != e && !(0, h.hasUserTrialOfferExpired)(e)).shift();
                        return null != n ? {
                            userTrialOffer: n
                        } : {}
                    }), S(this, "mayShowAnnouncementModal", async () => {
                        if (await (0, C.maybeFetchActiveBogoPromotion)(), !d.ProcessArgs.isDisallowPopupsSet()) {
                            if (!(0, s.hasAnyModalOpen)() && c.default.getCurrentConfig({
                                    location: "OfferAnnouncementManager"
                                }).enabled) {
                                for (let e of (await (0, E.fetchPremiumMarketingContentWithUserOffer)(this.getOfferFromStore())))
                                    if (this.maybeOpenServerDriveAnnouncementModal(e, !1)) break
                            }!(0, s.hasAnyModalOpen)() && await (0, C.isEligibleForBOGOAnnouncementModal)() && (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("28614")]).then(n.bind(n, "868508"));
                                return t => (0, a.jsx)(e, {
                                    renderModalProps: t
                                })
                            })
                        }
                    })
                }
            }
            t.default = new I
        },
        565216: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("780384"),
                i = n("481060"),
                r = n("410030");
            t.default = e => {
                let {
                    className: t
                } = e, n = (0, r.default)(), o = (0, i.useToken)(s.default.colors.BACKGROUND_ACCENT).hex();
                return (0, a.jsx)("svg", {
                    width: "700",
                    height: "120",
                    viewBox: "0 0 700 120",
                    className: t,
                    xmlns: "http://www.w3.org/2000/svg",
                    children: (0, a.jsx)("path", {
                        fill: (0, l.isThemeDark)(n) ? o : "white",
                        opacity: "1",
                        d: "M351 39.047C185.4 -31.2102 48 9.77319 0 39.047V583.068C0 587.486 3.58174 591.068 8.00002 591.068H692C696.418 591.068 700 587.486 700 583.068V39.047C653.333 68.3208 516.6 109.304 351 39.047Z"
                    })
                })
            }
        },
        318199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                },
                extractAnnouncementModalContent: function() {
                    return C
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("578012"),
                l = n("8853"),
                i = n("663002"),
                r = n("2052"),
                o = n("410030"),
                u = n("100527"),
                d = n("906732"),
                c = n("605236"),
                f = n("960048"),
                E = n("276792"),
                h = n("290347");

            function C(e) {
                let {
                    content: t,
                    isPreview: n
                } = e, a = l.PremiumMarketingComponentProperties.fromBinary((0, s.base64decode)(t));
                return "announcementModalVariant1" !== a.properties.oneofKind ? null : !n && (0 === a.properties.announcementModalVariant1.dismissKey.trim().length || (0, c.isDismissibleContentDismissed)(Number(a.properties.announcementModalVariant1.dismissKey))) ? null : (n && (a.properties.announcementModalVariant1.dismissKey = ""), a)
            }

            function _(e) {
                let {
                    renderModalProps: t,
                    properties: n
                } = e, {
                    location: s
                } = (0, r.useAnalyticsContext)(), {
                    analyticsLocations: l
                } = (0, d.default)(u.default.PREMIUM_MARKETING_ANNOUNCEMENT_MODAL), c = (0, o.default)(), C = (0, i.isThemeLight)(c);
                if ("announcementModalVariant1" === n.properties.oneofKind) {
                    let e = (0, E.adaptAnnouncementModalVariant1)({
                        content: n.properties.announcementModalVariant1,
                        renderModalProps: t,
                        analyticsLocations: l,
                        analyticsLocation: s,
                        isLightTheme: C
                    });
                    return (0, a.jsx)(h.default, {
                        ...e
                    })
                }
                return f.default.captureMessage("Property type ".concat(n.properties.oneofKind, " is not supported to render ServerDriveAnnouncementModal")), null
            }
        },
        637906: function(e, t, n) {
            "use strict";
            n.r(t);
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-08_dcf_ml_model",
                label: "DCF ML Perks Relevance Model",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 0,
                    label: "threshold 0",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 1,
                    label: "threshold 1",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "threshold 2",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 3,
                    label: "threshold 3",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 4,
                    label: "threshold 4",
                    config: {
                        enabled: !0
                    }
                }]
            });
            t.default = a
        },
        913976: function(e, t, n) {
            "use strict";
            n.r(t);
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2023-12_marketing_automation_experiment",
                label: "Marketing Automation",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Ask server for marketing content for rendering",
                    config: {
                        enabled: !0
                    }
                }]
            });
            t.default = a
        },
        647265: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                usePremiumMarketingTabDisplayTimingExperiment: function() {
                    return l
                }
            });
            var a = n("818083");
            let s = (0, a.createExperiment)({
                    kind: "user",
                    id: "2024-04_premium_marketing_tab_display_timing_experiment",
                    label: "2024 Premium Marketing Tab Display Timing Experiment",
                    defaultConfig: {
                        daysUntilDisplay: 2592e6
                    },
                    treatments: [{
                        id: 1,
                        label: ">7 day account age display",
                        config: {
                            daysUntilDisplay: 6048e5
                        }
                    }, {
                        id: 2,
                        label: ">14 day account age display",
                        config: {
                            daysUntilDisplay: 12096e5
                        }
                    }, {
                        id: 3,
                        label: ">21 day account age display",
                        config: {
                            daysUntilDisplay: 18144e5
                        }
                    }, {
                        id: 4,
                        label: ">28 day account age display",
                        config: {
                            daysUntilDisplay: 24192e5
                        }
                    }]
                }),
                l = e => {
                    let {
                        location: t,
                        showTabForOtherReasons: n
                    } = e;
                    return s.useExperiment({
                        location: t
                    }, {
                        autoTrackExposure: !n
                    }).daysUntilDisplay
                }
        },
        29920: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchPremiumMarketingContentWithUserOffer: function() {
                    return i
                }
            });
            var a = n("544891"),
                s = n("960048"),
                l = n("981631");
            async function i(e) {
                let {
                    userTrialOffer: t,
                    userDiscount: n,
                    userDiscountOffer: i
                } = e;
                try {
                    let e = await a.HTTP.post({
                        url: l.Endpoints.PREMIUM_MARKETING,
                        body: {
                            user_trial_offer: t,
                            user_discount: n,
                            user_discount_offer: i
                        }
                    });
                    if (e.ok) return e.body;
                    return s.default.captureMessage("fetchPremiumMarketingContentWithUserOffer failed"), []
                } catch (e) {
                    return s.default.captureException(e), []
                }
            }
        },
        276792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                adaptAnnouncementModalVariant1: function() {
                    return m
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("704215"),
                l = n("740111"),
                i = n("481060"),
                r = n("963249"),
                o = n("703656"),
                u = n("626135"),
                d = n("63063"),
                c = n("823188"),
                f = n("474936"),
                E = n("981631"),
                h = n("689938"),
                C = n("715588"),
                _ = n("74316");

            function m(e) {
                var t, n;
                let {
                    content: m,
                    renderModalProps: S,
                    analyticsLocations: p,
                    analyticsLocation: I,
                    isLightTheme: g
                } = e, T = "AnnouncementModalVariant1_".concat(s.DismissibleContent[Number(m.dismissKey)]), {
                    onClose: A
                } = S, N = null != m.button && "" !== m.button.copy ? m.button.copy : h.default.Messages.BILLING_SUBSCRIBE_TO_PLAN, v = (null === (t = m.button) || void 0 === t ? void 0 : t.buttonAction) === l.ButtonAction.OPEN_MARKETING_PAGE ? "jump_to_mkt_button" : "get_nitro_button", R = (null === (n = m.button) || void 0 === n ? void 0 : n.buttonAction) === l.ButtonAction.OPEN_MARKETING_PAGE ? () => {
                    (0, o.transitionTo)(E.Routes.APPLICATION_STORE), A()
                } : () => (0, r.default)({
                    subscriptionTier: f.PremiumSubscriptionSKUs.TIER_2,
                    analyticsLocations: p,
                    analyticsObject: {
                        ...I,
                        object: E.AnalyticsObjects.BUTTON_CTA,
                        objectType: E.AnalyticsObjectTypes.TIER_2
                    },
                    onClose: e => {
                        e && A()
                    }
                }), O = "" !== m.helpArticleId ? () => (0, a.jsx)(i.Anchor, {
                    className: C.termsApplyAnchor,
                    href: d.default.getArticleURL(m.helpArticleId),
                    children: (0, a.jsx)(i.Heading, {
                        variant: "heading-md/normal",
                        className: C.termsApplyBodyText,
                        children: h.default.Messages.BOGO_TERMS_APPLY
                    })
                }) : void 0, L = {
                    type: "video",
                    src: g ? m.heroArtVideoLinkLightTheme : m.videoLink
                };
                ("" !== m.heroArtImageLinkDarkTheme || "" !== m.heroArtImageLinkLightTheme) && (L = {
                    type: "image",
                    src: g ? m.heroArtImageLinkLightTheme : m.heroArtImageLinkDarkTheme
                });
                let P = g ? c.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_OLD_GRADIENT_FILL : c.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_WHITE_FILL,
                    y = "" !== m.modalTopPill ? () => (0, a.jsx)(c.PremiumPillWithSparkles, {
                        text: m.modalTopPill,
                        className: C.modalTopPill,
                        colorOptions: P
                    }) : void 0;
                return {
                    renderModalProps: S,
                    header: m.header,
                    modalTopExtra: y,
                    subHeader: m.subheader,
                    subHeaderExtra: O,
                    heroArt: L,
                    featureCards: m.featureCards.map(e => ({
                        header: e.header,
                        subHeader: e.body,
                        imageSrc: g ? e.imageLinkLightTheme : e.imageLink,
                        tagText: "" !== e.pill ? e.pill : void 0
                    })),
                    changeLogId: T,
                    button: () => {
                        let e = Date.now();
                        return (0, a.jsxs)(i.ShinyButton, {
                            className: C.buttonWide,
                            innerClassName: C.innerButton,
                            color: i.Button.Colors.GREEN,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => {
                                u.default.track(E.AnalyticEvents.CHANGE_LOG_CTA_CLICKED, {
                                    change_log_id: T,
                                    cta_type: v,
                                    seconds_open: Math.round((Date.now() - e) / 1e3),
                                    target: T
                                }), R()
                            },
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                className: C.nitroIconSubHeader,
                                src: _
                            }), N]
                        })
                    },
                    modalDismissibleContent: "" !== m.dismissKey ? Number(m.dismissKey) : void 0
                }
            }
        },
        276645: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("970731"),
                i = n("689938"),
                r = n("874676");

            function o(e) {
                let {
                    guildId: t,
                    markAsDismissed: o
                } = e;
                return (0, a.jsx)(l.default, {
                    className: r.container,
                    asset: (0, a.jsx)("img", {
                        className: r.image,
                        src: n("297806"),
                        alt: ""
                    }),
                    header: i.default.Messages.PREMIUM_CUSTOM_NOTIFICATION_SOUND_COACHMARK_TITLE,
                    headerClassName: r.header,
                    content: i.default.Messages.PREMIUM_CUSTOM_NOTIFICATION_SOUND_COACHMARK_DESCRIPTION,
                    buttonCTA: i.default.Messages.CHECK_IT_OUT,
                    buttonProps: {
                        color: s.ButtonColors.WHITE,
                        innerClassName: r.primaryButton
                    },
                    onClick: () => {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("5863"), n.e("53497")]).then(n.bind(n, "751212"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guildId: t
                            })
                        })
                    },
                    secondaryButtonCTA: i.default.Messages.MAYBE_LATER,
                    secondaryButtonProps: {
                        look: s.ButtonLooks.LINK,
                        color: s.ButtonColors.WHITE
                    },
                    markAsDismissed: o
                })
            }
        },
        649765: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ReferralProgramCoachtipLinkButton: function() {
                    return f
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("481060"),
                o = n("206180"),
                u = n("119269"),
                d = n("689938"),
                c = n("241807");
            let f = e => {
                let {
                    children: t
                } = e, n = (0, a.jsxs)("div", {
                    className: c.coachTipContainer,
                    children: [(0, a.jsx)("div", {
                        className: c.iconContainer,
                        children: (0, a.jsx)(u.default, {
                            staticPercentage: 100,
                            iconClassName: c.icon,
                            showAnimations: !0,
                            progressCircleVariation: u.ProgressCircleVariation.NITRO_LOGO,
                            ellipseOpacity: 1,
                            customAnimationClassName: c.customCircleAnimation,
                            circleColor: "url(#purple-gradient)"
                        })
                    }), (0, a.jsxs)("div", {
                        className: c.coachtipContent,
                        children: [(0, a.jsx)(r.Heading, {
                            variant: "heading-sm/bold",
                            children: d.default.Messages.REFERRAL_PROGRAM_SHARE_NITRO_WITH_FRIENDS
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-xs/normal",
                            children: d.default.Messages.REFERRAL_PROGRAM_HOME_BADGE_SUBHEADER.format({
                                numReferrals: 3
                            })
                        })]
                    })]
                });
                return (0, a.jsx)(r.Tooltip, {
                    text: n,
                    position: "right",
                    "aria-label": d.default.Messages.REFERRAL_PROGRAM_SHARE_NITRO_WITH_FRIENDS,
                    tooltipClassName: c.marketingBadgeTooltip,
                    allowOverflow: !0,
                    tooltipContentClassName: c.tooltipContent,
                    children: e => (0, a.jsx)("div", {
                        ...e,
                        children: t
                    })
                })
            };
            t.default = e => {
                let {
                    isSelected: t,
                    onSelect: n
                } = e;
                return s.useEffect(() => {
                    t && n()
                }, [t, n]), (0, a.jsxs)("div", {
                    className: c.badgeContainer,
                    children: [(0, a.jsx)("div", {
                        className: c.newBadge,
                        children: d.default.Messages.NEW
                    }), (0, a.jsx)("span", {
                        className: i()(c.star, c.starLeft),
                        children: (0, a.jsx)(o.default, {
                            width: 8,
                            height: 8
                        })
                    }), (0, a.jsx)("span", {
                        className: i()(c.star, c.starRight),
                        children: (0, a.jsx)(o.default, {
                            width: 13,
                            height: 13
                        })
                    })]
                })
            }
        },
        206180: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("735250");

            function s(e) {
                return (0, a.jsxs)("svg", {
                    width: "9",
                    height: "8",
                    viewBox: "0 0 9 8",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                    children: [(0, a.jsx)("path", {
                        d: "M5.85876 4.97512L8.35635 3.85861C8.36852 3.84497 8.37524 3.8273 8.37524 3.80899C8.37524 3.79068 8.36852 3.77301 8.35635 3.75936L5.85876 2.64286C5.8522 2.64286 5.84591 2.64025 5.84127 2.6356C5.83663 2.63095 5.83403 2.62464 5.83403 2.61806L4.72123 0.112125C4.72123 0.0989647 4.71602 0.0863438 4.70675 0.0770378C4.69747 0.0677318 4.68489 0.0625 4.67178 0.0625C4.65866 0.0625 4.64608 0.0677318 4.63681 0.0770378C4.62753 0.0863438 4.62232 0.0989647 4.62232 0.112125L3.50953 2.61806H3.4848L0.987203 3.73456C0.974086 3.73456 0.961505 3.73978 0.95223 3.74909C0.942955 3.75839 0.937744 3.77102 0.937744 3.78418C0.937744 3.79734 0.942955 3.80996 0.95223 3.81926C0.961505 3.82857 0.974086 3.8338 0.987203 3.8338L3.4848 4.9503C3.49136 4.9503 3.49765 4.95292 3.50229 4.95757C3.50692 4.96223 3.50953 4.96854 3.50953 4.97512L4.62232 7.48104C4.63592 7.49325 4.65353 7.5 4.67178 7.5C4.69003 7.5 4.70763 7.49325 4.72123 7.48104L5.83403 4.97512C5.83403 4.97512 5.83403 4.97512 5.85876 4.97512Z",
                        fill: "#F2F3F5"
                    }), (0, a.jsx)("path", {
                        d: "M5.85876 4.97512L8.35635 3.85861C8.36852 3.84497 8.37524 3.8273 8.37524 3.80899C8.37524 3.79068 8.36852 3.77301 8.35635 3.75936L5.85876 2.64286C5.8522 2.64286 5.84591 2.64025 5.84127 2.6356C5.83663 2.63095 5.83403 2.62464 5.83403 2.61806L4.72123 0.112125C4.72123 0.0989647 4.71602 0.0863438 4.70675 0.0770378C4.69747 0.0677318 4.68489 0.0625 4.67178 0.0625C4.65866 0.0625 4.64608 0.0677318 4.63681 0.0770378C4.62753 0.0863438 4.62232 0.0989647 4.62232 0.112125L3.50953 2.61806H3.4848L0.987203 3.73456C0.974086 3.73456 0.961505 3.73978 0.95223 3.74909C0.942955 3.75839 0.937744 3.77102 0.937744 3.78418C0.937744 3.79734 0.942955 3.80996 0.95223 3.81926C0.961505 3.82857 0.974086 3.8338 0.987203 3.8338L3.4848 4.9503C3.49136 4.9503 3.49765 4.95292 3.50229 4.95757C3.50692 4.96223 3.50953 4.96854 3.50953 4.97512L4.62232 7.48104C4.63592 7.49325 4.65353 7.5 4.67178 7.5C4.69003 7.5 4.70763 7.49325 4.72123 7.48104L5.83403 4.97512C5.83403 4.97512 5.83403 4.97512 5.85876 4.97512Z",
                        fill: "url(#paint0_linear_1610_46387)"
                    }), (0, a.jsx)("defs", {
                        children: (0, a.jsxs)("linearGradient", {
                            id: "paint0_linear_1610_46387",
                            x1: "2.81401",
                            y1: "1.92998",
                            x2: "8.83584",
                            y2: "3.09885",
                            gradientUnits: "userSpaceOnUse",
                            children: [(0, a.jsx)("stop", {
                                stopColor: "#8547C6"
                            }), (0, a.jsx)("stop", {
                                offset: "0.52899",
                                stopColor: "#B845C1"
                            }), (0, a.jsx)("stop", {
                                offset: "1",
                                stopColor: "#AB5D8A"
                            })]
                        })
                    })]
                })
            }
            n("470079")
        },
        457396: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NitroTabButton: function() {
                    return w
                }
            });
            var a, s, l = n("735250");
            n("470079");
            var i = n("924826"),
                r = n("442837"),
                o = n("704215"),
                u = n("515753"),
                d = n("605236"),
                c = n("594174"),
                f = n("351402"),
                E = n("78839"),
                h = n("466111"),
                C = n("626135"),
                _ = n("74538"),
                m = n("502087"),
                S = n("647265"),
                p = n("650032"),
                I = n("104494"),
                g = n("639119"),
                T = n("655525"),
                A = n("314684"),
                N = n("52188"),
                v = n("248042"),
                R = n("924540"),
                O = n("649765"),
                L = n("565626"),
                P = n("734741"),
                y = n("701910"),
                M = n("487980"),
                D = n("474936"),
                x = n("981631"),
                b = n("921944"),
                U = n("689938"),
                j = n("985252");
            let G = "NitroTabButton";
            (a = s || (s = {}))[a.BOGO_PROMOTION = 0] = "BOGO_PROMOTION", a[a.TENURE_REWARD = 1] = "TENURE_REWARD", a[a.NEW_PERKS_BADGE = 2] = "NEW_PERKS_BADGE", a[a.DISCOUNT_OFFER = 3] = "DISCOUNT_OFFER", a[a.TRIAL_OFFER = 4] = "TRIAL_OFFER", a[a.LOCALIZED_PRICING = 5] = "LOCALIZED_PRICING", a[a.REFERRAL_PROGRAM = 6] = "REFERRAL_PROGRAM";
            let w = e => {
                let t, n, a, {
                        selected: s,
                        route: w,
                        locationState: k,
                        ...B
                    } = e,
                    F = (0, r.useStateFromStores)([c.default], () => c.default.getCurrentUser()),
                    H = (0, r.useStateFromStores)([E.default], () => E.default.getPremiumTypeSubscription()),
                    V = (0, _.hasPremiumSubscriptionToDisplay)(F, H),
                    Y = (0, i.useListItem)("nitro"),
                    W = (0, g.usePremiumTrialOffer)(),
                    K = (0, I.usePremiumDiscountOffer)(),
                    z = (0, r.useStateFromStores)([f.default], () => f.default.isLocalizedPromoEnabled) && null == W,
                    q = (0, v.useIsEligibleForBogoPromotion)(),
                    Q = (0, L.default)(),
                    Z = (0, P.useShouldShowWhatsNewBadge)(),
                    X = (0, A.useTenureRewardBadgeDescription)(),
                    J = (0, M.useIsEligibleSenderForReferralProgramTabBadge)(G),
                    $ = (0, r.useStateFromStores)([m.default], () => m.default.getCreatedAtOverride()),
                    ee = null != $ ? $ : null == F ? void 0 : F.createdAt,
                    et = s || null != W || null != K || q || Q || Z || null != X || V,
                    {
                        enabled: en
                    } = p.ReferralProgramRecipient.useExperiment({
                        location: G
                    }, {
                        autoTrackExposure: !1
                    }),
                    ea = en && (null == W ? void 0 : W.trial_id) === D.PREMIUM_TIER_2_REFERRAL_TRIAL_ID,
                    es = (0, S.usePremiumMarketingTabDisplayTimingExperiment)({
                        location: "NitroTabButton",
                        showTabForOtherReasons: et
                    });
                if (!(et = et || null != F && null != ee && Date.now() - ee.getTime() > es)) return null;
                Z ? (n = (0, l.jsx)(y.PerksDiscoverabilityMarketingMomentWhatsNewBadge, {}), a = 2) : q ? (n = (0, l.jsx)(T.default, {
                    isNitroTab: !0
                }), a = 0) : null != X ? (n = (0, l.jsx)(y.default, {
                    copy: X
                }), a = 1) : Q ? (n = (0, l.jsx)(y.default, {}), a = 2) : null != K ? (n = (0, l.jsx)(R.PremiumDiscountOfferTabBadge, {
                    userDiscount: K,
                    isTabSelected: s,
                    includesAmountOff: !1
                }), a = 3) : null == W || ea ? J ? (n = (0, l.jsx)(O.default, {
                    isSelected: s,
                    onSelect: () => (0, d.markDismissibleContentAsDismissed)(o.DismissibleContent.REFERRAL_PROGRAM_PREMIUM_TAB_BADGE, {
                        dismissAction: b.ContentDismissActionType.TAKE_ACTION
                    })
                }), a = 6) : z && (n = (0, l.jsx)(N.LocalizedPricingBadgeIcon, {
                    entryPoint: N.BadgeEntryPoint.PrivateMessages
                }), !s && (t = j.localizeBadge), a = 5) : (n = (0, l.jsx)(R.PremiumTrialOfferTabBadge, {
                    trialOffer: W,
                    isTabSelected: s
                }), a = 4);
                let el = (0, l.jsx)(u.LinkButton, {
                    selected: s,
                    route: w,
                    icon: h.default,
                    text: U.default.Messages.PREMIUM,
                    locationState: k,
                    onClick: () => {
                        C.default.track(x.AnalyticEvents.NITRO_TAB_VISITED, {
                            badge_decorator: a,
                            has_premium: V
                        })
                    },
                    ...B,
                    ...Y,
                    className: t,
                    children: n
                });
                return J ? (0, l.jsx)(O.ReferralProgramCoachtipLinkButton, {
                    children: el
                }) : el
            }
        },
        701910: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PerksDiscoverabilityMarketingMomentWhatsNewBadge: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("734741"),
                l = n("673591"),
                i = n("689938");
            let r = () => {
                let e = (0, s.useShouldShowServerProfileBadge)(),
                    t = i.default.Messages.NEW;
                return e && (t = i.default.Messages.PREMIUM_MARKETING_WHATS_NEW_SO_NEW_BADGE), (0, a.jsx)(l.default, {
                    copy: t
                })
            };
            t.default = e => {
                let {
                    copy: t
                } = e;
                return (0, a.jsx)(l.default, {
                    copy: null != t ? t : i.default.Messages.NEW
                })
            }
        },
        290347: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("481060"),
                u = n("607070"),
                d = n("605236"),
                c = n("524444"),
                f = n("529815"),
                E = n("250496"),
                h = n("153124"),
                C = n("810090"),
                _ = n("626135"),
                m = n("565216"),
                S = n("981631"),
                p = n("921944"),
                I = n("627583");
            let g = e => {
                    let {
                        tagText: t,
                        className: n
                    } = e;
                    return (0, a.jsx)(o.TextBadge, {
                        className: i()(I.tag, n),
                        text: t
                    })
                },
                T = e => {
                    let {
                        header: t,
                        subHeader: n,
                        imageSrc: s,
                        tagText: l,
                        wideStyle: r
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i()(I.featureCard, {
                            [I.wideStyle]: r
                        }),
                        children: [null != l ? (0, a.jsx)(g, {
                            tagText: l,
                            className: I.featureCardTag
                        }) : null, (0, a.jsx)("img", {
                            alt: "",
                            className: i()(I.featureCardImg, {
                                [I.wideStyle]: r
                            }),
                            src: s
                        }), (0, a.jsxs)("div", {
                            className: I.featureCardTextGroup,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-lg/extrabold",
                                className: I.featureCardTextHeader,
                                children: t
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: n
                            })]
                        })]
                    })
                };

            function A(e) {
                let {
                    className: t,
                    renderModalProps: n,
                    heroArt: l,
                    heroArtClassName: g,
                    modalDismissibleContent: A,
                    modalTopExtra: N,
                    header: v,
                    headerClassName: R,
                    subHeader: O,
                    subHeaderExtra: L,
                    featureCards: P,
                    changeLogId: y,
                    button: M
                } = e, {
                    onClose: D,
                    transitionState: x
                } = n, b = (0, h.useUID)(), U = P.length % 2 == 0, j = (0, r.useStateFromStores)([u.default], () => u.default.useReducedMotion), [G, w] = s.useState(Date.now()), [k, B] = s.useState(0), [F, H] = s.useState(0), [V, Y] = s.useState(!1), [W, K] = s.useState(!0), z = s.useRef(G), q = s.useRef(k), Q = s.useRef(F), Z = s.useRef(V), X = s.useRef(W);

                function J() {
                    let e = Date.now(),
                        t = e - z.current,
                        n = q.current,
                        a = Q.current;
                    return Z.current && (B(n += t), !X.current && H(a += t)), w(e), [n, a]
                }
                return s.useEffect(() => {
                    z.current = G, q.current = k, Q.current = F, Z.current = V, X.current = W
                }, [G, k, F, V, W]), s.useEffect(() => () => {
                    if ("video" === l.type || "embed" === l.type) {
                        let [e, t] = J();
                        _.default.track(S.AnalyticEvents.CHANGE_LOG_VIDEO_PLAYED, {
                            change_log_id: y,
                            seconds_played: Math.round(e / 1e3)
                        }), _.default.track(S.AnalyticEvents.CHANGE_LOG_VIDEO_UNMUTE, {
                            change_log_id: y,
                            seconds_unmuted: Math.round(t / 1e3)
                        })
                    }
                }, [y, l]), s.useEffect(() => {
                    null != A && (0, d.requestMarkDismissibleContentAsShown)(A);
                    let e = Date.now();
                    return _.default.track(S.AnalyticEvents.CHANGE_LOG_OPENED, {
                        change_log_id: y
                    }), () => {
                        _.default.track(S.AnalyticEvents.CHANGE_LOG_CLOSED, {
                            change_log_id: y,
                            seconds_open: Math.round((Date.now() - e) / 1e3)
                        }), null != A && (0, d.markDismissibleContentAsDismissed)(A, {
                            dismissAction: p.ContentDismissActionType.DISMISS
                        })
                    }
                }, [A, y]), (0, a.jsxs)(o.ModalRoot, {
                    className: i()(I.root, t),
                    transitionState: x,
                    "aria-labelledby": b,
                    children: [(0, a.jsx)(o.ModalCloseButton, {
                        className: I.closeButton,
                        onClick: D
                    }), (0, a.jsx)(m.default, {
                        className: I.splash
                    }), null == N ? void 0 : N(), (0, a.jsxs)(o.ModalContent, {
                        className: I.content,
                        children: [(0, a.jsx)(o.Heading, {
                            variant: "display-md",
                            className: i()(I.headerText, R),
                            children: v
                        }), "video" === l.type ? (0, a.jsx)(C.default, {
                            className: i()(I.video, g),
                            autoPlay: !j,
                            loop: !0,
                            muted: !0,
                            controls: !0,
                            controlsList: "nofullscreen nodownload noremoteplayback noplaybackrate",
                            src: l.src,
                            poster: l.poster,
                            onPlay: e => {
                                _.default.track(S.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED, {
                                    change_log_id: y
                                }), w(Date.now()), Y(!0), K(e.currentTarget.muted)
                            },
                            onEnded: e => {
                                J(), K(e.currentTarget.muted), Y(!1)
                            },
                            onVolumeChange: e => {
                                J(), K(e.currentTarget.muted)
                            },
                            onPause: e => {
                                J(), K(e.currentTarget.muted), Y(!1)
                            },
                            disablePictureInPicture: !0
                        }) : "embed" === l.type ? (0, a.jsx)(f.EmbedVideo, {
                            className: i()(I.video, g),
                            allowFullScreen: !1,
                            href: l.href,
                            thumbnail: l.thumbnail,
                            video: l.embed,
                            provider: E.SupportedEmbedIFrame.YOUTUBE,
                            maxWidth: l.embed.width,
                            maxHeight: l.embed.height,
                            renderVideoComponent: c.renderVideoComponent,
                            renderImageComponent: c.renderImageComponent,
                            renderLinkComponent: c.renderMaskedLinkComponent,
                            onPlay: () => {
                                _.default.track(S.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED, {
                                    change_log_id: y
                                })
                            }
                        }) : "image" === l.type ? (0, a.jsx)("img", {
                            alt: "",
                            className: i()(I.video, g),
                            src: l.src
                        }) : null, (0, a.jsx)(o.Heading, {
                            variant: "heading-lg/extrabold",
                            className: I.bodyText,
                            children: O
                        }), null == L ? void 0 : L(), (0, a.jsx)("div", {
                            className: i()(I.featureCardGroup, {
                                [I.wideStyle]: U
                            }),
                            children: P.map((e, t) => (0, a.jsx)(T, {
                                ...e,
                                wideStyle: U
                            }, "".concat(e.header, "_").concat(t)))
                        }), M()]
                    })]
                })
            }
        },
        118470: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("47120"), n("653041");
            var a = n("735250"),
                s = n("470079"),
                l = n("442837"),
                i = n("812206"),
                r = n("82950"),
                o = n("434404"),
                u = n("106976"),
                d = n("270144"),
                c = n("981631"),
                f = n("689938"),
                E = n("466389");

            function h(e) {
                let {
                    guild: t
                } = e, n = (0, d.useUnseenEndedApplicationSubscriptionEntitlements)(t), h = () => (0, u.dismissApplicationSubscriptionExpirationNotice)(t.id), C = s.useMemo(() => new Set(n.map(e => e.applicationId)), [n]), _ = (0, l.useStateFromStoresArray)([i.default], () => {
                    let e = [];
                    for (let t of C) {
                        let n = i.default.getApplication(t);
                        null != n && e.push(n)
                    }
                    return e
                }, [C]);
                if (0 === _.length) return null;
                let m = "";
                return m = 1 === _.length ? f.default.Messages.ONE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: _[0].name
                }) : 2 === _.length ? f.default.Messages.TWO_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: _[0].name,
                    b: _[1].name
                }) : 3 === _.length ? f.default.Messages.THREE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: _[0].name,
                    b: _[1].name,
                    c: _[2].name
                }) : f.default.Messages.MORE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT, (0, a.jsx)(r.default, {
                    guild: t,
                    onDismissed: h,
                    message: m,
                    type: c.ChannelNoticeTypes.APPLICATION_SUBSCRIPTION_EXPIRATION,
                    image: E,
                    onClick: () => {
                        h(), o.default.open(t.id, c.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 6,
                    imageMarginX: 46,
                    cta: f.default.Messages.APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CTA
                })
            }
        },
        489977: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("809206"),
                r = n("317770"),
                o = n("18438"),
                u = n("350327"),
                d = n("594174"),
                c = n("74538"),
                f = n("486324");
            let E = e => {
                    let {
                        imageSrc: t,
                        file: l,
                        guildId: r,
                        isTryItOutFlow: E
                    } = e;
                    if (E) {
                        (0, u.setTryItOutAvatar)(t);
                        return
                    }
                    let h = d.default.getCurrentUser(),
                        C = null != r ? o.setPendingAvatar : i.setPendingAvatar;
                    if (c.default.canUseAnimatedAvatar(h) || "image/gif" !== l.type) {
                        C(t);
                        return
                    }
                    if (null != h) return (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("4934"), n.e("49838")]).then(n.bind(n, "844594"));
                        return n => (0, a.jsx)(e, {
                            user: h,
                            imageSrc: t,
                            uploadType: f.UploadTypes.AVATAR,
                            onSubscribe: () => C(t),
                            ...n
                        })
                    })
                },
                h = e => {
                    let {
                        imageSrc: t,
                        guildId: l,
                        isTryItOutFlow: i
                    } = e;
                    if (i) {
                        (0, u.setTryItOutBanner)(t);
                        return
                    }
                    let r = d.default.getCurrentUser(),
                        E = null != l ? o.setPendingBanner : u.setPendingBanner;
                    if (c.default.canUsePremiumProfileCustomization(r)) {
                        E(t);
                        return
                    }
                    if (null != r) return (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("4934"), n.e("49838")]).then(n.bind(n, "844594"));
                        return n => (0, a.jsx)(e, {
                            user: r,
                            imageSrc: t,
                            uploadType: f.UploadTypes.BANNER,
                            onSubscribe: () => E(t),
                            ...n
                        })
                    })
                };
            class C extends r.default {
                _initialize() {
                    l.default.subscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                _terminate() {
                    l.default.unsubscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                maybeOpenProfilePreviewModal(e) {
                    return e.uploadType === f.UploadTypes.AVATAR ? E(e) : e.uploadType === f.UploadTypes.BANNER ? h(e) : void 0
                }
            }
            t.default = new C
        },
        39370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("704215"),
                l = n("765585"),
                i = n("300284"),
                r = n("526761"),
                o = n("689938"),
                u = n("128842");

            function d() {
                let e = (0, i.default)({
                    scrollPosition: r.ProfileCustomizationScrollPositions.TRY_IT_OUT
                });
                return (0, a.jsx)(l.default, {
                    isPremiumFeature: !0,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    artClassName: u.profileThemesArt,
                    onTryFeature: e,
                    header: o.default.Messages.PROFILE_THEMES_TOOLTIP_TITLE,
                    body: o.default.Messages.PROFILE_THEMES_TOOLTIP_DESCRIPTION_PREMIUM,
                    dismissibleContent: s.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2
                })
            }
        },
        400271: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l, i, r = n("442837"),
                o = n("433517"),
                u = n("570140"),
                d = n("650774"),
                c = n("430824"),
                f = n("496675"),
                E = n("135899"),
                h = n("981631");
            let C = "publicUpsellChannelNoticeGuilds",
                _ = new Set;
            class m extends(a = r.default.Store) {
                initialize() {
                    var e;
                    this.waitFor(f.default, c.default, d.default), this.syncWith([f.default, c.default, d.default], h.NOOP), _ = (e = new Set(o.Storage.get(C)), e)
                }
                isVisible(e) {
                    if (null == e) return;
                    let t = d.default.getMemberCount(e.id);
                    return !_.has(e.id) && null != t && t >= E.COMMUNITY_UPSELL_MINIMUM_GUILD_SIZE && f.default.can(h.Permissions.ADMINISTRATOR, e) && !e.hasFeature(h.GuildFeatures.COMMUNITY)
                }
            }
            i = "EnablePublicGuildUpsellNoticeStore", (l = "displayName") in(s = m) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, t.default = new m(u.default, {
                PUBLIC_UPSELL_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!_.has(t)) return _.add(t), o.Storage.set(C, _), !0
                }
            })
        },
        413307: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("949389"),
                i = n("82950"),
                r = n("434404"),
                o = n("981631"),
                u = n("689938"),
                d = n("438825");
            t.default = e => {
                let {
                    guild: t
                } = e, n = s.useCallback(() => {
                    (0, l.hideEnablePublicGuildUpsellNotice)(t.id)
                }, [t.id]);
                return (0, a.jsx)(i.default, {
                    guild: t,
                    onDismissed: n,
                    onClick: () => r.default.open(t.id, o.GuildSettingsSections.COMMUNITY),
                    message: u.default.Messages.NOTICE_ENABLE_PUBLIC_GUILD_UPSELL_MESSAGE,
                    trackingSource: o.ChannelNoticeCtaSources.ENABLE_PUBLIC_GUILD_UPSELL_NOTICE,
                    type: o.ChannelNoticeTypes.PUBLIC_UPSELL,
                    image: d,
                    cta: u.default.Messages.LEARN_MORE
                })
            }
        },
        282421: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                QuestHomeExperiment: function() {
                    return a
                }
            });
            let a = (0, n("818083").createExperiment)({
                kind: "user",
                id: "2024-05_quest_home",
                label: "Quest Home",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Quest Home in the Friends List",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        786089: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("918701"),
                r = n("566078"),
                o = n("78826"),
                u = n("981631"),
                d = n("114236");

            function c(e) {
                let {
                    quest: t
                } = e, n = (0, i.getRewardAsset)(t), s = r.SharedQuestFields.build(t.config).defaultReward.messages.name;
                return (0, a.jsxs)("div", {
                    className: d.container,
                    children: [(0, a.jsx)(o.QuestsAsset, {
                        id: "QuestRewardTile_rewardTileStatic",
                        children: e => (0, a.jsx)("img", {
                            ref: e,
                            alt: s,
                            className: l()(d.image),
                            src: n.url
                        })
                    }), (0, a.jsx)("div", {
                        className: d.overlay
                    }), (0, a.jsx)("div", {
                        className: d.contents,
                        children: (0, a.jsx)(o.QuestsAsset, {
                            id: "QuestPartnerBranding_gameLogotype",
                            children: e => (0, a.jsx)("img", {
                                ref: e,
                                className: d.partnerBranding,
                                alt: t.config.messages.gameTitle,
                                src: (0, i.getGameLogotypeAssetUrl)(t, u.ThemeTypes.DARK)
                            })
                        })
                    })]
                })
            }
        },
        397549: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("786089"),
                l = n("713996");

            function i(e) {
                let {
                    quests: t
                } = e;
                return (0, a.jsx)("div", {
                    className: l.container,
                    children: t.map(e => (0, a.jsx)(s.default, {
                        quest: e
                    }, e.id))
                })
            }
        },
        678935: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("113434"),
                i = n("397549"),
                r = n("710914"),
                o = n("77608"),
                u = n("214655");

            function d(e) {
                let {} = e, [t, n] = s.useState(l.QuestFilters.UNCLAIMED), {
                    quests: d
                } = (0, l.useFilteredQuests)(t);
                return (0, a.jsxs)("div", {
                    className: u.container,
                    children: [(0, a.jsx)(o.default, {
                        setSelectedFilter: e => {
                            n(e)
                        },
                        selectedFilter: t
                    }), t === l.QuestFilters.UNCLAIMED ? (0, a.jsx)(r.default, {
                        quests: d
                    }) : (0, a.jsx)(i.default, {
                        quests: d
                    })]
                })
            }
        },
        563442: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("257182"),
                o = n("481060"),
                u = n("63063"),
                d = n("981631"),
                c = n("689938"),
                f = n("432406");

            function E(e) {
                let {
                    children: t
                } = e, n = s.useCallback(() => {
                    window.open(u.default.getArticleURL(d.HelpdeskArticles.QUESTS_LEARN_MORE))
                }, []);
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("div", {
                        className: i()(f.image)
                    }), (0, a.jsx)("div", {
                        className: i()(f.leftToRightGradient)
                    }), (0, a.jsx)("div", {
                        className: i()(f.gradient)
                    }), (0, a.jsx)("div", {
                        className: f.contents,
                        children: (0, a.jsxs)("div", {
                            className: f.textContainer,
                            children: [(0, a.jsx)(o.Text, {
                                variant: "eyebrow",
                                color: "text-brand",
                                className: f.eyebrow,
                                children: c.default.Messages.QUESTS_HOME_HERO_EYEBROW
                            }), (0, a.jsx)(o.Heading, {
                                variant: "display-md",
                                color: "always-white",
                                className: f.header,
                                children: c.default.Messages.QUESTS_HOME_HERO_TITLE
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-md/medium",
                                color: "text-muted",
                                children: c.default.Messages.QUESTS_HOME_HERO_DESCRIPTION
                            }), (0, a.jsxs)(o.Button, {
                                size: "medium",
                                className: f.button,
                                onClick: n,
                                innerClassName: f.innerButton,
                                children: [(0, a.jsx)(o.Text, {
                                    variant: "text-md/semibold",
                                    color: "always-white",
                                    className: f.externalLinkText,
                                    children: c.default.Messages.LEARN_MORE
                                }), (0, a.jsx)(r.LinkExternalSmallIcon, {
                                    className: f.icon,
                                    color: "var(--white-500)"
                                })]
                            })]
                        })
                    }), t]
                })
            }
        },
        702428: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("844099"),
                l = n("100527"),
                i = n("360048"),
                r = n("709158"),
                o = n("689938"),
                u = n("857446");

            function d(e) {
                let {
                    isSelected: t,
                    onClick: n
                } = e;
                return (0, r.default)(l.default.QUEST_HOME_PAGE) ? (0, a.jsx)(i.default, {
                    avatar: (0, a.jsx)(s.QuestsIcon, {}),
                    name: o.default.Messages.QUESTS,
                    focusProps: {
                        offset: {
                            right: 4,
                            top: 1,
                            bottom: 1
                        }
                    },
                    onClick: n,
                    wrapContent: !0,
                    selected: t,
                    className: u.categoryItem,
                    selectedClassName: u.selectedCategoryItem,
                    innerClassName: u.itemInner
                }, "quest-home") : null
            }
        },
        121711: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("948789"),
                o = n("844099"),
                u = n("481060"),
                d = n("100527"),
                c = n("252618"),
                f = n("984370"),
                E = n("792125"),
                h = n("709158"),
                C = n("678935"),
                _ = n("563442"),
                m = n("981631"),
                S = n("689938"),
                p = n("233269");
            t.default = function(e) {
                let {} = e, t = (0, h.default)(d.default.QUEST_HOME_PAGE);
                s.useEffect(() => {
                    !t && (0, r.transitionTo)(m.Routes.FRIENDS)
                }, [t]), s.useEffect(() => {}, []), (0, c.usePageTitle)({
                    location: S.default.Messages.QUESTS
                });
                let n = (0, E.getThemeClass)("dark");
                return t ? (0, a.jsxs)("div", {
                    className: p.container,
                    children: [(0, a.jsxs)(f.default, {
                        toolbar: !0,
                        transparent: !0,
                        className: i()(n),
                        children: [(0, a.jsx)(f.default.Icon, {
                            icon: o.QuestsIcon,
                            "aria-hidden": !0
                        }), (0, a.jsx)(f.default.Title, {
                            children: S.default.Messages.QUESTS
                        }), (0, a.jsx)(f.default.Divider, {})]
                    }), (0, a.jsx)(u.ScrollerNone, {
                        className: p.scroller,
                        fade: !0,
                        children: (0, a.jsx)(_.default, {
                            children: (0, a.jsx)(C.default, {})
                        })
                    })]
                }) : null
            }
        },
        710914: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("497505"),
                l = n("772257"),
                i = n("46140"),
                r = n("710538");

            function o(e) {
                let {
                    quests: t
                } = e;
                return (0, a.jsx)("div", {
                    className: r.container,
                    children: t.map(e => (0, a.jsx)(l.default, {
                        quest: e,
                        location: i.QuestsExperimentLocations.QUEST_HOME_DESKTOP,
                        questContent: s.QuestContent.QUEST_HOME_DESKTOP
                    }, e.id))
                })
            }
        },
        77608: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("257182"),
                o = n("481060"),
                u = n("63063"),
                d = n("113434"),
                c = n("981631"),
                f = n("689938"),
                E = n("774473");

            function h(e) {
                let {
                    setSelectedFilter: t,
                    selectedFilter: n
                } = e, l = [{
                    id: d.QuestFilters.UNCLAIMED,
                    label: f.default.Messages.QUESTS_ALL
                }, {
                    id: d.QuestFilters.CLAIMED,
                    label: f.default.Messages.QUESTS_CLAIMED
                }], h = s.useCallback(() => {
                    window.open(u.default.getArticleURL(c.HelpdeskArticles.QUESTS_LEARN_MORE))
                }, []), C = s.useCallback(e => {
                    t(e)
                }, [t]);
                return (0, a.jsxs)(o.TabBar, {
                    className: i()(E.container),
                    selectedItem: n,
                    onItemSelect: e => C(e),
                    type: "top",
                    "aria-label": f.default.Messages.QUESTS,
                    orientation: "horizontal",
                    children: [l.map(e => {
                        let t = e.id === n;
                        return (0, a.jsx)(o.TabBar.Item, {
                            id: e.id,
                            className: i()(E.tab, {
                                [E.selected]: t
                            }),
                            "aria-label": e.label,
                            disableItemStyles: !0,
                            children: (0, a.jsx)(o.Text, {
                                variant: "text-md/semibold",
                                color: t ? "text-brand" : "text-primary",
                                children: e.label
                            })
                        }, e.id)
                    }), (0, a.jsxs)(o.Button, {
                        onClick: h,
                        className: E.button,
                        innerClassName: E.innerButton,
                        children: [(0, a.jsx)(o.Text, {
                            variant: "text-md/semibold",
                            color: "text-muted",
                            className: E.externalLinkText,
                            children: f.default.Messages.LEARN_MORE
                        }), (0, a.jsx)(r.LinkExternalSmallIcon, {
                            className: E.icon,
                            color: "var(--text-muted)"
                        })]
                    })]
                })
            }
        },
        439826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("186325"),
                o = n("780384"),
                u = n("481060"),
                d = n("410030"),
                c = n("808268"),
                f = n("810090"),
                E = n("113434"),
                h = n("497505"),
                C = n("918701"),
                _ = n("78826"),
                m = n("670638"),
                S = n("981631"),
                p = n("689938"),
                I = n("430783");

            function g(e) {
                let {
                    quest: t,
                    isHovering: n,
                    onCtxMenuClose: l,
                    onCtxMenuOpen: g,
                    onCtxMenuSelect: T
                } = e, A = (0, C.getQuestBarHeroAssetUrl)(t), N = (0, d.default)(), v = (0, o.isThemeDark)(N) ? S.ThemeTypes.DARK : S.ThemeTypes.LIGHT, R = v === S.ThemeTypes.DARK, O = s.useMemo(() => (0, C.isAssetAnimated)(t.config.assets.questBarHero), [t]), L = s.useContext(r.AccessibilityPreferencesContext).reducedMotion.enabled, P = (0, C.isTargetedForContent)(t, h.QuestContent.GIFT_INVENTORY_FOR_YOU), y = (0, E.useIsQuestExpired)(t), M = s.useRef(n), D = s.useRef(null);
                return s.useEffect(() => {
                    if (O && null != D.current) return M.current !== n && (n ? D.current.play() : (D.current.pause(), D.current.currentTime = 0)), M.current = n, () => {
                        var e;
                        null === (e = D.current) || void 0 === e || e.pause()
                    }
                }, [n, O]), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: I.container,
                        children: [(0, a.jsx)("div", {
                            className: I.heroAssetWrapper,
                            children: O ? (0, a.jsx)(_.QuestsAsset, {
                                id: "QuestBarV2ContentExpanded_heroAnimated",
                                children: e => (null != e.current && (D.current = e.current), (0, a.jsx)(f.default, {
                                    ref: e,
                                    autoPlay: !L && n,
                                    loop: !0,
                                    playsInline: !0,
                                    className: I.heroAsset,
                                    controls: !1,
                                    children: (0, a.jsx)("source", {
                                        src: A,
                                        type: (0, C.getVideoAssetMimeType)(A)
                                    })
                                }))
                            }) : (0, a.jsx)(_.QuestsAsset, {
                                id: "QuestTileBanner",
                                children: e => (0, a.jsx)("img", {
                                    ref: e,
                                    alt: "",
                                    className: I.heroAsset,
                                    src: A
                                })
                            })
                        }), (0, a.jsx)("div", {
                            className: i()(I.overlay, {
                                [I.darkThemeGradient]: R,
                                [I.lightThemeGradient]: !R
                            })
                        }), (0, a.jsx)("div", {
                            className: I.positionContentOverBackground,
                            children: (0, a.jsxs)("div", {
                                className: I.contents,
                                children: [(0, a.jsxs)("div", {
                                    className: I.topRow,
                                    children: [P && !y && (0, a.jsx)("div", {
                                        className: I.pill,
                                        children: (0, a.jsx)(u.Text, {
                                            variant: "eyebrow",
                                            color: "always-white",
                                            className: I.eyebrowText,
                                            children: p.default.Messages.RECOMMENDED
                                        })
                                    }), (0, a.jsx)(m.QuestsEntryContextMenuPopout, {
                                        onOpen: g,
                                        onClose: l,
                                        onSelect: T,
                                        questContent: h.QuestContent.QUEST_HOME_DESKTOP,
                                        quest: t,
                                        hideLearnMore: !0,
                                        shouldShowDisclosure: !0,
                                        showShareLink: !0,
                                        children: e => (0, a.jsx)(u.Clickable, {
                                            ...e,
                                            className: I.submenuWrapper,
                                            "aria-label": p.default.Messages.ACTIONS,
                                            children: (0, a.jsx)(c.default, {
                                                className: i()(I.submenuIcon)
                                            })
                                        })
                                    })]
                                }), (0, a.jsx)(_.QuestsAsset, {
                                    id: "QuestPartnerBranding_gameLogotype",
                                    children: e => (0, a.jsx)("img", {
                                        ref: e,
                                        className: I.partnerBranding,
                                        alt: t.config.messages.gameTitle,
                                        src: (0, C.getGameLogotypeAssetUrl)(t, v)
                                    })
                                }), (0, a.jsx)("div", {
                                    className: I.bottomRow,
                                    children: (0, a.jsx)(u.Text, {
                                        variant: "text-sm/medium",
                                        color: "text-muted",
                                        children: p.default.Messages.QUESTS_PROMOTED_BY_BRAND.format({
                                            brandName: t.config.messages.gamePublisher
                                        })
                                    })
                                })]
                            })
                        })]
                    }), (0, a.jsx)("div", {
                        className: I.spacer
                    })]
                })
            }
        },
        69439: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("617136"),
                r = n("272008"),
                o = n("497505"),
                u = n("667105"),
                d = n("689938"),
                c = n("626445");

            function f(e) {
                var t, n, f, E;
                let {
                    quest: h
                } = e, C = (null === (t = h.userStatus) || void 0 === t ? void 0 : t.enrolledAt) != null, _ = (null === (n = h.userStatus) || void 0 === n ? void 0 : n.completedAt) != null && (null === (f = h.userStatus) || void 0 === f ? void 0 : f.claimedAt) == null, m = (null === (E = h.userStatus) || void 0 === E ? void 0 : E.claimedAt) != null, S = (0, u.useHandleClaimQuestsReward)({
                    quest: h,
                    location: o.QuestContent.QUEST_BAR
                }), p = s.useCallback(() => {
                    (0, r.enrollInQuest)(h.id, {
                        questContent: o.QuestContent.QUEST_HOME_DESKTOP,
                        questContentCTA: i.QuestContentCTA.ACCEPT_QUEST
                    })
                }, [h]);
                return _ ? (0, a.jsx)("div", {
                    className: c.container,
                    children: (0, a.jsx)(l.Button, {
                        color: l.ButtonColors.BRAND,
                        onClick: S,
                        className: c.button,
                        children: d.default.Messages.QUESTS_CLAIM_REWARD
                    })
                }) : C && !m ? (0, a.jsx)("div", {
                    className: c.container,
                    children: (0, a.jsx)(l.Button, {
                        color: l.ButtonColors.PRIMARY,
                        disabled: !0,
                        className: c.button,
                        children: d.default.Messages.QUEST_ACCEPTED
                    })
                }) : (0, a.jsx)("div", {
                    className: c.container,
                    children: (0, a.jsx)(l.Button, {
                        color: l.ButtonColors.BRAND,
                        onClick: p,
                        className: c.button,
                        children: d.default.Messages.QUESTS_ACCEPT
                    })
                })
            }
        },
        43779: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("735250"),
                s = n("470079"),
                l = n("481060"),
                i = n("113434"),
                r = n("497505"),
                o = n("918701"),
                u = n("566078"),
                d = n("472144"),
                c = n("644646"),
                f = n("69439"),
                E = n("689938"),
                h = n("641935");

            function C(e) {
                let {
                    quest: t,
                    location: n,
                    questContent: C
                } = e, _ = u.SharedQuestFields.build(t.config).defaultReward.messages.name, m = s.useRef(null), S = (0, i.useQuestTaskDetails)({
                    quest: t,
                    location: n
                }), p = S.percentComplete > 0, I = (0, o.getQuestsInstructionsToWinReward)({
                    quest: t,
                    location: n,
                    useV2Variants: !0,
                    taskDetails: S
                }), g = !(0, o.isQuestExpired)(t), T = s.useCallback(() => (0, a.jsx)(l.Text, {
                    variant: "text-md/semibold",
                    color: "text-brand",
                    tag: "span",
                    className: h.header,
                    children: _
                }), [_]);
                return (0, a.jsxs)("div", {
                    className: h.container,
                    children: [(0, a.jsxs)("div", {
                        className: h.rewardDescriptionContainer,
                        children: [p ? (0, a.jsx)("div", {
                            className: h.progressWrapper,
                            children: (0, a.jsx)(d.default, {
                                size: 76,
                                percentComplete: S.percentComplete,
                                progressBarRef: m,
                                children: (0, a.jsx)("div", {
                                    className: h.circularRewardTileWrapper,
                                    children: (0, a.jsx)(c.default, {
                                        quest: t,
                                        questContent: C,
                                        className: h.circularQuestRewardTileAsset
                                    })
                                })
                            })
                        }) : (0, a.jsx)(c.default, {
                            quest: t,
                            questContent: r.QuestContent.QUEST_HOME_DESKTOP,
                            className: h.questRewardTileAsset
                        }), (0, a.jsxs)("div", {
                            className: h.textContainer,
                            children: [(0, a.jsx)("span", {
                                className: h.headerSpan,
                                children: (0, a.jsx)(l.Text, {
                                    variant: "text-md/semibold",
                                    color: "header-primary",
                                    className: h.header,
                                    children: E.default.Messages.QUESTS_CLAIM_THE_REWARD_HOOK.format({
                                        rewardHook: T
                                    })
                                })
                            }), null != I ? (0, a.jsx)(l.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                className: h.description,
                                children: I
                            }) : null]
                        })]
                    }), g ? (0, a.jsx)(f.default, {
                        quest: t
                    }) : null]
                })
            }
        },
        772257: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("497505"),
                o = n("918701"),
                u = n("439826"),
                d = n("43779"),
                c = n("46140"),
                f = n("73060");

            function E(e) {
                var t;
                let {
                    quest: n
                } = e, l = (0, o.isQuestExpired)(n), [E, h] = s.useState(!1);
                return (null === (t = n.userStatus) || void 0 === t ? void 0 : t.claimedAt) != null ? null : (0, a.jsxs)("div", {
                    className: i()(f.container, {
                        [f.expired]: l,
                        [f.live]: !l
                    }),
                    onMouseEnter: () => h(!0),
                    onMouseLeave: () => h(!1),
                    children: [(0, a.jsx)(u.default, {
                        quest: n,
                        isHovering: E
                    }), (0, a.jsx)(d.default, {
                        quest: n,
                        questContent: r.QuestContent.QUEST_HOME_DESKTOP,
                        location: c.QuestsExperimentLocations.QUEST_HOME_DESKTOP
                    })]
                })
            }
        },
        23404: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("442837"),
                o = n("663002"),
                u = n("481060"),
                d = n("230711"),
                c = n("210887"),
                f = n("808268"),
                E = n("617136"),
                h = n("272008"),
                C = n("113434"),
                _ = n("569984"),
                m = n("497505"),
                S = n("918701"),
                p = n("566078"),
                I = n("602667"),
                g = n("611855"),
                T = n("670638"),
                A = n("667105"),
                N = n("860151"),
                v = n("46140"),
                R = n("981631"),
                O = n("689938"),
                L = n("758895");

            function P(e) {
                var t;
                let {
                    quest: n
                } = e, s = (0, C.useQuestFormattedDate)(n.config.expiresAt), l = (0, C.useQuestFormattedDate)(p.SharedQuestFields.build(n.config).rewardsExpireAt), i = (0, r.useStateFromStores)([c.default], () => c.default.getState().theme), d = (0, o.isThemeDark)(i) ? R.ThemeTypes.DARK : R.ThemeTypes.LIGHT, f = (null === (t = n.userStatus) || void 0 === t ? void 0 : t.completedAt) != null;
                return (0, a.jsxs)("div", {
                    className: L.heading,
                    children: [(0, a.jsx)("img", {
                        className: L.headingGameTile,
                        alt: "",
                        src: (0, S.getGameTileAssetUrl)(n, d)
                    }), (0, a.jsxs)("div", {
                        className: L.headingCopy,
                        children: [(0, a.jsx)(u.Heading, {
                            variant: "heading-md/semibold",
                            color: "header-primary",
                            children: f ? O.default.Messages.QUESTS_COMPLETION_PROGRESS_COMPLETE_ACTIVITY_PANEL : O.default.Messages.QUESTS_TITLE.format({
                                questName: n.config.messages.questName
                            })
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-xs/normal",
                            color: "header-secondary",
                            children: f ? O.default.Messages.QUESTS_CLAIM_BY_DATE.format({
                                expirationDate: l
                            }) : O.default.Messages.QUESTS_AVAILABLE_UNTIL_DATE.format({
                                expirationDate: s
                            })
                        })]
                    })]
                })
            }
            t.default = function(e) {
                var t, n, l;
                let {
                    quest: o
                } = e, c = (0, r.useStateFromStores)([_.default], () => _.default.isEnrolling(o.id), [o]), [p, y] = s.useState(!1), M = s.useCallback(() => y(!0), []), D = s.useCallback(() => y(!1), []), x = s.useCallback(e => {
                    e.stopPropagation()
                }, []), b = s.useCallback(() => {
                    (0, h.enrollInQuest)(o.id, {
                        questContent: m.QuestContent.ACTIVITY_PANEL,
                        questContentCTA: E.QuestContentCTA.ACCEPT_QUEST
                    })
                }, [o]), U = s.useCallback(() => {
                    null != o && ((0, E.trackQuestContentClicked)({
                        questId: o.id,
                        questContent: m.QuestContent.ACTIVITY_PANEL,
                        questContentCTA: E.QuestContentCTA.TRACK_PROGRESS
                    }), d.default.open(R.UserSettingsSections.INVENTORY))
                }, [o]), j = s.useCallback(() => {
                    (0, E.trackQuestContentClicked)({
                        questId: o.id,
                        questContent: m.QuestContent.ACTIVITY_PANEL,
                        questContentCTA: E.QuestContentCTA.LEARN_MORE
                    }), d.default.open(R.UserSettingsSections.INVENTORY)
                }, [o]), G = (0, A.useHandleClaimQuestsReward)({
                    quest: o,
                    location: m.QuestContent.ACTIVITY_PANEL
                }), w = (0, C.useIsQuestExpired)(o), k = (null === (t = o.userStatus) || void 0 === t ? void 0 : t.enrolledAt) != null, B = (null === (n = o.userStatus) || void 0 === n ? void 0 : n.completedAt) != null, F = (null === (l = o.userStatus) || void 0 === l ? void 0 : l.claimedAt) != null;
                return (null == o ? void 0 : o.userStatus) == null || (0, S.isDismissed)(o.userStatus, m.QuestContent.ACTIVITY_PANEL) || w || F || !(0, S.shouldShowSocialEntrypoints)(o) ? null : (0, a.jsx)(I.QuestContentImpressionTrackerWeb, {
                    questOrQuests: o,
                    questContent: m.QuestContent.ACTIVITY_PANEL,
                    children: e => {
                        var t;
                        return (0, a.jsxs)("div", {
                            ref: t => {
                                e.current = t
                            },
                            className: i()(L.wrapper, {
                                [L.wrapperQuestAccepted]: k
                            }),
                            onClick: x,
                            onKeyPress: x,
                            onFocus: M,
                            onMouseEnter: M,
                            onBlur: D,
                            onMouseLeave: D,
                            children: [(0, a.jsxs)("div", {
                                className: L.utils,
                                children: [k ? (0, a.jsx)(P, {
                                    quest: o
                                }) : (0, a.jsx)(g.default, {
                                    textOpacity: .5
                                }), (0, a.jsx)(T.QuestsEntryContextMenuPopout, {
                                    quest: o,
                                    questContent: m.QuestContent.ACTIVITY_PANEL,
                                    shouldShowDisclosure: (null === (t = o.userStatus) || void 0 === t ? void 0 : t.enrolledAt) == null,
                                    showShareLink: !0,
                                    children: e => (0, a.jsx)(u.Clickable, {
                                        ...e,
                                        "aria-label": O.default.Messages.ACTIONS,
                                        children: (0, a.jsx)(f.default, {
                                            className: L.submenuIcon
                                        })
                                    })
                                })]
                            }), !k && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)(P, {
                                    quest: o
                                }), (0, a.jsx)(u.Text, {
                                    className: L.instructions,
                                    variant: "text-sm/normal",
                                    color: "text-normal",
                                    children: (0, S.getQuestsInstructionsToWinReward)({
                                        quest: o,
                                        location: v.QuestsExperimentLocations.ACTIVITY_PANEL
                                    })
                                })]
                            }), k && !B && (0, a.jsx)(N.default, {
                                autoplay: p,
                                className: L.rewardTileWithInstructions,
                                quest: o,
                                questContent: m.QuestContent.ACTIVITY_PANEL,
                                questExperimentLocation: v.QuestsExperimentLocations.ACTIVITY_PANEL
                            }), (0, a.jsxs)("div", {
                                className: L.ctas,
                                children: [!k && (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)(u.Button, {
                                        className: L.cta,
                                        color: u.Button.Colors.PRIMARY,
                                        fullWidth: !0,
                                        size: u.Button.Sizes.SMALL,
                                        onClick: j,
                                        children: O.default.Messages.QUESTS_LEARN_MORE_V2
                                    }), (0, a.jsx)(u.Button, {
                                        className: L.cta,
                                        color: u.Button.Colors.BRAND,
                                        fullWidth: !0,
                                        onClick: b,
                                        size: u.Button.Sizes.SMALL,
                                        submitting: c,
                                        children: O.default.Messages.QUESTS_ACCEPT_QUEST
                                    })]
                                }), k && !B && (0, a.jsx)(u.Button, {
                                    className: L.cta,
                                    color: u.Button.Colors.BRAND,
                                    fullWidth: !0,
                                    onClick: U,
                                    size: u.Button.Sizes.SMALL,
                                    children: O.default.Messages.QUESTS_CHECK_PROGRESS
                                }), B && (0, a.jsx)(u.Button, {
                                    className: L.cta,
                                    color: u.Button.Colors.BRAND,
                                    fullWidth: !0,
                                    onClick: G,
                                    size: u.Button.Sizes.SMALL,
                                    children: O.default.Messages.QUESTS_CLAIM_REWARD
                                })]
                            })]
                        })
                    }
                })
            }
        },
        709158: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("282421");

            function s(e) {
                let {
                    enabled: t
                } = a.QuestHomeExperiment.useExperiment({
                    location: e
                }, {
                    autoTrackExposure: !1
                });
                return t
            }
        },
        914946: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                computeActivityFlags: function() {
                    return W
                },
                fetchApplicationsRPC: function() {
                    return z
                },
                getDeprecatedVoiceSettingsWithShortcut: function() {
                    return Z
                },
                getRemoteIconURL: function() {
                    return j
                },
                getVoiceConnectionState: function() {
                    return Y
                },
                getVoiceSettingsWithShortcut: function() {
                    return X
                },
                hasMessageReadPermission: function() {
                    return V
                },
                isMatchingOrigin: function() {
                    return H
                },
                processSocketThrottlers: function() {
                    return q
                },
                transformChannel: function() {
                    return w
                },
                transformInternalTextMessage: function() {
                    return k
                },
                transformRelationship: function() {
                    return F
                },
                transformVoiceState: function() {
                    return B
                },
                validateActivityInvite: function() {
                    return K
                },
                validateApplication: function() {
                    return $
                },
                validateOriginAndUpdateSocket: function() {
                    return Q
                },
                validatePostMessageTransport: function() {
                    return J
                }
            }), n("47120"), n("653041"), n("411104"), n("757143"), n("392711");
            var a, s = n("729594"),
                l = n("243814"),
                i = n("544891"),
                r = n("63023"),
                o = n("433517"),
                u = n("904245"),
                d = n("155268"),
                c = n("454585"),
                f = n("739566"),
                E = n("695346"),
                h = n("131704"),
                C = n("598077"),
                _ = n("592125"),
                m = n("430824"),
                S = n("131951"),
                p = n("375954"),
                I = n("158776"),
                g = n("594174"),
                T = n("979651"),
                A = n("70956"),
                N = n("5192"),
                v = n("226951"),
                R = n("996106"),
                O = n("863141"),
                L = n("186901"),
                P = n("981631");
            let y = null !== (a = s.parse(window.GLOBAL_ENV.API_ENDPOINT, !1, !0).host) && void 0 !== a ? a : "localhost",
                M = function() {
                    let e = y.split(":")[0];
                    if (!e.includes(".")) return e;
                    let t = e.split("."),
                        n = t[t.length - 1];
                    return /^\d+$/.test(n) ? e : t.slice(-2).join(".")
                }(),
                D = new RegExp("^".concat(v.default.escape("https://"), "(?:[a-z]+\\.)?(").concat(v.default.escape(M), "|discordapp.com|discord.com)$")),
                x = 1 * A.default.Millis.MINUTE,
                b = {};

            function U(e) {
                return "customEmoji" === e.type && (e.type = "emoji"), "emoji" === e.type && e.src && (e.src = j(e.src)), Array.isArray(e.content) && (e.content = e.content.map(U)), e
            }

            function j(e) {
                return /^http/.test(e) ? e : "".concat(location.protocol, "//").concat(location.host).concat("/" === e.charAt(0) ? "" : "/").concat(e)
            }

            function G(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                return t.indexOf(e) > -1
            }

            function w(e, t) {
                let n = [],
                    a = e.getGuildId();
                return ![P.ChannelTypes.GUILD_CATEGORY, ...(0, h.GUILD_VOCAL_CHANNEL_TYPES)].includes(e.type) && n.push(new Promise(t => {
                    p.default.whenReady(e.id, () => t()), u.default.fetchMessages({
                        channelId: e.id,
                        limit: P.MAX_MESSAGES_PER_CHANNEL
                    })
                })), Promise.all(n).then(() => {
                    var n;
                    let s = (!e.isNSFW() || (null === (n = g.default.getCurrentUser()) || void 0 === n ? void 0 : n.nsfwAllowed) === !0) && t ? p.default.getMessages(e.id).toArray().map(k) : [],
                        l = Object.values(T.default.getVoiceStatesForChannel(e.id)).map(t => B(a, e.id, t));
                    return {
                        id: e.id,
                        name: e.name,
                        type: e.type,
                        topic: e.topic,
                        bitrate: e.bitrate,
                        user_limit: e.userLimit,
                        guild_id: a,
                        position: e.position,
                        messages: s,
                        voice_states: l
                    }
                })
            }

            function k(e) {
                let t = c.default.parseToAST(e.content, !0, {
                        channelId: e.channel_id
                    }).map(U),
                    n = _.default.getChannel(e.channel_id),
                    a = null != e.author ? (0, f.getUserAuthor)(new C.default(e.author), n) : void 0;
                return {
                    id: e.id,
                    blocked: e.blocked,
                    bot: e.bot,
                    content: e.content,
                    content_parsed: t.length ? t : void 0,
                    nick: null == a ? void 0 : a.nick,
                    author_color: null == a ? void 0 : a.colorString,
                    edited_timestamp: e.edited_timestamp || e.editedTimestamp,
                    timestamp: e.timestamp,
                    tts: e.tts,
                    mentions: e.mentions,
                    mention_everyone: e.mention_everyone || e.mentionEveryone,
                    mention_roles: e.mention_roles || e.mentionRoles,
                    embeds: e.embeds,
                    attachments: e.attachments,
                    author: e.author,
                    pinned: e.pinned,
                    type: e.type
                }
            }

            function B(e, t, n) {
                let {
                    mute: a,
                    deaf: s,
                    selfMute: l,
                    selfDeaf: i,
                    suppress: r,
                    userId: o
                } = n, u = g.default.getUser(o);
                if (null == u) throw Error("Invalid user id: ".concat(o));
                return {
                    nick: N.default.getName(e, t, u),
                    mute: S.default.isLocalMute(u.id),
                    volume: S.default.getLocalVolume(u.id),
                    pan: S.default.getLocalPan(u.id),
                    voice_state: {
                        mute: a,
                        deaf: s,
                        self_mute: l,
                        self_deaf: i,
                        suppress: r
                    },
                    user: (0, O.default)(u)
                }
            }

            function F(e, t, n) {
                let a = g.default.getUser(t);
                return {
                    type: e,
                    user: null != a ? (0, O.default)(a) : null,
                    presence: {
                        status: I.default.getStatus(t),
                        activity: null != n ? I.default.getApplicationActivity(t, n) : I.default.getPrimaryActivity(t)
                    }
                }
            }

            function H(e) {
                let t;
                if (null == e) return !1;
                let n = window.location.origin;
                if (e === n) return !0;
                try {
                    t = s.parse(e).hostname
                } catch (e) {
                    return !1
                }
                return window.location.hostname === t && "localhost" === t || null == e.match("staging") && (!!(D.test(e) && D.test(n)) || !1)
            }

            function V(e, t, n) {
                let a = m.default.getGuild(e.getGuildId());
                return (null != a ? a.getApplicationId() : e.getApplicationId()) === t || n.indexOf(l.OAuth2Scopes.MESSAGES_READ) > -1
            }

            function Y(e) {
                switch (e) {
                    case P.RTCConnectionStates.RTC_CONNECTED:
                    case P.RTCConnectionStates.RTC_CONNECTING:
                    case P.RTCConnectionStates.RTC_DISCONNECTED:
                        return e.replace(/^RTC_/, "VOICE_");
                    default:
                        return e
                }
            }

            function W(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        instance: n,
                        secrets: a,
                        party: s
                    } = e,
                    l = 0;
                return (n && (l |= P.ActivityFlags.INSTANCE), (null == a ? void 0 : a.join) != null && (l |= P.ActivityFlags.JOIN), t) ? (l |= P.ActivityFlags.EMBEDDED, l |= P.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL) : (((null == s ? void 0 : s.privacy) === P.ActivityPartyPrivacy.PUBLIC || o.Storage.get("ACTIVITIES_FORCE_PUBLIC")) && (E.AllowActivityPartyPrivacyFriends.getSetting() && (l |= P.ActivityFlags.PARTY_PRIVACY_FRIENDS), E.AllowActivityPartyPrivacyVoiceChannel.getSetting() && (l |= P.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL)), l)
            }

            function K(e, t, n) {
                if (e === P.ActivityActionTypes.JOIN) return null != t && null != t.id && null != n.join;
                return !1
            }

            function z(e, t, n) {
                return i.HTTP.get({
                    url: P.Endpoints.APPLICATION_RPC(t),
                    oldFormErrors: !0,
                    retries: 3
                }).then(a => {
                    let {
                        body: {
                            rpc_origins: s,
                            id: l,
                            name: i,
                            icon: r,
                            cover_image: o,
                            flags: u
                        }
                    } = a;
                    if ("string" == typeof n) {
                        if (e.transport === L.TransportTypes.POST_MESSAGE) {
                            let e = (0, d.default)(t);
                            if (null == e || !G(n, [e])) throw new R.default({
                                closeCode: P.RPCCloseCodes.INVALID_ORIGIN
                            }, "Invalid Origin")
                        } else if (!G(n, s)) throw new R.default({
                            closeCode: P.RPCCloseCodes.INVALID_ORIGIN
                        }, "Invalid Origin")
                    }
                    e.application = {
                        id: l,
                        name: i,
                        icon: r,
                        coverImage: o,
                        flags: u
                    }
                }, () => {
                    throw new R.default({
                        closeCode: P.RPCCloseCodes.INVALID_CLIENTID
                    }, "Invalid Client ID")
                })
            }
            async function q(e, t) {
                let n = b[e];
                null == n && (n = new r.default(t ? 2 : 60, x), b[e] = n), await n.process()
            }

            function Q(e, t) {
                null == t && (e.authorization.scopes = [L.RPC_LOCAL_SCOPE])
            }

            function Z(e) {
                let t = S.default.getSettings(),
                    n = e => Object.values(e).sort((e, t) => e.index - t.index).map(e => ({
                        id: e.id,
                        name: e.name
                    })),
                    a = e(t);
                return {
                    input: {
                        available_devices: n(S.default.getInputDevices()),
                        device_id: t.inputDeviceId,
                        volume: t.inputVolume
                    },
                    output: {
                        available_devices: n(S.default.getOutputDevices()),
                        device_id: t.outputDeviceId,
                        volume: t.outputVolume
                    },
                    mode: {
                        type: t.mode,
                        auto_threshold: t.modeOptions.autoThreshold,
                        threshold: t.modeOptions.threshold,
                        shortcut: a,
                        delay: t.modeOptions.delay
                    },
                    automatic_gain_control: t.automaticGainControl,
                    echo_cancellation: t.echoCancellation,
                    noise_suppression: t.noiseSuppression,
                    qos: t.qos,
                    silence_warning: t.silenceWarning,
                    deaf: t.deaf,
                    mute: t.mute
                }
            }

            function X(e, t) {
                let n = S.default.getSettings(e),
                    a = t(n);
                return {
                    input_mode: {
                        type: n.mode,
                        shortcut: a
                    },
                    local_mutes: Object.keys(n.localMutes),
                    local_volumes: n.localVolumes,
                    self_mute: n.mute,
                    self_deaf: n.deaf
                }
            }

            function J(e) {
                if (e !== L.TransportTypes.POST_MESSAGE) throw new R.default({
                    errorCode: P.RPCErrors.INVALID_COMMAND
                }, 'command not available from "'.concat(e, " transport"))
            }

            function $(e) {
                if (null == e.id) throw new R.default({
                    errorCode: P.RPCErrors.INVALID_COMMAND
                }, "Invalid application");
                return e.id
            }
        },
        238679: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                activityInstanceConnectedParticipants: function() {
                    return f
                },
                activityInstanceConnectedParticipantsScope: function() {
                    return E
                },
                activityInstanceConnectedParticipantsUpdateEvent: function() {
                    return h
                },
                subscribeToActivityInstanceConnectedParticipants: function() {
                    return C
                }
            });
            var a = n("392711"),
                s = n.n(a),
                l = n("570140"),
                i = n("317381"),
                r = n("594174"),
                o = n("823379"),
                u = n("5192"),
                d = n("863141"),
                c = n("186901");

            function f() {
                let e = i.default.getCurrentEmbeddedActivity();
                if (null == e) return {
                    participants: []
                };
                let {
                    guildId: t,
                    channelId: n
                } = e;
                return {
                    participants: Array.from(e.userIds, e => {
                        let a = r.default.getUser(e);
                        if (null == a) return;
                        let s = (0, u.getNickname)(t, n, a);
                        return {
                            ...(0, d.default)(a),
                            nickname: null != s ? s : void 0
                        }
                    }).filter(o.isNotNullish)
                }
            }
            let E = {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE]
                },
                h = {
                    scope: E,
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = f();
                        return !s().isEqual(a, t) && n(a), a
                    }
                };

            function C(e) {
                let t = "EMBEDDED_ACTIVITY_UPDATE",
                    n = () => {
                        e(f())
                    };
                return l.default.subscribe(t, n), () => l.default.unsubscribe(t, n)
            }
        },
        452426: function(e, t, n) {
            "use strict";

            function a(e) {
                return e.object().unknown(!0)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        561205: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("317381"),
                s = n("592125");

            function l() {
                let e = a.default.getConnectedActivityChannelId();
                return s.default.getChannel(e)
            }
        },
        901077: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("981631");
            let s = "<removed>";

            function l(e) {
                var t, n;
                let l = {
                    ...e
                };
                if ("object" == typeof(t = l).args && "string" == typeof t.cmd) l = function(e) {
                    switch (e.cmd) {
                        case a.RPCCommands.AUTHENTICATE:
                        case a.RPCCommands.GET_PROVIDER_ACCESS_TOKEN:
                            return {
                                ...e, args: {
                                    ...e.args,
                                    access_token: s
                                }
                            };
                        default:
                            return {
                                ...e
                            }
                    }
                }(l);
                if ("object" == typeof(n = l).data && "string" == typeof n.cmd) l = function(e) {
                    switch (e.cmd) {
                        case a.RPCCommands.AUTHENTICATE:
                        case a.RPCCommands.GET_PROVIDER_ACCESS_TOKEN:
                            return {
                                ...e, data: {
                                    ...e.data,
                                    access_token: s
                                }
                            };
                        default:
                            return {
                                ...e
                            }
                    }
                }(l);
                return l
            }
        },
        295424: function(e, t, n) {
            "use strict";

            function a(e) {
                return {
                    name: e.name,
                    id: e.id,
                    icon: e.icon,
                    cover_image: e.coverImage,
                    type: e.type
                }
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        408841: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                deprecatedCommand: function() {
                    return l
                }
            });
            var a = n("996106"),
                s = n("981631");
            let l = {
                handler(e) {
                    throw new a.default({
                        errorCode: s.RPCErrors.INVALID_COMMAND
                    }, "Deprecated command: ".concat(e.cmd))
                }
            }
        },
        600027: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateOpenInviteDialog: function() {
                    return u
                }
            });
            var a = n("159300"),
                s = n("430824"),
                l = n("496675"),
                i = n("996106"),
                r = n("561205"),
                o = n("981631");

            function u() {
                let e = (0, r.default)();
                if (null == e) throw new i.default({
                    errorCode: o.RPCErrors.INVALID_CHANNEL
                }, "Invalid channel");
                let t = s.default.getGuild(e.getGuildId());
                if (null == t) throw new i.default({
                    errorCode: o.RPCErrors.INVALID_CHANNEL
                }, "Invalid guild ".concat(e.getGuildId()));
                if (!(0, a.canViewInviteModal)(l.default, t, e)) throw new i.default({
                    errorCode: o.RPCErrors.INVALID_PERMISSIONS
                }, "No invite permissions for ".concat(e.id));
                return {
                    channel: e,
                    guild: t
                }
            }
        },
        334288: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateTransportType: function() {
                    return i
                }
            });
            var a = n("996106"),
                s = n("186901"),
                l = n("981631");

            function i(e) {
                if (s.TransportTypes.IPC !== e && s.TransportTypes.POST_MESSAGE !== e) throw new a.default({
                    errorCode: l.RPCErrors.INVALID_COMMAND
                }, "Invalid transport.")
            }
        },
        606271: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            }), n("47120");
            var a = n("392711"),
                s = n.n(a),
                l = n("442837"),
                i = n("570140"),
                r = n("573979"),
                o = n("592125"),
                u = n("271383"),
                d = n("430824"),
                c = n("131951"),
                f = n("158776"),
                E = n("19780"),
                h = n("699516"),
                C = n("944486"),
                _ = n("800599"),
                m = n("594174"),
                S = n("979651"),
                p = n("626135"),
                I = n("823379"),
                g = n("358085"),
                T = n("914946"),
                A = n("238679"),
                N = n("863141"),
                v = n("981631"),
                R = n("701488"),
                O = n("65154");

            function L(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class P {
                loadServer() {
                    for (let e of (g.isPlatformEmbedded && this.registerTransportsForEmbeddedPlatform(), this.transports)) this.rpcServer.registerTransport(e);
                    for (let [e, t] of Object.entries(this.rpcCommandHandlers)) this.rpcServer.setCommandHandler(e, t);
                    for (let [e, t] of Object.entries(this.rpcEventHandlers)) this.rpcServer.setEventHandler(e, t)
                }
                init() {
                    this.rpcServer.getCurrentUser = () => m.default.getCurrentUser(), this.rpcServer.onConnect = e => {
                        i.default.dispatch({
                            type: "RPC_APP_CONNECTED",
                            socketId: e.id,
                            application: e.application
                        }), p.default.track(v.AnalyticEvents.AUTHORIZED_APP_CONNECTED, {
                            app_id: e.application.id,
                            transport: e.transport
                        })
                    }, this.rpcServer.onDisconnect = (e, t) => {
                        i.default.dispatch({
                            type: "RPC_APP_DISCONNECTED",
                            socketId: e.id,
                            application: e.application,
                            reason: t
                        })
                    };
                    let e = [o.default, u.default, f.default, S.default, c.default, E.default];
                    new l.BatchedStoreListener(e.concat(this.stores), () => this.rpcServer.updateSubscriptions()).attach("RPCServerManager"), i.default.subscribe("MESSAGE_CREATE", e => this.handleMessage(e)), i.default.subscribe("MESSAGE_UPDATE", e => this.handleMessage(e)), i.default.subscribe("MESSAGE_DELETE", e => this.handleMessage(e)), i.default.subscribe("SPEAKING", e => this.handleSpeaking(e)), i.default.subscribe("OAUTH2_TOKEN_REVOKE", e => this.handleOAuth2TokenRevoke(e)), i.default.subscribe("GUILD_CREATE", e => this.handleGuildCreate(e)), i.default.subscribe("CHANNEL_CREATE", e => this.handleChannelCreate(e)), i.default.subscribe("LOGOUT", () => this.handleLogout()), i.default.subscribe("VOICE_CHANNEL_SELECT", e => this.handleVoiceChannelSelect(e)), i.default.subscribe("RPC_NOTIFICATION_CREATE", e => this.handleNotificationCreate(e)), i.default.subscribe("ACTIVITY_JOIN", e => this.handleActivityJoin(e)), i.default.subscribe("ACTIVITY_LAYOUT_MODE_UPDATE", e => this.handleActivityLayoutModeUpdate(e)), i.default.subscribe("THERMAL_STATE_CHANGE", e => this.handleThermalStateChange(e)), i.default.subscribe("ACTIVITY_SCREEN_ORIENTATION_UPDATE", e => this.handleScreenOrientationUpdate(e)), (0, A.subscribeToActivityInstanceConnectedParticipants)(e => this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE, {}, e)), i.default.subscribe("RELATIONSHIP_ADD", e => this.handleRelationshipAdd(e)), i.default.subscribe("RELATIONSHIP_REMOVE", e => this.handleRelationshipRemove(e)), i.default.subscribe("PRESENCE_UPDATES", e => this.handlePresenceUpdate(e)), i.default.subscribe("PRESENCES_REPLACE", () => this.handlePresencesReplace()), i.default.subscribe("ENTITLEMENT_CREATE", e => this.handleEntitlementCreate(e)), i.default.subscribe("ENTITLEMENT_DELETE", e => this.handleEntitlementDelete(e)), i.default.subscribe("USER_ACHIEVEMENT_UPDATE", e => this.handleUserAchievementUpdate(e))
                }
                handleMessage(e) {
                    let t, n, a;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    "MESSAGE_CREATE" === e.type && this.handleActivityMessage(e);
                    let s = null;
                    switch (e.type) {
                        case "MESSAGE_CREATE":
                            if ("SENDING" === e.message.state) return;
                            t = v.RPCEvents.MESSAGE_CREATE, n = e.channelId, a = e.message, s = "".concat(t).concat(e.message.id);
                            break;
                        case "MESSAGE_UPDATE":
                            t = v.RPCEvents.MESSAGE_UPDATE, n = e.message.channel_id, a = e.message;
                            break;
                        case "MESSAGE_DELETE":
                            t = v.RPCEvents.MESSAGE_DELETE, n = e.channelId, a = {
                                id: e.id
                            }, s = "".concat(t).concat(e.id);
                            break;
                        default:
                            return (0, I.assertNever)(e)
                    }
                    null != n && this.rpcServer.dispatchToSubscriptions(t, {
                        channel_id: n
                    }, {
                        channel_id: n,
                        message: (0, T.transformInternalTextMessage)(a)
                    }, s)
                }
                handleSpeaking(e) {
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let t = 0 !== e.speakingFlags ? v.RPCEvents.SPEAKING_START : v.RPCEvents.SPEAKING_STOP;
                    if (e.context === O.MediaEngineContextTypes.DEFAULT) {
                        let n = C.default.getVoiceChannelId();
                        if (null != n) {
                            let a = o.default.getChannel(n);
                            if (null == a) return;
                            let s = S.default.getVoiceState(a.getGuildId(), e.userId);
                            if (null == s) return;
                            this.rpcServer.dispatchToSubscriptions(t, {
                                channel_id: s.channelId
                            }, {
                                channel_id: s.channelId,
                                user_id: e.userId
                            })
                        }
                    }
                }
                handleVoiceChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.VOICE_CHANNEL_SELECT, {}, {
                        channel_id: n,
                        guild_id: t
                    })
                }
                handleNotificationCreate(e) {
                    let {
                        channelId: t,
                        message: n,
                        icon: a,
                        title: s,
                        body: l
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.NOTIFICATION_CREATE, {}, {
                        channel_id: t,
                        message: (0, T.transformInternalTextMessage)(n),
                        icon_url: null != a ? (0, T.getRemoteIconURL)(a) : null,
                        title: s,
                        body: l
                    })
                }
                handleActivityJoin(e) {
                    let {
                        applicationId: t,
                        secret: n,
                        intent: a,
                        embedded: s
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let l = {
                        secret: n
                    };
                    s && (l.intent = a), this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_JOIN, e => e.socket.application.id === t, l), this.rpcServer.dispatchToSubscriptions(v.RPCEvents.GAME_JOIN, e => e.socket.application.id === t, l)
                }
                handleActivityLayoutModeUpdate(e) {
                    let {
                        applicationId: t,
                        layoutMode: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let a = n !== R.ActivityLayoutMode.FOCUSED;
                    this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_PIP_MODE_UPDATE, e => e.socket.application.id === t, {
                        is_pip_mode: a
                    });
                    this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE, e => e.socket.application.id === t, {
                        layout_mode: n
                    })
                }
                handleThermalStateChange(e) {
                    let {
                        applicationId: t,
                        rawThermalState: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length || null == t) return;
                    let a = {
                        thermal_state: (0, r.default)(n)
                    };
                    this.rpcServer.dispatchToSubscriptions(v.RPCEvents.THERMAL_STATE_UPDATE, e => e.socket.application.id === t, a)
                }
                handleScreenOrientationUpdate(e) {
                    let {
                        screenOrientation: t
                    } = e;
                    if (0 !== this.rpcServer.subscriptions.length) this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ORIENTATION_UPDATE, {}, {
                        screen_orientation: t
                    })
                }
                handleActivityMessage(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application: s,
                        activity: l
                    } = a;
                    if (null == s || null == l || null == l.party_id) return;
                    let i = m.default.getUser(null === (t = a.author) || void 0 === t ? void 0 : t.id);
                    if (null == i) return;
                    let r = m.default.getCurrentUser();
                    if (null == r || i.id === r.id) return;
                    let o = l.type === v.ActivityActionTypes.JOIN_REQUEST ? f.default.getApplicationActivity(r.id, s.id) : f.default.getApplicationActivity(i.id, s.id);
                    if (null == o || null == o.party || o.party.id !== l.party_id) return;
                    let u = o.application_id;
                    switch (l.type) {
                        case v.ActivityActionTypes.JOIN:
                            this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_INVITE, e => e.socket.application.id === u, {
                                user: (0, N.default)(i),
                                activity: o,
                                type: l.type,
                                channel_id: n,
                                message_id: a.id
                            });
                            break;
                        case v.ActivityActionTypes.JOIN_REQUEST:
                            this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ACTIVITY_JOIN_REQUEST, e => e.socket.application.id === u, {
                                user: (0, N.default)(i)
                            })
                    }
                }
                handleOAuth2TokenRevoke(e) {
                    let {
                        accessToken: t
                    } = e;
                    this.rpcServer.sockets.forEach(e => {
                        e.authorization.accessToken === t && e.close(v.RPCCloseCodes.TOKEN_REVOKED, "Token revoked")
                    })
                }
                handleGuildCreate(e) {
                    let {
                        guild: {
                            id: t
                        }
                    } = e, n = d.default.getGuild(t);
                    0 !== this.rpcServer.subscriptions.length && null != n && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.GUILD_CREATE, {}, {
                        id: t,
                        name: n.name
                    })
                }
                handleChannelCreate(e) {
                    let {
                        channel: {
                            id: t,
                            name: n,
                            type: a
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.CHANNEL_CREATE, {}, {
                        id: t,
                        name: n,
                        type: a
                    })
                }
                handleLogout() {
                    this.rpcServer.sockets.forEach(e => e.close(v.RPCCloseCodes.CLOSE_NORMAL, "User logout"))
                }
                handleRelationshipAdd(e) {
                    let {
                        relationship: {
                            id: t,
                            type: n
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, T.transformRelationship)(n, t))
                }
                handleRelationshipRemove(e) {
                    let {
                        relationship: {
                            id: t
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, T.transformRelationship)(v.RelationshipTypes.NONE, t))
                }
                handlePresenceUpdate(e) {
                    let {
                        updates: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && t.forEach(e => {
                        let {
                            guildId: t,
                            user: {
                                id: n
                            }
                        } = e;
                        if (null != t) return;
                        let a = h.default.getRelationshipType(n);
                        a === v.RelationshipTypes.NONE && _.default.getUserAffinitiesUserIds().has(n) && (a = v.RelationshipTypes.IMPLICIT), a !== v.RelationshipTypes.NONE && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, T.transformRelationship)(a, n))
                    })
                }
                handlePresencesReplace() {
                    0 !== this.rpcServer.subscriptions.length && s().forEach(h.default.getRelationships(), (e, t) => {
                        this.rpcServer.dispatchToSubscriptions(v.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, T.transformRelationship)(e, t))
                    })
                }
                handleEntitlementCreate(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ENTITLEMENT_CREATE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleEntitlementDelete(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(v.RPCEvents.ENTITLEMENT_DELETE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleUserAchievementUpdate(e) {
                    let {
                        userAchievement: t
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application_id: n
                    } = t;
                    this.rpcServer.dispatchToSubscriptions(v.RPCEvents.USER_ACHIEVEMENT_UPDATE, e => e.socket.application.id === n, {
                        user_achievement: t
                    })
                }
                constructor(e) {
                    L(this, "rpcServer", void 0), L(this, "transports", void 0), L(this, "rpcCommandHandlers", void 0), L(this, "rpcEventHandlers", void 0), L(this, "stores", void 0), L(this, "registerTransportsForEmbeddedPlatform", void 0), this.rpcServer = e.server, this.transports = e.transports, this.rpcCommandHandlers = e.commands, this.rpcEventHandlers = e.events, this.stores = e.stores, this.registerTransportsForEmbeddedPlatform = e.registerTransportsForEmbeddedPlatform
                }
            }
        },
        703912: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            }), n("789020"), n("47120");
            var a = n("664751"),
                s = n("373793"),
                l = n("243814"),
                i = n("149765"),
                r = n("544891"),
                o = n("45792"),
                u = n("433517"),
                d = n("570140"),
                c = n("812206"),
                f = n("979200"),
                E = n("489863"),
                h = n("166148"),
                C = n("307643"),
                _ = n("973616"),
                m = n("594174"),
                S = n("630388"),
                p = n("700785"),
                I = n("996106"),
                g = n("186901"),
                T = n("981631");
            let A = "CachedTokens";
            async function N(e, t, n) {
                var a, l;
                let r;
                let o, u, d, g, {
                    client_id: A,
                    response_type: N = "code",
                    redirect_uri: v,
                    code_challenge: R,
                    code_challenge_method: O,
                    state: L,
                    nonce: P,
                    scope: y,
                    permissions: M,
                    guild_id: D,
                    channel_id: x,
                    prompt: b,
                    disable_guild_select: U,
                    integration_type: j
                } = e;
                if (null == A) throw new I.default({
                    errorCode: T.RPCErrors.OAUTH2_ERROR
                }, "No Client ID provided");
                if (null != v) throw new I.default({
                    errorCode: T.RPCErrors.OAUTH2_ERROR
                }, "Redirect URI cannot be used in the RPC OAuth2 Authorization flow");
                let G = [];
                if ("string" == typeof y ? G = y.split(" ").filter(e => e.length > 0) : Array.isArray(y) && (G = y), null == m.default.getCurrentUser()) throw new I.default({
                    errorCode: T.RPCErrors.OAUTH2_ERROR
                }, "Client is not logged in");
                let w = null !== (l = c.default.getApplication(A)) && void 0 !== l ? l : _.default.createFromServer(await (0, C.fetchApplication)(A)),
                    k = null != w && (0, S.hasFlag)(w.flags, T.ApplicationFlags.EMBEDDED) && (null === (a = w.integrationTypesConfig) || void 0 === a ? void 0 : a[s.ApplicationIntegrationType.USER_INSTALL]) != null;
                o = null == j ? k ? s.ApplicationIntegrationType.USER_INSTALL : s.ApplicationIntegrationType.GUILD_INSTALL : Number(j);
                try {
                    u = await (0, E.fetchAuthorization)({
                        clientId: A,
                        scopes: G,
                        responseType: N,
                        redirectUri: v,
                        codeChallenge: R,
                        codeChallengeMethod: O,
                        state: L,
                        integrationType: o
                    })
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new I.default({
                        errorCode: T.RPCErrors.OAUTH2_ERROR
                    }, "OAuth2 Authorization Error: ".concat(e.message || "Unknown Error"))
                }
                try {
                    ({
                        disclosures: d,
                        allAcked: g
                    } = await (0, f.getDisclosures)(u.application.id))
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new I.default({
                        errorCode: T.RPCErrors.OAUTH2_ERROR
                    }, "OAuth2 Authorization Error: ".concat(e.message || "Unknown Error"))
                }
                if (b === h.OAuth2Prompts.NONE && null != u && u.authorized && g) try {
                    return (await (0, E.authorize)({
                        authorize: !0,
                        clientId: A,
                        scopes: G,
                        responseType: N,
                        redirectUri: v,
                        codeChallenge: R,
                        codeChallengeMethod: O,
                        state: L,
                        nonce: P,
                        integrationType: o
                    })).location
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new I.default({
                        errorCode: T.RPCErrors.OAUTH2_ERROR
                    }, "OAuth2 Authorize Error: ".concat(e.message || "Unknown Error"))
                }
                null == n || n(u.application, x);
                let B = p.NONE;
                try {
                    B = i.deserialize(null != M ? M : 0)
                } catch (e) {}
                return null != u.integration_type && Object.values(s.ApplicationIntegrationType).includes(u.integration_type) && (r = new Map).set(u.integration_type, u), t({
                    clientId: A,
                    authorizations: r,
                    scopes: G,
                    parsedPermissions: B,
                    responseType: N,
                    redirectUri: v,
                    codeChallenge: R,
                    codeChallengeMethod: O,
                    state: L,
                    guildId: D,
                    channelId: x,
                    prompt: b,
                    disableGuildSelect: U,
                    disclosures: d,
                    integrationType: o
                })
            }

            function v(e, t) {
                if (e.authorization.accessToken) throw new I.default({
                    errorCode: T.RPCErrors.INVALID_COMMAND
                }, "Already authenticated");
                if (e.authorization.authing) throw new I.default({
                    errorCode: T.RPCErrors.INVALID_COMMAND
                }, "Already authenticating");
                return e.authorization.authing = !0, r.HTTP.get({
                    url: T.Endpoints.OAUTH2_CURRENT_AUTH,
                    headers: {
                        Authorization: "Bearer ".concat(t)
                    },
                    oldFormErrors: !0
                }).then(n => {
                    e.authorization.authing = !1;
                    let {
                        application: a,
                        user: s,
                        scopes: l,
                        expires: i
                    } = n.body;
                    if (e.application.id !== a.id) throw new I.default({
                        errorCode: T.RPCErrors.INVALID_CLIENTID
                    }, "Application does not match the connection's");
                    let r = m.default.getCurrentUser();
                    if (null == r || !s || r.id !== s.id) throw new I.default({
                        errorCode: T.RPCErrors.INVALID_TOKEN
                    }, "Token does not match current user");
                    return e.authorization.scopes = [...e.authorization.scopes, ...l, g.RPC_AUTHENTICATED_SCOPE], e.authorization.accessToken = t, e.authorization.expires = new Date(i), d.default.dispatch({
                        type: "RPC_APP_AUTHENTICATED",
                        socketId: e.id,
                        application: e.application
                    }), {
                        ...n.body,
                        access_token: t
                    }
                }, () => {
                    throw new I.default({
                        errorCode: T.RPCErrors.INVALID_TOKEN
                    }, "Invalid access token: ".concat(t))
                }).catch(t => {
                    throw e.authorization.authing = !1, t
                })
            }

            function R(e, t) {
                return {
                    [T.RPCCommands.AUTHENTICATE]: (0, o.createRPCCommand)(T.RPCCommands.AUTHENTICATE, {
                        handler(n) {
                            let {
                                socket: s,
                                args: {
                                    access_token: i
                                }
                            } = n;
                            if (null == i && s.transport === g.TransportTypes.IPC) {
                                let n = s.application.id;
                                if (null == n) throw new I.default({
                                    errorCode: T.RPCErrors.INVALID_COMMAND
                                }, "No application.");
                                let r = l.OAuth2Scopes.IDENTIFY,
                                    o = () => N({
                                        client_id: n,
                                        scope: r,
                                        response_type: "token"
                                    }, e, t).then(e => {
                                        if (null == e) throw new I.default({
                                            errorCode: T.RPCErrors.UNKNOWN_ERROR
                                        }, "Unknown error occurred");
                                        let t = e.split(/#|\?/),
                                            l = a.parse(t[t.length - 1]);
                                        if (null != l.error) {
                                            var i;
                                            throw new I.default({
                                                errorCode: T.RPCErrors.OAUTH2_ERROR
                                            }, "OAuth2 Error: ".concat(l.error, ": ").concat(null !== (i = l.error_description) && void 0 !== i ? i : "unknown error"))
                                        }
                                        return ! function(e, t, n, a) {
                                            var s;
                                            let l = null !== (s = u.Storage.get(A)) && void 0 !== s ? s : {};
                                            l[e] = {
                                                accessToken: t,
                                                scope: n,
                                                expires: Date.now() + a
                                            }, u.Storage.set(A, l)
                                        }(n, l.access_token, l.scope, l.expires_in), v(s, l.access_token)
                                    });
                                return null != (i = function(e, t) {
                                    let n = u.Storage.get(A);
                                    if (null != n && null != n[e]) {
                                        let a = n[e];
                                        if (!(a.scope !== t || a.expires <= Date.now())) return a.accessToken;
                                        delete n[e], u.Storage.set(A, n)
                                    }
                                }(n, r)) ? v(s, i).catch(() => (! function(e) {
                                    var t;
                                    let n = null !== (t = u.Storage.get(A)) && void 0 !== t ? t : {};
                                    delete n[e], u.Storage.set(A, n)
                                }(n), o())) : o()
                            }
                            if (null == i) throw new I.default({
                                errorCode: T.RPCErrors.INVALID_TOKEN
                            }, "No access token provided");
                            return v(s, i)
                        }
                    }),
                    [T.RPCCommands.AUTHORIZE]: {
                        handler(n) {
                            let {
                                socket: s,
                                args: l
                            } = n, i = l.client_id;
                            if (!i) throw new I.default({
                                errorCode: T.RPCErrors.INVALID_CLIENTID
                            }, "No client id provided");
                            if (null != s.authorization.accessToken) throw new I.default({
                                errorCode: T.RPCErrors.INVALID_COMMAND
                            }, "Already authenticated");
                            if (s.authorization.authing) throw new I.default({
                                errorCode: T.RPCErrors.INVALID_COMMAND
                            }, "Already authing");
                            return s.authorization.authing = !0, r.HTTP.get({
                                url: T.Endpoints.APPLICATION_RPC(i),
                                oldFormErrors: !0
                            }).then(n => {
                                let a = n.body;
                                if (s.application.id !== a.id) throw new I.default({
                                    errorCode: T.RPCErrors.INVALID_CLIENTID
                                }, "Application does not match the connection's");
                                let i = l.scopes || l.scope;
                                return delete l.scopes, N({
                                    ...l,
                                    scope: i
                                }, e, t)
                            }, () => {
                                throw new I.default({
                                    errorCode: T.RPCErrors.INVALID_CLIENTID
                                }, "Invalid client id: ".concat(i))
                            }).then(e => {
                                if (s.authorization.authing = !1, null == e) throw new I.default({
                                    errorCode: T.RPCErrors.UNKNOWN_ERROR
                                }, "Unknown error occurred");
                                let t = a.parse(e.split("?")[1].split("#")[0]);
                                if (null != t.error) {
                                    var n;
                                    throw new I.default({
                                        errorCode: T.RPCErrors.OAUTH2_ERROR
                                    }, "OAuth2 Error: ".concat(t.error, ": ").concat(null !== (n = t.error_description) && void 0 !== n ? n : "unknown error"))
                                }
                                return {
                                    code: t.code
                                }
                            }).catch(e => {
                                throw s.authorization.authing = !1, e
                            })
                        }
                    }
                }
            }
        },
        688707: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("243814"),
                s = n("920456"),
                l = n("996106"),
                i = n("452426"),
                r = n("186901"),
                o = n("981631");
            t.default = {
                [o.RPCCommands.SET_USER_ACHIEVEMENT]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        achievement_id: e.string().min(2).max(128),
                        percent_complete: e.number().min(0).max(100).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                achievement_id: n,
                                percent_complete: a
                            }
                        } = e, i = t.application.id;
                        if (null == i) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return s.default.setUserAchievement(i, n, a).catch(e => {
                            let {
                                status: t,
                                body: n
                            } = e;
                            switch (t) {
                                case 429:
                                    throw new l.default({
                                        errorCode: o.RPCErrors.RATE_LIMITED
                                    }, "You are being rate limited.");
                                case 403:
                                    if (null != n && n.code === o.AbortCodes.USER_NOT_AUTHORIZED_FOR_APPLICATION) throw new l.default({
                                        errorCode: o.RPCErrors.UNAUTHORIZED_FOR_ACHIEVEMENT
                                    }, "Not authorized to update this achievement.");
                                    throw new l.default({
                                        errorCode: o.RPCErrors.UNKNOWN_ERROR
                                    }, "Unknown error from API. status=".concat(t, "."));
                                default:
                                    throw new l.default({
                                        errorCode: o.RPCErrors.UNKNOWN_ERROR
                                    }, "Unknown error from API. status=".concat(t, "."))
                            }
                        }).then(() => null)
                    }
                },
                [o.RPCCommands.GET_USER_ACHIEVEMENTS]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, r.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t
                        } = e, n = t.application.id;
                        if (null == n) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return s.default.fetchForApplication(n).then(e => e || [])
                    }
                }
            }
        },
        894959: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("45792"),
                s = n("914946"),
                l = n("238679"),
                i = n("981631");
            t.default = {
                [i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: (0, a.createRPCCommand)(i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS, {
                    scope: l.activityInstanceConnectedParticipantsScope,
                    handler(e) {
                        let {
                            socket: t
                        } = e;
                        return (0, s.validatePostMessageTransport)(t.transport), (0, l.activityInstanceConnectedParticipants)()
                    }
                })
            }
        },
        624714: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("789020");
            var a = n("544891"),
                s = n("115130"),
                l = n("287545"),
                i = n("812206"),
                r = n("695103"),
                o = n("626135"),
                u = n("630388"),
                d = n("996106"),
                c = n("914946"),
                f = n("452426"),
                E = n("561205"),
                h = n("186901"),
                C = n("981631");
            t.default = {
                [C.RPCCommands.SEND_ANALYTICS_EVENT]: {
                    validation: e => (0, f.default)(e).required().keys({
                        event_name: e.string().required(),
                        event_properties: e.object().required()
                    }),
                    handler(e) {
                        var t;
                        let {
                            socket: n,
                            args: {
                                event_name: a,
                                event_properties: s
                            }
                        } = e;
                        (0, c.validatePostMessageTransport)(n.transport), (0, c.validateApplication)(n.application);
                        let r = n.application.id,
                            f = (0, E.default)(),
                            h = null == f ? void 0 : f.getGuildId();
                        if (null == f) throw new d.default({
                            errorCode: C.RPCErrors.INVALID_COMMAND
                        }, "Invalid channel");
                        let _ = i.default.getApplication(r);
                        if (!(0, u.hasFlag)(null !== (t = null == _ ? void 0 : _.flags) && void 0 !== t ? t : 0, C.ApplicationFlags.EMBEDDED_FIRST_PARTY)) throw new d.default({
                            errorCode: C.RPCErrors.INVALID_COMMAND
                        }, "This application cannot access this API");
                        let m = (0, l.getActiveAnalyticsSessionIDs)(r),
                            S = {
                                activity_application_id: r,
                                activity_channel_type: f.type,
                                activity_guild_id: h,
                                activity_user_session_id: null == m ? void 0 : m.activityUserSessionId
                            };
                        o.default.track(a, {
                            ...S,
                            ...s
                        })
                    }
                },
                [C.RPCCommands.GET_APPLICATION_TICKET]: {
                    scope: h.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            socket: t
                        } = e, n = t.application.id;
                        if (null == n) throw new d.default({
                            errorCode: C.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return a.HTTP.post({
                            url: C.Endpoints.APPLICATION_TICKET(n),
                            body: {
                                test_mode: r.default.inTestModeForApplication(n) || s.default.inDevModeForApplication(n)
                            },
                            retries: 3,
                            oldFormErrors: !0
                        }).then(e => {
                            let {
                                body: t
                            } = e;
                            return t
                        })
                    }
                }
            }
        },
        906228: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("243814"),
                s = n("120960"),
                l = n("996106"),
                i = n("452426"),
                r = n("186901"),
                o = n("981631"),
                u = n("65154");
            t.default = {
                [o.RPCCommands.SET_CERTIFIED_DEVICES]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        devices: e.array().items((0, i.default)(e).keys({
                            type: e.string().required().valid([u.DeviceTypes.AUDIO_INPUT, u.DeviceTypes.AUDIO_OUTPUT, u.DeviceTypes.VIDEO_INPUT]),
                            id: e.string().required().min(1),
                            vendor: e.object().required().keys({
                                name: e.string().min(1),
                                url: e.string().min(1)
                            }),
                            model: e.object().required().keys({
                                name: e.string().min(1),
                                url: e.string().min(1)
                            }),
                            related: e.array().items(e.string().min(1)),
                            echo_cancellation: e.boolean(),
                            noise_suppression: e.boolean(),
                            automatic_gain_control: e.boolean(),
                            hardware_mute: e.boolean()
                        }))
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                devices: n
                            }
                        } = e;
                        if (null == t.application.id) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        (0, s.setCertifiedDevices)(t.application.id, n.map(e => ({
                            type: e.type,
                            id: e.id,
                            vendor: e.vendor,
                            model: e.model,
                            related: e.related.filter(e => n.some(t => t.id === e)),
                            echoCancellation: e.echo_cancellation,
                            noiseSuppression: e.noise_suppression,
                            automaticGainControl: e.automatic_gain_control,
                            hardwareMute: e.hardware_mute
                        })))
                    }
                }
            }
        },
        491327: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("447543"),
                r = n("287734"),
                o = n("703656"),
                u = n("131704"),
                d = n("592125"),
                c = n("430824"),
                f = n("496675"),
                E = n("944486"),
                h = n("979651"),
                C = n("934415"),
                _ = n("996106"),
                m = n("914946"),
                S = n("452426"),
                p = n("561205"),
                I = n("186901"),
                g = n("981631");
            t.default = {
                [g.RPCCommands.GET_CHANNEL]: {
                    scope: {
                        [I.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.GUILDS]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            },
                            socket: n
                        } = e, a = d.default.getChannel(t);
                        if (null == a) throw new _.default({
                            errorCode: g.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel id: ".concat(t));
                        if (a.isPrivate()) {
                            let e = n.authorization.scopes;
                            if (!e.includes(l.OAuth2Scopes.RPC) && !e.includes(l.OAuth2Scopes.DM_CHANNELS_READ)) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_PERMISSIONS
                            }, "Invalid scope")
                        }
                        return (0, m.transformChannel)(a, (0, m.hasMessageReadPermission)(a, n.application.id, n.authorization.scopes))
                    }
                },
                [g.RPCCommands.GET_CHANNELS]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler(e) {
                        let {
                            args: {
                                guild_id: t
                            }
                        } = e, n = s().values(d.default.loadAllGuildAndPrivateChannelsFromDisk());
                        if (t) {
                            let e = c.default.getGuild(t);
                            if (null == e) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_GUILD
                            }, "Invalid guild id: ".concat(t));
                            n = n.filter(t => {
                                let {
                                    guild_id: n
                                } = t;
                                return n === e.id
                            })
                        }
                        return {
                            channels: n.filter(e => f.default.can(g.Permissions.VIEW_CHANNEL, e)).map(e => {
                                let {
                                    id: t,
                                    name: n,
                                    type: a
                                } = e;
                                return {
                                    id: t,
                                    name: n,
                                    type: a
                                }
                            })
                        }
                    }
                },
                [g.RPCCommands.GET_CHANNEL_PERMISSIONS]: {
                    scope: l.OAuth2Scopes.GUILDS_MEMBERS_READ,
                    handler(e) {
                        let t = (0, p.default)();
                        if (null == t) throw new _.default({
                            errorCode: g.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel");
                        return {
                            permissions: f.default.computePermissions(t)
                        }
                    }
                },
                [g.RPCCommands.SELECT_VOICE_CHANNEL]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: e => (0, S.default)(e).required().keys({
                        channel_id: e.string().allow(null),
                        timeout: e.number().min(0).max(60),
                        force: e.boolean(),
                        navigate: e.boolean()
                    }),
                    handler(e) {
                        let {
                            server: t,
                            socket: n,
                            args: {
                                channel_id: a,
                                timeout: s = 0,
                                force: l = !1,
                                navigate: i = !1
                            }
                        } = e;
                        if (!a) return r.default.selectVoiceChannel(null), null;
                        let S = E.default.getVoiceChannelId();
                        if (null != S && S !== a && !1 === l) throw new _.default({
                            errorCode: g.RPCErrors.SELECT_VOICE_FORCE_REQUIRED
                        }, "User is already joined to a voice channel.");
                        return t.storeWait(n, () => d.default.getChannel(a), s).catch(() => {
                            throw new _.default({
                                errorCode: g.RPCErrors.SELECT_CHANNEL_TIMED_OUT
                            }, "Request to select voice channel timed out.")
                        }).then(e => {
                            if (null == e) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_CHANNEL
                            }, "Invalid channel id: ".concat(a));
                            if (!(0, u.isVoiceChannel)(e.type)) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_CHANNEL
                            }, "Channel is not a voice channel");
                            return Promise.all([Promise.resolve(e), (0, m.transformChannel)(e, (0, m.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                        }).then(e => {
                            let [t, n] = e;
                            if (n.guild_id) {
                                if ((0, C.isChannelFull)(t, h.default, c.default)) throw new _.default({
                                    errorCode: g.RPCErrors.INVALID_CHANNEL
                                }, "Channel is full");
                                if (!f.default.can(g.Permissions.CONNECT, t)) throw new _.default({
                                    errorCode: g.RPCErrors.INVALID_PERMISSIONS
                                }, "Connect permission required to join channel")
                            }
                            return r.default.selectVoiceChannel(t.id), i && (0, o.replaceWith)(g.Routes.CHANNEL(t.guild_id, t.id)), n
                        })
                    }
                },
                [g.RPCCommands.GET_SELECTED_VOICE_CHANNEL]: {
                    scope: {
                        [I.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            socket: t
                        } = e, n = E.default.getVoiceChannelId(), a = null != n ? d.default.getChannel(n) : null;
                        return null != a ? (0, m.transformChannel)(a, (0, m.hasMessageReadPermission)(a, t.application.id, t.authorization.scopes)) : null
                    }
                },
                [g.RPCCommands.SELECT_TEXT_CHANNEL]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: e => (0, S.default)(e).required().keys({
                        channel_id: e.string().allow(null),
                        timeout: e.number().min(0).max(60)
                    }),
                    handler(e) {
                        let {
                            server: t,
                            socket: n,
                            args: {
                                channel_id: a,
                                timeout: s = 0
                            }
                        } = e;
                        return a ? t.storeWait(n, () => d.default.getChannel(a), s).catch(() => {
                            throw new _.default({
                                errorCode: g.RPCErrors.SELECT_CHANNEL_TIMED_OUT
                            }, "Request to select text channel timed out.")
                        }).then(e => {
                            if (null == e) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_CHANNEL
                            }, "Invalid channel id: ".concat(a));
                            if (!(0, u.isTextChannel)(e.type)) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_CHANNEL
                            }, "Channel is not a text channel");
                            return Promise.all([Promise.resolve(e), (0, m.transformChannel)(e, (0, m.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                        }).then(e => {
                            let [t, n] = e;
                            if (n.guild_id && !f.default.can(g.Permissions.VIEW_CHANNEL, t)) throw new _.default({
                                errorCode: g.RPCErrors.INVALID_CHANNEL
                            }, "No permission to see channel");
                            return n.guild_id ? (0, o.replaceWith)(g.Routes.CHANNEL(n.guild_id, t.id)) : r.default.selectPrivateChannel(t.id), n
                        }) : ((0, o.transitionTo)(g.Routes.ME), null)
                    }
                },
                [g.RPCCommands.CREATE_CHANNEL_INVITE]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler(e) {
                        let {
                            args: {
                                channel_id: t,
                                ...n
                            }
                        } = e;
                        return i.default.createInvite(t, n, "RPC").catch(() => {
                            throw new _.default({
                                errorCode: g.RPCErrors.INVALID_PERMISSIONS
                            }, "Unable to generate an invite for ".concat(t, ". Does this user have permissions?"))
                        })
                    }
                }
            }
        },
        934993: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("996106"),
                l = n("452426"),
                i = n("186901"),
                r = n("981631");
            t.default = {
                [r.RPCCommands.SET_CONFIG]: {
                    scope: i.RPC_AUTHENTICATED_SCOPE,
                    validation: e => (0, l.default)(e).required().keys({
                        use_interactive_pip: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                use_interactive_pip: n
                            }
                        } = e;
                        if (t.transport !== i.TransportTypes.POST_MESSAGE) throw new s.default({
                            errorCode: r.RPCErrors.INVALID_COMMAND
                        }, 'command not available from "'.concat(t.transport, " transport"));
                        if (null == t.application.id) throw new s.default({
                            errorCode: r.RPCErrors.INVALID_COMMAND
                        }, "invalid application");
                        return a.default.dispatch({
                            type: "EMBEDDED_ACTIVITY_SET_CONFIG",
                            applicationId: t.application.id,
                            config: {
                                useInteractivePIP: n
                            }
                        }), Promise.resolve({
                            use_interactive_pip: n
                        })
                    }
                }
            }
        },
        576027: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                crossPlatformCommands: function() {
                    return N
                }
            });
            var a = n("688707"),
                s = n("894959"),
                l = n("624714"),
                i = n("906228"),
                r = n("491327"),
                o = n("934993"),
                u = n("793839"),
                d = n("758177"),
                c = n("853678"),
                f = n("378410"),
                E = n("468136"),
                h = n("64974"),
                C = n("83567"),
                _ = n("906911"),
                m = n("647656"),
                S = n("918940"),
                p = n("265067"),
                I = n("881393"),
                g = n("905534"),
                T = n("273487"),
                A = n("543815");
            let N = {
                ...a.default,
                ...l.default,
                ...i.default,
                ...r.default,
                ...o.default,
                ...u.default,
                ...d.default,
                ...c.default,
                ...f.default,
                ...E.default,
                ...C.default,
                ..._.default,
                ...m.default,
                ...S.default,
                ...I.default,
                ...g.default,
                ...A.default,
                ...T.default,
                ...h.default,
                ...p.default,
                ...s.default
            }
        },
        793839: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("430824"),
                r = n("996106"),
                o = n("452426"),
                u = n("981631");
            t.default = {
                [u.RPCCommands.GET_GUILD]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: e => (0, o.default)(e).required().keys({
                        guild_id: e.string(),
                        timeout: e.number().min(0).max(60)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            server: n,
                            args: {
                                guild_id: a,
                                timeout: s = 0
                            }
                        } = e;
                        return n.storeWait(t, () => i.default.getGuild(a), s).catch(() => {
                            throw new r.default({
                                errorCode: u.RPCErrors.GET_GUILD_TIMED_OUT
                            }, "Request to get guild timed out.")
                        }).then(e => {
                            var t;
                            if (null == e) throw new r.default({
                                errorCode: u.RPCErrors.INVALID_GUILD
                            }, "Invalid guild id: ".concat(a));
                            return {
                                id: e.id,
                                name: e.name,
                                icon_url: null !== (t = e.getIconURL(128)) && void 0 !== t ? t : null,
                                members: [],
                                vanity_url_code: e.vanityURLCode
                            }
                        })
                    }
                },
                [u.RPCCommands.GET_GUILDS]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler() {
                        let e = i.default.getGuilds();
                        return {
                            guilds: s().map(e, e => ({
                                id: e.id,
                                name: e.name,
                                icon_url: e.getIconURL(128)
                            }))
                        }
                    }
                }
            }
        },
        758177: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("594174"),
                s = n("768581"),
                l = n("956664"),
                i = n("996106"),
                r = n("452426"),
                o = n("186901"),
                u = n("981631");
            t.default = {
                [u.RPCCommands.GET_IMAGE]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    validation: e => (0, r.default)(e).required().keys({
                        type: e.string().required().valid(["user"]),
                        id: e.string().required(),
                        format: e.string().required().valid(["png", "webp", "jpg"]),
                        size: e.number().required().valid([16, 32, 64, 128, 256, 512, 1024])
                    }),
                    handler(e) {
                        let t, {
                            args: {
                                type: n,
                                id: r,
                                format: o = "png",
                                size: d = 128
                            }
                        } = e;
                        if ("user" === n) {
                            let e = a.default.getUser(r);
                            if (null != e) {
                                t = s.default.getUserAvatarURL(e, !1, d, o);
                                let n = window.GLOBAL_ENV.CDN_HOST;
                                null != n && -1 !== t.indexOf(n) && (t += "&_=")
                            } else throw new i.default({
                                errorCode: u.RPCErrors.INVALID_USER
                            }, "Invalid user id: ".concat(r))
                        }
                        if (null == t) throw new i.default({
                            errorCode: u.RPCErrors.INVALID_COMMAND
                        }, "No valid type.");
                        return fetch(t).then(e => e.blob()).then(e => (0, l.readFileAsBase64)(e)).then(e => ({
                            data_url: e
                        }))
                    }
                }
            }
        },
        853678: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("315314"), n("610138"), n("216116"), n("78328"), n("815648");
            var a = n("443684"),
                s = n("12647"),
                l = n("49012"),
                i = n("358085"),
                r = n("996106"),
                o = n("914946"),
                u = n("452426"),
                d = n("186901"),
                c = n("981631"),
                f = n("701488");
            let E = new Set([f.AM_HARMONY_PRD_APPLICATION_ID, f.AM_HARMONY_STG_APPLICATION_ID]);
            t.default = {
                [c.RPCCommands.OPEN_EXTERNAL_LINK]: {
                    scope: {
                        [d.RPC_SCOPE_CONFIG.ANY]: [d.RPC_AUTHENTICATED_SCOPE]
                    },
                    validation: e => (0, u.default)(e).required().keys({
                        url: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                url: n
                            }
                        } = e;
                        (0, o.validatePostMessageTransport)(t.transport);
                        try {
                            let e = new URL(n);
                            i.isPlatformEmbedded && s.default.focus(null, !0), (0, l.handleClick)({
                                href: e.toString()
                            })
                        } catch (e) {
                            throw new r.default({
                                errorCode: c.RPCErrors.INVALID_COMMAND
                            }, "Invalid URL: ".concat(n))
                        }
                    }
                },
                [c.RPCCommands.NAVIGATE_TO_CONNECTIONS]: {
                    validation: e => (0, u.default)(e),
                    scope: {
                        [d.RPC_SCOPE_CONFIG.ANY]: [d.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t
                        } = e;
                        (0, o.validatePostMessageTransport)(t.transport);
                        let n = (0, o.validateApplication)(t.application);
                        if (!E.has(n)) throw new r.default({
                            errorCode: c.RPCErrors.UNAUTHORIZED_FOR_APPLICATION
                        }, "Command not available for this application");
                        (0, a.default)(c.UserSettingsSections.CONNECTIONS)
                    }
                }
            }
        },
        378410: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("710845"),
                s = n("914946"),
                l = n("452426"),
                i = n("981631");
            let r = new a.default(i.RPC_APPLICATION_LOGGING_CATEGORY);
            t.default = {
                [i.RPCCommands.CAPTURE_LOG]: {
                    validation: e => (0, l.default)(e).required().keys({
                        level: e.string().max(10).required(),
                        message: e.string().max(1e3).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                level: n,
                                message: a
                            }
                        } = e;
                        (0, s.validatePostMessageTransport)(t.transport);
                        let l = t.application.id,
                            i = "".concat(l, " - ").concat(a);
                        switch (n) {
                            case "log":
                                r.log(i);
                                break;
                            case "warn":
                                r.warn(i);
                                break;
                            case "debug":
                                r.verbose(i);
                                break;
                            case "info":
                                r.info(i);
                                break;
                            case "error":
                                r.error(i)
                        }
                    }
                }
            }
        },
        468136: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("544891"),
                s = n("626135"),
                l = n("186901"),
                i = n("981631");
            t.default = {
                [i.RPCCommands.GET_NETWORKING_CONFIG]: {
                    scope: l.RPC_LOCAL_SCOPE,
                    handler: () => Promise.all([a.HTTP.get({
                        url: location.protocol + window.GLOBAL_ENV.NETWORKING_ENDPOINT,
                        retries: 3
                    }).then(e => {
                        let {
                            body: {
                                address: t
                            }
                        } = e;
                        return t
                    }), a.HTTP.post({
                        url: i.Endpoints.NETWORKING_TOKEN,
                        retries: 3,
                        oldFormErrors: !0
                    }).then(e => {
                        let {
                            body: {
                                token: t
                            }
                        } = e;
                        return t
                    })]).then(e => {
                        let [t, n] = e;
                        return {
                            address: t,
                            token: n
                        }
                    })
                },
                [i.RPCCommands.NETWORKING_SYSTEM_METRICS]: {
                    scope: l.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            socket: t,
                            args: n
                        } = e;
                        n.application_id = t.application.id, s.default.track(i.AnalyticEvents.NETWORKING_SYSTEM_METRICS, n)
                    }
                },
                [i.RPCCommands.NETWORKING_PEER_METRICS]: {
                    scope: l.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            socket: t,
                            args: n
                        } = e;
                        n.application_id = t.application.id, s.default.track(i.AnalyticEvents.NETWORKING_PEER_METRICS, n)
                    }
                },
                [i.RPCCommands.NETWORKING_CREATE_TOKEN]: {
                    scope: l.RPC_LOCAL_SCOPE,
                    handler: () => a.HTTP.post({
                        url: i.Endpoints.NETWORKING_TOKEN,
                        retries: 1,
                        oldFormErrors: !0
                    }).then(e => e.body)
                }
            }
        },
        64974: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("231338");
            t.default = {
                [a.RPCCommands.GET_PLATFORM_BEHAVIORS]: {
                    handler: () => ({
                        iosKeyboardResizesView: !0
                    })
                }
            }
        },
        83567: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("457330"),
                l = n("726542"),
                i = n("231757"),
                r = n("553795"),
                o = n("585483"),
                u = n("996106"),
                d = n("914946"),
                c = n("452426"),
                f = n("186901"),
                E = n("981631"),
                h = n("701488"),
                C = n("231338");
            let _ = new Set([h.AM_HARMONY_PRD_APPLICATION_ID, h.AM_HARMONY_STG_APPLICATION_ID]);
            t.default = {
                [C.RPCCommands.GET_PROVIDER_ACCESS_TOKEN]: {
                    scope: {
                        [f.RPC_SCOPE_CONFIG.ANY]: [f.RPC_AUTHENTICATED_SCOPE]
                    },
                    validation: e => (0, c.default)(e).required().keys({
                        provider: e.string().required(),
                        connection_redirect: e.string()
                    }),
                    handler: e => {
                        let {
                            socket: t,
                            args: {
                                provider: n,
                                connection_redirect: c
                            }
                        } = e;
                        (0, d.validatePostMessageTransport)(t.transport);
                        let f = (0, d.validateApplication)(t.application),
                            h = l.default.get(n);
                        if (null == h) throw new u.default({
                            errorCode: C.RPCErrors.INVALID_PROVIDER
                        }, 'Platform not found for provider "'.concat(n, '"'));
                        if (n === E.PlatformTypes.AMAZON_MUSIC) {
                            if (!_.has(f)) throw new u.default({
                                errorCode: C.RPCErrors.UNAUTHORIZED_FOR_APPLICATION
                            }, "Command not available for this application")
                        } else throw new u.default({
                            errorCode: C.RPCErrors.UNAUTHORIZED_FOR_APPLICATION
                        }, "Command not available for this application");
                        return new Promise(async (e, t) => {
                            let l = r.default.getAccount(null, n);
                            if (null == l) {
                                function d(t) {
                                    var n;
                                    if (null == h) return;
                                    let a = (null !== (n = t.accounts) && void 0 !== n ? n : []).find(e => e.type === h.type);
                                    null != a && (e({
                                        access_token: a.access_token
                                    }), _())
                                }

                                function f() {
                                    t(new u.default({
                                        errorCode: C.RPCErrors.OAUTH2_ERROR
                                    }, 'OAuth2 setup for "'.concat(n, '" failed'))), _()
                                }

                                function _() {
                                    a.default.unsubscribe("USER_CONNECTIONS_UPDATE", d), o.ComponentDispatch.unsubscribe(E.ComponentActions.CONNECTIONS_CALLBACK_ERROR, f)
                                }
                                a.default.subscribe("USER_CONNECTIONS_UPDATE", d), o.ComponentDispatch.subscribe(E.ComponentActions.CONNECTIONS_CALLBACK_ERROR, f), (0, i.default)({
                                    platformType: h.type,
                                    location: E.AnalyticsLocations.ACTIVITY_RPC,
                                    successRedirect: c
                                })
                            } else try {
                                let t = await s.default.refreshAccessToken(h.type, l.id);
                                if (null == t) throw new u.default({
                                    errorCode: C.RPCErrors.OAUTH2_ERROR
                                }, "Refreshing access token did not return a new access token");
                                e({
                                    access_token: t
                                })
                            } catch (e) {
                                t(e)
                            }
                        })
                    }
                }
            }
        },
        906911: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("699516"),
                r = n("800599"),
                o = n("594174"),
                u = n("914946"),
                d = n("981631");
            t.default = {
                [d.RPCCommands.GET_RELATIONSHIPS]: {
                    scope: l.OAuth2Scopes.RELATIONSHIPS_READ,
                    handler() {
                        let e = {
                            ...i.default.getRelationships()
                        };
                        return r.default.getUserAffinitiesUserIds().forEach(t => {
                            null == e[t] && null != o.default.getUser(t) && (e[t] = d.RelationshipTypes.IMPLICIT)
                        }), {
                            relationships: s().map(e, (e, t) => (0, u.transformRelationship)(e, t))
                        }
                    }
                }
            }
        },
        647656: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("789020"), n("411104");
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("570140"),
                r = n("626135"),
                o = n("81063"),
                u = n("70956"),
                d = n("996106"),
                c = n("914946"),
                f = n("452426"),
                E = n("186901"),
                h = n("981631");
            let C = ["349134787773988865"];
            t.default = {
                [h.RPCCommands.SET_ACTIVITY]: {
                    scope: {
                        [E.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_ACTIVITIES_WRITE, E.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, f.default)(e).required().keys({
                        pid: e.number().min(0),
                        activity: e.object().keys({
                            state: e.string().min(2).max(128),
                            details: e.string().min(2).max(128),
                            timestamps: (0, f.default)(e).keys({
                                start: e.number().min(1),
                                end: e.number().min(1)
                            }),
                            assets: (0, f.default)(e).keys({
                                large_image: e.string().min(1).max(256),
                                large_text: e.string().min(2).max(128),
                                small_image: e.string().min(1).max(256),
                                small_text: e.string().min(2).max(128)
                            }),
                            party: (0, f.default)(e).keys({
                                id: e.string().min(2).max(128),
                                size: e.array().items(e.number().min(1)).length(2),
                                privacy: e.number().default(h.ActivityPartyPrivacy.PRIVATE).valid([h.ActivityPartyPrivacy.PRIVATE, h.ActivityPartyPrivacy.PUBLIC])
                            }),
                            secrets: (0, f.default)(e).keys({
                                match: e.string().min(2).max(128),
                                join: e.string().min(2).max(128),
                                spectate: e.string().min(2).max(128)
                            }),
                            buttons: e.array().items((0, f.default)(e).keys({
                                label: e.string().min(1).max(32).required(),
                                url: e.string().uri().min(1).max(512).required()
                            })).min(1).max(2),
                            instance: e.boolean(),
                            supported_platforms: e.array().items(e.string().min(1).max(32)).min(1).max(3),
                            type: e.number().default(h.ActivityTypes.PLAYING).valid(h.ActivityTypes.PLAYING, h.ActivityTypes.LISTENING, h.ActivityTypes.WATCHING)
                        }).allow(null)
                    }),
                    handler(e) {
                        var t;
                        let n, {
                            socket: a,
                            args: {
                                pid: l,
                                activity: f
                            },
                            isSocketConnected: _
                        } = e;
                        if (![E.TransportTypes.IPC, E.TransportTypes.WEBSOCKET, E.TransportTypes.POST_MESSAGE].includes(a.transport)) throw new d.default({
                            errorCode: h.RPCErrors.INVALID_COMMAND
                        }, 'command not available from "'.concat(a.transport, '" transport'));
                        if (null == l && E.TransportTypes.IPC === a.transport) throw new d.default({
                            errorCode: h.RPCErrors.INVALID_COMMAND
                        }, "nonzero pid required");
                        if (null == f) return i.default.dispatch({
                            type: "LOCAL_ACTIVITY_UPDATE",
                            socketId: a.id,
                            pid: l,
                            activity: f
                        }), Promise.resolve(f);
                        f.name = a.application.name, f.application_id = a.application.id;
                        let m = a.transport === E.TransportTypes.POST_MESSAGE,
                            S = (0, c.computeActivityFlags)(f, m);
                        S > 0 && (f.flags = S), delete f.instance, null === (t = f.party) || void 0 === t || delete t.privacy;
                        let {
                            assets: p,
                            party: I,
                            secrets: g,
                            timestamps: T,
                            buttons: A,
                            type: N
                        } = f;
                        if ((null == N || N !== h.ActivityTypes.PLAYING && !m) && (f.type = h.ActivityTypes.PLAYING), null != g) {
                            let e = s().values(g).filter(e => !!e);
                            if (null != I && s().intersection(e, [I.id]).length > 0 && !C.includes(a.application.id)) throw new d.default({
                                errorCode: h.RPCErrors.INVALID_ACTIVITY_SECRET
                            }, "secrets cannot match the party id");
                            if (s().uniq(e).length < e.length) throw new d.default({
                                errorCode: h.RPCErrors.INVALID_ACTIVITY_SECRET
                            }, "secrets must be unique");
                            if (null != A) throw new d.default({
                                errorCode: h.RPCErrors.INVALID_ACTIVITY_SECRET
                            }, "secrets cannot currently be sent with buttons")
                        }
                        if (null != A && (f.metadata = {
                                button_urls: A.map(e => e.url)
                            }, f.buttons = A.map(e => e.label)), null != T)
                            for (let e of Object.keys(T)) Date.now().toString().length - T[e].toString().length > 2 && (T[e] = Math.floor(T[e] * u.default.Millis.SECOND));
                        if (null == p) n = Promise.resolve([]);
                        else {
                            if (null == a.application || null == a.application.id) throw Error();
                            n = (0, o.fetchAssetIds)(a.application.id, [p.large_image, p.small_image])
                        }
                        return n.then(e => {
                            var t, n;
                            let [s, o] = e;
                            if (null != p && (null != s ? p.large_image = s : delete p.large_image, null != o ? p.small_image = o : delete p.small_image), !_()) return;
                            i.default.dispatch({
                                type: "LOCAL_ACTIVITY_UPDATE",
                                socketId: a.id,
                                pid: l,
                                activity: f
                            });
                            let {
                                secrets: u,
                                party: d
                            } = f, c = {
                                application_id: a.application.id,
                                type: f.type,
                                name: f.name,
                                details: null !== (t = f.details) && void 0 !== t ? t : "",
                                state: null !== (n = f.state) && void 0 !== n ? n : ""
                            };
                            return null != u && (c.has_match_secret = !!u.match, c.has_join_secret = !!u.join), null != p && (c.has_images = !!(p.large_image || p.small_image)), null != d && (c.party_max = null != d.size ? d.size[1] : void 0, c.party_id = d.id), r.default.track(h.AnalyticEvents.ACTIVITY_UPDATED, c), f
                        })
                    }
                }
            }
        },
        918940: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("996106"),
                l = n("452426"),
                i = n("701488"),
                r = n("231338");
            t.default = {
                [r.RPCCommands.SET_ORIENTATION_LOCK_STATE]: {
                    validation: e => (0, l.default)(e).required().keys({
                        lock_state: e.number().valid(i.OrientationLockState.UNLOCKED, i.OrientationLockState.PORTRAIT, i.OrientationLockState.LANDSCAPE).required(),
                        picture_in_picture_lock_state: e.number().valid(i.OrientationLockState.UNLOCKED, i.OrientationLockState.PORTRAIT, i.OrientationLockState.LANDSCAPE).allow(null).optional(),
                        grid_lock_state: e.number().valid(i.OrientationLockState.UNLOCKED, i.OrientationLockState.PORTRAIT, i.OrientationLockState.LANDSCAPE).allow(null).optional()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                lock_state: n,
                                picture_in_picture_lock_state: l,
                                grid_lock_state: i
                            }
                        } = e, o = t.application.id;
                        if (null != o) a.default.dispatch({
                            type: "EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE",
                            applicationId: o,
                            lockState: n,
                            pictureInPictureLockState: l,
                            gridLockState: i
                        });
                        else throw new s.default({
                            errorCode: r.RPCErrors.INVALID_COMMAND
                        }, "No application.")
                    }
                }
            }
        },
        265067: function(e, t, n) {
            "use strict";
            n.r(t), n("653041"), n("47120");
            var a = n("243814"),
                s = n("100527"),
                l = n("208049"),
                i = n("763296"),
                r = n("697426"),
                o = n("242291"),
                u = n("641015"),
                d = n("594174"),
                c = n("996106"),
                f = n("452426"),
                E = n("736045"),
                h = n("186901"),
                C = n("231338");
            t.default = {
                [C.RPCCommands.GET_SOUNDBOARD_SOUNDS]: {
                    scope: {
                        [h.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, h.RPC_LOCAL_SCOPE]
                    },
                    async handler() {
                        await (0, l.maybeFetchSoundboardSounds)();
                        let e = i.default.getSounds(),
                            t = [];
                        return e.forEach(e => e.forEach(e => t.push((0, r.soundboardSoundToAPI)(e)))), t
                    }
                },
                [C.RPCCommands.PLAY_SOUNDBOARD_SOUND]: {
                    scope: {
                        [h.RPC_SCOPE_CONFIG.ALL]: [a.OAuth2Scopes.RPC, a.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, f.default)(e).required().keys({
                        guild_id: e.string(),
                        sound_id: e.string()
                    }),
                    async handler(e) {
                        let {
                            args: {
                                guild_id: t,
                                sound_id: n
                            }
                        } = e;
                        await (0, l.maybeFetchSoundboardSounds)();
                        let a = d.default.getCurrentUser(),
                            r = i.default.getSound(t, n),
                            f = (0, E.default)(),
                            h = null != r && null != a && (0, o.canUseSoundboardSound)(a, r, f);
                        if (null == f) throw new c.default({
                            errorCode: C.RPCErrors.INVALID_CHANNEL
                        }, "Invalid Channel.");
                        if (h) {
                            if ((0, u.default)(f)) null != r && (0, o.playSound)(r, f.id, [s.default.RPC]);
                            else throw new c.default({
                                errorCode: C.RPCErrors.INVALID_PERMISSIONS
                            }, "Invalid Permissions.")
                        } else throw new c.default({
                            errorCode: C.RPCErrors.INVALID_SOUND
                        }, "Invalid Sound.")
                    }
                }
            }
        },
        881393: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("653041");
            var a = n("496929"),
                s = n("16084"),
                l = n("558381"),
                i = n("115130"),
                r = n("106976"),
                o = n("695103"),
                u = n("996106"),
                d = n("334288"),
                c = n("186901"),
                f = n("981631");
            async function E(e, t) {
                let n = t.filter(e => e.type === f.SKUTypes.SUBSCRIPTION_GROUP),
                    a = await Promise.all(n.map(async t => await (0, r.fetchAllSubscriptionListingsDataForApplication)(e, t.id))),
                    s = [];
                return a.forEach(e => {
                    if (null == e) return null;
                    let n = e.subscription_listings;
                    if (null == n) return null;
                    let a = [];
                    n.forEach(e => {
                        e.subscription_plans.forEach(n => {
                            var s;
                            let l = null == n ? void 0 : n.price,
                                i = t.find(e => e.id === n.sku_id);
                            if (null == i) return;
                            let r = {
                                id: n.sku_id,
                                name: i.name,
                                type: i.type,
                                price: {
                                    amount: l,
                                    currency: f.CurrencyCodes.USD
                                },
                                application_id: e.application_id,
                                flags: e.sku_flags,
                                release_date: null !== (s = i.release_date) && void 0 !== s ? s : null
                            };
                            a.push(r)
                        })
                    }), a.filter(e => (null == e ? void 0 : e.price) != null).forEach(e => s.push(e))
                }), s
            }
            async function h(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default({
                    errorCode: f.RPCErrors.INVALID_COMMAND
                }, "No application.");
                if (o.default.inTestModeForApplication(n) || i.default.inDevModeForApplication(n)) {
                    let e = await s.fetchTestSKUsForApplication(n, !1),
                        t = await E(n, e);
                    return [...e.filter(e => null != e.price), ...t]
                }
                let a = await l.fetchAllStoreListingsForApplication(n),
                    r = a.filter(e => e.sku.type !== f.SKUTypes.SUBSCRIPTION_GROUP).map(e => e.sku).filter(e => null != e.price);
                return [...r, ...await E(n, a.map(e => e.sku))]
            }

            function C(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default({
                    errorCode: f.RPCErrors.INVALID_COMMAND
                }, "No application.");
                return a.fetchUserEntitlementsForApplication(n)
            }
            t.default = {
                [f.RPCCommands.GET_SKUS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: h
                },
                [f.RPCCommands.GET_ENTITLEMENTS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: C
                },
                [f.RPCCommands.GET_SKUS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        skus: await h(e)
                    })
                },
                [f.RPCCommands.GET_ENTITLEMENTS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        entitlements: await C(e)
                    })
                }
            }
        },
        905534: function(e, t, n) {
            "use strict";
            n.r(t), n("177593");
            var a = n("626135"),
                s = n("189800"),
                l = n("996106"),
                i = n("34954"),
                r = n("986768"),
                o = n("981631");
            t.default = {
                [o.RPCCommands.SUBSCRIBE]: {
                    async handler(e) {
                        let {
                            server: t,
                            socket: n,
                            evt: u,
                            args: d
                        } = e, c = t.events[u];
                        if (null == c) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_EVENT
                        }, "Invalid event: ".concat(u));
                        if (!(0, i.default)(n.authorization.scopes, c.scope)) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_PERMISSIONS
                        }, "Not authenticated or invalid scope");
                        if (s.ExperimentRPCServerAnalyticsKillswitch.getCurrentConfig({
                                location: "RPCServer"
                            }).enabled && a.default.track(o.AnalyticEvents.RPC_SUBSCRIPTION_REQUESTED, {
                                event: u,
                                scope: "object" == typeof c.scope ? JSON.stringify(c.scope) : c.scope,
                                application_id: n.application.id,
                                socket_scope: n.authorization.scopes.toString()
                            }), null != c.validation) {
                            let e = await t.getJoi();
                            if (null != e.validate(d, c.validation(e), {
                                    convert: !1
                                }).error) throw new l.default({
                                errorCode: o.RPCErrors.INVALID_PAYLOAD
                            }, "Invalid subscription parameters provided")
                        }
                        let f = c.handler({
                                args: d,
                                socket: n
                            }),
                            E = await (0, r.getInitialSubscriptionPayload)(n, u, d);
                        return new Promise(e => {
                            setImmediate(() => {
                                t.addSubscription(n, u, d, f), null != E && t.dispatchToSubscriptions(u, e => e.socket.id === n.id, E)
                            }), e({
                                evt: u
                            })
                        })
                    }
                },
                [o.RPCCommands.UNSUBSCRIBE]: {
                    handler(e) {
                        let {
                            server: t,
                            socket: n,
                            evt: a,
                            args: s
                        } = e;
                        if (null == t.events[a]) throw new l.default({
                            errorCode: o.RPCErrors.INVALID_EVENT
                        }, "Invalid event: ".concat(a));
                        return t.removeSubscription(n, a, s), {
                            evt: a
                        }
                    }
                }
            }
        },
        273487: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("243814"),
                s = n("706454"),
                l = n("981631");
            t.default = {
                [l.RPCCommands.USER_SETTINGS_GET_LOCALE]: {
                    scope: a.OAuth2Scopes.IDENTIFY,
                    handler: () => ({
                        locale: s.default.locale
                    })
                }
            }
        },
        543815: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("232567"),
                s = n("996106"),
                l = n("452426"),
                i = n("863141"),
                r = n("186901"),
                o = n("981631");
            t.default = {
                [o.RPCCommands.GET_USER]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, l.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        return (0, a.getUser)(t).then(i.default).catch(() => {
                            throw new s.default({
                                errorCode: o.RPCErrors.INVALID_USER
                            }, "Invalid user id: ".concat(t))
                        })
                    }
                }
            }
        },
        845752: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("186901"),
                r = n("981631");

            function o(e, t) {
                return {
                    [r.RPCEvents.VOICE_SETTINGS_UPDATE]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler: () => t => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = t, l = e();
                            return !s().isEqual(l, n) && a(l), l
                        }
                    },
                    [r.RPCEvents.VOICE_SETTINGS_UPDATE_2]: {
                        scope: i.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: n
                            } = e;
                            return e => {
                                let {
                                    prevState: a,
                                    dispatch: l
                                } = e;
                                if (null == n.application.id) return a;
                                let i = t(n.application.id);
                                return !s().isEqual(i, a) && l(i), i
                            }
                        }
                    }
                }
            }
        },
        13838: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("392711"),
                s = n.n(a),
                l = n("243814"),
                i = n("902704"),
                r = n("812206"),
                o = n("594190"),
                u = n("199902"),
                d = n("592125"),
                c = n("430824"),
                f = n("131951"),
                E = n("19780"),
                h = n("594174"),
                C = n("979651"),
                _ = n("996106"),
                m = n("914946"),
                S = n("238679"),
                p = n("452426"),
                I = n("295424"),
                g = n("863141"),
                T = n("186901"),
                A = n("981631");
            let N = e => (0, p.default)(e).required().keys({
                channel_id: e.string().required()
            });

            function v(e) {
                var t;
                let {
                    args: {
                        channel_id: n
                    },
                    socket: a
                } = e, s = d.default.getChannel(n);
                if (null == s || !(0, m.hasMessageReadPermission)(s, a.application.id, a.authorization.scopes)) throw new _.default({
                    errorCode: A.RPCErrors.INVALID_CHANNEL
                }, "Invalid channel id: ".concat(n));
                if (s.isNSFW() && (null === (t = h.default.getCurrentUser()) || void 0 === t ? void 0 : t.nsfwAllowed) !== !0) throw new _.default({
                    errorCode: A.RPCErrors.INVALID_CHANNEL
                }, "Invalid nsfw channel id: ".concat(s.id))
            }
            let R = e => (0, p.default)(e).keys({
                channel_id: e.string().allow(null)
            });

            function O(e) {
                let {
                    args: {
                        channel_id: t
                    }
                } = e;
                if (null != t && null == d.default.getChannel(t)) throw new _.default({
                    errorCode: A.RPCErrors.INVALID_CHANNEL
                }, "Invalid channel id: ".concat(t))
            }
            let L = {
                [A.RPCEvents.GUILD_STATUS]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: e => (0, p.default)(e).required().keys({
                        guild_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                guild_id: t
                            }
                        } = e;
                        if (null == c.default.getGuild(t)) throw new _.default({
                            errorCode: A.RPCErrors.INVALID_GUILD
                        }, "Invalid guild id: ".concat(t));
                        return e => {
                            var n;
                            let {
                                prevState: a,
                                dispatch: l
                            } = e, i = c.default.getGuild(t);
                            if (null == i) return;
                            let r = {
                                guild: {
                                    id: i.id,
                                    name: i.name,
                                    icon_url: null !== (n = i.getIconURL(128)) && void 0 !== n ? n : null
                                },
                                online: 0
                            };
                            return !s().isEqual(a, r) && l(r), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_CREATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    validation: e => (0, p.default)(e).required().keys({
                        channel_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == d.default.getChannel(t)) throw new _.default({
                            errorCode: A.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = d.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id));
                            return n && s().differenceBy(r, n, e => {
                                let {
                                    userId: t
                                } = e;
                                return t
                            }).forEach(e => a((0, m.transformVoiceState)(i, l.id, e))), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_DELETE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    validation: e => (0, p.default)(e).required().keys({
                        channel_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == d.default.getChannel(t)) throw new _.default({
                            errorCode: A.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = d.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id));
                            return s().differenceBy(n, r, e => {
                                let {
                                    userId: t
                                } = e;
                                return t
                            }).forEach(e => a((0, m.transformVoiceState)(i, l.id, e))), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    validation: e => (0, p.default)(e).required().keys({
                        channel_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == d.default.getChannel(t)) throw new _.default({
                            errorCode: A.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = d.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id)).map(e => (0, m.transformVoiceState)(i, l.id, e));
                            return s().differenceWith(r, n, s().isEqual).forEach(e => a(e)), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_CONNECTION_STATUS]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            state: (0, m.getVoiceConnectionState)(E.default.getState()),
                            hostname: E.default.getHostname(),
                            pings: E.default.getPings(),
                            average_ping: E.default.getAveragePing(),
                            last_ping: E.default.getLastPing()
                        };
                        return !s().isEqual(a, t) && n(a), a
                    }
                },
                [A.RPCEvents.MESSAGE_CREATE]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: N,
                    handler: v
                },
                [A.RPCEvents.MESSAGE_UPDATE]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: N,
                    handler: v
                },
                [A.RPCEvents.MESSAGE_DELETE]: {
                    scope: l.OAuth2Scopes.RPC,
                    validation: N,
                    handler: v
                },
                [A.RPCEvents.SPEAKING_START]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ, T.RPC_LOCAL_SCOPE]
                    },
                    validation: R,
                    handler: O
                },
                [A.RPCEvents.SPEAKING_STOP]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ, T.RPC_LOCAL_SCOPE]
                    },
                    validation: R,
                    handler: O
                },
                [A.RPCEvents.GUILD_CREATE]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.CHANNEL_CREATE]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.GAME_JOIN]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.GAME_SPECTATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_JOIN]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_AUTHENTICATED_SCOPE, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_SPECTATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_AUTHENTICATED_SCOPE, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_INVITE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_PIP_MODE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_AUTHENTICATED_SCOPE, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, T.RPC_AUTHENTICATED_SCOPE, T.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE]: S.activityInstanceConnectedParticipantsUpdateEvent,
                [A.RPCEvents.THERMAL_STATE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [T.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ORIENTATION_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [T.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.VOICE_CHANNEL_SELECT]: {
                    scope: l.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.NOTIFICATION_CREATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ALL]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_NOTIFICATIONS_READ]
                    },
                    handler() {}
                },
                [A.RPCEvents.RELATIONSHIP_UPDATE]: {
                    scope: l.OAuth2Scopes.RELATIONSHIPS_READ,
                    handler() {}
                },
                [A.RPCEvents.CURRENT_USER_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [T.RPC_LOCAL_SCOPE, l.OAuth2Scopes.IDENTIFY]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            currentUser: h.default.getCurrentUser()
                        };
                        return null != a.currentUser && (null == t || !(0, i.default)(a, t)) && n((0, g.default)(a.currentUser)), a
                    }
                },
                [A.RPCEvents.ENTITLEMENT_CREATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [T.RPC_LOCAL_SCOPE, T.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ENTITLEMENT_DELETE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ANY]: [T.RPC_LOCAL_SCOPE, T.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.USER_ACHIEVEMENT_UPDATE]: {
                    scope: T.RPC_LOCAL_SCOPE,
                    handler() {}
                },
                [A.RPCEvents.SCREENSHARE_STATE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ALL]: [T.RPC_LOCAL_SCOPE, l.OAuth2Scopes.RPC_SCREENSHARE_READ]
                    },
                    handler: () => e => {
                        var t, n;
                        let {
                            prevState: a,
                            dispatch: l
                        } = e, i = u.default.getStreamerActiveStreamMetadata(), d = (null == i ? void 0 : i.pid) != null ? o.default.getGameForPID(i.pid) : null, c = (null == d ? void 0 : d.id) != null ? r.default.getApplication(d.id) : null, f = null != c ? (0, I.default)(c) : null, E = null == i ? void 0 : i.sourceName, h = {
                            active: null != i,
                            pid: null !== (t = null == i ? void 0 : i.pid) && void 0 !== t ? t : null,
                            application: (n = null != f, n) ? {
                                name: E
                            } : null
                        };
                        return !s().isEqual(h, a) && l(h), h
                    }
                },
                [A.RPCEvents.VIDEO_STATE_UPDATE]: {
                    scope: {
                        [T.RPC_SCOPE_CONFIG.ALL]: [T.RPC_LOCAL_SCOPE, l.OAuth2Scopes.RPC_VIDEO_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            active: f.default.isVideoEnabled()
                        };
                        return !s().isEqual(a, t) && n(a), a
                    }
                }
            };
            t.default = L
        },
        986768: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getInitialSubscriptionPayload: function() {
                    return d
                }
            });
            var a = n("317381"),
                s = n("573979"),
                l = n("42352"),
                i = n("886355"),
                r = n("238679"),
                o = n("981631"),
                u = n("701488");
            async function d(e, t, n) {
                var d, c;
                switch (t) {
                    case o.RPCEvents.ACTIVITY_PIP_MODE_UPDATE: {
                        let t = null === (d = e.application) || void 0 === d ? void 0 : d.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            is_pip_mode: n !== u.ActivityLayoutMode.FOCUSED
                        } : null
                    }
                    case o.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE: {
                        let t = null === (c = e.application) || void 0 === c ? void 0 : c.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            layout_mode: n
                        } : null
                    }
                    case o.RPCEvents.THERMAL_STATE_UPDATE: {
                        let e = await (0, l.default)();
                        if (null == e) return null;
                        return {
                            thermal_state: (0, s.default)(e)
                        }
                    }
                    case o.RPCEvents.ORIENTATION_UPDATE: {
                        let e = i.default.isScreenLandscape();
                        if (null != e) return {
                            screen_orientation: e ? u.ActivityScreenOrientation.LANDSCAPE : u.ActivityScreenOrientation.PORTRAIT
                        };
                        return null
                    }
                    case o.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE:
                        return (0, r.activityInstanceConnectedParticipants)();
                    default:
                        return null
                }
            }
        },
        76238: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("392711"),
                s = n.n(a),
                l = n("996106"),
                i = n("981631");

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class o {
                constructor(e, t, n) {
                    if (r(this, "transport", void 0), r(this, "version", void 0), r(this, "encoding", void 0), r(this, "id", void 0), r(this, "authorization", void 0), r(this, "application", void 0), this.transport = e, this.version = t, this.encoding = n, this.id = s().uniqueId(), this.authorization = {
                            authing: !1,
                            scopes: [],
                            accessToken: null,
                            expires: new Date(0)
                        }, this.application = {
                            id: null,
                            name: null,
                            icon: null
                        }, null == t || t > i.RPC_VERSION || t < 1) throw new l.default({
                        closeCode: i.RPCCloseCodes.INVALID_VERSION
                    }, "Invalid Version: ".concat(t))
                }
            }
        },
        915357: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("996106"),
                s = n("631467"),
                l = n("76238"),
                i = n("186901"),
                r = n("981631");

            function o(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class u extends l.default {
                send(e) {
                    var t;
                    null === (t = this.onSendingToRPCClient) || void 0 === t || t.call(this, e, this.id), this.postMessageToRPCClient([s.default.FRAME, e], this.origin)
                }
                close(e, t) {
                    !this.closed && this.postClose(this.origin, {
                        code: e,
                        message: t
                    }, this.postMessageToRPCClient), this.closed = !0
                }
                constructor({
                    origin: e,
                    postMessageToRPCClient: t,
                    frameId: n,
                    version: s,
                    encoding: l,
                    logger: u,
                    postClose: d,
                    onSendingToRPCClient: c
                }) {
                    if (super(i.TransportTypes.POST_MESSAGE, s, l), o(this, "origin", void 0), o(this, "frameId", void 0), o(this, "postMessageToRPCClient", void 0), o(this, "logger", void 0), o(this, "postClose", void 0), o(this, "onSendingToRPCClient", void 0), o(this, "closed", void 0), -1 === ["etf", "json"].indexOf(l)) throw new a.default({
                        closeCode: r.RPCCloseCodes.INVALID_ENCODING
                    }, "Invalid Encoding: ".concat(l));
                    if ("etf" === l) throw new a.default({
                        closeCode: r.RPCCloseCodes.INVALID_ENCODING
                    }, "Erlpack cannot be used on this client");
                    this.origin = e, this.postMessageToRPCClient = t, this.frameId = n, this.logger = u, this.postClose = d, this.onSendingToRPCClient = c, this.closed = !1
                }
            }
        },
        46832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("47120");
            var a = n("836560"),
                s = n("317381"),
                l = n("626135"),
                i = n("585483"),
                r = n("70956"),
                o = n("996106"),
                u = n("631467"),
                d = n("981631");

            function c(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let f = 10 * r.default.Millis.SECOND,
                E = new Map,
                h = new Set,
                C = (e, t, n) => {
                    n([u.default.CLOSE, t], e)
                };
            class _ extends a.EventEmitter {
                routeEvent(e, t, n, a) {
                    if (!Array.isArray(n)) {
                        console.warn("[PostMessageTransport] Protocol error: event data should be an Array!");
                        return
                    }
                    let [s, l] = n;
                    switch (s) {
                        case u.default.HANDSHAKE:
                            if (null != e) throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Already connected");
                            return this.handleHandshake(t, l, a);
                        case u.default.FRAME:
                            if (null == e) throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Not connected");
                            return this.handleFrame(t, e, l);
                        case u.default.CLOSE:
                            if (null == e) throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Not connected");
                            return this.handleClose(e, l);
                        default:
                            throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Invalid opcode")
                    }
                }
                constructor(e, t, a, r) {
                    var u;
                    super(), u = this, c(this, "validateSocketClient", void 0), c(this, "logger", void 0), c(this, "createPostMessageProxySocket", void 0), c(this, "onFrameHandled", void 0), c(this, "handshakeFailureTimeoutId", void 0), c(this, "disconnectSocket", function(e, t) {
                        var n, a;
                        let s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        u.emit("disconnect", e, s ? void 0 : t), e.close(t.code, null !== (n = t.message) && void 0 !== n ? n : "Unknown");
                        let [l] = null !== (a = Array.from(E.entries()).find(t => {
                            let [n, a] = t;
                            return a === e
                        })) && void 0 !== a ? a : [null, null];
                        null != l && E.delete(l)
                    }), c(this, "handleIFrameMount", e => {
                        let {
                            id: t
                        } = e;
                        h.add(t), this.handshakeFailureTimeoutId = setTimeout(() => {
                            Array.from(s.default.getSelfEmbeddedActivities().entries()).forEach(e => {
                                let [t, n] = e;
                                l.default.track(d.AnalyticEvents.ACTIVITY_HANDSHAKE_TIMED_OUT, {
                                    application_id: t,
                                    channel_id: n.channelId,
                                    guild_id: n.guildId,
                                    timeout_ms: f
                                })
                            })
                        }, f)
                    }), c(this, "handleIFrameUnmount", e => {
                        var t;
                        let {
                            id: n
                        } = e;
                        h.delete(n);
                        let [a, s] = null !== (t = Array.from(E.entries()).find(e => {
                            let [t, a] = e;
                            return a.frameId === n
                        })) && void 0 !== t ? t : [null, null];
                        null != s && null != a && (this.disconnectSocket(s, {
                            code: d.RPCCloseCodes.CLOSE_NORMAL,
                            message: "iFrame gone"
                        }, !0), E.delete(a))
                    }), c(this, "handleMessage", (e, t, n) => {
                        let a = E.get(t);
                        try {
                            this.routeEvent(a, t, e, n)
                        } catch (e) {
                            if (e instanceof o.default && e.errorCode === d.RPCErrors.INVALID_PAYLOAD) throw e;
                            null != a ? this.disconnectSocket(a, {
                                code: e.code,
                                message: e.message
                            }, !0) : C(t, {
                                code: e.code,
                                message: e.message
                            }, n)
                        }
                    }), c(this, "handleFrame", (e, t, n) => {
                        var a;
                        let s;
                        if (e !== t.origin) throw new o.default({
                            closeCode: d.RPCCloseCodes.INVALID_ORIGIN
                        }, "Origin has changed");
                        try {
                            s = "string" == typeof n ? JSON.parse(n) : n
                        } catch (e) {
                            throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Payload not recognized encoding")
                        }
                        null === (a = this.onFrameHandled) || void 0 === a || a.call(this, s, this.logger, t), this.emit("request", t, s)
                    }), c(this, "handleHandshake", async (e, t, a) => {
                        let s;
                        null != this.handshakeFailureTimeoutId && clearTimeout(this.handshakeFailureTimeoutId);
                        let l = (await n.e("56268").then(n.t.bind(n, "826753", 23))).default;
                        try {
                            l.assert(t, l.object().required().keys({
                                v: l.number().min(1).max(1).required(),
                                encoding: l.string().equal("json").optional(),
                                client_id: l.string().required(),
                                frame_id: l.string().required()
                            }))
                        } catch (e) {
                            throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, e.message)
                        }
                        let i = t.frame_id;
                        if (!h.has(i)) throw this.logger.error("Unrecognized frame ID ".concat(i)), new o.default({
                            closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                        }, "Unrecognized frame ID ".concat(i));
                        try {
                            var r;
                            s = this.createPostMessageProxySocket({
                                origin: e,
                                postMessageToRPCClient: a,
                                frameId: i,
                                version: Number(t.v),
                                logger: this.logger,
                                postClose: C,
                                encoding: null !== (r = t.encoding) && void 0 !== r ? r : "json"
                            })
                        } catch (e) {
                            throw this.logger.error("Error opening window socket ".concat(e)), e
                        }
                        this.logger.info("Socket Opened: ".concat(s.id));
                        try {
                            if (await this.validateSocketClient(s, e, t.client_id), !h.has(i)) throw this.logger.error("Frame ID ".concat(i, " no longer exists")), new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, "Unrecognized frame ID ".concat(i));
                            E.set(e, s), h.delete(i), this.emit("connect", s), this.logger.info("Socket Validated: ".concat(s.id))
                        } catch (e) {
                            throw this.logger.info("Socket Closed: ".concat(s.id, ", ").concat(e.message)), e
                        }
                    }), c(this, "handleClose", async (e, t) => {
                        let a = (await n.e("56268").then(n.t.bind(n, "826753", 23))).default;
                        try {
                            a.assert(t, a.object().required().unknown(!0).keys({
                                code: a.number().valid(Object.values(d.RPCCloseCodes)).required(),
                                message: a.string().optional()
                            }))
                        } catch (e) {
                            throw new o.default({
                                closeCode: d.RPCCloseCodes.CLOSE_UNSUPPORTED
                            }, e.message)
                        }
                        this.disconnectSocket(e, t)
                    }), i.ComponentDispatch.subscribe(d.ComponentActions.IFRAME_MOUNT, this.handleIFrameMount), i.ComponentDispatch.subscribe(d.ComponentActions.IFRAME_UNMOUNT, this.handleIFrameUnmount), this.validateSocketClient = e, this.logger = t, this.createPostMessageProxySocket = a, this.onFrameHandled = r
                }
            }
        },
        30643: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("237997"),
                s = n("998502"),
                l = n("576027"),
                i = n("13838"),
                r = n("812967"),
                o = n("350085"),
                u = n("910484"),
                d = n("443952"),
                c = n("266572"),
                f = n("177698"),
                E = n("121826"),
                h = n("567481"),
                C = n("498164"),
                _ = n("111097"),
                m = n("908711"),
                S = n("197941"),
                p = n("462414"),
                I = n("662194"),
                g = n("188861");
            let T = {
                    ...l.crossPlatformCommands,
                    ...d.default,
                    ...c.default,
                    ...E.default,
                    ...h.default,
                    ...C.default,
                    ..._.default,
                    ...S.default,
                    ...I.default,
                    ...p.default,
                    ...f.default,
                    ...m.default
                },
                A = {
                    ...i.default,
                    ...o.overlayEventHandlers,
                    ...u.voiceSettingsEventHandlers
                };
            t.default = {
                server: r.default,
                commands: T,
                events: A,
                stores: [a.default],
                transports: [g.default],
                registerTransportsForEmbeddedPlatform: function() {
                    s.default.ensureModule("discord_rpc").then(() => {
                        for (let e of [n("178318").default, n("967351").default]) r.default.registerTransport(e)
                    })
                }
            }
        },
        350085: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                overlayEventHandlers: function() {
                    return d
                }
            });
            var a = n("392711"),
                s = n.n(a),
                l = n("283595"),
                i = n("808506"),
                r = n("996106"),
                o = n("186901"),
                u = n("981631");
            let d = {
                [u.RPCEvents.OVERLAY_UPDATE]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                pid: t
                            },
                            socket: n
                        } = e;
                        if ("number" != typeof t || t < 10) throw new r.default({
                            errorCode: u.RPCErrors.INVALID_EVENT
                        }, "Invalid pid");
                        return e => {
                            let {
                                prevState: a,
                                dispatch: r
                            } = e, o = i.default.enabled, u = !0, d = n.application.id;
                            if (null != d) {
                                let e = l.default.getActiveLibraryApplication(d);
                                null != e && (o = o && e.isOverlayEnabled()), u = i.default.isInputLocked(t)
                            }
                            let c = {
                                enabled: o,
                                locked: u
                            };
                            return !s().isEqual(c, a) && r(c), c
                        }
                    }
                }
            }
        },
        910484: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                voiceSettingsEventHandlers: function() {
                    return l
                }
            });
            var a = n("845752"),
                s = n("852926");
            let l = (0, a.default)(s.getDeprecatedVoiceSettings, s.getVoiceSettings)
        },
        852926: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getDeprecatedVoiceSettings: function() {
                    return h
                },
                getVoiceSettings: function() {
                    return C
                },
                unlockOverlay: function() {
                    return f
                },
                validateSocketClient: function() {
                    return E
                }
            });
            var a = n("13245"),
                s = n("808506"),
                l = n("998502"),
                i = n("13140"),
                r = n("996106"),
                o = n("914946"),
                u = n("186901"),
                d = n("981631");
            let c = ["207646673902501888"];

            function f(e) {
                return s.default.isReady(e) ? (a.default.setLocked(!1, e), {
                    lock() {
                        a.default.setLocked(!0, e)
                    },
                    context: d.AppContext.OVERLAY
                }) : (l.default.focus(null, !0), {
                    lock() {
                        l.default.setForegroundProcess(e)
                    },
                    context: d.AppContext.APP
                })
            }
            let E = async (e, t, n) => {
                if ((0, o.validateOriginAndUpdateSocket)(e, t), (null == n || "" === n) && (0, o.isMatchingOrigin)(t)) return e.authorization.scopes = [u.RPC_PRIVATE_SCOPE, u.RPC_PRIVATE_LIMITED_SCOPE], Promise.resolve();
                if (null == n || "" === n) return Promise.reject(new r.default({
                    closeCode: d.RPCCloseCodes.INVALID_CLIENTID
                }, "No Client ID Specified"));
                let a = l.default.releaseChannel !== d.PublicReleaseChannels.CANARY && !c.includes(n) && e.transport !== u.TransportTypes.POST_MESSAGE;
                return await (0, o.processSocketThrottlers)(n, a), (0, o.fetchApplicationsRPC)(e, n, t)
            }, h = () => (0, o.getDeprecatedVoiceSettingsWithShortcut)(e => {
                let t = [];
                if (null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut)) t = e.modeOptions.shortcut.map(e => {
                    var t;
                    return {
                        type: e[0],
                        code: e[1],
                        name: null !== (t = (0, i.codeToKey)(e)) && void 0 !== t ? t : "unknown"
                    }
                });
                return t
            }), C = e => (0, o.getVoiceSettingsWithShortcut)(e, e => {
                let t = "";
                return null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut) && (t = (0, i.toString)(e.modeOptions.shortcut)), t
            })
        },
        298969: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("606271"),
                s = n("30643");
            t.default = new a.default(s.default)
        },
        443952: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("411104"), n("789020");
            var a = n("735250");
            n("470079");
            var s = n("243814"),
                l = n("45792"),
                i = n("481060"),
                r = n("278323"),
                o = n("988298"),
                u = n("224706"),
                d = n("45114"),
                c = n("479531"),
                f = n("40851"),
                E = n("566620"),
                h = n("596223"),
                C = n("838195"),
                _ = n("928518"),
                m = n("592125"),
                S = n("293273"),
                p = n("885110"),
                I = n("451478"),
                g = n("630388"),
                T = n("823379"),
                A = n("591759"),
                N = n("228488"),
                v = n("996106"),
                R = n("914946"),
                O = n("452426"),
                L = n("561205"),
                P = n("600027"),
                y = n("852926"),
                M = n("186901"),
                D = n("981631");
            async function x(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "",
                    l = S.default.getApplicationActivity(t);
                if (null == l || null == l.secrets || !(0, R.validateActivityInvite)(a, l.party, l.secrets)) throw new v.default({
                    errorCode: D.RPCErrors.NO_ELIGIBLE_ACTIVITY
                }, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                let i = (0, h.default)(l, p.default);
                if (i) {
                    let {
                        lock: t
                    } = (0, y.unlockOverlay)(e);
                    return (0, o.openModal)(l, i).then(() => {
                        throw t(), new v.default({
                            errorCode: D.RPCErrors.NO_ELIGIBLE_ACTIVITY
                        }, "No eligible activity for application. Ensure user does have have privacy enabled.")
                    })
                }
                await r.default.sendActivityInviteUser({
                    userId: n,
                    type: a,
                    activity: l,
                    content: s,
                    location: "In-Game Invite"
                })
            }
            t.default = {
                [D.RPCCommands.SEND_ACTIVITY_JOIN_INVITE]: {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                pid: a
                            }
                        } = e, s = t.application.id;
                        if (null == s) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return x(a, s, n, D.ActivityActionTypes.JOIN)
                    }
                },
                [D.RPCCommands.CLOSE_ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            args: {
                                user_id: t
                            }
                        } = e, n = m.default.getDMFromUserId(t);
                        null != n && (0, d.ack)(n, !0, !0)
                    }
                },
                [D.RPCCommands.ACTIVITY_INVITE_USER]: {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, O.default)(e).required().keys({
                        user_id: e.string().required(),
                        type: e.number().required().valid([D.ActivityActionTypes.JOIN]),
                        content: e.string().min(0).max(1024),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                content: s,
                                pid: l
                            }
                        } = e, i = t.application.id;
                        if (null == i) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return x(l, i, a, n, s)
                    }
                },
                [D.RPCCommands.ACCEPT_ACTIVITY_INVITE]: {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, O.default)(e).required().keys({
                        type: e.number().required().valid([D.ActivityActionTypes.JOIN]),
                        user_id: e.string().required(),
                        session_id: e.string().required(),
                        channel_id: e.string().required(),
                        message_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                session_id: s,
                                channel_id: l,
                                message_id: i
                            }
                        } = e, r = t.application.id;
                        if (null == r) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let o = Promise.resolve(!1);
                        if (n === D.ActivityActionTypes.JOIN) o = u.default.join({
                            userId: a,
                            sessionId: s,
                            applicationId: r,
                            channelId: l,
                            messageId: i
                        });
                        return o.then(e => {
                            if (!e) throw new v.default({
                                errorCode: D.RPCErrors.INVALID_INVITE
                            }, "Invite is expired or invalid.")
                        })
                    }
                },
                [D.RPCCommands.OPEN_INVITE_DIALOG]: {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE, M.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t
                        } = e, {
                            channel: s,
                            guild: l
                        } = (0, P.validateOpenInviteDialog)(), r = _.default.getWindow(D.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                        (null == r ? void 0 : r.closed) && (r = null);
                        let o = null != r ? D.AppContext.POPOUT : D.AppContext.APP;
                        (0, N.exitFullScreen)({}, null == r ? void 0 : r.document), (0, i.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("7654")]).then(n.bind(n, "560114"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: l,
                                channel: s,
                                applicationId: t.application.id,
                                analyticsLocation: D.AnalyticsLocations.ACTIVITY_RPC,
                                source: D.InstantInviteSources.ACTIVITY_INVITE
                            })
                        }, {
                            contextKey: o === D.AppContext.POPOUT ? i.POPOUT_MODAL_CONTEXT : i.DEFAULT_MODAL_CONTEXT
                        })
                    }
                },
                [D.RPCCommands.INITIATE_IMAGE_UPLOAD]: (0, l.createRPCCommand)(D.RPCCommands.INITIATE_IMAGE_UPLOAD, {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [s.OAuth2Scopes.RPC, M.RPC_LOCAL_SCOPE, M.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n
                        } = e, a = n.application.id;
                        if (null == a) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let s = null === (t = (0, L.default)()) || void 0 === t ? void 0 : t.id;
                        if (null == s) throw new v.default({
                            errorCode: D.RPCErrors.UNKNOWN_ERROR
                        }, "Unable to find selected channel");
                        return new Promise((e, t) => {
                            ! function(e, t) {
                                var n;
                                let a = I.default.getLastFocusedWindowId(),
                                    s = null == a ? null : null === (n = (0, f.getAppWindowContextValue)(a)) || void 0 === n ? void 0 : n.renderWindow;
                                if (null == s) throw new v.default({
                                    errorCode: D.RPCErrors.UNKNOWN_ERROR
                                }, "No valid window found");
                                let l = s.document.createElement("input");
                                l.style.display = "none", l.type = "file", l.accept = "image/jpeg, image/jpg, image/png, image/gif";
                                let i = () => {
                                    (null == l.files || 0 === l.files.length) && t(), s.document.body.removeEventListener("focus", i, !0), setTimeout(() => {
                                        s.document.body.removeChild(l)
                                    }, 1e3)
                                };
                                l.addEventListener("change", () => {
                                    (0, T.isNotNullish)(l.files) && e(l.files[0]), i()
                                }), l.addEventListener("cancel", () => {
                                    i()
                                }), s.document.body.addEventListener("focus", i, !0), s.document.body.appendChild(l), l.click()
                            }(async n => {
                                let l = await (0, E.uploadImageAttachment)(a, s, n);
                                (0, T.isNotNullish)(l) && (0, T.isNotNullish)(l.url) && !(l instanceof c.default) ? e({
                                    image_url: l.url
                                }): t(l)
                            }, () => t(Error("Upload canceled")))
                        }).catch(e => {
                            var t;
                            throw new v.default({
                                errorCode: D.RPCErrors.UNKNOWN_ERROR
                            }, null !== (t = null == e ? void 0 : e.message) && void 0 !== t ? t : "Failed to upload image")
                        })
                    }
                }),
                [D.RPCCommands.OPEN_SHARE_MOMENT_DIALOG]: (0, l.createRPCCommand)(D.RPCCommands.OPEN_SHARE_MOMENT_DIALOG, {
                    scope: {
                        [M.RPC_SCOPE_CONFIG.ANY]: [M.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n,
                            args: {
                                mediaUrl: a
                            }
                        } = e;
                        (0, R.validatePostMessageTransport)(n.transport);
                        let s = n.application.id;
                        if (null == s) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        if (!(0, g.hasFlag)(null !== (t = n.application.flags) && void 0 !== t ? t : 0, D.ApplicationFlags.EMBEDDED)) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "This application cannot access this API");
                        let l = (0, L.default)();
                        if (null == l) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_COMMAND
                        }, "No channel found");
                        if (!A.default.isDiscordCdnUrl(a)) throw new v.default({
                            errorCode: D.RPCErrors.INVALID_PAYLOAD
                        }, "mediaUrl must be a Discord CDN url");
                        (0, C.openActivityShareMomentModal)({
                            applicationId: s,
                            channelId: l.id,
                            mediaUrl: a
                        })
                    }
                })
            }
        },
        266572: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("544891"),
                l = n("846519"),
                i = n("481060"),
                r = n("496929"),
                o = n("115130"),
                u = n("812206"),
                d = n("594174"),
                c = n("580130"),
                f = n("695103"),
                E = n("70956"),
                h = n("998502"),
                C = n("996106"),
                _ = n("186901"),
                m = n("981631");
            let S = 10 * E.default.Millis.SECOND;
            t.default = {
                [m.RPCCommands.VALIDATE_APPLICATION]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            socket: t
                        } = e, s = t.application.id;
                        try {
                            if (null == s) throw new C.default({
                                errorCode: m.RPCErrors.INVALID_COMMAND
                            }, "No application.");
                            let e = u.default.getApplication(s);
                            if (null == e) throw new C.default({
                                errorCode: m.RPCErrors.INVALID_ENTITLEMENT
                            }, "SKU does not exist.");
                            let t = e.primarySkuId;
                            if (null == t) throw new C.default({
                                errorCode: m.RPCErrors.INVALID_ENTITLEMENT
                            }, "SKU does not exist.");
                            return Promise.race([(function(e, t) {
                                let n = c.default.isEntitledToSku(d.default.getCurrentUser(), e, t);
                                return null != n ? Promise.resolve(n) : (0, r.fetchUserEntitlementsForApplication)(t).then(() => !0 === c.default.isEntitledToSku(d.default.getCurrentUser(), e, t))
                            })(t, e.id).then(e => {
                                if (!e) throw new C.default({
                                    errorCode: m.RPCErrors.INVALID_ENTITLEMENT
                                }, "User does not have entitlement.")
                            }), (0, l.timeoutPromise)(S).then(() => {
                                throw new C.default({
                                    errorCode: m.RPCErrors.INVALID_ENTITLEMENT
                                }, "Timed out fetching entitlement.")
                            })])
                        } catch (e) {
                            throw e.code === m.RPCErrors.INVALID_ENTITLEMENT && (h.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("48748")]).then(n.bind(n, "52004"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    applicationId: s
                                })
                            })), e
                        }
                    }
                },
                [m.RPCCommands.GET_ENTITLEMENT_TICKET]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            socket: t
                        } = e, l = t.application.id;
                        if (null == l) throw new C.default({
                            errorCode: m.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return s.HTTP.post({
                            url: m.Endpoints.ENTITLEMENT_TICKET(l),
                            body: {
                                test_mode: f.default.inTestModeForApplication(l) || o.default.inDevModeForApplication(l)
                            },
                            retries: 3,
                            oldFormErrors: !0
                        }).then(e => {
                            let {
                                body: t
                            } = e;
                            return t
                        }).catch(e => {
                            throw h.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("48748")]).then(n.bind(n, "52004"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    applicationId: l
                                })
                            }), e
                        })
                    }
                }
            }
        },
        177698: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("813615"),
                i = n("812206"),
                r = n("69580"),
                o = n("358085"),
                u = n("998502"),
                d = n("996106"),
                c = n("703912"),
                f = n("981631");
            t.default = (0, c.default)(e => {
                var t;
                let {
                    clientId: n,
                    authorizations: o,
                    scopes: u,
                    parsedPermissions: c,
                    responseType: E,
                    redirectUri: h,
                    codeChallenge: C,
                    codeChallengeMethod: _,
                    state: m,
                    guildId: S,
                    channelId: p,
                    prompt: I,
                    disableGuildSelect: g,
                    disclosures: T,
                    integrationType: A
                } = e, N = "OAuth2Authorize_".concat(n, "_").concat(S, "_").concat(p), v = null != A ? null == o ? void 0 : o.get(A) : void 0, R = null !== (t = null == v ? void 0 : v.application) && void 0 !== t ? t : i.default.getApplication(n);
                return new Promise((e, t) => {
                    let i = n => {
                        let {
                            location: a
                        } = n;
                        null != location ? e(a) : t(new d.default({
                            errorCode: f.RPCErrors.OAUTH2_ERROR
                        }, "User cancelled authorization"))
                    };
                    (0, s.openModal)(e => (0, a.jsx)(r.OAuth2AuthorizeModal, {
                        ...e,
                        authorizations: o,
                        clientId: n,
                        scopes: null != u ? u : [],
                        disclosures: null != T ? T : [],
                        callback: i,
                        responseType: E,
                        redirectUri: h,
                        codeChallenge: C,
                        codeChallengeMethod: _,
                        state: m,
                        permissions: c,
                        guildId: S,
                        channelId: p,
                        prompt: I,
                        disableGuildSelect: "boolean" == typeof g ? g : "true" === g,
                        integrationType: A
                    }), {
                        modalKey: N,
                        onCloseRequest: () => {
                            (0, s.closeModal)(N), t(new d.default({
                                errorCode: f.RPCErrors.OAUTH2_ERROR
                            }, "User cancelled authorization"))
                        }
                    }, null != R && (0, l.default)(R, p) ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT)
                })
            }, function(e, t) {
                if (o.isPlatformEmbedded) {
                    let n = (0, l.default)(e, t) ? f.PopoutWindowKeys.CHANNEL_CALL_POPOUT : null;
                    (0, o.isWindows)() ? u.default.minimize(n): u.default.restore(n), u.default.focus(n)
                }
            })
        },
        121826: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("230487"),
                s = n("998502"),
                l = n("914946"),
                i = n("452426"),
                r = n("981631");
            t.default = {
                [r.RPCCommands.ENCOURAGE_HW_ACCELERATION]: {
                    validation: e => (0, i.default)(e),
                    handler(e) {
                        let {
                            socket: t
                        } = e;
                        (0, l.validatePostMessageTransport)(t.transport);
                        let n = t.application.id;
                        if (null != n) return (0, a.default)(n), {
                            enabled: s.default.getEnableHardwareAcceleration()
                        }
                    }
                }
            }
        },
        567481: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("988298"),
                r = n("447543"),
                o = n("13245"),
                u = n("596223"),
                d = n("293273"),
                c = n("885110"),
                f = n("996106"),
                E = n("914946"),
                h = n("452426"),
                C = n("852926"),
                _ = n("186901"),
                m = n("981631");
            t.default = {
                [m.RPCCommands.SET_OVERLAY_LOCKED]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    validation: e => (0, h.default)(e).required().keys({
                        locked: e.boolean().required(),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                locked: t,
                                pid: n
                            },
                            socket: {
                                application: a
                            }
                        } = e;
                        if (null == a.id) throw new f.default({
                            errorCode: m.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        o.default.setLocked(t, n)
                    }
                },
                [m.RPCCommands.OPEN_OVERLAY_ACTIVITY_INVITE]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    validation: e => (0, h.default)(e).required().keys({
                        type: e.number().required().valid([m.ActivityActionTypes.JOIN]),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                pid: a
                            }
                        } = e, s = t.application.id;
                        if (null == s) throw new f.default({
                            errorCode: m.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let l = d.default.getApplicationActivity(s);
                        if (null == l || null == l.secrets || !(0, E.validateActivityInvite)(n, l.party, l.secrets)) throw new f.default({
                            errorCode: m.RPCErrors.NO_ELIGIBLE_ACTIVITY
                        }, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                        let {
                            lock: r
                        } = (0, C.unlockOverlay)(a), o = (0, u.default)(l, c.default);
                        return (0, i.openModal)(l, o).then(() => {
                            if (r(), o) throw new f.default({
                                errorCode: m.RPCErrors.NO_ELIGIBLE_ACTIVITY
                            }, "No eligible activity for application. Ensure user does have have privacy enabled.")
                        })
                    }
                },
                [m.RPCCommands.OPEN_OVERLAY_GUILD_INVITE]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    validation: e => (0, h.default)(e).required().keys({
                        code: e.string().required(),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                code: t,
                                pid: n
                            },
                            socket: a
                        } = e;
                        if (null == a.application.id) throw new f.default({
                            errorCode: m.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        return r.default.resolveInvite(t, "Game SDK").then(e => {
                            let {
                                invite: t,
                                code: a
                            } = e;
                            if (null == t) throw new f.default({
                                errorCode: m.RPCErrors.INVALID_INVITE
                            }, "Invalid invite id: ".concat(a));
                            let {
                                context: s,
                                lock: i
                            } = (0, C.unlockOverlay)(n);
                            return new Promise(e => {
                                l.default.dispatch({
                                    type: "INVITE_MODAL_OPEN",
                                    invite: t,
                                    code: a,
                                    context: s,
                                    resolve: e
                                })
                            }).then(i)
                        })
                    }
                },
                [m.RPCCommands.OPEN_OVERLAY_VOICE_SETTINGS]: {
                    scope: _.RPC_LOCAL_SCOPE,
                    validation: e => (0, h.default)(e).required().keys({
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                pid: t
                            },
                            socket: l
                        } = e, i = l.application.id;
                        if (null == i) throw new f.default({
                            errorCode: m.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let {
                            lock: r
                        } = (0, C.unlockOverlay)(t);
                        return new Promise(e => {
                            (0, s.openModalLazy)(async () => {
                                let {
                                    default: t
                                } = await Promise.all([n.e("49237"), n.e("99387"), n.e("84518")]).then(n.bind(n, "344516"));
                                return n => (0, a.jsx)(t, {
                                    ...n,
                                    mediaEngineContext: i,
                                    title: l.application.name,
                                    onClose: () => {
                                        n.onClose(), r(), e()
                                    }
                                })
                            })
                        })
                    }
                }
            }
        },
        498164: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l = n("735250");
            n("470079");
            var i = n("756647"),
                r = n("481060"),
                o = n("570140"),
                u = n("355467"),
                d = n("899742"),
                c = n("457330"),
                f = n("533307"),
                E = n("447543"),
                h = n("962220"),
                C = n("703656"),
                _ = n("314897"),
                m = n("594174"),
                S = n("626135"),
                p = n("585483"),
                I = n("591759"),
                g = n("998502"),
                T = n("996106"),
                A = n("186901"),
                N = n("981631");

            function v(e, t) {
                null != e && S.default.track(N.AnalyticEvents.EXTERNAL_DYNAMIC_LINK_RECEIVED, {
                    invite_code: null,
                    has_auth_token: null,
                    is_backgrounded: null,
                    fingerprint: (0, i.extractId)(e),
                    link_type: t
                })
            }(a = s || (s = {})).SETTINGS = "settings", a.CHANGELOG = "changelog", a.LIBRARY = "library", a.STORE = "store", a.INVITE = "invite", a.CHANNEL = "channel", a.GUILD_SETTINGS = "guild_settings", t.default = {
                [N.RPCCommands.INVITE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e, {
                            invite: n
                        } = await E.default.resolveInvite(t, "Desktop Modal");
                        if (null == n) throw new T.default({
                            errorCode: N.RPCErrors.INVALID_INVITE
                        }, "Invalid invite id: ".concat(t));
                        return _.default.isAuthenticated() ? o.default.dispatch({
                            type: "INVITE_MODAL_OPEN",
                            invite: n,
                            code: t,
                            context: N.AppContext.APP
                        }) : (0, C.replaceWith)(N.Routes.INVITE(t)), {
                            invite: n,
                            code: t
                        }
                    }
                },
                [N.RPCCommands.GUILD_TEMPLATE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        if (null == m.default.getCurrentUser()) return;
                        let {
                            guildTemplate: a
                        } = await h.default.resolveGuildTemplate(t);
                        if (null == a) throw new T.default({
                            errorCode: N.RPCErrors.INVALID_GUILD_TEMPLATE
                        }, "Invalid guild template id: ".concat(t));
                        return g.default.focus(), (0, r.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("99387"), n.e("10778"), n.e("90424")]).then(n.bind(n, "766775"));
                            return t => (0, l.jsx)(e, {
                                ...t,
                                guildTemplate: a
                            })
                        }), {
                            guildTemplate: a,
                            code: t
                        }
                    }
                },
                [N.RPCCommands.GIFT_CODE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        return new Promise((e, a) => {
                            o.default.wait(() => {
                                f.default.resolveGiftCode(t, !0, !0).then(a => {
                                    let {
                                        giftCode: s
                                    } = a;
                                    g.default.focus(), S.default.track(N.AnalyticEvents.OPEN_MODAL, {
                                        type: "gift_accept",
                                        location: N.DIRECT_ANALYTICS_LOCATION
                                    }), (0, r.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await Promise.all([n.e("99387"), n.e("92446")]).then(n.bind(n, "409858"));
                                        return n => (0, l.jsx)(e, {
                                            code: t,
                                            ...n
                                        })
                                    }), e({
                                        giftCode: s
                                    })
                                }).catch(() => a(new T.default({
                                    errorCode: N.RPCErrors.INVALID_GIFT_CODE
                                }, "Invalid gift code: ".concat(t))))
                            })
                        })
                    }
                },
                [N.RPCCommands.DEEP_LINK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                type: t,
                                params: n
                            }
                        } = e;
                        switch (g.default.focus(), t) {
                            case A.RPCDeepLinks.USER_SETTINGS:
                                null != n && ((0, C.replaceWith)(N.Routes.SETTINGS(n.section, n.subsection)), v(n.fingerprint, "settings"));
                                break;
                            case A.RPCDeepLinks.CHANGELOG:
                                null != n && ((0, C.replaceWith)(I.default.formatPathWithQuery(N.Routes.CHANGELOGS(n.date), n.query)), v(n.fingerprint, "changelog"));
                                break;
                            case A.RPCDeepLinks.LIBRARY:
                                (0, C.replaceWith)(N.Routes.APPLICATION_LIBRARY), null != n && v(n.fingerprint, "library");
                                break;
                            case A.RPCDeepLinks.STORE_HOME:
                                (0, C.replaceWith)(N.Routes.APPLICATION_STORE), null != n && v(n.fingerprint, "store");
                                break;
                            case A.RPCDeepLinks.STORE_LISTING:
                                null != n && ((0, C.replaceWith)(N.Routes.APPLICATION_STORE_LISTING_SKU(n.skuId, n.slug)), v(n.fingerprint, "store"));
                                break;
                            case A.RPCDeepLinks.PICK_GUILD_SETTINGS:
                                null != n && ((0, C.replaceWith)({
                                    pathname: N.Routes.PICK_GUILD_SETTINGS(n.section, n.subsection),
                                    search: n.search
                                }), v(n.fingerprint, "guild_settings"));
                                break;
                            case A.RPCDeepLinks.CHANNEL:
                                null != n && ((0, C.replaceWith)({
                                    pathname: N.Routes.CHANNEL(n.guildId, n.channelId, n.messageId),
                                    search: n.search
                                }), v(n.fingerprint, "channel"))
                        }
                    }
                },
                [N.RPCCommands.BROWSER_HANDOFF]: {
                    scope: A.RPC_PRIVATE_LIMITED_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                handoffToken: t,
                                fingerprint: n
                            }
                        } = e;
                        g.default.focus(null, !0), (0, d.handoffEnd)(t, n)
                    }
                },
                [N.RPCCommands.CONNECTIONS_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler: async e => {
                        let {
                            args: {
                                providerType: t,
                                code: n,
                                openid_params: a,
                                state: s
                            }
                        } = e;
                        try {
                            return await c.default.callback(t, {
                                code: n,
                                openid_params: a,
                                state: s
                            })
                        } catch (e) {
                            throw p.ComponentDispatch.dispatch(N.ComponentActions.CONNECTIONS_CALLBACK_ERROR), e
                        }
                    }
                },
                [N.RPCCommands.BRAINTREE_POPUP_BRIDGE_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: N.PaymentSourceTypes.PAYPAL,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                },
                [N.RPCCommands.BILLING_POPUP_BRIDGE_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a,
                                payment_source_type: s
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: s,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                }
            }
        },
        111097: function(e, t, n) {
            "use strict";
            n.r(t), n("411104"), n("47120");
            var a = n("72924"),
                s = n("100527"),
                l = n("367207"),
                i = n("996106"),
                r = n("452426"),
                o = n("561205"),
                u = n("334288"),
                d = n("852926"),
                c = n("186901"),
                f = n("981631"),
                E = n("474936");
            let h = [s.default.RPC];

            function C(e) {
                if (null == e) return {
                    lock: f.NOOP_NULL,
                    context: f.AppContext.APP
                };
                let t = (0, d.unlockOverlay)(e);
                return {
                    lock: t.lock,
                    context: t.context
                }
            }

            function _(e, t) {
                let n = {
                    subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2,
                    analyticsLocations: h,
                    analyticsObject: t
                };
                switch (e) {
                    case f.AppContext.APP:
                        return l.default.openPremiumPaymentModalInApp(n);
                    case f.AppContext.OVERLAY:
                        return l.default.openPremiumPaymentModalInOverlay(n);
                    default:
                        throw Error("Unexpected app context: ".concat(e))
                }
            }
            t.default = {
                [f.RPCCommands.START_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).required().keys({
                        sku_id: e.string().required(),
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                sku_id: n,
                                pid: s
                            }
                        } = e;
                        (0, u.validateTransportType)(t.transport);
                        let l = t.application.id;
                        if (null == l) throw new i.default({
                            errorCode: f.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let {
                            lock: r,
                            context: d
                        } = C(t.transport !== c.TransportTypes.POST_MESSAGE ? s : null);
                        if (null == (0, o.default)()) throw new i.default({
                            errorCode: f.RPCErrors.INVALID_CHANNEL
                        }, "Invalid channel");
                        let E = {
                            page: f.AnalyticsPages.IN_APP
                        };
                        return (async () => {
                            try {
                                let e = await (0, a.openIAPPurchaseModal)({
                                    applicationId: l,
                                    skuId: n,
                                    openPremiumPaymentModal: () => _(d, E),
                                    analyticsLocations: h,
                                    analyticsLocationObject: E,
                                    context: d
                                });
                                return r(), e
                            } catch (e) {
                                if (r(), null != e) {
                                    let t = "";
                                    throw t = "object" == typeof e && "message" in e && "string" == typeof e.message ? e.message : "string" == typeof e ? e : JSON.stringify(e), new i.default({
                                        errorCode: f.RPCErrors.PURCHASE_ERROR
                                    }, t)
                                }
                                throw new i.default({
                                    errorCode: f.RPCErrors.PURCHASE_CANCELED
                                }, "Purchase was canceled by the user.")
                            }
                        })()
                    }
                },
                [f.RPCCommands.START_PREMIUM_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).keys({
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                pid: n
                            }
                        } = e;
                        if ((0, u.validateTransportType)(t.transport), null == t.application.id) throw new i.default({
                            errorCode: f.RPCErrors.INVALID_COMMAND
                        }, "No application.");
                        let {
                            lock: a,
                            context: s
                        } = C(t.transport !== c.TransportTypes.POST_MESSAGE ? n : null);
                        return _(s, {
                            page: f.AnalyticsPages.IN_APP
                        }).then(() => {
                            a()
                        }, e => {
                            if (a(), null != e) throw new i.default({
                                errorCode: f.RPCErrors.PURCHASE_ERROR
                            }, e);
                            throw new i.default({
                                errorCode: f.RPCErrors.PURCHASE_CANCELED
                            }, "Purchase was canceled by the user.")
                        })
                    }
                }
            }
        },
        908711: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("408841"),
                s = n("981631");
            t.default = {
                [s.RPCCommands.SEND_GENERIC_EVENT]: a.deprecatedCommand
            }
        },
        197941: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("243814"),
                l = n("481060"),
                i = n("846027"),
                r = n("872810"),
                o = n("594190"),
                u = n("989941"),
                d = n("173507"),
                c = n("199902"),
                f = n("131951"),
                E = n("449224"),
                h = n("358085"),
                C = n("452426"),
                _ = n("736045"),
                m = n("186901"),
                S = n("981631");
            t.default = {
                [S.RPCCommands.TOGGLE_VIDEO]: {
                    scope: {
                        [m.RPC_SCOPE_CONFIG.ALL]: [s.OAuth2Scopes.RPC, s.OAuth2Scopes.RPC_VIDEO_WRITE]
                    },
                    handler() {
                        let e = f.default.isVideoEnabled();
                        null != (0, _.default)() && (e ? i.default.setVideoEnabled(!1) : (0, d.default)(() => i.default.setVideoEnabled(!0), S.AppContext.APP))
                    }
                },
                [S.RPCCommands.TOGGLE_SCREENSHARE]: {
                    scope: {
                        [m.RPC_SCOPE_CONFIG.ALL]: [s.OAuth2Scopes.RPC, s.OAuth2Scopes.RPC_SCREENSHARE_WRITE]
                    },
                    validation: e => (0, C.default)(e).optional().keys({
                        pid: e.number().optional().min(0)
                    }),
                    handler(e) {
                        let {
                            args: {
                                pid: t
                            }
                        } = e, s = c.default.getCurrentUserActiveStream(), i = c.default.getStreamerActiveStreamMetadata(), d = (0, u.default)(o.default, E.default), f = (0, _.default)();
                        null != f && (null != t && null != i && i.pid !== t && (0, h.isWindows)() ? (0, r.startStream)(f.guild_id, f.id, {
                            pid: t
                        }) : null != s ? (0, r.stopOwnStream)(!1) : null != t && (0, h.isWindows)() ? (0, r.startStream)(f.guild_id, f.id, {
                            pid: t
                        }) : null != d ? (0, r.startStream)(f.guild_id, f.id, {
                            pid: d.pid
                        }) : (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("99387"), n.e("79477")]).then(n.bind(n, "60594"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                guildId: f.guild_id,
                                analyticsLocation: S.AnalyticsLocations.ACTIVITY_RPC
                            })
                        }))
                    }
                }
            }
        },
        462414: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("243814"),
                s = n("846027"),
                l = n("131951"),
                i = n("13140"),
                r = n("996106"),
                o = n("452426"),
                u = n("186901"),
                d = n("981631"),
                c = n("65154");

            function f(e) {
                let t = e.application.id;
                if (null == t) throw new r.default({
                    errorCode: d.RPCErrors.INVALID_COMMAND
                }, "No application.");
                return t
            }
            t.default = {
                [d.RPCCommands.SET_VOICE_SETTINGS_2]: {
                    scope: u.RPC_LOCAL_SCOPE,
                    validation: e => (0, o.default)(e).required().keys({
                        input_mode: (0, o.default)(e).keys({
                            type: e.string().valid(Object.keys(d.InputModes)),
                            shortcut: e.string().required()
                        }),
                        self_mute: e.boolean(),
                        self_deaf: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                input_mode: n,
                                self_mute: a,
                                self_deaf: r
                            }
                        } = e, o = f(t);
                        null != n && s.default.setMode(n.type, {
                            shortcut: (0, i.toCombo)(n.shortcut)
                        }, o), null != a && a !== l.default.isSelfMute(o) && s.default.toggleSelfMute({
                            context: o
                        }), null != r && r !== l.default.isSelfDeaf(o) && s.default.toggleSelfDeaf({
                            context: o
                        })
                    }
                },
                [d.RPCCommands.SET_USER_VOICE_SETTINGS_2]: {
                    scope: u.RPC_LOCAL_SCOPE,
                    validation: e => (0, o.default)(e).required().keys({
                        user_id: e.string().required(),
                        volume: e.number().min(0).max(200),
                        mute: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                mute: a,
                                volume: i
                            }
                        } = e, r = f(t);
                        null != a && a !== l.default.isLocalMute(n, r) && s.default.toggleLocalMute(n, r), null != i && s.default.setLocalVolume(n, i, r)
                    }
                },
                [d.RPCCommands.PUSH_TO_TALK]: {
                    scope: {
                        [u.RPC_SCOPE_CONFIG.ALL]: [a.OAuth2Scopes.RPC, a.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, o.default)(e).required().keys({
                        active: e.boolean()
                    }),
                    handler(e) {
                        let {
                            args: {
                                active: t
                            }
                        } = e;
                        l.default.getMode(c.MediaEngineContextTypes.DEFAULT) === d.InputModes.PUSH_TO_TALK && l.default.getMediaEngine().eachConnection(e => e.setForceAudioInput(t), c.MediaEngineContextTypes.DEFAULT)
                    }
                }
            }
        },
        662194: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("243814"),
                s = n("846027"),
                l = n("131951"),
                i = n("594174"),
                r = n("996106"),
                o = n("452426"),
                u = n("852926"),
                d = n("186901"),
                c = n("981631");
            t.default = {
                [c.RPCCommands.SET_USER_VOICE_SETTINGS]: {
                    scope: {
                        [d.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, a.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, o.default)(e).required().keys({
                        user_id: e.string().required(),
                        pan: (0, o.default)(e).keys({
                            left: e.number().min(0).max(1).required(),
                            right: e.number().min(0).max(1).required()
                        }),
                        volume: e.number().min(0).max(200),
                        mute: e.boolean()
                    }),
                    handler(e) {
                        let {
                            args: {
                                user_id: t,
                                pan: n,
                                volume: a,
                                mute: o
                            }
                        } = e, u = i.default.getCurrentUser();
                        if (null == i.default.getUser(t) || (null == u ? void 0 : u.id) === t) throw new r.default({
                            errorCode: c.RPCErrors.INVALID_USER
                        }, "Invalid user id: ".concat(t));
                        if (null != n && s.default.setLocalPan(t, n.left, n.right), null != a && s.default.setLocalVolume(t, a), null != o) {
                            let e = l.default.isLocalMute(t);
                            (e && !o || !e && o) && s.default.toggleLocalMute(t)
                        }
                        return {
                            user_id: t,
                            pan: l.default.getLocalPan(t),
                            volume: l.default.getLocalVolume(t),
                            mute: l.default.isLocalMute(t)
                        }
                    }
                },
                [c.RPCCommands.GET_VOICE_SETTINGS]: {
                    scope: {
                        [d.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, a.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler: () => (0, u.getDeprecatedVoiceSettings)()
                },
                [c.RPCCommands.SET_VOICE_SETTINGS]: {
                    scope: {
                        [d.RPC_SCOPE_CONFIG.ANY]: [a.OAuth2Scopes.RPC, a.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, o.default)(e).required().keys({
                        input: (0, o.default)(e).keys({
                            device_id: e.string().valid(Object.keys(l.default.getInputDevices())),
                            volume: e.number().min(0).max(100)
                        }),
                        output: (0, o.default)(e).keys({
                            device_id: e.string().valid(Object.keys(l.default.getOutputDevices())),
                            volume: e.number().min(0).max(200)
                        }),
                        mode: (0, o.default)(e).keys({
                            type: e.string().valid(Object.keys(c.InputModes)),
                            auto_threshold: e.boolean(),
                            threshold: e.number().min(-100).max(0),
                            shortcut: e.array().items((0, o.default)(e).keys({
                                type: e.number().min(0).max(3).required(),
                                code: e.number().required(),
                                name: e.string()
                            })),
                            delay: e.number().min(0).max(2e3)
                        }),
                        automatic_gain_control: e.boolean(),
                        echo_cancellation: e.boolean(),
                        noise_suppression: e.boolean(),
                        qos: e.boolean(),
                        silence_warning: e.boolean(),
                        deaf: e.boolean(),
                        mute: e.boolean()
                    }),
                    handler(e) {
                        let {
                            args: {
                                input: t,
                                output: n,
                                mode: a,
                                automatic_gain_control: i,
                                echo_cancellation: r,
                                noise_suppression: o,
                                qos: d,
                                silence_warning: c,
                                deaf: f,
                                mute: E
                            }
                        } = e;
                        if (t && (null != t.device_id && s.default.setInputDevice(t.device_id), null != t.volume && s.default.setInputVolume(t.volume)), n && (null != n.device_id && s.default.setOutputDevice(n.device_id), null != n.volume && s.default.setOutputVolume(n.volume)), a) {
                            let e = l.default.getMode(),
                                t = l.default.getModeOptions();
                            null != a.type && (e = a.type), null != a.auto_threshold && (t.autoThreshold = a.auto_threshold), null != a.threshold && (t.threshold = a.threshold), null != a.shortcut && (t.shortcut = a.shortcut.map(e => [e.type, e.code])), null != a.delay && (t.delay = a.delay), s.default.setMode(e, t)
                        }
                        if (null != i && s.default.setAutomaticGainControl(i), null != r && s.default.setEchoCancellation(r), null != o && s.default.setNoiseSuppression(o), null != d && s.default.setQoS(d), null != c && s.default.setSilenceWarning(c), null != f) {
                            let e = l.default.isSelfDeaf();
                            (e && !f || !e && f) && s.default.toggleSelfDeaf()
                        }
                        if (null != E) {
                            let e = l.default.isSelfMute();
                            (e && !E || !e && E) && s.default.toggleSelfMute()
                        }
                        return (0, u.getDeprecatedVoiceSettings)()
                    }
                }
            }
        },
        967351: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("411104");
            var a = n("413135"),
                s = n("836560"),
                l = n("392711"),
                i = n.n(l),
                r = n("710845"),
                o = n("998502"),
                u = n("901077"),
                d = n("76238"),
                c = n("852926"),
                f = n("981631");
            let E = o.default.requireModule("discord_rpc").RPCIPC,
                h = new r.default("RPCServer:IPC"),
                C = {
                    HANDSHAKE: 0,
                    FRAME: 1,
                    CLOSE: 2,
                    PING: 3,
                    PONG: 4
                };

            function _(e, t) {
                null != e.setHandshakeComplete ? e.setHandshakeComplete(t) : e._didHandshake = t
            }

            function m(e) {
                return null != e.getHandshakeComplete ? e.getHandshakeComplete() : e._didHandshake
            }

            function S(e) {
                return new Promise((t, n) => {
                    "string" == typeof e && (e = E.net.createConnection(e)), e.pause(), e.on("readable", () => {
                        try {
                            I(e)
                        } catch (t) {
                            e.end(p(C.CLOSE, {
                                code: 1003,
                                message: t.message
                            })), e.destroy()
                        }
                    });
                    let a = () => {
                            try {
                                e.end(), e.destroy()
                            } catch (e) {}
                        },
                        s = Promise.race([new Promise(t => e.on("error", () => t())), new Promise((t, n) => {
                            e.on("pong", () => n(Error("socket responded with pong")))
                        }), new Promise((e, t) => {
                            setTimeout(() => t(Error("socket alive timeout")), 1e3)
                        })]).then(() => {
                            a()
                        }, e => {
                            throw a(), e
                        });
                    return e.write(p(C.PING, i().uniqueId())), s.then(t, n)
                })
            }

            function p(e, t) {
                var n;
                t = JSON.stringify(t);
                let s = a.Buffer.byteLength(t),
                    l = a.Buffer.alloc(8 + s);
                return l.writeInt32LE(e, 0), l.writeInt32LE(s, 4), l.write(t, 8, s), (n = l).buffer.slice(n.byteOffset, n.byteOffset + n.byteLength)
            }

            function I(e) {
                let t = e.read(8);
                if (null == t) return;
                let n = a.Buffer.from(t),
                    s = n.readInt32LE(0),
                    l = n.readInt32LE(4);
                if (!Object.values(C).includes(s) || l < 0) throw Error("protocol error");
                if (null == (t = e.read(l))) throw Error("data size does not match what was received");
                let i = JSON.parse((n = a.Buffer.from(t)).toString());
                switch (s) {
                    case C.PING:
                        e.emit("ping", i), e.write(p(C.PONG, i));
                        break;
                    case C.PONG:
                        e.emit("pong", i);
                        break;
                    case C.HANDSHAKE:
                        if (m(e)) throw Error("already did handshake");
                        _(e, !0), e.emit("handshake", i);
                        break;
                    case C.FRAME:
                        if (!m(e)) throw Error("did not handshake");
                        e.emit("request", i);
                        break;
                    case C.CLOSE:
                        e.end(), e.destroy()
                }
                I(e)
            }
            class g extends d.default {
                send(e) {
                    h.info("Socket Emit: ".concat(this.id), (0, u.default)(e)), this.socket.write(p(C.FRAME, e))
                }
                close(e, t) {
                    this.socket.end(p(C.CLOSE, {
                        code: e,
                        message: t
                    })), this.socket.destroy()
                }
                constructor(e, t, n) {
                    var a, s, l;
                    super("ipc", t, n), a = this, l = void 0, (s = "socket") in a ? Object.defineProperty(a, s, {
                        value: l,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : a[s] = l, this.socket = e
                }
            }
            class T extends s.EventEmitter {
                handleConnection(e) {
                    _(e, !1), e.pause(), e.on("readable", () => {
                        try {
                            I(e)
                        } catch (t) {
                            e.end(p(C.CLOSE, {
                                code: f.RPCCloseCodes.CLOSE_UNSUPPORTED,
                                message: t.message
                            })), e.destroy()
                        }
                    }), e.once("handshake", t => {
                        let n;
                        let a = t.client_id,
                            s = +t.v;
                        try {
                            n = new g(e, s, "json")
                        } catch (t) {
                            e.end(p(C.CLOSE, {
                                code: t.code,
                                message: t.message
                            })), e.destroy();
                            return
                        }
                        h.info("Socket Opened: ".concat(n.id)), e.on("error", e => h.error("Socket Error: ".concat(e.message))), e.on("close", () => {
                            h.info("Socket Close: ".concat(n.id)), this.emit("disconnect", n)
                        }), (0, c.validateSocketClient)(n, null, a).then(() => {
                            e.on("request", e => {
                                h.info("Socket Message: ".concat(n.id), (0, u.default)(e)), this.emit("request", n, e)
                            }), this.emit("connect", n)
                        }).catch(e => {
                            let {
                                code: t,
                                message: a
                            } = e;
                            return n.close(t, a)
                        })
                    })
                }
                constructor() {
                    super();
                    let e = E.net.createServer(e => this.handleConnection(e));
                    e.on("error", e => h.error("Error: ".concat(e.message))), E.getAvailableSocket(S).then(t => {
                        e.listen(t, () => {
                            ("function" == typeof e.listening ? e.listening() : e.listening) && h.info("Starting on ".concat(e.address()))
                        })
                    })
                }
            }
            t.default = new T
        },
        178318: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n("47120"), n("610138"), n("216116"), n("78328"), n("815648"), n("653041"), n("411104");
            var l = n("836560"),
                i = n("392711"),
                r = n.n(i),
                o = n("729594"),
                u = n("570140"),
                d = n("710845"),
                c = n("857192"),
                f = n("998502"),
                E = n("996106"),
                h = n("901077"),
                C = n("76238"),
                _ = n("852926"),
                m = n("186901"),
                S = n("981631"),
                p = n("413135").Buffer;

            function I(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            try {
                a = f.default.requireModule("discord_erlpack")
            } catch (e) {
                try {
                    a = f.default.requireModule("erlpack")
                } catch (e) {}
            }
            let g = f.default.requireModule("discord_rpc").RPCWebSocket,
                T = window.GLOBAL_ENV.MARKETING_ENDPOINT,
                A = new d.default("RPCServer:WSS"),
                N = [];

            function v(e) {
                return "function" == typeof e ? e() : e
            }

            function R() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    t = e > 0 ? void 0 : () => {
                        if (!v(s.listening)) return;
                        let e = s.address().port;
                        A.info("Starting on ".concat(e)), u.default.dispatch({
                            type: "RPC_SERVER_READY",
                            port: e
                        })
                    };
                s.listen(S.RPC_STARTING_PORT + e % S.RPC_PORT_RANGE, "127.0.0.1", t)
            }

            function O(e, t, n) {
                let a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 200,
                    s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
                    l = null != v(e.headers).origin ? {
                        "Access-Control-Allow-Origin": v(e.headers).origin,
                        "Access-Control-Allow-Credentials": "true",
                        "Access-Control-Allow-Methods": "POST, GET, PUT, PATCH, DELETE",
                        "Access-Control-Allow-Headers": "Content-Type, Authorization"
                    } : {};
                n = n ? JSON.stringify(n) : "", a = 200 === a && 0 === n.length ? 204 : a, t.setHeader("Content-Length", p.byteLength(n).toString()), t.setHeader("Content-Type", "application/json"), t.writeHead(a, {
                    ...s,
                    ...l
                }), t.end(n)
            }

            function L(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                O(e, t, {
                    code: s,
                    message: a
                }, n)
            }
            class P extends C.default {
                send(e) {
                    (c.default.isLoggingOverlayEvents || e.cmd !== S.RPCCommands.OVERLAY && e.evt !== S.RPCEvents.OVERLAY) && A.info("Socket Emit: ".concat(this.id), (0, h.default)(e)), null != a && "etf" === this.encoding ? this._socket.send(a.pack(e), {
                        binary: !0
                    }) : this._socket.send(JSON.stringify(e))
                }
                close(e, t) {
                    this._socket.close(e, t)
                }
                constructor(e, t, n) {
                    if (super("ws", t, n), I(this, "_socket", void 0), -1 === ["etf", "json"].indexOf(n)) throw new E.default({
                        closeCode: S.RPCCloseCodes.INVALID_ENCODING
                    }, "Invalid Encoding: ".concat(n));
                    if ("etf" === n && null == a) throw new E.default({
                        closeCode: S.RPCCloseCodes.INVALID_ENCODING
                    }, "Erlpack cannot be used on this client");
                    this._socket = e
                }
            }
            class y extends C.default {
                send(e) {
                    (c.default.isLoggingOverlayEvents || e.cmd !== S.RPCCommands.OVERLAY) && A.info("Socket Emit: ".concat(this.id), e), this._sendCallback(e)
                }
                close(e, t) {
                    this._closeCallback(t, e)
                }
                constructor(e, t, n, a) {
                    if (super("http", n, a), I(this, "_sendCallback", void 0), I(this, "_closeCallback", void 0), "json" !== a) throw new E.default({
                        closeCode: S.RPCCloseCodes.INVALID_ENCODING
                    }, "Invalid Encoding: ".concat(a));
                    this._sendCallback = e, this._closeCallback = t
                }
            }
            class M extends l.EventEmitter {
                handleRequest(e, t) {
                    let [n, a] = v(e.url).split("?"), s = v(e.method);
                    if ("/rpc" === n && "OPTIONS" === s) {
                        O(e, t, {
                            body: ""
                        });
                        return
                    }
                    let l = "POST" === s;
                    if ("/rpc" === n && ("GET" === s || l)) {
                        let n = new URLSearchParams(a),
                            s = l ? v(e.headers)["content-type"].split("/")[1] : "json",
                            r = function() {
                                var e;
                                let {
                                    protocol: a,
                                    host: s
                                } = o.parse(null !== (e = n.get("callback")) && void 0 !== e ? e : "");
                                a === location.protocol && s === location.host ? t.setHeader("Location", n.get("callback")) : t.setHeader("Location", T), t.writeHead(301), t.end()
                            },
                            u = new y(l ? O.bind(null, e, t) : r, l ? L.bind(null, e, t, 400) : r, Number(n.get("v")), s);
                        if (l)(0, _.validateSocketClient)(u, v(e.headers).origin, n.get("client_id")).then(() => {
                            let n = "";
                            e.on("data", e => n += e), e.on("error", () => L(e, t, 500, "Internal Server Error")), e.on("end", () => this.handleMessage(u, n))
                        }).catch(e => {
                            let {
                                code: t,
                                message: n
                            } = e;
                            return u.close(t, n)
                        });
                        else {
                            var i;
                            u.authorization.scopes = [m.RPC_PRIVATE_LIMITED_SCOPE], this.handleMessage(u, decodeURIComponent(null !== (i = n.get("payload")) && void 0 !== i ? i : ""))
                        }
                        return
                    }
                    L(e, t, 404, "Not Found")
                }
                handleConnection(e) {
                    var t, n;
                    let a;
                    let s = new URLSearchParams(v(e.upgradeReq).url.split("?")[1]),
                        l = null !== (t = v(e.upgradeReq).headers.origin) && void 0 !== t ? t : "";
                    try {
                        a = new P(e, Number(s.get("v")), null !== (n = s.get("encoding")) && void 0 !== n ? n : "json")
                    } catch (t) {
                        e.close(t.code, t.message);
                        return
                    }
                    A.info("Socket Opened: ".concat(a.id)), e.on("error", e => A.error("WS Error: ".concat(e.message))), e.on("close", (e, t) => {
                        A.info("Socket Closed: ".concat(a.id, ", code ").concat(e, ", message ").concat(t)), r().remove(N, e => e === a), this.emit("disconnect", a)
                    }), (0, _.validateSocketClient)(a, l, s.get("client_id")).then(() => {
                        N.push(a), e.on("message", e => this.handleMessage(a, e)), this.emit("connect", a)
                    }).catch(e => {
                        let {
                            code: t,
                            message: n
                        } = e;
                        return a.close(t, n)
                    })
                }
                handleMessage(e, t) {
                    let n;
                    try {
                        if (null != a && "etf" === e.encoding) n = a.unpack(t);
                        else if ("string" == typeof t) n = JSON.parse(t);
                        else throw Error()
                    } catch (t) {
                        e.close(S.RPCCloseCodes.CLOSE_UNSUPPORTED, "Payload not ".concat(e.encoding));
                        return
                    }(c.default.isLoggingOverlayEvents || n.cmd !== S.RPCCommands.OVERLAY) && A.info("Socket Message: ".concat(e.id), (0, h.default)(n)), this.emit("request", e, n)
                }
                constructor() {
                    var e;
                    super();
                    let t = 0;
                    (s = g.http.createServer()).on("error", e => {
                        A.error("Error: ".concat(e.message)), ("EADDRINUSE" === e.code || e.message.includes("EADDRINUSE")) && setTimeout(() => R(++t), 1e3)
                    }), s.on("request", this.handleRequest.bind(this)), R(t);
                    let n = {
                        instanceId: null !== (e = s.instanceId) && void 0 !== e ? e : 0,
                        server: s
                    };
                    new g.ws.Server(n).on("connection", e => this.handleConnection(e))
                }
            }
            t.default = new M
        },
        188861: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("710845"),
                s = n("857192"),
                l = n("901077"),
                i = n("46832"),
                r = n("852926"),
                o = n("748635"),
                u = n("981631");
            let d = new a.default("RPCServer:PostMessage"),
                c = (e, t, n) => {
                    (s.default.isLoggingOverlayEvents || e.cmd !== u.RPCCommands.OVERLAY) && t.info("Socket Message: ".concat(n.id), (0, l.default)(e))
                };
            t.default = function() {
                let e = new i.default(r.validateSocketClient, d, o.default, c);
                return window.addEventListener("message", t => {
                    if (window === t.source) return;
                    if (null == t.source || null == t.source.postMessage) {
                        d.error("Unknown event source");
                        return
                    }
                    let n = t.source,
                        a = t.data,
                        s = t.origin;
                    e.handleMessage(a, s, (e, t) => {
                        n.postMessage(e, t)
                    })
                }), e
            }()
        },
        748635: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("857192"),
                s = n("901077"),
                l = n("915357"),
                i = n("981631");
            t.default = e => {
                let {
                    origin: t,
                    postMessageToRPCClient: n,
                    frameId: r,
                    version: o,
                    encoding: u,
                    logger: d,
                    postClose: c
                } = e;
                return new l.default({
                    origin: t,
                    postMessageToRPCClient: n,
                    frameId: r,
                    version: o,
                    encoding: u,
                    logger: d,
                    postClose: c,
                    onSendingToRPCClient: (e, t) => {
                        (a.default.isLoggingOverlayEvents || e.cmd !== i.RPCCommands.OVERLAY && e.evt !== i.RPCEvents.OVERLAY) && d.info("Socket Emit: ".concat(t), (0, s.default)(e))
                    }
                })
            }
        },
        19199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationBlockMuteCoachmark: function() {
                    return u
                },
                useSafetyEducationAATriggerPoint: function() {
                    return d
                }
            });
            var a = n("399606"),
                s = n("650598"),
                l = n("941129"),
                i = n("594174"),
                r = n("51144"),
                o = n("335865");
            let u = () => {
                    let e = (0, l.useIsSafetyConsumerEducationBlockMuteEnabled)(),
                        t = (0, a.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                        n = (0, o.useUserIsInLargeGuilds)();
                    return e && !(0, r.isNewUser)(t) && n
                },
                d = () => (0, s.useIsSafetyConsumerEducationAAEnabled)()
        },
        111653: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationReportingCoachmark: function() {
                    return o
                }
            });
            var a = n("399606"),
                s = n("826004"),
                l = n("594174"),
                i = n("51144"),
                r = n("335865");
            let o = () => {
                let e = (0, s.useIsSafetyConsumerEducationReportingEnabled)(),
                    t = (0, a.useStateFromStores)([l.default], () => l.default.getCurrentUser()),
                    n = (0, r.useUserIsInLargeGuilds)();
                return e && !(0, i.isNewUser)(t) && n
            }
        },
        335865: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useUserIsInLargeGuilds: function() {
                    return l
                }
            });
            var a = n("399606"),
                s = n("650774");

            function l() {
                return (0, a.useStateFromStores)([s.default], () => Object.values(s.default.getMemberCounts()).some(e => e >= 200))
            }
        },
        212704: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("399606"),
                l = n("607070"),
                i = n("970731"),
                r = n("810090"),
                o = n("19199"),
                u = n("921944"),
                d = n("689938"),
                c = n("786589");
            t.default = e => {
                let {
                    markAsDismissed: t
                } = e, n = (0, s.useStateFromStores)([l.default], () => l.default.useReducedMotion);
                return (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)() ? (0, a.jsx)(i.default, {
                    asset: (0, a.jsx)(r.default, {
                        className: c.video,
                        src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195117439557712/Safety_BLOCK_Coachmark.mp4",
                        loop: !0,
                        autoPlay: !n,
                        width: "100%"
                    }),
                    header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_HEADER,
                    content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_CONTENT,
                    buttonCTA: d.default.Messages.GOT_IT,
                    className: c.__invalid_coachmark,
                    onClick: e => {
                        e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: c.header
                }) : null
            }
        },
        14357: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("399606"),
                l = n("607070"),
                i = n("970731"),
                r = n("810090"),
                o = n("19199"),
                u = n("921944"),
                d = n("689938"),
                c = n("28613");
            t.default = e => {
                let {
                    markAsDismissed: t
                } = e, n = (0, s.useStateFromStores)([l.default], () => l.default.useReducedMotion);
                return (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)() ? (0, a.jsx)(i.default, {
                    asset: (0, a.jsx)(r.default, {
                        className: c.video,
                        src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195118026772480/Safety_MUTE_Coachmark.mp4",
                        loop: !0,
                        autoPlay: !n,
                        width: "100%"
                    }),
                    header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_HEADER,
                    content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_CONTENT,
                    buttonCTA: d.default.Messages.GOT_IT,
                    className: c.__invalid_coachmark,
                    onClick: e => {
                        e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: c.header
                }) : null
            }
        },
        393333: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserSafetyEducationReportingCoachmark: function() {
                    return f
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("399606"),
                l = n("607070"),
                i = n("970731"),
                r = n("810090"),
                o = n("111653"),
                u = n("921944"),
                d = n("689938"),
                c = n("565225");
            let f = e => {
                let {
                    markAsDismissed: t
                } = e, n = (0, s.useStateFromStores)([l.default], () => l.default.useReducedMotion);
                return (0, o.useCanSeeSafetyEducationReportingCoachmark)() ? (0, a.jsx)(i.default, {
                    asset: (0, a.jsx)(r.default, {
                        src: "https://cdn.discordapp.com/attachments/1063579271815245944/1095089224421740695/CEC_Reporting_Animation_v03_EN_1x1_Music_1.mp4",
                        loop: !0,
                        autoPlay: !n,
                        className: c.video,
                        width: "100%"
                    }),
                    header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_HEADER,
                    content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_CONTENT,
                    buttonCTA: d.default.Messages.GOT_IT,
                    onClick: e => {
                        e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: c.header
                }) : null
            }
        },
        719256: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("653041");
            var a = n("846519"),
                s = n("570140"),
                l = n("317770"),
                i = n("220082"),
                r = n("594174"),
                o = n("125268"),
                u = n("813900");

            function d(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class c extends l.default {
                _initialize() {
                    !__OVERLAY__ && (s.default.subscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived))
                }
                _terminate() {
                    !__OVERLAY__ && (s.default.unsubscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived), this.lineBatchTimer.stop())
                }
                _handleVoiceChannelEffectReceived(e) {
                    var t;
                    let {
                        lineId: n,
                        points: a,
                        userId: s,
                        streamerId: l,
                        emojiHose: d
                    } = e;
                    if (null != l && s !== (null === (t = r.default.getCurrentUser()) || void 0 === t ? void 0 : t.id)) {
                        if (null != a && null != n) {
                            let e = r.default.getUser(s);
                            null != e && (0, i.maybeFetchColors)(e.getAvatarURL(null, u.AVATAR_COLOR_AVATAR_SIZE)), (0, o.updateLinePoints)(n, s, l, a)
                        } else null != d && (d.lastUpdatedAt = Date.now(), (0, o.updateEmojiHose)(d, s, l))
                    }
                }
                constructor(...e) {
                    super(...e), d(this, "linesToUpdate", {}), d(this, "lineBatchTimer", new a.Interval), d(this, "_handleDrawLinePoint", e => {
                        let {
                            channelId: t,
                            lineId: n,
                            streamerId: a,
                            point: s
                        } = e;
                        null == this.linesToUpdate[n] ? this.linesToUpdate[n] = {
                            channelId: t,
                            streamerId: a,
                            points: [s]
                        } : this.linesToUpdate[n].points.push(s), null == this.lineBatchTimer._ref && this.lineBatchTimer.start(u.EVENT_TICK_RATE, this.sendLineBatch)
                    }), d(this, "sendLineBatch", () => {
                        for (let e in this.linesToUpdate) {
                            let {
                                channelId: t,
                                points: n,
                                streamerId: a
                            } = this.linesToUpdate[e];
                            (0, o.addLinePoints)(t, e, a, n)
                        }
                        this.linesToUpdate = {}, this.lineBatchTimer.stop()
                    })
                }
            }
            t.default = new c
        },
        547280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                completeSignUp: function() {
                    return u
                },
                dismissSignUp: function() {
                    return d
                }
            });
            var a = n("570140"),
                s = n("605236"),
                l = n("626135"),
                i = n("445507"),
                r = n("981631"),
                o = n("921944");

            function u(e) {
                let {
                    targetKey: t,
                    dismissibleContent: n,
                    data: u,
                    completed: d
                } = e;
                null != u.selectedOptionKey && (!(0, s.isDismissibleContentDismissed)(n) && l.default.track(r.AnalyticEvents.SIGNUP_COMPLETED, {
                    target_key: t,
                    selected_option_key: u.selectedOptionKey,
                    email: u.email,
                    guild_id: u.guildId,
                    metadata: (0, i.extractMetadata)(u),
                    completed: d
                }), (0, s.markDismissibleContentAsDismissed)(n, {
                    dismissAction: o.ContentDismissActionType.PRIMARY,
                    forceTrack: !0
                }), a.default.dispatch({
                    type: "COMPLETE_SIGN_UP",
                    email: u.email,
                    targetKey: t,
                    selectedOptionKey: u.selectedOptionKey
                }))
            }

            function d(e, t) {
                (0, s.markDismissibleContentAsDismissed)(t, {
                    dismissAction: o.ContentDismissActionType.DISMISS,
                    forceTrack: !0
                }), a.default.dispatch({
                    type: "DISMISS_SIGN_UP",
                    targetKey: e
                })
            }
        },
        849688: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("25752"),
                o = n("481060"),
                u = n("442837"),
                d = n("465670"),
                c = n("792125"),
                f = n("547280"),
                E = n("678513"),
                h = n("981631"),
                C = n("689938"),
                _ = n("934206");
            let m = (0, c.getThemeClass)(h.ThemeTypes.DARK);
            t.default = function(e) {
                let {
                    guild: t
                } = e, l = (0, u.useStateFromStores)([E.default], () => E.default.getActiveGuildSignUp(t.id)), c = s.useCallback(() => {
                    null != l && (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([n.e("99387"), n.e("22862")]).then(n.bind(n, "646202"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            target: l,
                            guildId: t.id
                        })
                    })
                }, [l, t.id]), S = s.useCallback(() => {
                    null != l && (0, f.dismissSignUp)(l.key, l.dismissibleContent)
                }, [l]);
                if (null == l) return null;
                let p = "url(".concat(l.backgroundAssetUrl, ") black top / cover no-repeat");
                return (0, a.jsx)(o.ThemeContextProvider, {
                    theme: h.ThemeTypes.DARK,
                    children: (0, a.jsx)("div", {
                        className: i()(_.container, m),
                        children: (0, a.jsxs)("div", {
                            className: _.card,
                            style: {
                                background: p
                            },
                            children: [(0, a.jsxs)("div", {
                                className: _.eyebrow,
                                children: [(0, a.jsx)(r.EnvelopeIcon, {
                                    height: 12,
                                    width: 12,
                                    color: "currentColor"
                                }), (0, a.jsx)(o.Text, {
                                    variant: "text-xs/semibold",
                                    color: "none",
                                    children: C.default.Messages.SIGNUP_NOTICE_EYEBROW
                                })]
                            }), (0, a.jsx)(o.Heading, {
                                variant: "heading-sm/medium",
                                children: l.noticeHeader
                            }), (0, a.jsx)(o.Button, {
                                className: _.button,
                                color: "none",
                                onClick: c,
                                children: (0, a.jsx)(o.Text, {
                                    variant: "text-sm/medium",
                                    color: "none",
                                    children: C.default.Messages.SIGNUP_NOTICE_CTA
                                })
                            }), (0, a.jsx)("div", {
                                className: _.dismiss,
                                children: (0, a.jsx)(o.Clickable, {
                                    onClick: S,
                                    children: (0, a.jsx)(d.default, {
                                        height: 16,
                                        width: 16,
                                        color: "currentColor"
                                    })
                                })
                            })]
                        })
                    })
                })
            }
        },
        131468: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("47120");
            var a = n("570140"),
                s = n("317770"),
                l = n("314897"),
                i = n("131951");

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class o extends s.default {
                _initialize() {
                    !__OVERLAY__ && (a.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), a.default.subscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), a.default.subscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), a.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                _terminate() {
                    !__OVERLAY__ && (a.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), a.default.unsubscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), a.default.unsubscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), a.default.unsubscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                constructor(...e) {
                    super(...e), r(this, "_playSound", function(e) {
                        arguments.length > 1 && void 0 !== arguments[1] && arguments[1], arguments.length > 2 && arguments[2], arguments.length > 3 && arguments[3]
                    }), r(this, "_stopAndClearSounds", () => {}), r(this, "_handleToggleSelfDeafened", () => {
                        i.default.isDeaf() && this._stopAndClearSounds()
                    }), r(this, "_handleSoundboardSoundReceived", e => {
                        let {
                            soundId: t,
                            soundVolume: n,
                            userId: a,
                            channelId: s
                        } = e;
                        if (null != t && a !== l.default.getId()) return this._playSound(t, n, a, s)
                    }), r(this, "_handleSoundboardSoundPlayLocally", e => {
                        let {
                            sound: t,
                            channelId: n
                        } = e, a = l.default.getId();
                        return this._playSound(t.soundId, t.volume, a, n)
                    }), r(this, "_handleVoiceChannelSelect", () => {
                        this._stopAndClearSounds()
                    })
                }
            }
        },
        377368: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("536442"),
                r = n("810788"),
                o = n("592125"),
                u = n("131951"),
                d = n("944486"),
                c = n("556296"),
                f = n("131468"),
                E = n("208049"),
                h = n("763296"),
                C = n("641015"),
                _ = n("22382"),
                m = n("747071"),
                S = n("49230"),
                p = n("981631"),
                I = n("65154");

            function g(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class T extends f.default {
                _initialize() {
                    super._initialize(), !__OVERLAY__ && l.default.subscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                _terminate() {
                    super._terminate(), !__OVERLAY__ && l.default.unsubscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                constructor(...e) {
                    var t;
                    super(...e), t = this, g(this, "playingSoundsWeb", new Map), g(this, "_stopAndClearSounds", () => {
                        u.default.supports(I.Features.SAMPLE_PLAYBACK) && u.default.getMediaEngine().eachConnection(e => {
                            e.stopAllSamplesLocalPlayback()
                        }), this.playingSoundsWeb.forEach(e => {
                            e.pause(), e.src = ""
                        }), this.playingSoundsWeb = new Map
                    }), g(this, "_playSound", async function(e) {
                        let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 ? arguments[2] : void 0,
                            s = arguments.length > 3 ? arguments[3] : void 0,
                            l = null != s && d.default.getVoiceChannelId() === s;
                        if ((null == s || l) && !u.default.isDeaf() && !h.default.isLocalSoundboardMuted(a)) try {
                            let s = {
                                soundKey: "".concat(a, "-").concat(e),
                                soundURL: (0, _.default)(e),
                                soundVolume: (0, m.default)(n),
                                reportSoundStartedPlaying: () => (0, E.reportSoundStartedPlaying)(e, a)
                            };
                            u.default.supports(I.Features.SAMPLE_PLAYBACK) ? await (0, S.playDesktopSound)(s) : await (0, S.playWebSound)(s, t.playingSoundsWeb)
                        } finally {
                            (0, E.reportSoundFinishedPlaying)(e, a)
                        }
                    }), g(this, "_handleOverlaySoundboardSoundsFetchRequest", () => {
                        (0, E.maybeFetchSoundboardSounds)()
                    }), g(this, "_handleOpenEducationModal", (e, t) => {
                        if (null == e) return;
                        let l = o.default.getChannel(t),
                            u = c.default.getKeybindForAction(p.GlobalKeybindActions.SOUNDBOARD_HOLD);
                        null != l && (0, C.default)(l) && null != u && r.default.hasHotspot(i.HotspotLocations.SOUNDBOARD_WHEEL_EDUCATION_MODAL) && (0, s.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await Promise.all([n.e("99387"), n.e("69208")]).then(n.bind(n, "490166"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guildId: e,
                                keybind: u,
                                channel: l
                            })
                        })
                    })
                }
            }
            t.default = new T
        },
        848543: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("399606"),
                o = n("704215"),
                u = n("923462"),
                d = n("481060"),
                c = n("239091"),
                f = n("100527"),
                E = n("906732"),
                h = n("706140"),
                C = n("294629"),
                _ = n("131951"),
                m = n("459273"),
                S = n("242291"),
                p = n("792165"),
                I = n("603074"),
                g = n("981631"),
                T = n("921944"),
                A = n("689938"),
                N = n("726271");

            function v(e) {
                let {
                    channel: t,
                    iconClassName: l,
                    className: v,
                    innerClassName: R,
                    ...O
                } = e, {
                    mute: L,
                    suppress: P
                } = (0, C.default)(t), y = (0, r.useStateFromStores)([_.default], () => _.default.isDeaf()), M = L || P || y, [D, x] = s.useState(!1), b = t.getGuildId(), U = (0, S.useSoundBoardDismissContentTypes)({
                    isSoundboardButtonDisabled: M
                }), [j, G] = (0, h.useGetDismissibleContent)(U), {
                    analyticsLocations: w
                } = (0, E.default)(f.default.SOUNDBOARD_BUTTON);

                function k(e) {
                    null != b && (0, c.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.e("56049").then(n.bind(n, "338991"));
                        return t => (0, a.jsx)(e, {
                            guildId: b,
                            ...t
                        })
                    })
                }
                let {
                    Component: B,
                    play: F,
                    events: {
                        onMouseEnter: H,
                        onMouseLeave: V
                    }
                } = (0, u.useSoundboardLottie)(), Y = e => (0, a.jsx)(d.Popout, {
                    shouldShow: D,
                    position: "top",
                    onRequestClose: () => x(!1),
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(I.default, {
                            guildId: b,
                            channel: t,
                            onClose: n,
                            gridNotice: j === o.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && (0, a.jsx)(p.CustomCallSoundUpsell, {
                                onClose: n,
                                markAsDismissed: G
                            }),
                            analyticsSource: "rtc panel"
                        })
                    },
                    children: t => (0, a.jsx)("div", {
                        children: (0, a.jsx)(d.Button, {
                            ...e,
                            ...t,
                            className: i()(v, {
                                [N.buttonActive]: D,
                                [N.disabled]: M
                            }),
                            wrapperClassName: v,
                            innerClassName: R,
                            disabled: M,
                            onClick: () => {
                                var t, n;
                                null == n || n(), null != j && j !== o.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && G(T.ContentDismissActionType.UNKNOWN), null == e || null === (t = e.onClick) || void 0 === t || t.call(e), x(!D), F()
                            },
                            onMouseEnter: t => {
                                var n, a;
                                null === (n = O.onMouseEnter) || void 0 === n || n.call(O, t), null == e || null === (a = e.onMouseEnter) || void 0 === a || a.call(e), H()
                            },
                            onMouseLeave: t => {
                                var n, a;
                                null === (n = O.onMouseLeave) || void 0 === n || n.call(O, t), null == e || null === (a = e.onMouseLeave) || void 0 === a || a.call(e), V()
                            },
                            onContextMenu: k,
                            fullWidth: !0,
                            size: d.Button.Sizes.SMALL,
                            ...O,
                            children: (0, a.jsx)(B, {
                                className: l,
                                size: "sm",
                                color: D ? "white" : d.tokens.colors.INTERACTIVE_ACTIVE
                            })
                        })
                    })
                }), W = s.useCallback(() => {
                    !M && x(!D)
                }, [M, D]);
                return (0, m.useComponentAction)({
                    event: g.ComponentActions.TOGGLE_SOUNDBOARD,
                    handler: W
                }), (0, a.jsx)(E.AnalyticsLocationProvider, {
                    value: w,
                    children: (0, a.jsx)(d.Tooltip, {
                        text: function() {
                            if (L) return A.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_GUILD_MUTE;
                            if (P) return A.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_SUPPRESSED;
                            if (y) return A.default.Messages.SOUNDBOARD_OPEN_SOUNBOARRD_ERROR_DEAFENED;
                            return A.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD
                        }(),
                        children: e => Y(e)
                    })
                })
            }
        },
        640806: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("704215"),
                l = n("230711"),
                i = n("765585"),
                r = n("981631"),
                o = n("921944"),
                u = n("689938"),
                d = n("698888");

            function c(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsx)(i.default, {
                    header: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_HEADER,
                    body: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_BODY,
                    tryItText: u.default.Messages.TAKE_ME_THERE,
                    dismissibleContent: s.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION,
                    artClassName: d.art,
                    onTryFeature: () => {
                        l.default.open(r.UserSettingsSections.VOICE), t(o.ContentDismissActionType.UNKNOWN)
                    },
                    onClose: () => t(o.ContentDismissActionType.UNKNOWN),
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0
                })
            }
        },
        49230: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                playDesktopSound: function() {
                    return f
                },
                playWebSound: function() {
                    return E
                }
            }), n("47120");
            var a = n("512722"),
                s = n.n(a),
                l = n("46973"),
                i = n("304809"),
                r = n("131951"),
                o = n("747071");
            let u = null;
            try {
                u = (0, i.getOrCreateAudioContext)()
            } catch {}
            let d = new Map;
            async function c(e) {
                let t = d.get(e);
                if (null != t) return t;
                let n = await (await fetch(e)).arrayBuffer(),
                    a = await (null == u ? void 0 : u.decodeAudioData(n));
                return null != a && d.set(e, a), a
            }

            function f(e) {
                let {
                    soundKey: t,
                    soundURL: n,
                    soundVolume: a,
                    reportSoundStartedPlaying: i
                } = e;
                return new Promise(async e => {
                    let o = await c(n);
                    null == o && e(), r.default.getMediaEngine().eachConnection(n => {
                        n.context === l.MediaEngineContextTypes.DEFAULT && (i(), s()(null != o, "audioBuffer cannot be null here"), n.startSamplesLocalPlayback(t, o, a, () => {
                            e()
                        }))
                    })
                })
            }

            function E(e, t) {
                let {
                    soundKey: n,
                    soundURL: a,
                    soundVolume: s,
                    reportSoundStartedPlaying: l
                } = e, i = t.get(n);
                if (null != i) {
                    i.currentTime = 0;
                    return
                }
                return new Promise(e => {
                    let i = new Audio(a);
                    i.volume = (0, o.default)(s), i.addEventListener("canplaythrough", () => {
                        l(), t.set(n, i), i.play()
                    }), i.addEventListener("ended", () => {
                        t.delete(n), i.src = "", e()
                    })
                })
            }
        },
        380349: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("442837"),
                l = n("481060"),
                i = n("314897"),
                r = n("768419"),
                o = n("456190"),
                u = n("239470"),
                d = n("894344"),
                c = n("203777"),
                f = n("616922"),
                E = n("689938");

            function h(e, t, n) {
                let h = (0, s.useStateFromStores)([r.default, i.default], () => null != t ? (0, u.default)(r.default, i.default, t, e) : void 0, [e, t]);
                if (null == h || null == e || null == t) return null;
                let C = h.isCurrentUser || h.notPlayable || h.playingSameTrack,
                    _ = h.isCurrentUser || h.syncingWithUser || h.syncingWithParty;
                return [(0, a.jsx)(l.MenuItem, {
                    id: "spotify-play-".concat(e.session_id),
                    action: () => (0, c.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_PLAY, n),
                    label: E.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_PLAY_ON_SPOTIFY,
                    subtext: C ? (0, o.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_PLAY) : void 0,
                    disabled: C
                }, "spotify-play-".concat(e.session_id)), h.canPlaySpotify ? (0, a.jsx)(l.MenuItem, {
                    id: "spotify-sync-".concat(e.session_id),
                    action: () => (0, d.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_SYNC, n),
                    label: E.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_LISTEN_ALONG,
                    subtext: _ ? (0, o.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_SYNC) : void 0,
                    disabled: _
                }, "spotify-sync-".concat(e.session_id)) : null]
            }
        },
        262702: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("570140"),
                s = n("846027"),
                l = n("872810"),
                i = n("317770"),
                r = n("569545"),
                o = n("199902"),
                u = n("314897"),
                d = n("592125"),
                c = n("131951"),
                f = n("590415");

            function E(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class h extends i.default {
                _initialize() {
                    a.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    a.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    super(...e), E(this, "handleVoiceStateUpdates", e => {
                        let {
                            voiceStates: t
                        } = e, n = u.default.getId();
                        t.forEach(e => {
                            var t;
                            if (e.userId === n && !!(null === (t = d.default.getChannel(e.channelId)) || void 0 === t ? void 0 : t.isGuildStageVoice()))(0, f.getAudienceRequestToSpeakState)(e) !== f.RequestToSpeakStates.ON_STAGE && (this.handleStopStream(e), this.handleStopUserVideo())
                        })
                    }), E(this, "handleStopStream", e => {
                        let t = o.default.getActiveStreamForUser(e.userId, e.guildId);
                        null != t && (0, l.stopStream)((0, r.encodeStreamKey)(t), !1)
                    }), E(this, "handleStopUserVideo", () => {
                        c.default.isVideoEnabled() && s.default.setVideoEnabled(!1)
                    })
                }
            }
            t.default = new h
        },
        448206: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("442837"),
                s = n("314897"),
                l = n("944486"),
                i = n("88751");

            function r(e) {
                return (0, a.useStateFromStores)([s.default, l.default, i.default], () => {
                    let t = s.default.getId();
                    return l.default.getVoiceChannelId() === e ? i.default.getPermissionsForUser(t, e) : null
                }, [e])
            }
        },
        639033: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770"),
                r = n("314897"),
                o = n("592125"),
                u = n("797258"),
                d = n("590415"),
                c = n("981631");
            let f = "STAGE_INVITED_TO_SPEAK_MODAL";
            class E extends i.default {
                _initialize() {
                    l.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    l.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    var t, l, i;
                    super(...e), t = this, l = "handleVoiceStateUpdates", i = e => {
                        var t;
                        let {
                            voiceStates: l
                        } = e, i = r.default.getId(), E = null === (t = u.default.getSession()) || void 0 === t ? void 0 : t.sessionId, h = l.find(e => e.userId === i && e.sessionId === E);
                        if (null == h) return;
                        let C = h.channelId;
                        if (null == C) {
                            (0, s.hasModalOpen)(f) && (0, s.closeModal)(f);
                            return
                        }
                        let _ = o.default.getChannel(C);
                        if (!(null == _ ? void 0 : _.isGuildStageVoice())) return;
                        let m = (0, d.getAudienceRequestToSpeakState)(h) === d.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;
                        if (null != _ && m) {
                            if ((0, s.hasModalOpen)(f)) return;
                            (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("13878")]).then(n.bind(n, "113140"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    channel: _
                                })
                            }, {
                                modalKey: f,
                                onCloseRequest: c.NOOP_NULL
                            })
                        }
                    }, l in t ? Object.defineProperty(t, l, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[l] = i
                }
            }
            t.default = new E
        },
        703016: function(e, t, n) {
            "use strict";
            n.r(t), n("757143"), n("733860");
            var a = n("913527"),
                s = n.n(a),
                l = n("570140"),
                i = n("419363"),
                r = n("933557"),
                o = n("660199"),
                u = n("869765"),
                d = n("706454"),
                c = n("695346"),
                f = n("314897"),
                E = n("433355"),
                h = n("592125"),
                C = n("271383"),
                _ = n("430824"),
                m = n("131951"),
                S = n("292959"),
                p = n("699516"),
                I = n("944486"),
                g = n("9156"),
                T = n("594174"),
                A = n("51144"),
                N = n("196051"),
                v = n("441729"),
                R = n("653477"),
                O = n("981631"),
                L = n("689938");
            let P = [],
                y = null,
                M = null,
                D = null,
                x = /\|\|([\s\S]+?)\|\|/g;

            function b(e, t, n, a) {
                let l = _.default.getGuild(n),
                    i = e.replace(x, L.default.Messages.SPOILER).replace(/<@!?(\d+)>/g, (e, t) => {
                        var a;
                        let s = T.default.getUser(t);
                        if (null == s) return e;
                        return null !== (a = C.default.getNick(n, s.id)) && void 0 !== a ? a : A.default.getName(s)
                    }).replace(/<@&?(\d+)>/g, (e, t) => {
                        let n = null != l ? _.default.getRole(l.id, t) : null;
                        return null != n && null != n.name ? n.name : L.default.Messages.MESSAGE_TTS_DELETED_ROLE
                    }).replace(/<#(\d+)>/g, (e, t) => {
                        let n = h.default.getChannel(t);
                        return null == n ? e : (0, r.computeChannelName)(n, T.default, p.default)
                    }).replace(/<a?:(\w+):(\d+)>/g, (e, t) => "".concat(L.default.Messages.EMOJI, " ").concat(t)).replace(/<\/([^\s]+?):(\d+)>/g, (e, t) => "/".concat(t)).replace(/<t:(\d+):([A-Z]|[a-z])>/g, (e, t, n) => {
                        let a = o.TIMESTAMP_FORMATS[n],
                            l = 1e3 * parseInt(t, 10),
                            i = s()(l);
                        return null != a ? a(i) : i.format()
                    });
                return null == a ? L.default.Messages.MESSAGE_TTS.format({
                    username: t,
                    body: i
                }) : L.default.Messages.MESSAGE_TTS_REPLY.format({
                    username: t,
                    body: i,
                    replyUsername: a
                })
            }

            function U() {
                if (!i.supported) return !1;
                let e = d.default.locale;
                if (null == D) {
                    var t;
                    D = null === (t = window.speechSynthesis) || void 0 === t ? void 0 : t.getVoices()
                }
                let n = D.filter(t => t.lang === e || t.lang.slice(0, e.length) === e || !1);
                M = n.length > 0 ? n[0] : null
            }
            async function j(e, t, n, a, s) {
                let l = i.createUtterance(e, n);
                null !== l && (null == M && U(), t ? await (0, N.stopSpeaking)() : null == y || y.removeEventListener("end", N.stopSpeaking), l.addEventListener("end", N.stopSpeaking), null != a && l.addEventListener("start", a), null != s && l.addEventListener("end", s), y = l, i.speakUtterance(l, M))
            }

            function G(e, t, n, a, s) {
                j(e, t, s, () => {
                    (0, N.speakingMessage)(n, a)
                })
            }

            function w(e) {
                let {
                    text: t,
                    interrupt: n,
                    maxLength: a,
                    onStart: s,
                    onEnd: l
                } = e;
                j(t, n, a, s, l)
            }

            function k() {
                return null !== y && y.removeEventListener("end", N.stopSpeaking), i.cancelAll(), y = null, !0
            }

            function B(e) {
                var t, n, a;
                let {
                    message: s,
                    channel: l
                } = e, i = s.type === O.MessageTypes.REPLY ? u.default.getMessageByReference(s.messageReference) : null, r = (null == i ? void 0 : i.state) === u.ReferencedMessageState.LOADED ? null == i ? void 0 : null === (t = i.message) || void 0 === t ? void 0 : t.author : null, o = null != r ? null !== (n = C.default.getNick(l.guild_id, null == r ? void 0 : r.id)) && void 0 !== n ? n : A.default.getName(r) : null, d = l.getGuildId(), c = null !== (a = C.default.getNick(d, s.author.id)) && void 0 !== a ? a : A.default.getName(s.author);
                return G(b(s.content, c, d, o), !0, l.id, s.id), !0
            }

            function F(e) {
                var t, n, a, s, l, i, r;
                let {
                    channelId: o,
                    message: u,
                    optimistic: d
                } = e;
                if (d || m.default.isSelfDeaf()) return !1;
                let _ = h.default.getChannel(o);
                if (null == _) return !1;
                let T = I.default.getChannelId(),
                    N = E.default.getCurrentSidebarChannelId(T),
                    v = o === T || o === N,
                    L = c.EnableTTSCommand.getSetting() && u.tts && v,
                    y = S.default.getTTSType(),
                    M = (null === (t = u.author) || void 0 === t ? void 0 : t.id) !== f.default.getId() && (y === O.TTSNotificationTypes.ALL_CHANNELS || y === O.TTSNotificationTypes.SELECTED_CHANNEL && v);
                if ((L || M) && ((null === (n = u.author) || void 0 === n ? void 0 : n.id) == null || !p.default.isBlocked(u.author.id))) {
                    if (P.indexOf(u.id) >= 0) return !1;
                    P.unshift(u.id) > 10 && P.pop();
                    let e = _.getGuildId();
                    if (null != e && g.default.getMutedChannels(e).has(o)) return !1;
                    let t = null !== (i = null !== (l = C.default.getNick(e, null === (a = u.author) || void 0 === a ? void 0 : a.id)) && void 0 !== l ? l : A.default.getName(u.author)) && void 0 !== i ? i : "",
                        n = u.type === O.MessageTypes.REPLY ? null === (s = u.referenced_message) || void 0 === s ? void 0 : s.author : null,
                        d = null != n ? null !== (r = C.default.getNick(e, null == n ? void 0 : n.id)) && void 0 !== r ? r : A.default.getName(n) : null;
                    G(b(u.content, t, e, d), !1, _.id, u.id, R.MAX_TTS_LENGTH)
                }
                return !1
            }

            function H(e) {
                let {
                    id: t,
                    channelId: n
                } = e, a = v.default.currentMessage;
                return null != a && t === a.messageId && n === a.channelId && ((0, N.stopSpeaking)(), !0)
            }

            function V() {
                m.default.isSelfDeaf() && i.cancelAll()
            }
            t.default = {
                init() {
                    l.default.subscribe("SPEAK_TEXT", w), l.default.subscribe("SPEAK_MESSAGE", B), l.default.subscribe("STOP_SPEAKING", k), l.default.subscribe("MESSAGE_CREATE", F), l.default.subscribe("MESSAGE_DELETE", H), l.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", V), l.default.subscribe("USER_SETTINGS_PROTO_UPDATE", U), l.default.subscribe("I18N_LOAD_SUCCESS", U)
                }
            }
        },
        584427: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("74538");
            t.default = e => a.default.canUsePremiumGuildMemberProfile(e)
        },
        52538: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("704215"),
                l = n("765585"),
                i = n("16703"),
                r = n("300284"),
                o = n("689938"),
                u = n("145146");
            t.default = () => {
                let e = (0, i.default)(),
                    t = (0, r.default)({
                        guild: e
                    });
                return (0, a.jsx)(l.default, {
                    isPremiumFeature: !0,
                    shouldUseHorizontalButtons: !0,
                    artClassName: u.coachmarkArt,
                    headerClassName: u.coachmarkHeader,
                    onTryFeature: t,
                    tryItText: o.default.Messages.CHECK_IT_OUT,
                    header: o.default.Messages.GUILD_IDENTITY_PFX_COACHMARK_TITLE,
                    body: o.default.Messages.GUILD_IDENTITY_PFX_COACHMARK_BODY,
                    dismissibleContent: s.DismissibleContent.PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK,
                    maxWidth: 320
                })
            }
        },
        549546: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("204097"),
                r = n("969832"),
                o = n("572004"),
                u = n("51144"),
                d = n("785717"),
                c = n("689938"),
                f = n("9842");

            function E(e) {
                let {
                    user: t,
                    isHovering: n
                } = e, {
                    trackUserProfileAction: s
                } = (0, d.useUserProfileAnalyticsContext)();
                return o.SUPPORTS_COPY ? (0, a.jsx)(r.CopiableField, {
                    className: l()(f.copiable, {
                        [f.visible]: n
                    }),
                    copyValue: u.default.getUserTag(t, {
                        decoration: "never",
                        identifiable: "always"
                    }),
                    copyTooltip: c.default.Messages.COPY_USERNAME,
                    "aria-label": c.default.Messages.COPY_USERNAME,
                    copyTooltipDelay: 0,
                    disableCopy: !1,
                    showCopyIcon: !1,
                    onCopy: () => s({
                        action: "COPY_USERNAME"
                    }),
                    children: (0, a.jsx)(i.CopyIcon, {
                        width: 16,
                        height: 16,
                        color: "currentColor"
                    })
                }) : null
            }
        },
        796214: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("300284"),
                l = n("185403"),
                i = n("785717"),
                r = n("537387"),
                o = n("689938");

            function u(e) {
                let {
                    onClose: t
                } = e, {
                    trackUserProfileAction: n
                } = (0, i.useUserProfileAnalyticsContext)(), u = (0, s.default)();
                return (0, a.jsx)(r.default, {
                    icon: l.default,
                    text: o.default.Messages.EDIT_PROFILE,
                    onClick: () => {
                        n({
                            action: "EDIT_PROFILE"
                        }), null == t || t(), u()
                    }
                })
            }
        },
        429974: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("317770"),
                r = n("603113"),
                o = n("812206"),
                u = n("158776"),
                d = n("699516"),
                c = n("594174"),
                f = n("626135"),
                E = n("621853"),
                h = n("981631"),
                C = n("616922");
            let _ = null;
            async function m(e) {
                var t, l, i, m;
                let {
                    userId: S,
                    section: p,
                    guildId: I = h.ME,
                    channelId: g,
                    friendToken: T,
                    autoFocusNote: A,
                    analyticsLocation: N,
                    ...v
                } = e, R = c.default.getUser(S);
                if (null == R) return;
                let O = E.default.getUserProfile(S),
                    L = u.default.getPrimaryActivity(S),
                    P = u.default.getStatus(S),
                    y = u.default.isMobileOnline(S),
                    {
                        party: M,
                        assets: D,
                        application_id: x
                    } = null != L ? L : {},
                    b = null != x ? o.default.getApplication(x) : null,
                    U = y ? h.AnalyticsUserStatusTypes.ONLINE_MOBILE : h.AnalyticsUserStatusTypes.ONLINE_DESKTOP,
                    j = P === h.StatusTypes.ONLINE ? U : P;
                _ = await (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await Promise.all([n.e("99387"), n.e("824")]).then(n.bind(n, "304113"));
                    return t => (0, a.jsx)(e, {
                        location: "handleOpenUserProfileModal",
                        user: R,
                        autoFocusNote: A,
                        guildId: I,
                        friendToken: T,
                        initialSection: p,
                        channelId: g,
                        ...t,
                        ...v
                    })
                }), f.default.track(h.AnalyticEvents.OPEN_MODAL, {
                    type: "Profile Modal",
                    guild_id: I !== h.ME ? I : null,
                    channel_id: g,
                    other_user_id: S,
                    application_id: null !== (l = null == L ? void 0 : L.application_id) && void 0 !== l ? l : null,
                    application_name: null == L ? void 0 : L.name,
                    sku_id: null !== (i = null == b ? void 0 : b.primarySkuId) && void 0 !== i ? i : null,
                    is_friend: d.default.isFriend(S),
                    has_images: !!(null !== (m = null == D ? void 0 : D.large_image) && void 0 !== m ? m : null == D ? void 0 : D.small_image),
                    party_max: null == M ? void 0 : null === (t = M.size) || void 0 === t ? void 0 : t[1],
                    party_id: null == M ? void 0 : M.id,
                    party_platform: (0, C.isSpotifyParty)(null == M ? void 0 : M.id) ? h.PlatformTypes.SPOTIFY : null,
                    game_platform: (0, r.default)(L),
                    profile_user_status: j,
                    profile_has_nitro_customization: (null == O ? void 0 : O.banner) != null,
                    profile_has_profile_effect: (null == O ? void 0 : O.profileEffectId) != null,
                    ...null == N ? null : (0, f.expandLocation)(N)
                })
            }

            function S() {
                null != _ && (0, s.closeModal)(_), _ = null
            }
            class p extends i.default {
                _initialize() {
                    l.default.subscribe("USER_PROFILE_MODAL_OPEN", m), l.default.subscribe("USER_PROFILE_MODAL_CLOSE", S)
                }
                _terminate() {
                    l.default.unsubscribe("USER_PROFILE_MODAL_OPEN", m), l.default.unsubscribe("USER_PROFILE_MODAL_CLOSE", S)
                }
            }
            t.default = new p
        },
        886162: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("990547"),
                i = n("399606"),
                r = n("481060"),
                o = n("232567"),
                u = n("213609"),
                d = n("23434"),
                c = n("153124"),
                f = n("981631"),
                E = n("689938"),
                h = n("573352");

            function C(e) {
                let {
                    transitionState: t
                } = e, C = (0, i.useStateFromStores)([d.default], () => d.default.getAction()), [_, m] = s.useState(!1), S = (0, c.useUID)();
                async function p() {
                    return m(!0), C === f.UserRequiredActions.AGREEMENTS && m(await (0, o.acceptAgreements)()), null
                }
                return (0, u.default)({
                    type: l.ImpressionTypes.VIEW,
                    name: l.ImpressionNames.USER_AGREEMENTS,
                    properties: {
                        required_action: C
                    }
                }, {}, []), (0, a.jsxs)(r.ModalRoot, {
                    "aria-labelledby": S,
                    transitionState: t,
                    children: [(0, a.jsx)("div", {
                        id: S
                    }), (0, a.jsx)(r.ModalHeader, {
                        separator: !1,
                        children: (0, a.jsx)(r.Heading, {
                            variant: "heading-lg/semibold",
                            children: E.default.Messages.NEW_TERMS_TITLE
                        })
                    }), (0, a.jsxs)(r.ModalContent, {
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            children: C === f.UserRequiredActions.AGREEMENTS ? E.default.Messages.TERMS_OF_SERVICE_UPDATE_03_27_2023_DESCRIPTION.format() : null
                        }), (0, a.jsxs)("div", {
                            className: h.container,
                            children: [(0, a.jsxs)("ul", {
                                className: h.links,
                                children: [(0, a.jsx)("li", {
                                    children: E.default.Messages.TERMS_OF_SERVICE.format({
                                        url: f.MarketingURLs.TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: E.default.Messages.PAID_SERVICES_TERMS.format({
                                        url: f.MarketingURLs.PAID_TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: E.default.Messages.PRIVACY_POLICY.format({
                                        url: f.MarketingURLs.PRIVACY
                                    })
                                }), (0, a.jsx)("li", {
                                    children: E.default.Messages.COMMUNITY_GUIDELINES.format({
                                        url: f.MarketingURLs.GUIDELINES
                                    })
                                })]
                            }), (0, a.jsx)("img", {
                                className: h.image,
                                alt: "",
                                src: n("146714")
                            })]
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            className: h.agreementDescription,
                            children: E.default.Messages.TERMS_OF_SERVICE_AGREEMENT_DESCRIPTION
                        })]
                    }), (0, a.jsx)(r.ModalFooter, {
                        children: (0, a.jsx)(r.Button, {
                            submitting: _,
                            onClick: p,
                            color: r.Button.Colors.GREEN,
                            children: E.default.Messages.AGREE
                        })
                    })]
                })
            }
        },
        332754: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140"),
                i = n("1964"),
                r = n("852758"),
                o = n("314897"),
                u = n("594174"),
                d = n("725568"),
                c = n("78415"),
                f = n("374023"),
                E = n("886162"),
                h = n("981631"),
                C = n("815660"),
                _ = n("231338");
            let m = "AGREEMENTS_MODAL_KEY";
            t.default = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleRequiredAction), l.default.subscribe("USER_REQUIRED_ACTION_UPDATE", this.handleRequiredAction), l.default.subscribe("CURRENT_USER_UPDATE", this.handleCurrentUserUpdate), o.default.addChangeListener(this.handleAuthenticationStoreChanged)
                },
                handleRequiredAction(e) {
                    let t = e.requiredAction;
                    !f.ProcessArgs.isDisallowPopupsSet() && null != u.default.getCurrentUser() && (t === h.UserRequiredActions.REQUIRE_CAPTCHA || t === h.UserRequiredActions.REQUIRE_VERIFIED_EMAIL || t === h.UserRequiredActions.REQUIRE_VERIFIED_PHONE || t === h.UserRequiredActions.REQUIRE_REVERIFIED_PHONE || t === h.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE || t === h.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE || i.default.isEmailReverification(t) ? (0, d.openFullScreenLayer)(() => (0, a.jsx)(r.default, {}), {
                        layerKey: "verification",
                        Layer: c.default
                    }) : t === h.UserRequiredActions.AGREEMENTS ? (0, s.openModal)(e => (0, a.jsx)(E.default, {
                        ...e
                    }), {
                        modalKey: m,
                        onCloseRequest: _.NOOP_NULL
                    }) : null == t && ((0, d.closeFullScreenLayer)("verification"), (0, s.hasModalOpen)(m) && (0, s.closeModal)(m)))
                },
                handleAuthenticationStoreChanged() {
                    null == o.default.getId() && ((0, d.closeFullScreenLayer)("verification"), (0, s.closeModal)(m), (0, s.closeModal)(r.PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY), (0, s.closeModal)(r.EMAIL_VERIFICATION_MODAL_KEY), (0, s.closeModal)(C.PHONE_VERIFICATION_MODAL_KEY))
                },
                handleCurrentUserUpdate(e) {
                    let {
                        user: t
                    } = e;
                    t.verified && (0, s.closeModal)(r.EMAIL_VERIFICATION_MODAL_KEY)
                }
            }
        },
        755264: function(e, t, n) {
            "use strict";
            n.r(t), n("47120"), n("653041");
            var a = n("392711"),
                s = n.n(a),
                l = n("442837"),
                i = n("377108"),
                r = n("433517"),
                o = n("709054"),
                u = n("48481"),
                d = n("526761"),
                c = n("981631");
            let f = "selectedChannelGuildFrecency";

            function E(e) {
                var t;
                let n;
                (t = n || (n = {})).IMAGE = "IMAGE", t.VIDEO = "VIDEO";
                let {
                    state: a
                } = l.default.PersistedStore.migrateAndReadStoreState("GIFFavoritesStore", [e => null == e ? {
                    favorites: [],
                    timesFavorited: 0
                } : Array.isArray(e) ? {
                    favorites: e,
                    timesFavorited: 0
                } : e, e => Array.isArray(e.favorites) ? e : {
                    favorites: [],
                    timesFavorited: 0
                }]);
                return null == a || 0 === a.favorites.length ? [] : a.favorites.map((t, n) => {
                    let s = i.FavoriteGIF.create();
                    return s.format = "IMAGE" === t.format ? i.GIFType.IMAGE : "VIDEO" === t.format ? i.GIFType.VIDEO : i.GIFType.NONE, s.src = t.src, s.width = t.width, s.height = t.height, s.order = a.favorites.length - n + e, {
                        url: t.url,
                        favorite: s
                    }
                })
            }
            let h = [{
                version: 2,
                run(e) {
                    let t = E(1);
                    if (0 === t.length) return !1;
                    for (let {
                            url: n,
                            favorite: a
                        }
                        of(null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), e.favoriteGifs.gifs = {}, t)) e.favoriteGifs.gifs[n] = a;
                    return e.favoriteGifs.hideTooltip = t.length > 2, !0
                },
                cleanup() {}
            }, {
                version: 3,
                run(e) {
                    function t() {
                        return {
                            usageHistory: {},
                            favorites: []
                        }
                    }
                    let {
                        state: n
                    } = l.default.PersistedStore.migrateAndReadStoreState("StickersPersistedStore", [e => null == e || 0 === Object.keys(e).length ? t() : e, e => null == e || 0 === Object.keys(e).length ? t() : (null == e.favorites && (e.favorites = []), e)]);
                    if (null == n) return !1;
                    let a = !1;
                    return n.favorites.length > 0 && (e.favoriteStickers = i.FavoriteStickers.create(), e.favoriteStickers.stickerIds = s().uniq(n.favorites).slice(0, d.MAX_FAVORITES), a = !0), s().size(n.usageHistory) > 0 && (e.stickerFrecency = i.StickerFrecency.create(), e.stickerFrecency.stickers = (0, u.serializeUsageHistory)(n.usageHistory, 100), a = !0), a
                },
                cleanup() {
                    r.Storage.remove("StickersPersistedStore")
                }
            }, {
                version: 4,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        usageHistory: r.Storage.get("EmojiUsageHistory") || {}
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.favorites && t.favorites.length > 0 && (e.favoriteEmojis = i.FavoriteEmojis.create(), e.favoriteEmojis.emojis = s().uniq(t.favorites).slice(0, d.MAX_FAVORITES), n = !0), s().size(t.usageHistory) > 0 && (e.emojiFrecency = i.EmojiFrecency.create(), e.emojiFrecency.emojis = (0, u.serializeUsageHistory)(t.usageHistory, 100), n = !0), n
                },
                cleanup() {
                    r.Storage.remove("EmojiStore"), r.Storage.remove("EmojiUsageHistory"), r.Storage.remove("EmojiDiversitySurrogate")
                }
            }, {
                version: 6,
                run(e) {
                    null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), null == e.favoriteGifs.gifs && (e.favoriteGifs.gifs = {});
                    let t = E(1);
                    if (0 === t.length) return !1;
                    s()(e.favoriteGifs.gifs).values().sortBy("order").forEach((e, n) => e.order = t.length + 1 + n);
                    let n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length,
                        a = 0;
                    for (let {
                            url: s,
                            favorite: l
                        }
                        of t) {
                        if (l.order = t.length - a, a++, s in e.favoriteGifs.gifs) {
                            e.favoriteGifs.gifs[s].order = l.order;
                            continue
                        }
                        let r = i.FavoriteGIF.toBinary(l).length + s.length + 7;
                        !(n + r > d.MAX_FAVORITE_GIFS_SIZE) && (n += r, e.favoriteGifs.gifs[s] = l)
                    }
                    for (n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length; n > d.MAX_FAVORITE_GIFS_SIZE;) {
                        let t = 0;
                        for (let n in e.favoriteGifs.gifs)
                            if (delete e.favoriteGifs.gifs[n], ++t >= 10) break;
                        n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length
                    }
                    return !0
                },
                cleanup() {}
            }, {
                version: 7,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("ApplicationCommandFrecency", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s().size(t.usageHistory) > 0 && (e.applicationCommandFrecency = i.ApplicationCommandFrecency.create(), e.applicationCommandFrecency.applicationCommands = (0, u.serializeUsageHistory)(t.usageHistory, 500), n = !0), n
                },
                cleanup() {
                    r.Storage.remove("ApplicationCommandFrecency")
                }
            }, {
                version: 8,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("SoundboardFavoriteStore", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s().size(t.favoriteSounds) > 0 && (e.favoriteSoundboardSounds = i.FavoriteSoundboardSounds.create(), o.default.keys(t.favoriteSounds).forEach(n => {
                        new Set(t.favoriteSounds[n]).forEach(t => {
                            var n;
                            null === (n = e.favoriteSoundboardSounds) || void 0 === n || n.soundIds.push(t)
                        })
                    }), n = !0), n
                },
                cleanup() {
                    r.Storage.remove("SoundboardFavoriteStore")
                }
            }, {
                version: 9,
                run(e) {
                    let t = r.Storage.get(f);
                    if (null == t) return !1;
                    for (let e in t) !c.ID_REGEX.test(e) && delete t[e];
                    return e.guildAndChannelFrecency = i.GuildAndChannelFrecency.create(), e.guildAndChannelFrecency.guildAndChannels = (0, u.serializeUsageHistory)(t, 100), !0
                },
                cleanup() {
                    r.Storage.remove(f)
                }
            }];
            t.default = h
        },
        315341: function(e, t, n) {
            "use strict";
            n.r(t), n("518263"), n("970173"), n("520712"), n("268111"), n("941497"), n("32026"), n("480839"), n("744285"), n("492257"), n("873817");
            var a = n("442837"),
                s = n("704215"),
                l = n("524437"),
                i = n("381499"),
                r = n("433517"),
                o = n("581364"),
                u = n("536442"),
                d = n("592125"),
                c = n("915486"),
                f = n("48481"),
                E = n("981631"),
                h = n("798077");

            function C(e, t) {
                let n = !1;
                return null == e.userContent && (e.userContent = {
                    dismissedContents: new Uint8Array,
                    lastReceivedChangelogId: "0"
                }), null == e.userContent.dismissedContents && (e.userContent.dismissedContents = new Uint8Array), !(0, c.hasBit)(e.userContent.dismissedContents, t) && (e.userContent.dismissedContents = (0, c.addBit)(e.userContent.dismissedContents, t), n = !0), n
            }

            function _(e, t, n) {
                return !!u.HotspotStore.hasHiddenHotspot(t) && C(e, n)
            }
            let m = [{
                version: 2,
                run(e) {
                    var t, n, a;
                    let s;
                    if ((a = s || (s = {})).Mentions = "Recent Mentions", a.Unreads = "Inbox", null != e.inbox) return !1;
                    let i = !1,
                        o = l.InboxSettings.create();
                    e.inbox = o, r.Storage.get("seenInboxTutorial", !1) && (o.viewedTutorial = !0, i = !0);
                    let u = r.Storage.get("recentsButtonTab2");
                    null != u && (o.currentTab = "Recent Mentions" === u ? l.InboxTab.MENTIONS : l.InboxTab.UNREADS, i = !0);
                    let c = null !== (t = r.Storage.get("unread-messages-collapsed-channels")) && void 0 !== t ? t : {};
                    for (let t in c) {
                        if (!c[t]) continue;
                        let a = d.default.getChannel(t);
                        null != a && (i = !0, (0, f.mutateUserChannelSettings)(e, null !== (n = a.guild_id) && void 0 !== n ? n : "0", a.id, e => {
                            e.collapsedInInbox = !0
                        }))
                    }
                    return i
                },
                cleanup() {
                    r.Storage.remove("seenInboxTutorial"), r.Storage.remove("recentsButtonTab2"), r.Storage.remove("unread-messages-collapsed-channels")
                }
            }, {
                version: 3,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        diversitySurrogate: r.Storage.get("EmojiDiversitySurrogate") || ""
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.diversitySurrogate && "" !== t.diversitySurrogate && (null == e.textAndImages && (e.textAndImages = l.TextAndImagesSettings.create()), null == e.textAndImages.diversitySurrogate && (e.textAndImages.diversitySurrogate = i.StringValue.create()), e.textAndImages.diversitySurrogate.value = t.diversitySurrogate, n = !0), n
                },
                cleanup() {}
            }, {
                version: 4,
                run(e) {
                    let t = !1;
                    return (!0 === r.Storage.get("HAS_SEEN_HUB_UPSELL") || u.HotspotStore.hasHiddenHotspot(u.HotspotLocations.HUB_SECOND_EMAIL_CONNECTION_UPSELL)) && (t = C(e, s.DismissibleContent.HUB_WAITLIST_UPSELL)), t
                },
                cleanup() {
                    r.Storage.remove("HAS_SEEN_HUB_UPSELL")
                }
            }, {
                version: 5,
                run(e) {
                    var t, n, a, s, o, u, d;
                    let c = !1;
                    e.textAndImages = null !== (t = e.textAndImages) && void 0 !== t ? t : l.TextAndImagesSettings.create(), e.notifications = null !== (n = e.notifications) && void 0 !== n ? n : l.NotificationSettings.create(), e.privacy = null !== (a = e.privacy) && void 0 !== a ? a : l.PrivacySettings.create(), e.voiceAndVideo = null !== (s = e.voiceAndVideo) && void 0 !== s ? s : l.VoiceAndVideoSettings.create(), e.gameLibrary = null !== (o = e.gameLibrary) && void 0 !== o ? o : l.GameLibrarySettings.create(), e.debug = null !== (u = e.debug) && void 0 !== u ? u : l.DebugSettings.create();
                    let f = null !== (d = r.Storage.get("UserSettingsStore")) && void 0 !== d ? d : {};
                    return "boolean" == typeof f.useRichChatTextBox && (e.textAndImages.useRichChatInput = i.BoolValue.create({
                        value: f.useRichChatTextBox
                    }), c = !0), "string" == typeof f.renderSpoilers && (e.textAndImages.renderSpoilers = i.StringValue.create({
                        value: f.renderSpoilers
                    }), c = !0), "boolean" == typeof f.useThreadSidebar && (e.textAndImages.useThreadSidebar = i.BoolValue.create({
                        value: f.useThreadSidebar
                    }), c = !0), "boolean" == typeof f.showInAppNotifications && (e.notifications.showInAppNotifications = i.BoolValue.create({
                        value: f.showInAppNotifications
                    }), c = !0), f.emojiPickerCollapsedSections instanceof Array && (e.textAndImages.emojiPickerCollapsedSections = f.emojiPickerCollapsedSections, c = !0), f.stickerPickerCollapsedSections instanceof Array && (e.textAndImages.stickerPickerCollapsedSections = f.stickerPickerCollapsedSections, c = !0), "boolean" == typeof f.viewImageDescriptions && (e.textAndImages.viewImageDescriptions = i.BoolValue.create({
                        value: f.viewImageDescriptions
                    }), c = !0), "boolean" == typeof f.showCommandSuggestions && (e.textAndImages.showCommandSuggestions = i.BoolValue.create({
                        value: f.showCommandSuggestions
                    }), c = !0), "boolean" == typeof f.alwaysPreviewVideo && (e.voiceAndVideo.alwaysPreviewVideo = i.BoolValue.create({
                        value: f.alwaysPreviewVideo
                    }), c = !0), "boolean" == typeof f.notifyFriendsOnGoLive && (e.notifications.notifyFriendsOnGoLive = i.BoolValue.create({
                        value: f.notifyFriendsOnGoLive
                    }), c = !0), "boolean" == typeof f.installShortcutDesktop && (e.gameLibrary.installShortcutDesktop = i.BoolValue.create({
                        value: f.installShortcutDesktop
                    }), c = !0), "boolean" == typeof f.installShortcutStartMenu && (e.gameLibrary.installShortcutStartMenu = i.BoolValue.create({
                        value: f.installShortcutStartMenu
                    }), c = !0), "boolean" == typeof f.allowActivityPartyPrivacyFriends && (e.privacy.allowActivityPartyPrivacyFriends = i.BoolValue.create({
                        value: f.allowActivityPartyPrivacyFriends
                    }), c = !0), "boolean" == typeof f.allowActivityPartyPrivacyVoiceChannel && (e.privacy.allowActivityPartyPrivacyVoiceChannel = i.BoolValue.create({
                        value: f.allowActivityPartyPrivacyVoiceChannel
                    }), c = !0), "boolean" == typeof f.rtcPanelShowVoiceStates && (e.debug.rtcPanelShowVoiceStates = i.BoolValue.create({
                        value: f.rtcPanelShowVoiceStates
                    }), c = !0), c
                },
                cleanup() {}
            }, {
                version: 7,
                run: e => _(e, u.HotspotLocations.APPLICATION_COMMAND_TOOLTIP, s.DismissibleContent.APPLICATION_COMMAND_TOOLTIP),
                cleanup() {}
            }, {
                version: 8,
                run: e => _(e, u.HotspotLocations.CHANNEL_BANNER_MEMBER_LIST_NOTICE, s.DismissibleContent.CHANNELINFO_CHANNELBANNER_NOTICE),
                cleanup() {}
            }, {
                version: 9,
                run: e => (u.HotspotStore.hasHiddenHotspot(u.HotspotLocations.MULTI_ACCOUNT_TOOLTIP) && r.Storage.set(h.MULTIACCOUNT_TOOLTIP_SEEN_KEY, "true"), _(e, u.HotspotLocations.MULTI_ACCOUNT_TOOLTIP, s.DismissibleContent.ACCOUNT_MULTIACCOUNT_TOOLTIP)),
                cleanup() {}
            }, {
                version: 10,
                run(e) {
                    var t;
                    let n = _(e, u.HotspotLocations.HUB_LINK_CHANNEL_NOTICE, s.DismissibleContent.CHANNEL_NOTICE_HUBLINK),
                        a = null !== (t = r.Storage.get("channelNotices")) && void 0 !== t ? t : {};
                    return !1 === a[E.ChannelNoticeTypes.INVITE] && C(e, s.DismissibleContent.CHANNEL_NOTICE_INVITE) && (n = !0), !1 === a[E.ChannelNoticeTypes.QUICKSWITCHER] && C(e, s.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER) && (n = !0), !1 === a[E.ChannelNoticeTypes.GUILD_BOOSTING] && C(e, s.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION) && (n = !0), n
                },
                cleanup() {
                    r.Storage.remove("channelNotices")
                }
            }, {
                version: 11,
                run(e) {
                    let t = !1;
                    return _(e, u.HotspotLocations.GUILD_EVENT_UPSELL, s.DismissibleContent.GUILD_HEADER_EVENT_UPSELL) && (t = !0), _(e, u.HotspotLocations.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS) && (t = !0), _(e, u.HotspotLocations.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_ANIMATED_GUILD_BANNER) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 12,
                run(e) {
                    let t = !1;
                    return r.Storage.get("hideNag") && C(e, s.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD) && (t = !0), r.Storage.get("hideConnectSpotify") && C(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY) && (t = !0), r.Storage.get("hideConnectPlayStation") && C(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION) && (t = !0), r.Storage.get("hideMFASMSNotice") && C(e, s.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP) && (t = !0), t
                },
                cleanup() {
                    r.Storage.remove("hideNag"), r.Storage.remove("hideConnectSpotify"), r.Storage.remove("hideConnectPlayStation"), r.Storage.remove("hideMFASMSNotice")
                }
            }, {
                version: 13,
                run(e) {
                    let t = !1;
                    return r.Storage.get("hidePremiumPromo") && C(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO) && (t = !0), r.Storage.get("hidePremiumTier2TrialEnding") && C(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING) && (t = !0), r.Storage.get("hidePremiumReactivateNotice") && C(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE) && (t = !0), _(e, u.HotspotLocations.INVITE_SPLASH_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_INVITE_SPLASH) && (t = !0), t
                },
                cleanup() {
                    r.Storage.remove("hidePremiumPromo"), r.Storage.remove("hidePremiumTier2TrialEnding"), r.Storage.remove("hidePremiumReactivateNotice")
                }
            }, {
                version: 14,
                run: e => _(e, u.HotspotLocations.ACTIVITY_BEB_TUTORIAL, s.DismissibleContent.ACTIVITIES_TUTORIAL_COACH_MARK),
                cleanup() {}
            }, {
                version: 15,
                run: e => _(e, u.HotspotLocations.NOW_PLAYING_CONSENT_CARD, s.DismissibleContent.NOW_PLAYING_CONSENT_CARD),
                cleanup() {}
            }, {
                version: 16,
                run(e) {
                    let t = r.Storage.get("PromotionsPersistedStore");
                    if (null == t) return !1;
                    let n = t._state.lastDismissedOutboundPromotionStartDate;
                    return null != n && (null == e.userContent && (e.userContent = l.UserContentSettings.create()), null == e.userContent.lastDismissedOutboundPromotionStartDate) && (e.userContent.lastDismissedOutboundPromotionStartDate = i.StringValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {}
            }, {
                version: 17,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("ExpressionSuggestionsPersistedStore", null);
                    if (null == t) return !1;
                    let n = t.expressionSuggestionsEnabled;
                    return null != n && (null == e.textAndImages && (e.textAndImages = l.TextAndImagesSettings.create()), null == e.textAndImages.expressionSuggestionsEnabled) && (e.textAndImages.expressionSuggestionsEnabled = i.BoolValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {
                    r.Storage.remove("ExpressionSuggestionsPersistedStore")
                }
            }, {
                version: 18,
                run(e) {
                    let t = !1;
                    return _(e, u.HotspotLocations.GUILD_DELETE_FEEDBACK, s.DismissibleContent.GUILD_DELETE_FEEDBACK) && (t = !0), _(e, u.HotspotLocations.GUILD_LEAVE_FEEDBACK, s.DismissibleContent.GUILD_LEAVE_FEEDBACK) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 19,
                run(e) {
                    var t;
                    let n = !1;
                    return null !== (t = r.Storage.get("forumHelperCardStorageKey")) && void 0 !== t && t && (n = C(e, s.DismissibleContent.FORUM_CHANNEL_HELPER_CARD)), n
                },
                cleanup() {
                    r.Storage.remove("forumHelperCardStorageKey")
                }
            }, {
                version: 20,
                run(e) {
                    let t = r.Storage.get("lastChangeLogId");
                    if (null == t) return !1;
                    if (!(0, o.isSnowflake)(t)) return r.Storage.remove("lastChangeLogId"), !1;
                    if (null == e.userContent) e.userContent = l.UserContentSettings.create();
                    else if (null != e.userContent && null != e.userContent.lastReceivedChangelogId && "0" !== e.userContent.lastReceivedChangelogId) return r.Storage.remove("lastChangeLogId"), !1;
                    return e.userContent.lastReceivedChangelogId = t, !0
                },
                cleanup() {
                    r.Storage.remove("lastChangeLogId")
                }
            }];
            t.default = m
        },
        507468: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("392711"),
                s = n.n(a),
                l = n("570140"),
                i = n("755264"),
                r = n("315341"),
                o = n("262847"),
                u = n("675478"),
                d = n("581883"),
                c = n("526761");

            function f() {
                let e = d.default.getFullState(),
                    t = e[c.UserSettingsTypes.PRELOADED_USER_SETTINGS];
                t.editInfo.triggeredMigrations && u.PreloadedUserSettingsActionCreators.markDirtyFromMigration(t.proto, t.editInfo.cleanupFuncs), s().forEach(u.UserSettingsActionCreatorsByType, (t, n) => {
                    let a = e[Number(n)];
                    null != a.editInfo.offlineEditDataVersion && null != a.editInfo.protoToSave && t.scheduleSaveFromOfflineEdit()
                })
            }

            function E(e) {
                let {
                    settings: {
                        proto: t,
                        type: n
                    },
                    delaySeconds: a,
                    jitter: s
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[n].markDirty(t, {
                    delaySeconds: a,
                    jitter: s
                })
            }

            function h(e) {
                let {
                    settingsType: t
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[t].loadIfNecessary()
            }

            function C(e) {
                let {
                    state: t
                } = e;
                ("inactive" === t || "background" === t) && s().forEach(u.UserSettingsActionCreatorsByType, (e, t) => {
                    null != d.default.getFullState()[Number(t)].editInfo.timeout && (e.logger.log("Triggering persistChanges due to AppStateUpdate"), e.persistChanges())
                })
            }
            t.default = {
                init() {
                    o.default[c.UserSettingsTypes.PRELOADED_USER_SETTINGS] = r.default, o.default[c.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS] = i.default, l.default.subscribe("CONNECTION_OPEN", f), l.default.subscribe("USER_SETTINGS_PROTO_ENQUEUE_UPDATE", E), l.default.subscribe("USER_SETTINGS_PROTO_LOAD_IF_NECESSARY", h), l.default.subscribe("APP_STATE_UPDATE", C)
                }
            }
        },
        331187: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250"),
                s = n("470079"),
                l = n("703656"),
                i = n("970731"),
                r = n("626135"),
                o = n("63063"),
                u = n("973005"),
                d = n("981631"),
                c = n("921944"),
                f = n("689938"),
                E = n("51760");
            t.default = e => {
                let {
                    markAsDismissed: t
                } = e;
                return s.useEffect(() => {
                    r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                        action: u.DMSafetyCoachmarkActions.VIEW
                    })
                }, []), (0, a.jsx)(i.default, {
                    header: f.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_HEADER_V2,
                    content: f.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_CONTENT_V2.format({
                        helpdeskArticle: o.default.getArticleURL(d.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                    }),
                    buttonCTA: f.default.Messages.GOT_IT,
                    secondaryButtonCTA: f.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_REDIRECT,
                    className: E.coachmark,
                    onClick: e => {
                        e.stopPropagation(), t(c.ContentDismissActionType.UNKNOWN), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                            action: u.DMSafetyCoachmarkActions.DISMISS
                        })
                    },
                    onSecondaryClick: () => {
                        (0, l.transitionTo)(d.Routes.SETTINGS("privacy-and-safety")), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                            action: u.DMSafetyCoachmarkActions.CHANGE_SETTING
                        })
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: E.__invalid_header
                })
            }
        },
        852758: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMAIL_VERIFICATION_MODAL_KEY: function() {
                    return N
                },
                PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY: function() {
                    return v
                },
                default: function() {
                    return R
                }
            }), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("990547"),
                i = n("442837"),
                r = n("544891"),
                o = n("481060"),
                u = n("893776"),
                d = n("37234"),
                c = n("809206"),
                f = n("110924"),
                E = n("714338"),
                h = n("213609"),
                C = n("144114"),
                _ = n("210887"),
                m = n("23434"),
                S = n("610001"),
                p = n("78415"),
                I = n("1964"),
                g = n("981631"),
                T = n("815660"),
                A = n("689938");
            let N = "Email Verification",
                v = "PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY";

            function R() {
                let {
                    action: e,
                    theme: t
                } = (0, i.useStateFromStoresObject)([m.default, _.default], () => ({
                    action: m.default.getAction(),
                    theme: _.default.theme
                })), R = I.default.getVerificationTypes(e), [O, L] = s.useState(0), P = (0, f.default)(R);
                (0, h.default)({
                    type: l.ImpressionTypes.MODAL,
                    name: l.ImpressionNames.USER_ACTION_REQUIRED,
                    properties: {
                        verification_type: R[0],
                        verification_types: R
                    }
                }, {}, [R.toString()]);
                let y = () => {
                        (0, c.accountDetailsInit)(), (0, o.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("35401")]).then(n.bind(n, "284549"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }, {
                            modalKey: N,
                            Layer: p.default
                        })
                    },
                    M = () => {
                        (0, o.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await Promise.all([n.e("49237"), n.e("99387"), n.e("76540")]).then(n.bind(n, "607018"));
                            return t => (0, a.jsx)(e, {
                                reason: C.ChangePhoneReason.USER_ACTION_REQUIRED,
                                ...t
                            })
                        }, {
                            modalKey: T.PHONE_VERIFICATION_MODAL_KEY,
                            Layer: p.default
                        })
                    };
                return s.useEffect(() => (E.default.disable(), () => {
                    E.default.enable()
                }), []), s.useEffect(() => {
                    (null == P ? void 0 : P[0]) === g.VerificationTypes.PHONE && (null == R ? void 0 : R[0]) === g.VerificationTypes.EMAIL && (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.resolve().then(n.bind(n, "468026"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            title: A.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_TITLE,
                            body: A.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_BODY,
                            confirmText: A.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_CONFIRM
                        })
                    }, {
                        modalKey: v,
                        Layer: p.default,
                        onCloseCallback: y
                    })
                }, [R, P]), (0, a.jsx)(S.default, {
                    types: R,
                    captchaKey: O,
                    onCaptchaVerify: e => {
                        r.HTTP.post({
                            url: g.Endpoints.CAPTCHA,
                            body: {
                                captcha_key: e
                            },
                            oldFormErrors: !0
                        }).then(d.popLayer, () => {
                            L(e => e + 1)
                        })
                    },
                    theme: t,
                    onClick: e => {
                        e === g.VerificationTypes.EMAIL_OR_PHONE || e === g.VerificationTypes.EMAIL || e === g.VerificationTypes.REVERIFY_EMAIL ? y() : M()
                    },
                    onLogout: () => {
                        (0, o.openModalLazy)(async () => {
                            let {
                                ConfirmModal: e,
                                Text: t
                            } = await Promise.resolve().then(n.bind(n, "481060"));
                            return n => (0, a.jsx)(e, {
                                header: A.default.Messages.LOGOUT,
                                confirmText: A.default.Messages.LOGOUT,
                                cancelText: A.default.Messages.CANCEL,
                                onConfirm: () => u.default.logout(),
                                ...n,
                                children: (0, a.jsx)(t, {
                                    variant: "text-md/normal",
                                    children: A.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT
                                })
                            })
                        }, {
                            Layer: p.default
                        })
                    }
                })
            }
        },
        879815: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("442837"),
                s = n("314897"),
                l = n("131951"),
                i = n("979651");
            t.default = e => (0, a.useStateFromStoresObject)([i.default, l.default, s.default], () => (function(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.default,
                    a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : l.default,
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : s.default,
                    o = null != e ? n.getVoiceState(e.getGuildId(), r.getId()) : null;
                return {
                    selfDeaf: a.isSelfDeaf(),
                    deaf: null !== (t = null == o ? void 0 : o.deaf) && void 0 !== t && t
                }
            })(e, i.default, l.default, s.default))
        },
        282506: function(e, t, n) {
            "use strict";
            let a;
            n.r(t);
            var s = n("570140"),
                l = n("519938"),
                i = n("317770"),
                r = n("317381"),
                o = n("928518"),
                u = n("199902"),
                d = n("592125"),
                c = n("819640"),
                f = n("131951"),
                E = n("366050"),
                h = n("19780"),
                C = n("944486"),
                _ = n("914010"),
                m = n("979651"),
                S = n("981631"),
                p = n("65154");

            function I() {
                var e;
                let t = a;
                if (null == t || !E.default.isOpen(t)) return !1;
                s.default.wait(() => l.close(t)), null === (e = h.default.getRTCConnection()) || void 0 === e || e.setPipOpen(!1), a = null
            }

            function g() {
                let e = h.default.getChannelId(),
                    t = a === e;
                return function() {
                    let e = h.default.getChannelId(),
                        t = C.default.getChannelId();
                    if (!f.default.supports(p.Features.VIDEO) || o.default.getWindowOpen(S.PopoutWindowKeys.CHANNEL_CALL_POPOUT)) return !0;
                    let n = u.default.getAllActiveStreams().length > 0,
                        a = null != e && Object.values(m.default.getVideoVoiceStatesForChannel(e)).some(e => {
                            let {
                                userId: t
                            } = e;
                            return !f.default.isLocalVideoDisabled(t)
                        });
                    if (!(a || n)) return !0;
                    let s = c.default.hasLayers();
                    return !(s && c.default.getLayers().includes(S.Layers.RTC_DEBUG)) && (!!s || e === t || !1)
                }() ? I() : (!t && I(), null != e && function(e) {
                    var t;
                    let n = d.default.getChannel(e);
                    if (null == n || E.default.isOpen(e)) return !1;
                    s.default.wait(() => l.open(n.id, S.PictureInPictureComponents.VIDEO, {
                        channel: n
                    })), null === (t = h.default.getRTCConnection()) || void 0 === t || t.setPipOpen(!0), a = e
                }(e))
            }
            class T extends i.default {
                _initialize() {
                    C.default.addChangeListener(g), _.default.addChangeListener(g), h.default.addChangeListener(g), m.default.addChangeListener(g), c.default.addChangeListener(g), u.default.addChangeListener(g), o.default.addChangeListener(g), f.default.addChangeListener(g), r.default.addChangeListener(g)
                }
                _terminate() {
                    C.default.removeChangeListener(g), _.default.removeChangeListener(g), h.default.removeChangeListener(g), m.default.removeChangeListener(g), c.default.removeChangeListener(g), u.default.removeChangeListener(g), o.default.removeChangeListener(g), f.default.removeChangeListener(g), r.default.removeChangeListener(g)
                }
            }
            t.default = new T
        },
        444961: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("846519"),
                s = n("570140"),
                l = n("287734"),
                i = n("317770"),
                r = n("199902"),
                o = n("592125"),
                u = n("430824"),
                d = n("517100"),
                c = n("19780"),
                f = n("70956"),
                E = n("358085"),
                h = n("981631");
            let C = new a.Timeout,
                _ = new a.Timeout;
            class m extends i.default {
                _initialize() {
                    s.default.subscribe("IDLE", this.handleIdleUpdate)
                }
                _terminate() {
                    C.stop(), _.stop(), s.default.unsubscribe("IDLE", this.handleIdleUpdate)
                }
                handleIdleUpdate() {
                    let e = d.default.getIdleSince();
                    if (!E.isPlatformEmbedded) return;
                    for (let e of (C.stop(), _.stop(), r.default.getAllActiveStreams()))
                        if (e.state !== h.ApplicationStreamStates.ENDED) return;
                    if (null == e) return;
                    let t = c.default.getChannelId();
                    if (null == t) return;
                    _.start(18e6, () => {
                        l.default.selectVoiceChannel(null)
                    });
                    let n = u.default.getGuild(c.default.getGuildId());
                    if (null == n || null == n.afkChannelId || n.afkChannelId === t || null == n.afkTimeout) return;
                    let a = o.default.getChannel(t);
                    if (null != a) !a.isGuildStageVoice() && C.start(e + n.afkTimeout * f.default.Millis.SECOND - Date.now(), () => {
                        null != (n = u.default.getGuild(c.default.getGuildId())) && null != n.afkChannelId && l.default.selectVoiceChannel(n.afkChannelId)
                    })
                }
            }
            t.default = new m
        },
        243852: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l, i, r, o = n("442837"),
                u = n("433517"),
                d = n("846519"),
                c = n("570140"),
                f = n("278323"),
                E = n("581567"),
                h = n("594190"),
                C = n("581883"),
                _ = n("70956"),
                m = n("780570"),
                S = n("314897"),
                p = n("77498"),
                I = n("283595"),
                g = n("19780"),
                T = n("944486"),
                A = n("981631");
            let N = "ActivityTrackingStore",
                v = 30 * _.default.Millis.MINUTE,
                R = 5 * _.default.Millis.MINUTE,
                O = null !== (a = u.Storage.get(N)) && void 0 !== a ? a : {},
                L = {},
                P = !1;

            function y(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                t && M(e, !0);
                let n = L[e.applicationId];
                null != n && (n.stop(), delete L[e.applicationId]), delete O[e.applicationId], u.Storage.set(N, O)
            }

            function M(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = Date.now(),
                    a = null != e.updatedAt ? n - e.updatedAt : 0;
                a > v + R && (a = 0);
                let s = (0, m.shouldShareApplicationActivity)(e.applicationId, I.default),
                    l = T.default.getVoiceChannelId(),
                    i = S.default.getSessionId(),
                    r = g.default.getMediaSessionId();
                f.default.updateActivity({
                    applicationId: e.applicationId,
                    distributor: e.isDiscordApplication ? A.Distributors.DISCORD : e.distributor,
                    shareActivity: s,
                    token: e.token,
                    duration: Math.floor(a / 1e3),
                    closed: t,
                    exePath: e.exePath,
                    voiceChannelId: l,
                    sessionId: i,
                    mediaSessionId: r
                }), e.updatedAt = n;
                let o = L[e.applicationId];
                null == o && (o = L[e.applicationId] = new d.Interval).start(v, () => M(e)), !t && (O[e.applicationId] = e, u.Storage.set(N, O))
            }

            function D() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
                    t = h.default.getVisibleRunningGames(),
                    n = new Set;
                for (let {
                        name: e,
                        distributor: a,
                        exePath: s
                    }
                    of t) {
                    let t = p.default.getGameByName(e);
                    if (null != t) n.add(t.id), !(t.id in O) && M({
                        applicationId: t.id,
                        updatedAt: Date.now(),
                        distributor: a,
                        exePath: (0, E.removeExecutablePathPrefix)(null != s ? s : "")
                    })
                }
                for (let t of Object.keys(O)) !n.has(t) && y(O[t], e)
            }

            function x() {
                for (let e of Object.keys(O)) y(O[e]);
                P = !1
            }
            class b extends(s = o.default.Store) {
                initialize() {
                    this.waitFor(h.default, C.default, I.default), this.syncWith([C.default], D)
                }
                getActivities() {
                    return O
                }
            }
            r = "ActivityTrackingStore", (i = "displayName") in(l = b) ? Object.defineProperty(l, i, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : l[i] = r, new b(c.default, {
                RUNNING_GAMES_CHANGE: () => D(),
                CONNECTION_OPEN: function() {
                    if (P) return !1;
                    for (let e of Object.keys(O)) M(O[e]);
                    D(!1), P = !0
                },
                CONNECTION_CLOSED: function(e) {
                    let {
                        code: t
                    } = e;
                    4004 === t && x()
                },
                LOGOUT: x,
                ACTIVITY_UPDATE_SUCCESS: function(e) {
                    let {
                        applicationId: t,
                        token: n
                    } = e, a = O[t];
                    if (null == a) return !1;
                    a.token = n, u.Storage.set(N, O)
                },
                ACTIVITY_UPDATE_FAIL: function(e) {
                    let {
                        applicationId: t
                    } = e, n = O[t];
                    if (null == n) return !1;
                    n.token = null, n.updatedAt = null, u.Storage.set(N, O)
                }
            })
        },
        184107: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140");
            let u = {};
            class d extends(i = r.default.Store) {
                getSkuIdForChannel(e) {
                    return u[e]
                }
            }
            l = "ChannelSKUStore", (s = "displayName") in(a = d) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new d(o.default, {
                CONNECTION_OPEN: function() {
                    u = {}
                },
                STORE_LISTING_FETCH_SUCCESS: function(e) {
                    let {
                        channelId: t,
                        storeListing: n
                    } = e;
                    null != t && (u[t] = n.sku.id)
                }
            })
        },
        533947: function(e, t, n) {
            "use strict";
            let a, s, l;
            n.r(t), n("653041"), n("47120");
            var i, r, o, u, d = n("392711"),
                c = n.n(d),
                f = n("442837"),
                E = n("570140"),
                h = n("308063"),
                C = n("388610"),
                _ = n("430824"),
                m = n("496675"),
                S = n("855674"),
                p = n("981631");
            let I = [],
                g = null,
                T = !1,
                A = p.FormStates.CLOSED,
                N = {},
                v = !1,
                R = null;

            function O() {
                if (a = null != (s = C.default.getChannel()) ? _.default.getGuild(s.guild_id) : null, I = null != s && null != a && m.default.can(p.Permissions.MANAGE_WEBHOOKS, s) ? S.default.getWebhooksForChannel(a.id, s.id) : [], null != g) {
                    let e = P(g.id);
                    null != e && (g = e)
                }
                A = p.FormStates.OPEN, N = {}, v = !1
            }
            let L = c().debounce(() => {
                v && ((null == g || c().isEqual(g, P(g.id))) && (v = !1), !v && M.emitChange())
            }, 500);

            function P(e) {
                return I.find(t => {
                    let {
                        id: n
                    } = t;
                    return n === e
                })
            }
            class y extends(i = f.default.Store) {
                initialize() {
                    this.waitFor(C.default, _.default, S.default, m.default)
                }
                hasChanges() {
                    return v
                }
                get webhooks() {
                    return I
                }
                get editedWebhook() {
                    return g
                }
                get formState() {
                    return A
                }
                getWebhook(e) {
                    return P(e)
                }
                showNotice() {
                    return this.hasChanges()
                }
                getProps() {
                    return {
                        submitting: A === p.FormStates.SUBMITTING,
                        webhooks: I,
                        editedWebhook: g,
                        section: l,
                        sectionId: R,
                        hasChanges: this.hasChanges(),
                        isFetching: T,
                        errors: N
                    }
                }
            }
            u = "ChannelSettingsIntegrationsStore", (o = "displayName") in(r = y) ? Object.defineProperty(r, o, {
                value: u,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : r[o] = u;
            let M = new y(E.default, __OVERLAY__ ? {} : {
                INTEGRATION_SETTINGS_INIT: O,
                INTEGRATION_SETTINGS_SAVE_SUCCESS: O,
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (t !== p.ChannelSettingsSections.INTEGRATIONS) return !1;
                    if (l = p.IntegrationSettingsSections.OVERVIEW, null == a) {
                        let e = C.default.getChannel(),
                            t = null == e ? void 0 : e.getGuildId();
                        null != e && null != t && (h.default.fetchForChannel(t, e.id), T = !0), O()
                    }
                },
                INTEGRATION_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t,
                        sectionId: n
                    } = e;
                    l = t, R = n
                },
                INTEGRATION_SETTINGS_START_EDITING_WEBHOOK: function(e) {
                    let {
                        webhookId: t
                    } = e, n = P(t);
                    if (null == n) return !1;
                    g = n, N = {}, v = !1
                },
                INTEGRATION_SETTINGS_STOP_EDITING_WEBHOOK: function() {
                    g = null, N = {}, v = !1
                },
                INTEGRATION_SETTINGS_UPDATE_WEBHOOK: function(e) {
                    let {
                        settings: t
                    } = e;
                    if (null == g) return !1;
                    g = {
                        ...g
                    }, null != t.name && g.name !== t.name && (g.name = t.name, v = !0), void 0 !== t.avatar && g.avatar !== t.avatar && (g.avatar = t.avatar, v = !0), null != t.channelId && g.channel_id !== t.channelId && (g.channel_id = t.channelId, v = !0), v && L()
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    s = null, a = null, I = [], g = null, A = p.FormStates.CLOSED
                },
                WEBHOOKS_UPDATE: function(e) {
                    let {
                        guildId: t,
                        channelId: n,
                        webhooks: l
                    } = e;
                    if (null == a || t !== a.id || null == s || n !== s.id || null == l || A === p.FormStates.SUBMITTING) return !1;
                    T = !1;
                    for (let e = I.length - 1; e >= 0; e--) {
                        let t = I[e];
                        if (null != n && (null == t ? void 0 : t.channel_id) !== n) continue;
                        let a = l.find(e => {
                            let {
                                id: n
                            } = e;
                            if (n === t.id) return !0
                        });
                        if (null != a) {
                            let n = {
                                ...t,
                                ...a
                            };
                            I[e] = n, !v && (null == g ? void 0 : g.id) === n.id && (g = n)
                        } else(null == g ? void 0 : g.id) === t.id && (g = null), I.splice(e, 1)
                    }
                    for (let e of l) null == I.find(t => {
                        let {
                            id: n
                        } = t;
                        if (n === e.id) return !0
                    }) && I.push(e);
                    I = [...I], L()
                },
                INTEGRATION_SETTINGS_SUBMITTING: function() {
                    A = p.FormStates.SUBMITTING, N = {}
                },
                INTEGRATION_SETTINGS_SAVE_FAILURE: function(e) {
                    var t;
                    if (A !== p.FormStates.SUBMITTING) return !1;
                    A = p.FormStates.OPEN, N = null !== (t = e.errors) && void 0 !== t ? t : {}
                }
            });
            t.default = M
        },
        277053: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n("47120");
            var l, i, r, o, u = n("392711"),
                d = n.n(u),
                c = n("442837"),
                f = n("433517"),
                E = n("570140"),
                h = n("700785"),
                C = n("388610"),
                _ = n("592125"),
                m = n("981631"),
                S = n("71080");
            let p = new Set,
                I = m.FormStates.CLOSED,
                g = !1,
                T = null,
                A = null,
                N = null,
                v = null,
                R = null,
                O = null,
                L = f.Storage.get(S.ADVANCED_MODE_ON_KEY) || !1;

            function P(e) {
                let t = e.getGuildId(),
                    n = {
                        ...e.permissionOverwrites
                    };
                return null != t && null == n[t] && (n[t] = h.makeEveryoneOverwrite(t)), n
            }

            function y() {
                if (N = C.default.getChannel(), v = C.default.getCategory(), null == N) return !1;
                let e = N.getGuildId();
                A = T = P(N), null == T[R] && (R = e), s = null != v, a = h.areChannelsLocked(N, v), O = null, g = !1, I = m.FormStates.CLOSED, p.clear()
            }
            class M extends(l = c.default.Store) {
                initialize() {
                    this.waitFor(C.default, _.default)
                }
                hasChanges() {
                    return g
                }
                showNotice() {
                    return this.hasChanges()
                }
                getPermissionOverwrite(e) {
                    return null == T ? void 0 : T[e]
                }
                get editedPermissionIds() {
                    return Array.from(p)
                }
                get permissionOverwrites() {
                    return T
                }
                get selectedOverwriteId() {
                    return R
                }
                get formState() {
                    return I
                }
                get isLockable() {
                    return s
                }
                get locked() {
                    return a
                }
                get channel() {
                    return N
                }
                get category() {
                    return v
                }
                get advancedMode() {
                    return L
                }
            }
            o = "ChannelSettingsPermissionsStore", (r = "displayName") in(i = M) ? Object.defineProperty(i, r, {
                value: o,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[r] = o, t.default = new M(E.default, {
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (null != N || t !== m.ChannelSettingsSections.PERMISSIONS) return !1;
                    y()
                },
                CHANNEL_SETTINGS_PERMISSIONS_INIT: y,
                CHANNEL_SETTINGS_PERMISSIONS_UPDATE_PERMISSION: function(e) {
                    let {
                        id: t,
                        allow: n,
                        deny: s
                    } = e, l = null == T ? void 0 : T[t];
                    if (null == l || null == N) return !1;
                    l = {
                        ...l,
                        allow: n,
                        deny: s
                    }, T = {
                        ...T,
                        [t]: l
                    }, p.add(t), I = m.FormStates.OPEN, g = !d().isEqual(T, A), a = h.areChannelsLocked(N, v)
                },
                CHANNEL_SETTINGS_PERMISSIONS_SELECT_PERMISSION: function(e) {
                    let {
                        id: t
                    } = e;
                    if (null != T && null != T[t]) R = t;
                    else {
                        if (null == N) return !1;
                        O = t
                    }
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    I = m.FormStates.CLOSED, T = null, A = null, N = null, v = null, g = !1, p.clear(), R = null, O = null
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e;
                    if (null == N) return !1;
                    let n = !1;
                    for (let e of t) !1 !== function(e) {
                        if (null == N || N.id !== e || null == (N = _.default.getChannel(e))) return !1;
                        v = C.default.getCategory();
                        let t = N.getGuildId();
                        if (null == t) return !1;
                        A = P(N);
                        let n = {};
                        return p.forEach(e => {
                            null != T && (n[e] = T[e])
                        }), null == n[t] && null == N.permissionOverwrites[t] && (n[t] = h.makeEveryoneOverwrite(t)), null == (T = {
                            ...N.permissionOverwrites,
                            ...n
                        })[R] ? R = t : null != O && null != T[O] && (R = O, O = null), a = h.areChannelsLocked(N, v), !0
                    }(e.id) && (n = !0);
                    return n
                },
                CHANNEL_SETTINGS_PERMISSIONS_SUBMITTING: function() {
                    I = m.FormStates.SUBMITTING
                },
                CHANNEL_SETTINGS_PERMISSIONS_SAVE_SUCCESS: function(e) {
                    let {
                        silent: t
                    } = e;
                    t ? I = m.FormStates.OPEN : (I = m.FormStates.CLOSED, y())
                },
                CHANNEL_SETTINGS_PERMISSIONS_SET_ADVANCED_MODE: function(e) {
                    let {
                        advancedMode: t
                    } = e;
                    L = t, f.Storage.set(S.ADVANCED_MODE_ON_KEY, t)
                }
            })
        },
        820486: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                extractDisplayName: function() {
                    return N
                }
            });
            var a, s = n("392711"),
                l = n.n(s),
                i = n("442837"),
                r = n("570140"),
                o = n("846027"),
                u = n("581883"),
                d = n("358085"),
                c = n("131951"),
                f = n("981631"),
                E = n("65154");

            function h(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let C = {},
                _ = C,
                m = !1,
                S = {},
                p = {},
                I = {},
                g = {
                    id: null,
                    justChanged: !1
                },
                T = {
                    id: null,
                    justChanged: !1
                },
                A = /\(([^)]+)\)/;

            function N(e) {
                if ((0, d.getPlatform)() === d.PlatformTypes.WINDOWS) {
                    let t = e.name.match(A);
                    if (null != t) return t[1]
                }
                return e.name
            }

            function v(e, t, n) {
                return null == e || e.displayName !== t ? {
                    displayName: t,
                    type: n
                } : e.type === f.ConnectedDeviceType.INPUT && n === f.ConnectedDeviceType.OUTPUT || e.type === f.ConnectedDeviceType.OUTPUT && n === f.ConnectedDeviceType.INPUT ? {
                    displayName: t,
                    type: f.ConnectedDeviceType.INPUT_AND_OUTPUT
                } : e
            }
            class R extends(a = i.default.DeviceSettingsStore) {
                initialize(e) {
                    this.waitFor(c.default, u.default), _ = null != e ? e : C
                }
                getUserAgnosticState() {
                    return _
                }
                get initialized() {
                    return m
                }
                get lastDeviceConnected() {
                    return I
                }
                get inputDevices() {
                    return S
                }
                get lastInputSystemDevice() {
                    return g
                }
                get outputDevices() {
                    return p
                }
                get lastOutputSystemDevice() {
                    return T
                }
            }
            h(R, "displayName", "ConnectedDeviceStore"), h(R, "persistKey", "ConnectedDeviceStore"), t.default = new R(r.default, {
                MEDIA_ENGINE_DEVICES: function(e) {
                    let {
                        inputDevices: t,
                        outputDevices: n
                    } = e, a = {};
                    g.justChanged = !1, t.forEach(e => {
                        if (a[N(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                            var t;
                            let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                            n !== g.id && (g.justChanged = !0), g.id = n
                        }
                    });
                    let s = {};
                    if (T.justChanged = !1, n.forEach(e => {
                            if (s[N(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                                var t;
                                let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                                n !== T.id && (T.justChanged = !0), T.id = n
                            }
                        }), !m) {
                        S = a, p = s, m = !0;
                        return
                    }
                    let i = Object.keys(S),
                        r = Object.keys(a),
                        o = Object.keys(p),
                        u = Object.keys(s),
                        d = l().difference(i, r),
                        c = l().difference(o, u);
                    return d.length > 0 || c.length > 0 ? I = {} : (l().difference(r, i).forEach(e => {
                        I[e] = v(I[e], e, f.ConnectedDeviceType.INPUT)
                    }), l().difference(u, o).forEach(e => {
                        I[e] = v(I[e], e, f.ConnectedDeviceType.OUTPUT)
                    })), !(l().isEqual(i, r) && l().isEqual(o, u)) && (S = a, p = s, !0)
                },
                CONNECTED_DEVICE_SET: function(e) {
                    let {
                        displayName: t,
                        connectedDevicePreference: n,
                        location: a
                    } = e;
                    ! function(e, t, n) {
                        if (t === f.ConnectedDevicePreference.INPUT || t === f.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = S[e];
                            null != t && r.default.wait(() => o.default.setInputDevice(t, n))
                        }
                        if (t === f.ConnectedDevicePreference.OUTPUT || t === f.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = p[e];
                            r.default.wait(() => o.default.setOutputDevice(t, n))
                        }
                    }(t, n, a), delete I[t]
                },
                CONNECTED_DEVICE_IGNORE: function(e) {
                    let {
                        displayName: t
                    } = e;
                    delete I[t]
                },
                CONNECTED_DEVICE_NEVER_SHOW_MODAL: function() {
                    I = {}, _ = {
                        neverShowModal: !0
                    }
                }
            })
        },
        455173: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("292556"),
                d = n("812206");
            class c extends(i = r.default.Store) {}
            l = "UserAchievementStore", (s = "displayName") in(a = c) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l;
            new c(o.default, {
                USER_ACHIEVEMENT_UPDATE: function(e) {
                    let {
                        userAchievement: t
                    } = e, {
                        application_id: n,
                        achievement: a,
                        percent_complete: s
                    } = t;
                    if (100 === s && null != a) {
                        let e = d.default.getApplication(n),
                            t = null != e ? e.getIconURL(64) : null;
                        u.default.showNotification(t, a.name, a.description, {
                            notif_type: "USER_ACHIEVEMENT_UPDATE"
                        }, {
                            omitViewTracking: !0
                        })
                    }
                }
            })
        },
        327689: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("430824"),
                d = n("981631");
            class c extends(i = r.default.Store) {
                initialize() {
                    this.waitFor(u.default), this.syncWith([u.default], d.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return !e.hasFeature(d.GuildFeatures.BANNER) && Date.now() - t >= d.CHANNEL_NOTICE_SHOW_DELAY
                }
            }
            l = "GuildBoostingNoticeStore", (s = "displayName") in(a = c) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new c(o.default)
        },
        541566: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s = n("442837"),
                l = n("570140"),
                i = n("267642"),
                r = n("981631");

            function o(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let u = {};
            u = {
                lastDismissedGracePeriods: {},
                isVisible: {}
            };
            class d extends(a = s.default.PersistedStore) {
                initialize(e) {
                    null != e && (u = e)
                }
                getLastDismissedGracePeriodForGuild(e) {
                    return null != u.lastDismissedGracePeriods[e] ? u.lastDismissedGracePeriods[e] : null
                }
                isVisible(e) {
                    return null != e && null != u.isVisible[e] && u.isVisible[e]
                }
                getState() {
                    return u
                }
            }
            o(d, "displayName", "GuildBoostingGracePeriodNoticeStore"), o(d, "persistKey", "PremiumGuildGracePeriodNoticeStore"), o(d, "migrations", [e => ({
                ...e,
                lastDismissedGracePeriods: null != e ? {
                    ...e.lastDismissedGracePeriods
                } : {},
                isVisible: {}
            })]), t.default = new d(l.default, {
                GUILD_APPLIED_BOOSTS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        appliedBoosts: n
                    } = e, a = null != u.lastDismissedGracePeriods[t] ? u.lastDismissedGracePeriods[t] : null, s = null != a && Date.now() - a <= r.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY, l = null != n && !s && (0, i.isInGracePeriod)(n, t);
                    u = {
                        ...u,
                        isVisible: {
                            ...u.isVisible,
                            [t]: l
                        }
                    }
                },
                BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    u = {
                        ...u,
                        lastDismissedGracePeriods: {
                            ...u.lastDismissedGracePeriods,
                            [t]: Date.now()
                        },
                        isVisible: {
                            ...u.isVisible,
                            [t]: !1
                        }
                    }
                }
            })
        },
        421176: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("496675"),
                d = n("981631");
            class c extends(i = r.default.Store) {
                initialize() {
                    this.waitFor(u.default), this.syncWith([u.default], d.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return Date.now() - t >= d.CHANNEL_NOTICE_SHOW_DELAY && u.default.can(d.Permissions.MANAGE_GUILD, e)
                }
            }
            l = "GuildBoostingNoticeStore", (s = "displayName") in(a = c) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new c(o.default)
        },
        192513: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("984933"),
                d = n("594174"),
                c = n("981631");
            let f = null;

            function E() {
                let e = d.default.getCurrentUser();
                if (null == e || e.mfaEnabled === f) return !1;
                f = e.mfaEnabled
            }
            class h extends(i = r.default.Store) {
                initialize() {
                    this.waitFor(d.default, u.default), this.syncWith([d.default, u.default], E)
                }
                isVisible(e) {
                    return null != e && e.mfaLevel === c.MFALevels.ELEVATED && !1 === f && u.default.hasElevatedPermissions(e.id)
                }
            }
            l = "GuildMFAWarningStore", (s = "displayName") in(a = h) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new h(o.default, {
                CONNECTION_OPEN: E,
                GUILD_UPDATE: function() {
                    return !0
                }
            })
        },
        989695: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("704215"),
                u = n("570140"),
                d = n("150340"),
                c = n("496675");

            function f() {
                return !0
            }
            class E extends(i = r.default.Store) {
                initialize() {
                    this.waitFor(c.default), this.syncWith([c.default], f)
                }
                channelNoticePredicate(e) {
                    return (0, d.shouldShowGuildOnboardingUpsell)(e.id, o.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                }
            }
            l = "GuildOnboardingUpsellNoticeStore", (s = "displayName") in(a = E) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new E(u.default)
        },
        456065: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("810788"),
                d = n("430824"),
                c = n("981631");
            let f = !1;

            function E(e) {
                let t = d.default.getGuild(e);
                return !!(null != t && t.hasFeature(c.GuildFeatures.HUB)) && (f = !0, !0)
            }

            function h() {
                return !0
            }
            class C extends(a = r.default.Store) {
                initialize() {
                    this.waitFor(d.default, u.default), this.syncWith([u.default], h)
                }
                channelNoticePredicate(e) {
                    return !!e.hasFeature(c.GuildFeatures.LINKED_TO_HUB) && !f && !0
                }
            }
            i = "HubLinkNoticeStore", (l = "displayName") in(s = C) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, t.default = new C(o.default, {
                CONNECTION_OPEN: function(e) {
                    for (let t of e.guilds)
                        if (E(t.id)) return !0;
                    return !1
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    return E(t.id)
                }
            })
        },
        683743: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s, l, i, r = n("442837"),
                o = n("570140"),
                u = n("496675"),
                d = n("981631");

            function c() {
                return !0
            }
            class f extends(i = r.default.Store) {
                initialize() {
                    this.waitFor(u.default), this.syncWith([u.default], c)
                }
                channelNoticePredicate(e, t) {
                    return Date.now() - t >= d.CHANNEL_NOTICE_SHOW_DELAY && u.default.can(d.Permissions.ADMINISTRATOR, e)
                }
            }
            l = "InviteNoticeStore", (s = "displayName") in(a = f) ? Object.defineProperty(a, s, {
                value: l,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[s] = l, t.default = new f(o.default)
        },
        255791: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s, l, i, r = n("442837"),
                o = n("433517"),
                u = n("570140"),
                d = n("650774"),
                c = n("430824"),
                f = n("496675"),
                E = n("981631");
            let h = {
                MAX_MEMBER_COUNT: new Set
            };
            class C extends(a = r.default.Store) {
                initialize() {
                    var e;
                    this.waitFor(f.default, c.default, d.default), this.syncWith([f.default, c.default, d.default], E.NOOP), o.Storage.remove(E.ChannelNoticeTypes.MAX_MEMBER_COUNT_100), o.Storage.remove(E.ChannelNoticeTypes.MAX_MEMBER_COUNT_250), e = new Set(o.Storage.get(E.ChannelNoticeTypes.MAX_MEMBER_COUNT)), h[E.ChannelNoticeTypes.MAX_MEMBER_COUNT] = void 0 !== e ? e : new Set
                }
                isVisible(e) {
                    var t;
                    if (null == e) return !1;
                    let n = null !== (t = d.default.getMemberCount(e.id)) && void 0 !== t ? t : 0,
                        a = f.default.can(E.Permissions.ADMINISTRATOR, e);
                    return !e.hasFeature(E.GuildFeatures.CLAN) && !h[E.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(e.id) && a && e.maxMembers > 0 && e.maxMembers - n <= 1e4
                }
            }
            i = "MaxMemberCountChannelNoticeStore", (l = "displayName") in(s = C) ? Object.defineProperty(s, l, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : s[l] = i, t.default = new C(u.default, {
                MAX_MEMBER_COUNT_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!h[E.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(t)) return h[E.ChannelNoticeTypes.MAX_MEMBER_COUNT].add(t), o.Storage.set(E.ChannelNoticeTypes.MAX_MEMBER_COUNT, h[E.ChannelNoticeTypes.MAX_MEMBER_COUNT]), !0
                }
            })
        },
        974042: function(e, t, n) {
            "use strict";
            n.r(t), n("653041");
            var a, s = n("392711"),
                l = n.n(s),
                i = n("442837"),
                r = n("570140"),
                o = n("194359"),
                u = n("81825"),
                d = n("5254"),
                c = n("199902"),
                f = n("271383"),
                E = n("430824"),
                h = n("158776"),
                C = n("699516"),
                _ = n("594174"),
                m = n("981631");

            function S(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function p(e) {
                let t = _.default.getUser(e);
                return {
                    user: t,
                    usernameLower: null != t ? t.username.toLowerCase() : null
                }
            }

            function I(e) {
                return {
                    status: h.default.getStatus(e),
                    lastOnlineTimestamp: h.default.getLastOnlineTimestamp(e),
                    isMobile: h.default.isMobileOnline(e),
                    activities: h.default.getActivities(e),
                    applicationStream: c.default.getAnyStreamForUser(e)
                }
            }

            function g(e) {
                let t = [];
                return l()(f.default.memberOf(e)).map(E.default.getGuild).sortBy(e => null != e ? e.name.toLowerCase() : null).forEach(e => {
                    null != e && t.push(e)
                }), {
                    mutualGuildsLength: t.length,
                    mutualGuilds: t.slice(0, 5)
                }
            }
            class T extends u.default {
                get comparator() {
                    var e, t, n, a, s;
                    return [this.type, null !== (s = null !== (a = null === (e = this.nickname) || void 0 === e ? void 0 : e.toLowerCase()) && void 0 !== a ? a : null === (n = this.user) || void 0 === n ? void 0 : null === (t = n.globalName) || void 0 === t ? void 0 : t.toLowerCase()) && void 0 !== s ? s : this.usernameLower]
                }
                constructor(e) {
                    super(), S(this, "key", void 0), S(this, "type", void 0), S(this, "status", void 0), S(this, "isMobile", void 0), S(this, "activities", void 0), S(this, "applicationStream", void 0), S(this, "user", void 0), S(this, "usernameLower", void 0), S(this, "mutualGuildsLength", void 0), S(this, "mutualGuilds", void 0), S(this, "nickname", void 0), S(this, "lastOnlineTimestamp", void 0), this.key = e.key, this.type = e.type, this.status = e.status, this.activities = e.activities, this.applicationStream = e.applicationStream, this.user = e.user, this.isMobile = e.isMobile, this.usernameLower = e.usernameLower, this.mutualGuildsLength = e.mutualGuildsLength, this.mutualGuilds = e.mutualGuilds, this.nickname = e.nickname, this.lastOnlineTimestamp = e.lastOnlineTimestamp
                }
            }
            class A {
                reset() {
                    let e = l().map(C.default.getRelationships(), (e, t) => new T({
                            key: t,
                            type: e,
                            nickname: C.default.getNickname(t),
                            ...p(t),
                            ...I(t),
                            ...g(t)
                        })),
                        t = l().map(d.default.getSuggestions(), e => new T({
                            key: e.key,
                            type: 99,
                            nickname: e.name,
                            ...p(e.key),
                            ...I(e.key),
                            ...g(e.key)
                        }));
                    return new A(l().concat(e, t))
                }
                clone() {
                    return new A(this._rows)
                }
                update(e) {
                    let t = !1;
                    for (let n = 0; n < this._rows.length; n++) {
                        let a = this._rows[n],
                            s = a.merge(e(a.key));
                        t = t || s !== a, this._rows[n] = s
                    }
                    return t
                }
                filter(e, t) {
                    return l()(this._rows).filter(e => {
                        if (null == e.user) return !1;
                        if (null != t && "" !== t) {
                            let n = t.toLowerCase();
                            return [e.usernameLower, e.nickname, e.user.globalName].map(e => null == e ? void 0 : e.toLowerCase()).some(e => null == e ? void 0 : e.includes(n))
                        }
                        return !0
                    }).filter(t => {
                        switch (e) {
                            case m.FriendsSections.ONLINE:
                                return t.type === m.RelationshipTypes.FRIEND && t.status !== m.StatusTypes.OFFLINE;
                            case m.FriendsSections.PENDING:
                                return t.type === m.RelationshipTypes.PENDING_INCOMING || t.type === m.RelationshipTypes.PENDING_OUTGOING;
                            case m.FriendsSections.SUGGESTIONS:
                                return 99 === t.type;
                            case m.FriendsSections.BLOCKED:
                                return t.type === m.RelationshipTypes.BLOCKED;
                            case m.FriendsSections.ALL:
                            default:
                                return t.type === m.RelationshipTypes.FRIEND
                        }
                    }).sortBy(e => e.comparator).value()
                }
                getRelationshipCounts() {
                    let e = {
                        [m.RelationshipTypes.FRIEND]: 0,
                        [m.RelationshipTypes.PENDING_INCOMING]: 0,
                        [m.RelationshipTypes.PENDING_OUTGOING]: 0,
                        99: 0,
                        [m.RelationshipTypes.BLOCKED]: 0
                    };
                    return this._rows.forEach(t => {
                        null != t.user && null != e[t.type] && e[t.type]++
                    }), e
                }
                constructor(e = []) {
                    S(this, "_rows", void 0), this._rows = e
                }
            }
            let N = !0,
                v = !1,
                R = m.FriendsSections.ONLINE,
                O = new A,
                L = !0,
                P = !1;

            function y() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                N && (e || R !== m.FriendsSections.ONLINE && R !== m.FriendsSections.ADD_FRIEND) && !v && (N = !1, v = !0, o.default.fetchRelationships())
            }

            function M() {
                if (N = !0, L ? v = !1 : y(), O = O.reset(), P) return;
                let e = O.getRelationshipCounts();
                R = 0 === e[m.RelationshipTypes.FRIEND] ? 0 !== e[m.RelationshipTypes.PENDING_INCOMING] ? m.FriendsSections.PENDING : m.FriendsSections.ADD_FRIEND : m.FriendsSections.ONLINE
            }

            function D() {
                O = L ? new A : O.reset()
            }

            function x(e) {
                return function() {
                    return !L && !!O.update(e) && (O = O.clone(), !0)
                }
            }
            class b extends(a = i.default.Store) {
                initialize() {
                    this.waitFor(C.default, h.default, _.default, E.default, f.default, c.default, d.default), this.syncWith([C.default], D), this.syncWith([d.default], D), this.syncWith([_.default], x(p)), this.syncWith([h.default, c.default], x(I)), M()
                }
                getState() {
                    return {
                        fetching: v,
                        section: R,
                        pendingCount: C.default.getPendingCount(),
                        rows: O
                    }
                }
            }
            S(b, "displayName", "FriendsStore"), t.default = new b(r.default, {
                CONNECTION_OPEN: function() {
                    M()
                },
                FRIENDS_SET_SECTION: function(e) {
                    R = e.section, y()
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return L = null != t, D(), !L
                },
                LOAD_RELATIONSHIPS_SUCCESS: function() {
                    v = !1
                },
                LOAD_RELATIONSHIPS_FAILURE: function() {
                    N = !0, v = !0
                },
                DRAWER_SELECT_TAB: function(e) {
                    let {
                        tab: t
                    } = e;
                    return L = t !== m.DrawerTabTypes.FRIENDS, D(), !L
                },
                FRIENDS_SET_INITIAL_SECTION: function(e) {
                    R = e.section, P = !0
                }
            })
        },
        897607: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250");
            n("470079");
            var s = n("392711"),
                l = n.n(s),
                i = n("481060"),
                r = n("463395"),
                o = n("820486"),
                u = n("131951"),
                d = n("65154");
            let c = new Set(["DisplayPort"]),
                f = !1;

            function E() {
                let e;
                if (f) return;
                let t = u.default.getInputDeviceId(),
                    s = u.default.getOutputDeviceId();
                if (o.default.getState().neverShowModal || l().isEmpty(o.default.lastDeviceConnected)) return;
                let E = (0, o.extractDisplayName)(u.default.getInputDevices()[t]),
                    h = (0, o.extractDisplayName)(u.default.getOutputDevices()[s]);
                if (l().some(o.default.lastDeviceConnected, e => c.has(e.displayName) || e.displayName === E || e.displayName === h)) return;
                let C = l().some(o.default.lastDeviceConnected, e => r.default.isCertified(o.default.inputDevices[e.displayName]) || r.default.isCertified(o.default.outputDevices[e.displayName]));
                if ((t === d.DEFAULT_DEVICE_ID && o.default.lastInputSystemDevice.justChanged || s === d.DEFAULT_DEVICE_ID && o.default.lastOutputSystemDevice.justChanged) && !C) return;
                let _ = l().first(Object.keys(o.default.lastDeviceConnected)),
                    m = null != _ && "" !== _ ? o.default.lastDeviceConnected[_] : null;
                null != m && (o.default.initialized && null != _ && (r.default.isCertified(o.default.inputDevices[_]) ? e = r.default.getCertifiedDevice(o.default.inputDevices[_]) : r.default.isCertified(o.default.outputDevices[_]) && (e = r.default.getCertifiedDevice(o.default.outputDevices[_]))), f = !0, (0, i.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await Promise.all([n.e("99387"), n.e("83536")]).then(n.bind(n, "43991"));
                    return n => {
                        let {
                            transitionState: s,
                            onClose: l
                        } = n;
                        return (0, a.jsx)(t, {
                            device: m,
                            certifiedDeviceMetadata: e,
                            transitionState: s,
                            onClose: () => (f = !1, l())
                        })
                    }
                }))
            }
            t.default = {
                init() {
                    o.default.addChangeListener(E)
                }
            }
        },
        900974: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("570140");
            let i = !1,
                r = null;
            t.default = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", e => {
                        let {
                            pendingPayments: t
                        } = e;
                        if (null != t && t.length > 0) {
                            var l;
                            if (r === t[0] || null == (r = t[0])) return;
                            l = r, i || (i = !0, (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([n.e("99387"), n.e("62903")]).then(n.bind(n, "645586"));
                                return t => {
                                    let {
                                        transitionState: n,
                                        onClose: s
                                    } = t;
                                    return (0, a.jsx)(e, {
                                        pendingPayment: l,
                                        transitionState: n,
                                        onClose: () => (i = !1, s())
                                    })
                                }
                            }))
                        }
                    })
                }
            }
        },
        368874: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("358725");
            t.default = e => {
                let {
                    aspectRatio: t,
                    style: n,
                    className: s,
                    children: r
                } = e;
                return (0, a.jsx)("div", {
                    className: l()(i.outer, s),
                    style: {
                        paddingTop: "".concat(1 / t * 100, "%"),
                        ...n
                    },
                    children: (0, a.jsx)("div", {
                        className: i.inner,
                        children: r
                    })
                })
            }
        },
        714759: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("481060"),
                l = n("689938"),
                i = n("880183");
            let r = Math.ceil(2 * Math.PI * 20);
            t.default = e => {
                let {
                    total: t,
                    used: n
                } = e, o = Math.max(0, Math.min(1, n / t)), u = "".concat(Math.floor(100 * o), "%");
                return (0, a.jsx)(s.Tooltip, {
                    text: l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
                        used: u
                    }),
                    children: e => {
                        var t;
                        return (0, a.jsxs)("div", {
                            className: i.wrapper,
                            role: "progressbar",
                            "aria-label": l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
                                used: u
                            }),
                            ...e,
                            children: [(0, a.jsxs)("svg", {
                                viewBox: "25 25 50 50",
                                className: i.svg,
                                "aria-hidden": !0,
                                children: [(0, a.jsx)("circle", {
                                    className: i.background,
                                    cx: "50",
                                    cy: "50",
                                    r: 20
                                }), (0, a.jsx)("circle", {
                                    className: i.foreground,
                                    cx: "50",
                                    cy: "50",
                                    r: 20,
                                    stroke: (t = o, "rgb(".concat(Math.round(-85 * t + 199), ", ").concat(Math.round(-71 * t + 208), ", ").concat(Math.round(-22 * t + 240), ")")),
                                    strokeDasharray: function(e) {
                                        let t = Math.floor(r * e);
                                        return "".concat(t, ", ").concat(r)
                                    }(o)
                                })]
                            }), (0, a.jsx)("aside", {
                                className: i.usageInfo,
                                "aria-hidden": !0,
                                children: u
                            })]
                        })
                    }
                })
            }
        },
        514611: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("120356"),
                r = n.n(i),
                o = n("622535"),
                u = n("481060"),
                d = n("239091"),
                c = n("556017"),
                f = n("879484"),
                E = n("26580"),
                h = n("206887"),
                C = n("134432"),
                _ = n("695346"),
                m = n("768581"),
                S = n("900849"),
                p = n("940627"),
                I = n("806519"),
                g = n("981631"),
                T = n("689938"),
                A = n("785518"),
                N = n("129512"),
                v = n("330065"),
                R = n("755386");

            function O(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class L extends(a = l.PureComponent) {
                getDefaultSplashURL(e, t) {
                    if (t) return R;
                    switch (e) {
                        case g.ThemeTypes.DARK:
                            return N;
                        case g.ThemeTypes.LIGHT:
                            return v
                    }
                }
                render() {
                    var e;
                    let {
                        guild: t,
                        className: n,
                        theme: a,
                        onTagClick: l
                    } = this.props, {
                        loaded: i,
                        hasBeenSeen: d,
                        isVisible: N,
                        submitting: v
                    } = this.state, {
                        name: R,
                        description: O,
                        presenceCount: L,
                        memberCount: P,
                        keywords: y
                    } = t, M = null === (e = t.features) || void 0 === e ? void 0 : e.has(g.GuildFeatures.HUB), D = m.default.getGuildDiscoverySplashURL({
                        id: t.id,
                        splash: t.discoverySplash,
                        size: 300 * (0, C.getDevicePixelRatio)()
                    }), x = null != D ? D : this.getDefaultSplashURL(a, M), b = m.default.getGuildIconURL({
                        id: t.id,
                        icon: t.icon,
                        size: 40
                    });
                    f.DiscoveryTagsExperiment.trackExposure({
                        location: "de1ef6_1"
                    });
                    let {
                        shouldDisplayTags: U
                    } = f.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "de1ef6_2"
                    }, {
                        autoTrackExposure: !1
                    }), {
                        canSeeInAppReportingButtons: j
                    } = c.DiscoveryInAppReportingExperiment.getCurrentConfig({
                        location: "de1ef6_3"
                    }, {
                        autoTrackExposure: !1
                    });
                    c.DiscoveryInAppReportingExperiment.trackExposure({
                        location: "de1ef6_4"
                    });
                    let G = _.DeveloperMode.getSetting();
                    return (0, s.jsx)(o.VisibilitySensor, {
                        active: !N,
                        onChange: this.setIsVisible,
                        threshold: .1,
                        children: N ? (0, s.jsx)(o.VisibilitySensor, {
                            onChange: this.handleVisibilityChange,
                            active: !d,
                            threshold: .55,
                            children: (0, s.jsxs)("div", {
                                className: r()(n, {
                                    [A.loaded]: i,
                                    [A.loading]: !i
                                }),
                                children: [v ? (0, s.jsx)(u.Spinner, {
                                    type: u.Spinner.Type.PULSING_ELLIPSIS,
                                    className: A.spinner
                                }) : null, (0, s.jsxs)(u.Clickable, {
                                    onClick: this.handleClickView,
                                    className: r()(A.card, {
                                        [A.submitting]: v,
                                        [A.cardWithTags]: U
                                    }),
                                    onContextMenu: this.handleContextMenu,
                                    children: [(0, s.jsxs)("div", {
                                        className: A.cardHeader,
                                        children: [(0, s.jsx)("div", {
                                            className: A.splash,
                                            children: (0, s.jsx)("img", {
                                                src: x,
                                                alt: "",
                                                className: r()(A.splashImage, {
                                                    [A.splashImageHeight]: !M
                                                }),
                                                onLoad: () => this.setState({
                                                    loaded: !0
                                                })
                                            })
                                        }), G || j ? (0, s.jsx)("div", {
                                            className: A.actionButtons,
                                            children: (0, s.jsx)(h.default, {
                                                guild: t
                                            })
                                        }) : null, (0, s.jsx)("div", {
                                            className: A.guildIcon,
                                            children: (0, s.jsx)(I.default, {
                                                mask: I.default.Masks.SQUIRCLE,
                                                width: 48,
                                                height: 48,
                                                children: (0, s.jsx)("div", {
                                                    className: A.iconMask,
                                                    children: (0, s.jsx)(I.default, {
                                                        mask: I.default.Masks.SQUIRCLE,
                                                        width: 40,
                                                        height: 40,
                                                        children: (0, s.jsx)("img", {
                                                            src: b,
                                                            alt: "",
                                                            className: A.avatar
                                                        })
                                                    })
                                                })
                                            })
                                        })]
                                    }), (0, s.jsxs)("div", {
                                        className: A.guildInfo,
                                        children: [(0, s.jsxs)("div", {
                                            className: A.title,
                                            children: [(0, s.jsx)(p.default, {
                                                className: A.guildBadge,
                                                guild: t,
                                                tooltipColor: u.Tooltip.Colors.PRIMARY
                                            }), (0, s.jsx)(u.Heading, {
                                                variant: "heading-md/semibold",
                                                className: A.guildName,
                                                children: R
                                            })]
                                        }), (0, s.jsx)(u.Text, {
                                            className: A.description,
                                            variant: "text-sm/normal",
                                            color: "header-secondary",
                                            children: O
                                        }), U && null != y && null != l && (0, s.jsx)(E.DiscoveryTags, {
                                            tags: y,
                                            onTagClick: e => l(e, t.id),
                                            guildId: t.id,
                                            section: S.AnalyticsContexts.POPULAR
                                        }), (0, s.jsxs)("div", {
                                            className: A.memberInfo,
                                            children: [null != L && (0, s.jsxs)("div", {
                                                className: A.memberCount,
                                                children: [(0, s.jsx)("div", {
                                                    className: A.dotOnline
                                                }), (0, s.jsx)(u.Text, {
                                                    variant: "text-xs/normal",
                                                    color: "header-secondary",
                                                    children: T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format({
                                                        membersOnline: L
                                                    })
                                                })]
                                            }), null != P && (0, s.jsxs)("div", {
                                                className: A.memberCount,
                                                children: [(0, s.jsx)("div", {
                                                    className: A.dotOffline
                                                }), (0, s.jsx)(u.Text, {
                                                    variant: "text-xs/normal",
                                                    color: "header-secondary",
                                                    children: T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format({
                                                        count: P
                                                    })
                                                })]
                                            })]
                                        })]
                                    })]
                                })]
                            })
                        }) : (0, s.jsx)("div", {
                            className: r()(A.card, {
                                [A.cardWithTags]: U
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), O(this, "state", {
                        loaded: !1,
                        hasBeenSeen: !1,
                        isVisible: !1,
                        submitting: !1
                    }), O(this, "handleClickView", async e => {
                        let {
                            className: t
                        } = e.target;
                        if (t.includes("Menu")) return;
                        let {
                            onView: n,
                            guild: a
                        } = this.props;
                        e.stopPropagation(), this.setState({
                            submitting: !0
                        });
                        try {
                            null != n && await n(a.id)
                        } finally {
                            this.setState({
                                submitting: !1
                            })
                        }
                    }), O(this, "handleVisibilityChange", e => {
                        let {
                            onGuildCardSeen: t,
                            guild: n
                        } = this.props;
                        null != n && !this.state.hasBeenSeen && e && (this.setState({
                            hasBeenSeen: e
                        }), null != t && t(n.id))
                    }), O(this, "handleContextMenu", e => {
                        (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await Promise.resolve().then(n.bind(n, "455839"));
                            return t => (0, s.jsx)(e, {
                                ...t,
                                guild: this.props.guild
                            })
                        })
                    }), O(this, "setIsVisible", e => {
                        this.setState({
                            isVisible: e
                        })
                    })
                }
            }
            O(L, "Placeholder", e => (0, s.jsx)("div", {
                className: r()(e.className, A.cardPlaceholder)
            })), t.default = L
        },
        672705: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("14199"),
                l = n("780384"),
                i = n("981631");
            let r = e => {
                let {
                    theme: t,
                    ...n
                } = e, r = (0, l.isThemeDark)(t) ? "dark" : "light";
                return (0, a.jsx)(s.default, {
                    sitekey: i.RECAPTCHA_SITE_KEY,
                    ...n,
                    theme: r
                })
            };
            r.Themes = {
                LIGHT: "light",
                DARK: "dark"
            }, r.Sizes = {
                COMPACT: "compact",
                NORMAL: "normal",
                INVISIBLE: "invisible"
            }, t.default = r
        },
        446753: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("120356"),
                l = n.n(s),
                i = n("481060"),
                r = n("258339");

            function o(e) {
                let {
                    padded: t = !0,
                    inset: n = !1,
                    active: s = !1,
                    className: o,
                    children: u,
                    onClick: d,
                    ...c
                } = e;
                return null != d ? (0, a.jsx)(i.Clickable, {
                    onClick: d,
                    tabIndex: null != d ? 0 : -1,
                    className: l()(o, {
                        [r.outer]: !n,
                        [r.inset]: n,
                        [r.padded]: t,
                        [r.active]: s,
                        [r.interactive]: null != d
                    }),
                    ...c,
                    children: u
                }) : (0, a.jsx)("div", {
                    className: l()(o, {
                        [r.outer]: !n,
                        [r.inset]: n,
                        [r.padded]: t,
                        [r.active]: s
                    }),
                    ...c,
                    children: u
                })
            }
        },
        441996: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("392711"),
                r = n.n(i),
                o = n("302221"),
                u = n("311448");

            function d(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            class c extends(a = l.PureComponent) {
                onDataUpdate(e, t) {
                    let {
                        maxValue: n,
                        data: a,
                        animate: s
                    } = this.props, l = null == e || e.data !== t.data && !r().isEqual(e.data, t.data);
                    if (l && (this.dataChangedAt = performance.now(), this.maxValue = null != n ? n : Math.max(...a)), l || null == e || !e.animate && s || e.color !== this.props.color) {
                        let e = o.hexToRgb(this.props.color);
                        this.fillColor = "rgba(".concat(e.r, ", ").concat(e.g, ", ").concat(e.b, ", 0.5)"), window.cancelAnimationFrame(this.animationFrameRequestId), this.animationFrameRequestId = window.requestAnimationFrame(this.updateAnimation)
                    }
                }
                componentDidMount() {
                    this.animationFrameRequestId = 0, this.onDataUpdate(null, this.props)
                }
                componentDidUpdate(e) {
                    this.onDataUpdate(e, this.props)
                }
                componentWillUnmount() {
                    window.cancelAnimationFrame(this.animationFrameRequestId), this.animationFrameRequestId = 0
                }
                render() {
                    let {
                        className: e,
                        pixelWidth: t,
                        pixelHeight: n
                    } = this.props;
                    return (0, s.jsx)("div", {
                        className: e,
                        children: (0, s.jsx)("canvas", {
                            ref: this.canvas,
                            className: u.canvas,
                            width: t,
                            height: n
                        })
                    })
                }
                constructor(...e) {
                    super(...e), d(this, "dataChangedAt", void 0), d(this, "fillColor", void 0), d(this, "maxValue", void 0), d(this, "canvas", l.createRef()), d(this, "animationFrameRequestId", void 0), d(this, "updateAnimation", e => {
                        let t, n;
                        let a = this.canvas.current;
                        if (null == a) return;
                        let {
                            data: s,
                            updateInterval: l,
                            color: i,
                            numUpdatesToShow: r,
                            lineWidth: u,
                            animate: d,
                            gradientStopColor: c
                        } = this.props;
                        if (s.length < 2) return;
                        let f = Math.max(Math.min((e - this.dataChangedAt) / l, 1), 0),
                            E = a.getContext("2d"),
                            h = this.maxValue;
                        E.strokeStyle = i, E.lineWidth = u;
                        let C = a.height - E.lineWidth,
                            _ = E.createLinearGradient(0, 0, 0, C);
                        if (null != c) _.addColorStop(0, c);
                        else {
                            let {
                                r: e,
                                g: t,
                                b: n
                            } = o.hexToRgb(i);
                            _.addColorStop(0, "rgba(".concat(e, ", ").concat(t, ", ").concat(n, ", 0)"))
                        }
                        _.addColorStop(1, this.fillColor), E.fillStyle = _;
                        let m = s.length >= r ? r : s.length;
                        E.setTransform(1, 0, 0, -1, 0, a.height), E.clearRect(0, 0, a.width, a.height), E.translate(0, .5 * E.lineWidth);
                        let S = Math.floor(a.width / (m - 3)),
                            p = .5 * S;
                        E.translate(S - S * f, 0), E.beginPath();
                        let I = -S;
                        s.forEach((e, a) => {
                            t = {
                                x: I,
                                y: C * e / h
                            }, 0 === a ? E.moveTo(t.x, t.y) : E.bezierCurveTo(n.x + p, n.y, t.x - p, t.y, t.x, t.y), n = t, I += S
                        }), E.stroke(), E.lineTo(I - S, 0), E.lineTo(0, 0), E.fill(), d && f < 1 && (this.animationFrameRequestId = window.requestAnimationFrame(this.updateAnimation))
                    })
                }
            }
            d(c, "defaultProps", {
                animate: !0
            }), t.default = c
        },
        610001: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a, s = n("735250"),
                l = n("470079"),
                i = n("120356"),
                r = n.n(i),
                o = n("873546"),
                u = n("481060"),
                d = n("1964"),
                c = n("63063"),
                f = n("285952"),
                E = n("672705"),
                h = n("981631"),
                C = n("689938"),
                _ = n("679091"),
                m = n("611273");

            function S(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let p = c.default.getArticleURL(h.HelpdeskArticles.VERIFICATION_FAQ);
            class I extends(a = l.PureComponent) {
                renderFields() {
                    let {
                        types: e,
                        captchaKey: t,
                        theme: n,
                        onCaptchaVerify: a
                    } = this.props;
                    return (0, s.jsx)(s.Fragment, {
                        children: e.map(e => e === h.VerificationTypes.CAPTCHA ? (0, s.jsx)(E.default, {
                            onVerify: a,
                            theme: n
                        }, t) : (0, s.jsx)(u.Button, {
                            className: r()(m.marginBottom20),
                            onClick: () => this.handleClick(e),
                            children: d.default.getButtonTitle(e)
                        }, e))
                    })
                }
                render() {
                    return (0, s.jsxs)(f.default, {
                        className: _.verification,
                        align: f.default.Align.CENTER,
                        direction: f.default.Direction.VERTICAL,
                        children: [(0, s.jsxs)(f.default, {
                            className: r()(_.container, {
                                [_.isMobile]: o.isMobile
                            }),
                            direction: f.default.Direction.VERTICAL,
                            align: f.default.Align.CENTER,
                            justify: f.default.Justify.CENTER,
                            children: [(0, s.jsx)("div", {
                                className: _.image
                            }), (0, s.jsx)("div", {
                                className: r()(_.title, m.marginTop20),
                                children: C.default.Messages.VERIFICATION_TITLE
                            }), (0, s.jsx)("div", {
                                className: r()(_.body, m.marginTop4, m.marginBottom20),
                                children: C.default.Messages.VERIFICATION_BODY_WITH_HELP_LINK.format({
                                    helpCenterURL: p
                                })
                            }), (0, s.jsx)(f.default, {
                                grow: 0,
                                direction: f.default.Direction.VERTICAL,
                                justify: f.default.Justify.CENTER,
                                children: this.renderFields()
                            })]
                        }), (0, s.jsx)("div", {
                            className: r()(_.footer, m.marginTop20),
                            children: C.default.Messages.VERIFICATION_FOOTER
                        }), (0, s.jsxs)(f.default, {
                            className: r()(m.marginTop4, m.marginBottom20),
                            grow: 0,
                            children: [(0, s.jsx)("div", {
                                className: r()(_.footer, _.footerAction),
                                children: C.default.Messages.VERIFICATION_FOOTER_SUPPORT.format({
                                    supportURL: c.default.getSubmitRequestURL()
                                })
                            }), (0, s.jsx)("div", {
                                className: r()(_.footer, _.footerBullet),
                                children: "•"
                            }), (0, s.jsx)("div", {
                                className: r()(_.footer, _.footerAction),
                                children: C.default.Messages.VERIFICATION_FOOTER_LOGOUT.format({
                                    logoutOnClick: this.props.onLogout
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), S(this, "handleClick", e => {
                        let {
                            onClick: t
                        } = this.props;
                        null == t || t(e)
                    })
                }
            }
            S(I, "defaultProps", {
                types: [h.VerificationTypes.CAPTCHA],
                onCaptchaVerify: h.NOOP,
                onLogout: h.NOOP
            }), t.default = I
        },
        517802: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("325767");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    children: [(0, a.jsxs)("g", {
                        className: i,
                        fill: l,
                        clipPath: "url(#a)",
                        children: [(0, a.jsx)("path", {
                            d: "M14.8377 9.86956a2.79875 2.79875 0 0 1 1.9166.70444 2.7981 2.7981 0 0 1 .9278 1.8188.59587.59587 0 0 1 .0459.2753v9.4968H4.51517v-8.2581l9.17563-3.8078a3.2101 3.2101 0 0 1 1.1469-.22944Zm0-1.83512a5.23024 5.23024 0 0 0-1.8351.36703L3.27647 12.4387a.96346.96346 0 0 0-.59641.9176v9.6344c0 .2676.10633.5244.29562.7137.18928.1892.446.2956.71369.2956H19.5631V12.6681c0-.1376-.0458-.2753-.0458-.4129-.1041-1.164-.644-2.2457-1.5118-3.02835a4.63378 4.63378 0 0 0-3.1678-1.19241Z"
                        }), (0, a.jsx)("path", {
                            d: "M19.563 24c.4889-.0735.9351-.32 1.2577-.6946a2.06455 2.06455 0 0 0 0-2.6939 2.06443 2.06443 0 0 0-1.2577-.6946M10.6797 3.3208c0-.6889.8077-2.32504 1.2308-3.1431.0266-.05384.0656-.09872.1129-.12997C12.0708.01648 12.1247 0 12.1797 0c.0549 0 .1089.01648.1563.04773.0473.03125.0863.07613.1129.12996.4616.81807 1.2308 2.45421 1.2308 3.14311 0 .44535-.158.87246-.4394 1.18737C12.959 4.82308 12.5775 5 12.1797 5c-.3978 0-.7794-.17692-1.0607-.49183s-.4393-.74202-.4393-1.18737Z"
                        }), (0, a.jsx)("path", {
                            fillRule: "evenodd",
                            d: "M12.1797 6.16742c.8284 0 1.5.67157 1.5 1.5V11.2c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5V7.66742c0-.82843.6716-1.5 1.5-1.5Z",
                            clipRule: "evenodd"
                        }), (0, a.jsx)("path", {
                            d: "M4.51529 13.2187c-.4867 0-.95347.1933-1.29762.5375a1.83498 1.83498 0 0 0-.53749 1.2976v7.9369A1.0093 1.0093 0 0 0 3.68949 24H19.5633V13.2187H4.51529Zm9.17561 8.258H4.79056v-2.0645h8.90034c.2607.021.5054.134.6903.319.185.1849.298.4296.319.6903.0062.1364-.0153.2726-.0632.4004-.048.1278-.1213.2445-.2157.3432a1.0077 1.0077 0 0 1-.3333.2306 1.00732 1.00732 0 0 1-.3971.081Zm0-4.0372H4.79056V15.375h8.90034a.96291.96291 0 0 1 .377.0899.96339.96339 0 0 1 .3112.2312c.1083.0878.194.2002.2499.3279.0558.1278.0803.267.0712.4061 0 .2677-.1063.5245-.2956.7137-.1893.1893-.446.2957-.7137.2957Z"
                        })]
                    }), (0, a.jsx)("defs", {
                        children: (0, a.jsx)("clipPath", {
                            id: "a",
                            children: (0, a.jsx)("path", {
                                fill: "#fff",
                                d: "M0 0h24v24H0z"
                            })
                        })
                    })]
                })
            }
        },
        563593: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("886364"),
                l = n("325767");

            function i(e) {
                return "CloudDone-".concat(e)
            }

            function r(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: r = "currentColor",
                    foreground: o,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(s.default, {
                    ...u,
                    color: r,
                    id: i(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, l.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(i(u.id), ")") : r,
                        className: o,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z"
                    })]
                })
            }
        },
        294934: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("934827"),
                i = n("886364"),
                r = n("325767");

            function o(e) {
                return "CloudDownload-".concat(e)
            }
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: l,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(i.default, {
                    ...u,
                    color: s,
                    id: o(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, r.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                        className: l,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z"
                    })]
                })
            }, l.DownloadIcon, void 0, {
                size: 24
            })
        },
        271322: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("594158"),
                i = n("886364"),
                r = n("325767");

            function o(e) {
                return "CloudUpload-".concat(e)
            }
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: l,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(i.default, {
                    ...u,
                    color: s,
                    id: o(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, r.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                        className: l,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                    })]
                })
            }, l.UploadIcon, void 0, {
                size: 24
            })
        },
        541561: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("813658"),
                i = n("325767");
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    className: l,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, i.default)(o),
                    className: l,
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        className: r,
                        fill: s,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M22.447 8.11002L12.447 3.11002C12.166 2.96902 11.834 2.96902 11.552 3.11002L1.552 8.11002C1.35 8.21002 1.197 8.38402 1.107 8.57302C1.046 8.69502 1 8.90202 1 9.00502V14.77C1 15.322 1.448 15.77 2 15.77C2.552 15.77 3 15.322 3 14.77V10.172L12.015 13.927L22.372 9.93302C22.737 9.78602 22.983 9.44002 22.999 9.04602C23.016 8.65202 22.799 8.28702 22.447 8.11002ZM12 16.005C11.869 16.005 11.738 15.979 11.615 15.928L5 13.172V16.185C5 16.564 5.214 16.91 5.553 17.08C5.7173 17.1621 5.88209 17.2461 6.04836 17.3308C7.61773 18.1306 9.31996 18.998 12 18.998C14.6812 18.998 16.3872 18.1284 17.956 17.3287C18.1208 17.2447 18.2842 17.1614 18.447 17.08C18.786 16.911 19 16.564 19 16.186V13.385L12.359 15.939C12.243 15.982 12.122 16.005 12 16.005ZM1 18.005C1 17.453 1.448 17.005 2 17.005C2.552 17.005 3 17.453 3 18.005V20.005C3 20.557 2.552 21.005 2 21.005C1.448 21.005 1 20.557 1 20.005V18.005Z"
                    })
                })
            }, l.EducationIcon, void 0, {
                size: 24
            })
        },
        886364: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            t.default = e => {
                let {
                    id: t,
                    startColor: n,
                    stopColor: s,
                    color: l,
                    stop: i
                } = e;
                return (0, a.jsxs)("linearGradient", {
                    id: t,
                    children: [(0, a.jsx)("stop", {
                        offset: "0",
                        stopColor: n
                    }), (0, a.jsx)("stop", {
                        offset: i,
                        stopColor: s
                    }), (0, a.jsx)("stop", {
                        offset: i,
                        stopColor: l
                    }), (0, a.jsx)("stop", {
                        offset: "1",
                        stopColor: l
                    })]
                })
            }
        },
        662868: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("325767");

            function l(e) {
                let {
                    width: t = 32,
                    height: n = 32,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 ".concat(t, " ").concat(n),
                    fill: "none",
                    children: (0, a.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M8 3C7.44772 3 7 3.44772 7 4V12C7 12.5523 7.44772 13 8 13C8.55228 13 9 12.5523 9 12V4C9 3.44772 8.55228 3 8 3ZM3 6C3 5.44772 3.44772 5 4 5C4.55228 5 5 5.44772 5 6V10C5 10.5523 4.55228 11 4 11C3.44772 11 3 10.5523 3 10V6ZM11 6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6V10C13 10.5523 12.5523 11 12 11C11.4477 11 11 10.5523 11 10V6Z",
                        fill: l
                    })
                })
            }
        },
        520030: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("649040"),
                i = n("325767");
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    className: l,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, i.default)(o),
                    className: l,
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        className: r,
                        fill: s,
                        d: "M19.396 3.29898C19.016 3.01598 18.524 2.93098 18.07 3.06498L8.07 6.06498C7.435 6.25498 7 6.83998 7 7.50298V15.054C6.835 15.03 6.671 15.003 6.5 15.003C4.566 15.003 3 16.571 3 18.503C3 20.434 4.566 22.003 6.5 22.003C8.434 22.003 10 20.434 10 18.503V8.61798L17 6.51798V13.054C16.835 13.03 16.671 13.003 16.5 13.003C14.566 13.003 13 14.571 13 16.503C13 18.434 14.566 20.003 16.5 20.003C18.434 20.003 20 18.434 20 16.503V4.50298C20 4.02698 19.775 3.58198 19.396 3.29898Z"
                    })
                })
            }, l.MusicIcon, void 0, {
                size: 24
            })
        },
        762854: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("685651"),
                i = n("325767");
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: l,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, i.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 48 48",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("path", {
                        d: "M30.6666 24.9644L35.1111 20.5199V31C35.1111 32.1046 34.2156 33 33.1111 33H32.6666C31.562 33 30.6666 32.1046 30.6666 31V24.9644Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M26.2224 14.1463V8C26.2224 6.89543 25.327 6 24.2224 6H23.7779C22.6734 6 21.7779 6.89543 21.7779 8V18.5907L26.2224 14.1463Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M21.7779 33.8543L21.9254 33.7056L26.2224 29.4086V40C26.2224 41.1046 25.327 42 24.2224 42H23.7779C22.6734 42 21.7779 41.1046 21.7779 40V33.8543Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M17.3332 23.0354L12.8888 27.4799V12.5C12.8888 11.3954 13.7842 10.5 14.8888 10.5H15.3332C16.4378 10.5 17.3332 11.3954 17.3332 12.5V23.0354Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M8.44445 28.75C8.44445 29.8546 7.54902 30.75 6.44445 30.75H6C4.89543 30.75 4 29.8546 4 28.75V19.25C4 18.1454 4.89543 17.25 6 17.25H6.44445C7.54902 17.25 8.44445 18.1454 8.44445 19.25L8.44445 28.75Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M44.0001 26.5C44.0001 27.6046 43.1047 28.5 42.0001 28.5H41.5557C40.4511 28.5 39.5557 27.6046 39.5557 26.5V21.5C39.5557 20.3954 40.4511 19.5 41.5557 19.5H42.0001C43.1047 19.5 44.0001 20.3954 44.0001 21.5V26.5Z",
                        fill: s
                    }), (0, a.jsx)("path", {
                        d: "M42 8.54L39.46 6L6 39.46L8.54 42L16.92 33.64L19.38 31.16L22.7 27.84L29.98 20.56L42 8.54Z",
                        fill: s,
                        className: l
                    })]
                })
            }, l.WaveformSlashIcon, void 0, {
                size: 24
            })
        },
        600394: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("735250");
            n("470079");
            var s = n("960259"),
                l = n("381837"),
                i = n("325767");
            t.default = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    className: l,
                    foreground: r,
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, i.default)(o),
                    className: l,
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        className: r,
                        fill: s,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M18.6683 11.9964C19.5992 13.2208 20.3732 14.4331 20.9422 15.5701C22.5858 18.8593 22.0118 20.4688 21.2418 21.2398C20.895 21.5846 20.2596 21.9978 19.1951 21.9978C17.3645 21.9978 14.7478 20.7553 12.0004 18.6683C9.25198 20.7553 6.63527 21.9978 4.80569 21.9978C3.74111 21.9978 3.10478 21.5846 2.75896 21.2398C1.98792 20.4677 1.41392 18.8593 3.05853 15.5701C3.62751 14.4331 4.40257 13.2218 5.33245 11.9964C2.51569 8.28291 1.00176 4.51719 2.75896 2.75898C3.10578 2.41316 3.74111 2 4.80569 2C6.63628 2 9.25298 3.24251 12.0004 5.32944C14.7488 3.24251 17.3655 2 19.1951 2C20.2596 2 20.895 2.41216 21.2418 2.75898C22.999 4.51618 21.4851 8.28191 18.6683 11.9964ZM19.8203 4.18042C19.6806 4.03969 19.4032 4.01053 19.1951 4.01053C18.0481 4.01053 15.9933 4.9203 13.6209 6.64835C15.0262 7.86472 16.2346 9.08512 17.3655 10.395C19.752 7.13188 20.3541 4.71422 19.8203 4.18042ZM14.1325 14.1316C14.8654 13.3987 15.5108 12.689 16.0928 12.0024C15.4876 11.2856 14.8342 10.5689 14.1325 9.86621C13.4128 9.14744 12.701 8.51312 12.0004 7.92202C11.2997 8.51312 10.588 9.14744 9.86821 9.86621C9.16653 10.5689 8.51311 11.2856 7.90794 12.0024C8.48999 12.689 9.13637 13.3987 9.86821 14.1316C10.588 14.8513 11.2997 15.4856 12.0004 16.0747C12.701 15.4856 13.4128 14.8513 14.1325 14.1316ZM4.80569 4.01053C4.5986 4.01053 4.32115 4.03969 4.18142 4.18042C3.64661 4.71422 4.24977 7.13088 6.63628 10.394C7.83556 9.00469 9.05696 7.79435 10.3799 6.64735C8.00645 4.9203 5.95269 4.01053 4.80569 4.01053ZM4.18041 19.8183C4.32014 19.9581 4.5976 19.9872 4.80569 19.9872C5.95269 19.9872 8.00746 19.0785 10.3799 17.3514C8.98357 16.1421 7.7873 14.9348 6.6413 13.6078C5.92053 14.593 5.31133 15.56 4.85695 16.4688C3.79539 18.5909 3.9502 19.5881 4.18041 19.8183ZM19.1941 19.9872C19.4021 19.9872 19.6796 19.9581 19.8193 19.8183C20.0495 19.5881 20.2044 18.5919 19.1428 16.4688C18.6884 15.559 18.0792 14.592 17.3584 13.6078C16.2114 14.9358 15.0152 16.1431 13.6199 17.3514C15.9933 19.0785 18.0471 19.9872 19.1941 19.9872ZM14.0109 11.9984C14.0109 13.1088 13.1108 14.0089 12.0004 14.0089C10.89 14.0089 9.98984 13.1088 9.98984 11.9984C9.98984 10.888 10.89 9.98784 12.0004 9.98784C13.1108 9.98784 14.0109 10.888 14.0109 11.9984Z"
                    })
                })
            }, l.ScienceIcon, void 0, {
                size: 24
            })
        },
        820254: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("325767");

            function l(e) {
                let {
                    width: t = 14,
                    height: n = 14,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 14 14",
                    children: (0, a.jsx)("path", {
                        fill: l,
                        className: i,
                        d: "M6.99471698,9.67522659 C8.47108874,9.67522659 9.66792453,8.47748685 9.66792453,7 C9.66792453,5.52251315 8.47108874,4.32477341 6.99471698,4.32477341 C5.51834522,4.32477341 4.32150943,5.52251315 4.32150943,7 C4.32150943,8.47748685 5.51834522,9.67522659 6.99471698,9.67522659 Z M6.99471698,2.67522659 C8.18867925,2.67522659 9.26641509,3.16163142 10.0483019,3.94410876 L11.9396226,2.05135952 C10.6822642,0.782477341 8.92830189,0 6.99471698,0 C3.12754717,0 0,3.14048338 0,7 L2.67320755,7 C2.67320755,4.6102719 4.60679245,2.67522659 6.99471698,2.67522659 Z M11.3267925,7 C11.3267925,9.3897281 9.39320755,11.3247734 7.00528302,11.3247734 C5.81132075,11.3247734 4.73358491,10.8383686 3.94113208,10.0558912 L2.04981132,11.9486405 C3.31773585,13.2175227 5.06113208,14 6.99471698,14 C10.8618868,14 14,10.8595166 14,7 L11.3267925,7 Z"
                    })
                })
            }
        },
        881201: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("325767");

            function l(e) {
                let {
                    width: t = 20,
                    height: n = 20,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 18 18",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("path", {
                        d: "M13.4996 0H6.72144C6.62254 1.34004e-06 6.52586 0.0293272 6.44363 0.0842743C6.36141 0.139221 6.29733 0.217322 6.25949 0.308693C6.22165 0.400063 6.21176 0.500602 6.23106 0.597595C6.25037 0.694589 6.298 0.783679 6.36794 0.8536L7.63564 2.1213C7.82317 2.30884 7.92853 2.56319 7.92853 2.8284C7.92853 3.09361 7.82317 3.34796 7.63564 3.5355L6.22144 4.9498C5.65884 5.51241 5.34277 6.27546 5.34277 7.0711C5.34277 7.86674 5.65884 8.62979 6.22144 9.1924C6.40897 9.37993 6.66331 9.48528 6.92853 9.48528C7.19374 9.48528 7.4481 9.37993 7.63564 9.1924L9.75703 7.0711C10.1321 6.69603 10.6408 6.48533 11.1712 6.48533C11.7017 6.48533 12.2104 6.69603 12.5854 7.0711L13.146 7.6317C13.2159 7.70164 13.305 7.74927 13.402 7.76858C13.499 7.78788 13.5996 7.77799 13.6909 7.74015C13.7823 7.70231 13.8604 7.63823 13.9154 7.556C13.9703 7.47377 13.9996 7.37709 13.9996 7.2782V0.5C13.9996 0.367392 13.9469 0.240214 13.8532 0.146446C13.7594 0.052678 13.6322 0 13.4996 0Z",
                        fill: l
                    }), (0, a.jsx)("path", {
                        d: "M4.5 17.9999H11.2782C11.3771 17.9999 11.4738 17.9706 11.556 17.9157C11.6382 17.8607 11.7023 17.7826 11.7401 17.6912C11.778 17.5999 11.7879 17.4993 11.7686 17.4023C11.7493 17.3053 11.7016 17.2163 11.6317 17.1463L10.364 15.8786C10.1765 15.6911 10.0711 15.4367 10.0711 15.1715C10.0711 14.9063 10.1765 14.652 10.364 14.4644L11.7782 13.0501C12.3408 12.4875 12.6569 11.7245 12.6569 10.9288C12.6569 10.1332 12.3408 9.37014 11.7782 8.80753C11.5907 8.62 11.3363 8.51465 11.0711 8.51465C10.8059 8.51465 10.5515 8.62 10.364 8.80753L8.2426 10.9288C7.86753 11.3039 7.35883 11.5146 6.8284 11.5146C6.29797 11.5146 5.78927 11.3039 5.4142 10.9288L4.85361 10.3682C4.78369 10.2983 4.69459 10.2507 4.5976 10.2314C4.5006 10.2121 4.40006 10.2219 4.30869 10.2598C4.21731 10.2976 4.13922 10.3617 4.08427 10.4439C4.02933 10.5262 4 10.6228 4 10.7217V17.4999C4 17.6325 4.05269 17.7597 4.14645 17.8535C4.24022 17.9473 4.36739 17.9999 4.5 17.9999Z",
                        fill: l
                    })]
                })
            }
        },
        643126: function(e, t, n) {
            "use strict";
            n.r(t), n("47120");
            var a = n("735250"),
                s = n("470079"),
                l = n("120356"),
                i = n.n(l),
                r = n("512722"),
                o = n.n(r),
                u = n("481060"),
                d = n("100527"),
                c = n("484459"),
                f = n("103575"),
                E = n("285952"),
                h = n("409216"),
                C = n("465670"),
                _ = n("87888"),
                m = n("63063"),
                S = n("976401"),
                p = n("333454"),
                I = n("864441"),
                g = n("981631"),
                T = n("689938"),
                A = n("685054");

            function N(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            let v = {
                HOST: 5,
                LISTENER: 4
            };
            class R extends s.PureComponent {
                isHost() {
                    let {
                        currentUser: e,
                        host: t
                    } = this.props;
                    return e.id === (null == t ? void 0 : t.id)
                }
                renderTitle() {
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(I.default, {
                            children: this.isHost() ? T.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_HOST.format({
                                count: this.props.party.length
                            }) : T.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_LISTENER
                        }), (0, a.jsx)(p.default, {
                            children: T.default.Messages.SPOTIFY_LISTEN_ALONG_SUBTITLE_LISTENER
                        })]
                    })
                }
                renderStopListeningButton() {
                    let {
                        onStopListening: e
                    } = this.props;
                    return this.isHost() ? null : (0, a.jsx)(S.default, {
                        tooltipText: T.default.Messages.SPOTIFY_LISTEN_ALONG_STOP,
                        onClick: e,
                        icon: C.default
                    })
                }
                renderHelpIcon() {
                    return this.isHost() ? (0, a.jsx)(S.default, {
                        tooltipText: T.default.Messages.SPOTIFY_LISTEN_ALONG_INFO,
                        onClick: () => {
                            window.open(m.default.getArticleURL(g.HelpdeskArticles.SPOTIFY_CONNECTION), "_blank")
                        },
                        icon: _.default
                    }) : null
                }
                render() {
                    return (0, a.jsxs)("div", {
                        className: A.listeningAlong,
                        children: [this.renderTitle(), (0, a.jsx)(E.default, {
                            justify: E.default.Justify.END,
                            className: A.party,
                            children: (0, a.jsx)(h.default, {
                                users: this.props.party,
                                max: this.isHost() ? v.HOST : v.LISTENER,
                                renderUser: this.renderPartyMember,
                                renderMoreUsers: this.renderPartyMemberOverflow
                            })
                        }), (0, a.jsxs)("div", {
                            className: A.icons,
                            children: [this.renderHelpIcon(), this.renderStopListeningButton()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), N(this, "renderPartyMember", (e, t) => {
                        let n;
                        if (null == e) return null;
                        let {
                            host: l,
                            onUserContextMenu: r
                        } = this.props;
                        return n = (null == l ? void 0 : l.id) === e.id ? T.default.Messages.SPOTIFY_LISTEN_ALONG_HOST : T.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENER, (0, a.jsx)(u.Popout, {
                            preload: () => (0, c.maybeFetchUserProfileForPopout)(e.id, e.getAvatarURL(void 0, 80)),
                            renderPopout: t => (o()(null != e, ""), (0, a.jsx)(f.default, {
                                ...t,
                                location: "ListeningAlong",
                                userId: e.id,
                                newAnalyticsLocations: [d.default.AVATAR]
                            })),
                            position: "top",
                            align: "center",
                            children: l => (0, a.jsx)(u.Tooltip, {
                                text: n,
                                children: n => {
                                    let {
                                        onMouseEnter: a,
                                        onMouseLeave: o
                                    } = n;
                                    return (0, s.createElement)(u.Avatar, {
                                        ...l,
                                        key: e.id,
                                        src: e.getAvatarURL(void 0, 24),
                                        size: u.AvatarSizes.SIZE_24,
                                        className: i()(A.avatar, t),
                                        "aria-label": e.username,
                                        onMouseEnter: a,
                                        onMouseLeave: o,
                                        onContextMenu: t => void(null != e && (null == r || r(t, e)))
                                    })
                                }
                            })
                        }, e.id)
                    }), N(this, "renderPartyMemberOverflow", (e, t, n) => {
                        let {
                            renderOverflowPopout: s
                        } = this.props;
                        return (0, a.jsx)(u.Popout, {
                            renderPopout: s,
                            children: n => (0, a.jsx)(u.Tooltip, {
                                text: T.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENERS,
                                children: s => (0, a.jsx)("div", {
                                    className: i()(A.overflow, t),
                                    ...s,
                                    ...n,
                                    children: e
                                })
                            })
                        }, n)
                    })
                }
            }
            t.default = R
        },
        205129: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getPartyMetadata: function() {
                    return l
                }
            });
            var a = n("603113"),
                s = n("122810");

            function l(e) {
                return {
                    af_voice_chat: e.voiceChannels.length > 0,
                    af_people_count: e.partiedMembers.length,
                    af_rich_presence: e.currentActivities.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, s.default)(t)
                    }),
                    game_platform: e.currentActivities.length > 0 ? (0, a.default)(e.currentActivities[0].activity) : null
                }
            }
        },
        669297: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EducationIcon: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("331595");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M22.56 9.63 12.8 13.9a2 2 0 0 1-1.6 0L5 11.19V15a1 1 0 1 1-2 0v-4.69l-1.56-.68a.75.75 0 0 1-.05-1.35l9.69-5.05a2 2 0 0 1 1.84 0l9.69 5.05c.56.29.53 1.1-.05 1.35Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M6.98 18.98a.48.48 0 0 1-.28-.38l-.18-1.43a1 1 0 0 0-.1-.32l-.37-.74a.5.5 0 0 1-.05-.23v-1.7c0-.35.37-.6.7-.45l4.9 2.1c.26.1.54.1.8 0l5.9-2.53c.33-.14.7.1.7.46v3.44c0 .2-.05.39-.18.54C17.65 19.11 14.65 20 12 20c-1.73 0-3.6-.38-5.02-1.02ZM3.38 17a1 1 0 0 0-.99.88l-.25 2a1 1 0 0 0 1 1.12h1.73a1 1 0 0 0 .99-1.12l-.25-2a1 1 0 0 0-1-.88H3.39Z",
                        className: r
                    })]
                })
            }
        },
        492118: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ScienceIcon: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("331595");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M19.5 15.46a13.2 13.2 0 0 0-.72-1.62c-.68.9-1.45 1.78-2.3 2.64a21.05 21.05 0 0 1-7.24 4.9c-2.24.83-4.63.98-6.12-.5-1.48-1.49-1.33-3.88-.5-6.12.33-.89.78-1.82 1.35-2.76a16.28 16.28 0 0 1-1.35-2.76c-.83-2.24-.98-4.63.5-6.12C4.61 1.64 7 1.8 9.24 2.62c.89.33 1.82.78 2.76 1.35a13.7 13.7 0 0 1 4.62-1.86c1.58-.27 3.17-.07 4.26 1.01 1.48 1.49 1.33 3.88.5 6.12-.33.89-.78 1.82-1.35 2.76.57.94 1.02 1.87 1.35 2.76.83 2.24.98 4.63-.5 6.12-1.1 1.09-2.68 1.29-4.3 1a1.5 1.5 0 0 1-2.08-1.38 1.5 1.5 0 0 1 2.9-.52c1.01.1 1.68-.14 2.06-.52.6-.6.81-1.92.04-4ZM8.54 4.5c2 .73 4.35 2.26 6.52 4.44 1 1 1.87 2.04 2.58 3.06A22.82 22.82 0 0 1 12 17.64 22.83 22.83 0 0 1 6.36 12a22.6 22.6 0 0 1 2.27-2.76 1.5 1.5 0 1 0-1.6-1.2 25 25 0 0 0-1.8 2.12c-.3-.56-.54-1.1-.73-1.62-.77-2.08-.56-3.4.04-4 .6-.6 1.92-.81 4-.04ZM4.5 15.46c.19-.52.43-1.06.72-1.62a25.3 25.3 0 0 0 4.94 4.94c-.56.29-1.1.53-1.62.72-2.08.77-3.4.56-4-.04-.6-.6-.81-1.92-.04-4ZM16.96 4.08c-.91.16-1.98.54-3.12 1.14a25.3 25.3 0 0 1 4.94 4.94c.29-.56.53-1.1.72-1.62.77-2.08.56-3.4-.04-4-.43-.43-1.23-.68-2.5-.46Z",
                        clipRule: "evenodd",
                        className: r
                    })]
                })
            }
        },
        147211: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SettingsCircleIcon: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("331595");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    secondaryColor: i = s.default.colors.STATUS_DANGER,
                    secondaryColorClass: r = "",
                    color: o = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: u = "",
                    ...d
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(d),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("circle", {
                        cx: "19",
                        cy: "19",
                        r: "5",
                        fill: "string" == typeof i ? i : i.css,
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof o ? o : o.css,
                        d: "M9.92 2.08c-.07-.45.18-.93.64-.99a11.1 11.1 0 0 1 2.88 0c.46.06.7.54.64.99-.18 1.16.19 2.2.98 2.53.8.33 1.79-.14 2.49-1.1.27-.36.78-.52 1.14-.24.77.59 1.45 1.27 2.04 2.04.28.36.12.87-.24 1.14-.96.7-1.43 1.7-1.1 2.49.33.8 1.37 1.16 2.53.98.45-.07.93.18.99.64a11.1 11.1 0 0 1 .08 1.82c0 .38-.43.58-.77.4a6.97 6.97 0 0 0-5.63-.35c-.28.1-.59-.14-.59-.43a4 4 0 1 0-4 4c.3 0 .53.31.43.59a6.99 6.99 0 0 0 .35 5.63c.18.34-.02.76-.4.77a11.39 11.39 0 0 1-1.82-.08c-.46-.06-.7-.54-.64-.99.18-1.16-.19-2.2-.98-2.53-.8-.33-1.79.15-2.49 1.1-.27.36-.78.52-1.14.24a11.06 11.06 0 0 1-2.04-2.04c-.28-.36-.12-.87.24-1.14.96-.7 1.43-1.7 1.1-2.49-.33-.8-1.37-1.16-2.53-.98-.45.07-.93-.18-.99-.64a11.1 11.1 0 0 1 0-2.88c.06-.46.54-.7.99-.64 1.16.18 2.2-.19 2.53-.98.33-.8-.14-1.79-1.1-2.49-.36-.27-.52-.78-.24-1.14.59-.77 1.27-1.45 2.04-2.04.36-.28.87-.12 1.14.24.7.95 1.7 1.43 2.49 1.1.8-.33 1.16-1.37.98-2.53Z",
                        className: u
                    })]
                })
            }
        },
        930450: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserCircleIcon: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("331595");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M18.46 20.9a12.65 12.65 0 0 1-1.46.9 10.95 10.95 0 0 1-10 0 11 11 0 1 1 11.46-.9Zm-1.65-1.3a8.96 8.96 0 0 1-9.62 0l.23-2.26c.02-.25-.27-.36-.41-.15-.29.45-.6 1.01-.88 1.63A9.04 9.04 0 0 1 4.2 16.5a9 9 0 0 1 15.6 0 9.04 9.04 0 0 1-1.93 2.32c-.27-.62-.59-1.18-.88-1.63-.14-.21-.43-.1-.4.15l.22 2.27ZM12 11a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Z",
                        clipRule: "evenodd",
                        className: r
                    })
                })
            }
        },
        658374: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                WaveformSlashIcon: function() {
                    return i
                }
            });
            var a = n("735250");
            n("470079");
            var s = n("692547"),
                l = n("331595");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M22.7 2.7a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4l20-20ZM6.85 13.15a.5.5 0 0 1-.85-.36V3a1 1 0 0 1 2 0v8.8a.5.5 0 0 1-.15.35l-1 1ZM11 17.2v.8a1 1 0 1 0 2 0v-1.8a.5.5 0 0 0-.85-.35l-1 1a.5.5 0 0 0-.15.36ZM11 7.8V6a1 1 0 1 1 2 0v.8a.5.5 0 0 1-.15.35l-1 1a.5.5 0 0 1-.85-.36ZM17.15 10.85a.5.5 0 0 1 .85.36V19a1 1 0 1 1-2 0v-6.8a.5.5 0 0 1 .15-.35l1-1ZM2 7a1 1 0 0 0-1 1v8a1 1 0 1 0 2 0V8a1 1 0 0 0-1-1ZM21 9a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0V9Z",
                        className: r
                    })
                })
            }
        },
        63023: function(e, t, n) {
            "use strict";

            function a(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("653041");
            class s {
                _processQueue() {
                    setTimeout(() => {
                        if (this._queue.length > 0 && this._tokenCount > 0) {
                            this._tokenCount--, null == this._intervalID && (this._intervalID = setInterval(() => this._iterate(), this._intervalPeriod));
                            let e = this._queue.shift();
                            null == e || e(), this._processQueue()
                        }
                    }, 0)
                }
                _iterate() {
                    this._tokenCount = Math.min(this._capacity, this._tokenCount + 1), this._tokenCount >= this._capacity && null != this._intervalID && (clearInterval(this._intervalID), this._intervalID = null), this._processQueue()
                }
                process() {
                    return new Promise(e => {
                        this._queue.push(e), this._processQueue()
                    })
                }
                constructor(e, t) {
                    a(this, "_capacity", void 0), a(this, "_tokenCount", void 0), a(this, "_queue", void 0), a(this, "_intervalPeriod", void 0), a(this, "_intervalID", void 0), this._capacity = e, this._tokenCount = e, this._queue = [], this._intervalPeriod = t / e, this._intervalID = null
                }
            }
        },
        740111: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AnnouncementModalVariant1Properties: function() {
                    return c
                },
                ButtonAction: function() {
                    return a
                }
            }), n("47120"), n("411104"), n("653041");
            var a, s, l = n("578012");
            (s = a || (a = {}))[s.UNSPECIFIED = 0] = "UNSPECIFIED", s[s.OPEN_MARKETING_PAGE = 1] = "OPEN_MARKETING_PAGE", s[s.OPEN_TIER_2_PAYMENT_MODAL = 2] = "OPEN_TIER_2_PAYMENT_MODAL";
            class i extends l.MessageType {
                create(e) {
                    let t = {
                        header: "",
                        pill: "",
                        body: "",
                        imageLink: "",
                        imageLinkLightTheme: ""
                    };
                    return globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
                        enumerable: !1,
                        value: this
                    }), void 0 !== e && (0, l.reflectionMergePartial)(this, t, e), t
                }
                internalBinaryRead(e, t, n, a) {
                    let s = null != a ? a : this.create(),
                        i = e.pos + t;
                    for (; e.pos < i;) {
                        let [t, a] = e.tag();
                        switch (t) {
                            case 1:
                                s.header = e.string();
                                break;
                            case 2:
                                s.pill = e.string();
                                break;
                            case 3:
                                s.body = e.string();
                                break;
                            case 4:
                                s.imageLink = e.string();
                                break;
                            case 5:
                                s.imageLinkLightTheme = e.string();
                                break;
                            default:
                                let i = n.readUnknownField;
                                if ("throw" === i) throw new globalThis.Error("Unknown field ".concat(t, " (wire type ").concat(a, ") for ").concat(this.typeName));
                                let r = e.skip(a);
                                !1 !== i && (!0 === i ? l.UnknownFieldHandler.onRead : i)(this.typeName, s, t, a, r)
                        }
                    }
                    return s
                }
                internalBinaryWrite(e, t, n) {
                    "" !== e.header && t.tag(1, l.WireType.LengthDelimited).string(e.header), "" !== e.pill && t.tag(2, l.WireType.LengthDelimited).string(e.pill), "" !== e.body && t.tag(3, l.WireType.LengthDelimited).string(e.body), "" !== e.imageLink && t.tag(4, l.WireType.LengthDelimited).string(e.imageLink), "" !== e.imageLinkLightTheme && t.tag(5, l.WireType.LengthDelimited).string(e.imageLinkLightTheme);
                    let a = n.writeUnknownFields;
                    return !1 !== a && (!0 == a ? l.UnknownFieldHandler.onWrite : a)(this.typeName, e, t), t
                }
                constructor() {
                    super("discord_protos.premium_marketing.v1.FeatureCard", [{
                        no: 1,
                        name: "header",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 2,
                        name: "pill",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 3,
                        name: "body",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 4,
                        name: "image_link",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 5,
                        name: "image_link_light_theme",
                        kind: "scalar",
                        T: 9
                    }])
                }
            }
            let r = new i;
            class o extends l.MessageType {
                create(e) {
                    let t = {
                        copy: "",
                        buttonAction: 0
                    };
                    return globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
                        enumerable: !1,
                        value: this
                    }), void 0 !== e && (0, l.reflectionMergePartial)(this, t, e), t
                }
                internalBinaryRead(e, t, n, a) {
                    let s = null != a ? a : this.create(),
                        i = e.pos + t;
                    for (; e.pos < i;) {
                        let [t, a] = e.tag();
                        switch (t) {
                            case 1:
                                s.copy = e.string();
                                break;
                            case 2:
                                s.buttonAction = e.int32();
                                break;
                            default:
                                let i = n.readUnknownField;
                                if ("throw" === i) throw new globalThis.Error("Unknown field ".concat(t, " (wire type ").concat(a, ") for ").concat(this.typeName));
                                let r = e.skip(a);
                                !1 !== i && (!0 === i ? l.UnknownFieldHandler.onRead : i)(this.typeName, s, t, a, r)
                        }
                    }
                    return s
                }
                internalBinaryWrite(e, t, n) {
                    "" !== e.copy && t.tag(1, l.WireType.LengthDelimited).string(e.copy), 0 !== e.buttonAction && t.tag(2, l.WireType.Varint).int32(e.buttonAction);
                    let a = n.writeUnknownFields;
                    return !1 !== a && (!0 == a ? l.UnknownFieldHandler.onWrite : a)(this.typeName, e, t), t
                }
                constructor() {
                    super("discord_protos.premium_marketing.v1.SubscriptionButton", [{
                        no: 1,
                        name: "copy",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 2,
                        name: "button_action",
                        kind: "enum",
                        T: () => ["discord_protos.premium_marketing.v1.ButtonAction", a, "BUTTON_ACTION_"]
                    }])
                }
            }
            let u = new o;
            class d extends l.MessageType {
                create(e) {
                    let t = {
                        header: "",
                        subheader: "",
                        videoLink: "",
                        helpArticleId: "",
                        featureCards: [],
                        dismissKey: "",
                        heroArtVideoLinkLightTheme: "",
                        heroArtImageLinkDarkTheme: "",
                        heroArtImageLinkLightTheme: "",
                        modalTopPill: ""
                    };
                    return globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
                        enumerable: !1,
                        value: this
                    }), void 0 !== e && (0, l.reflectionMergePartial)(this, t, e), t
                }
                internalBinaryRead(e, t, n, a) {
                    let s = null != a ? a : this.create(),
                        i = e.pos + t;
                    for (; e.pos < i;) {
                        let [t, a] = e.tag();
                        switch (t) {
                            case 1:
                                s.header = e.string();
                                break;
                            case 2:
                                s.subheader = e.string();
                                break;
                            case 3:
                                s.videoLink = e.string();
                                break;
                            case 4:
                                s.helpArticleId = e.string();
                                break;
                            case 5:
                                s.featureCards.push(r.internalBinaryRead(e, e.uint32(), n));
                                break;
                            case 6:
                                s.button = u.internalBinaryRead(e, e.uint32(), n, s.button);
                                break;
                            case 7:
                                s.dismissKey = e.string();
                                break;
                            case 8:
                                s.heroArtVideoLinkLightTheme = e.string();
                                break;
                            case 9:
                                s.heroArtImageLinkDarkTheme = e.string();
                                break;
                            case 10:
                                s.heroArtImageLinkLightTheme = e.string();
                                break;
                            case 11:
                                s.modalTopPill = e.string();
                                break;
                            default:
                                let i = n.readUnknownField;
                                if ("throw" === i) throw new globalThis.Error("Unknown field ".concat(t, " (wire type ").concat(a, ") for ").concat(this.typeName));
                                let o = e.skip(a);
                                !1 !== i && (!0 === i ? l.UnknownFieldHandler.onRead : i)(this.typeName, s, t, a, o)
                        }
                    }
                    return s
                }
                internalBinaryWrite(e, t, n) {
                    "" !== e.header && t.tag(1, l.WireType.LengthDelimited).string(e.header), "" !== e.subheader && t.tag(2, l.WireType.LengthDelimited).string(e.subheader), "" !== e.videoLink && t.tag(3, l.WireType.LengthDelimited).string(e.videoLink), "" !== e.helpArticleId && t.tag(4, l.WireType.LengthDelimited).string(e.helpArticleId);
                    for (let a = 0; a < e.featureCards.length; a++) r.internalBinaryWrite(e.featureCards[a], t.tag(5, l.WireType.LengthDelimited).fork(), n).join();
                    e.button && u.internalBinaryWrite(e.button, t.tag(6, l.WireType.LengthDelimited).fork(), n).join(), "" !== e.dismissKey && t.tag(7, l.WireType.LengthDelimited).string(e.dismissKey), "" !== e.heroArtVideoLinkLightTheme && t.tag(8, l.WireType.LengthDelimited).string(e.heroArtVideoLinkLightTheme), "" !== e.heroArtImageLinkDarkTheme && t.tag(9, l.WireType.LengthDelimited).string(e.heroArtImageLinkDarkTheme), "" !== e.heroArtImageLinkLightTheme && t.tag(10, l.WireType.LengthDelimited).string(e.heroArtImageLinkLightTheme), "" !== e.modalTopPill && t.tag(11, l.WireType.LengthDelimited).string(e.modalTopPill);
                    let a = n.writeUnknownFields;
                    return !1 !== a && (!0 == a ? l.UnknownFieldHandler.onWrite : a)(this.typeName, e, t), t
                }
                constructor() {
                    super("discord_protos.premium_marketing.v1.AnnouncementModalVariant1Properties", [{
                        no: 1,
                        name: "header",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 2,
                        name: "subheader",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 3,
                        name: "video_link",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 4,
                        name: "help_article_id",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 5,
                        name: "feature_cards",
                        kind: "message",
                        repeat: 1,
                        T: () => r
                    }, {
                        no: 6,
                        name: "button",
                        kind: "message",
                        T: () => u
                    }, {
                        no: 7,
                        name: "dismiss_key",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 8,
                        name: "hero_art_video_link_light_theme",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 9,
                        name: "hero_art_image_link_dark_theme",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 10,
                        name: "hero_art_image_link_light_theme",
                        kind: "scalar",
                        T: 9
                    }, {
                        no: 11,
                        name: "modal_top_pill",
                        kind: "scalar",
                        T: 9
                    }])
                }
            }
            let c = new d
        },
        8853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PremiumMarketingComponentProperties: function() {
                    return i
                }
            }), n("47120"), n("411104");
            var a = n("578012"),
                s = n("740111");
            class l extends a.MessageType {
                create(e) {
                    let t = {
                        properties: {
                            oneofKind: void 0
                        }
                    };
                    return globalThis.Object.defineProperty(t, a.MESSAGE_TYPE, {
                        enumerable: !1,
                        value: this
                    }), void 0 !== e && (0, a.reflectionMergePartial)(this, t, e), t
                }
                internalBinaryRead(e, t, n, l) {
                    let i = null != l ? l : this.create(),
                        r = e.pos + t;
                    for (; e.pos < r;) {
                        let [t, l] = e.tag();
                        switch (t) {
                            case 1:
                                i.properties = {
                                    oneofKind: "placeholder",
                                    placeholder: e.string()
                                };
                                break;
                            case 2:
                                i.properties = {
                                    oneofKind: "announcementModalVariant1",
                                    announcementModalVariant1: s.AnnouncementModalVariant1Properties.internalBinaryRead(e, e.uint32(), n, i.properties.announcementModalVariant1)
                                };
                                break;
                            default:
                                let r = n.readUnknownField;
                                if ("throw" === r) throw new globalThis.Error("Unknown field ".concat(t, " (wire type ").concat(l, ") for ").concat(this.typeName));
                                let o = e.skip(l);
                                !1 !== r && (!0 === r ? a.UnknownFieldHandler.onRead : r)(this.typeName, i, t, l, o)
                        }
                    }
                    return i
                }
                internalBinaryWrite(e, t, n) {
                    "placeholder" === e.properties.oneofKind && t.tag(1, a.WireType.LengthDelimited).string(e.properties.placeholder), "announcementModalVariant1" === e.properties.oneofKind && s.AnnouncementModalVariant1Properties.internalBinaryWrite(e.properties.announcementModalVariant1, t.tag(2, a.WireType.LengthDelimited).fork(), n).join();
                    let l = n.writeUnknownFields;
                    return !1 !== l && (!0 == l ? a.UnknownFieldHandler.onWrite : l)(this.typeName, e, t), t
                }
                constructor() {
                    super("discord_protos.premium_marketing.v1.PremiumMarketingComponentProperties", [{
                        no: 1,
                        name: "placeholder",
                        kind: "scalar",
                        oneof: "properties",
                        T: 9
                    }, {
                        no: 2,
                        name: "announcement_modal_variant_1",
                        kind: "message",
                        oneof: "properties",
                        T: () => s.AnnouncementModalVariant1Properties
                    }])
                }
            }
            let i = new l
        },
        137006: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommandSchemas: function() {
                    return l
                }
            }), n("47120");
            var a = n("243814"),
                s = n("103964");
            let l = {
                    [s.RPCCommand.INITIATE_IMAGE_UPLOAD]: {
                        request: void 0,
                        response: e => e.object({
                            image_url: e.string().required()
                        })
                    },
                    [s.RPCCommand.OPEN_SHARE_MOMENT_DIALOG]: {
                        response: void 0,
                        request: e => (0, s.joiReqObj)(e.object({
                            mediaUrl: e.string().required().max(1024)
                        }))
                    },
                    [s.RPCCommand.AUTHENTICATE]: {
                        request: e => (0, s.joiReqObj)(e.object({
                            access_token: e.string().allow(null).optional()
                        })),
                        response: e => e.object({
                            access_token: e.string().required(),
                            user: e.object({
                                username: e.string().required(),
                                discriminator: e.string().required(),
                                id: e.string().required(),
                                avatar: e.string().allow(null),
                                public_flags: e.number().required(),
                                global_name: e.string().allow(null)
                            }).required(),
                            scopes: e.array().items(e.string().valid(...(0, s.joiEnum)(a.OAuth2Scopes))).required(),
                            expires: e.string().required(),
                            application: e.object({
                                description: e.string().required(),
                                icon: e.string().allow(null),
                                id: e.string().required(),
                                rpc_origins: e.array().items(e.string()).optional(),
                                name: e.string().required()
                            }).required()
                        })
                    },
                    [s.RPCCommand.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: {
                        request: void 0,
                        response: e => e.object({
                            participants: e.array().items(i(e).keys({
                                nickname: e.string().description("Server nickname. Not unique.")
                            }).required()).required()
                        }).required()
                    }
                },
                i = e => e.object({
                    id: e.string().required().description("User ID"),
                    username: e.string().required(),
                    global_name: e.string().allow(null).description("Global Discord name. Not unique."),
                    discriminator: e.string().required().description("Global name discriminator. Will be 0 if a unique username"),
                    avatar: e.string().allow(null).description("User Avatar ID"),
                    flags: e.number().required().description("Public user flags"),
                    bot: e.bool().required().description("If a bot user."),
                    avatar_decoration_data: e.object({
                        asset: e.string().required(),
                        skuId: e.string()
                    }).allow(null).description("Details about avatar decoration"),
                    premium_type: e.number().allow(null).description("Nitro premium type")
                }).description("Discord User")
        },
        103964: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommand: function() {
                    return a.RPCCommands
                },
                joiEnum: function() {
                    return l
                },
                joiReqObj: function() {
                    return s
                }
            });
            var a = n("231338");

            function s(e) {
                return e.required().unknown(!0)
            }

            function l(e) {
                return Object.values(e)
            }
        },
        45792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createRPCCommand: function() {
                    return s
                }
            });
            var a = n("137006");

            function s(e, t) {
                var n;
                let {
                    scope: s,
                    handler: l
                } = t, i = {
                    scope: s,
                    handler: l
                }, r = null === (n = a.RPCCommandSchemas[e]) || void 0 === n ? void 0 : n.request, o = null;
                return null != r && (i.validation = function(e) {
                    return null == o && (o = r(e)), o
                }), i
            }
        },
        948789: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                isActiveCreator: function() {
                    return u
                },
                transitionTo: function() {
                    return o
                }
            }), n("653041"), n("757143");
            var s = n("438361"),
                l = n.n(s),
                i = n("33382"),
                r = n.n(i);

            function o(e) {
                a.push(e)
            }

            function u(e) {
                return t => {
                    if (null != e) return null != r()(t, {
                        end: !1
                    }).exec(e.history.location.pathname)
                }
            }
            a = l()()
        }
    }
]);
//# sourceMappingURL=5306a6f22925ecbceec7.js.map