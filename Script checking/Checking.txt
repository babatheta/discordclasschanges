// File name: 03b21d6c8d2e35a5f44f.js

(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["49131"], {
        286543: function(e) {
            e.exports = function(e, t, a) {
                if ("function" != typeof e) throw TypeError("Expected a function");
                return setTimeout(function() {
                    e.apply(void 0, a)
                }, t)
            }
        },
        196434: function(e, t, a) {
            var s = a("286543"),
                n = a("956656")(function(e, t) {
                    return s(e, 1, t)
                });
            e.exports = n
        },
        504764: function(e, t, a) {
            "use strict";
            e.exports = a.p + "da4a237cced3fc35e9fb.svg"
        },
        906739: function(e, t, a) {
            "use strict";
            e.exports = a.p + "81e4b2ab6c2cb1f07525.png"
        },
        965358: function(e, t, a) {
            "use strict";
            e.exports = a.p + "78b0c66ad4747e4b69e9.png"
        },
        420196: function(e, t, a) {
            "use strict";
            e.exports = a.p + "ca588354058509c5321d.png"
        },
        433075: function(e, t, a) {
            "use strict";
            e.exports = a.p + "083af745e13a55bb8286.png"
        },
        67158: function(e, t, a) {
            "use strict";
            a.r(t), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("143927"),
                o = a("28546"),
                u = a("401227"),
                d = a("957825"),
                c = a("838329");
            t.default = n.memo(n.forwardRef(function(e, t) {
                let {
                    disabled: a,
                    type: l,
                    className: m,
                    onClick: h
                } = e, [f, g] = (0, o.useExpressionPickerStore)(e => [e.activeView, e.activeViewType], i.default), x = n.useCallback(() => {
                    (0, o.toggleMultiExpressionPicker)(l), null == h || h()
                }, [l, h]);
                return a ? null : (0, s.jsx)("div", {
                    className: r()(d.CHAT_INPUT_BUTTON_CLASSNAME, c.buttonContainer),
                    ref: t,
                    children: (0, s.jsx)(u.default, {
                        className: r()(c.emojiButton, m),
                        onClick: x,
                        active: (f === d.ExpressionPickerViewType.GIF || f === d.ExpressionPickerViewType.EMOJI || f === d.ExpressionPickerViewType.STICKER) && g === l,
                        tabIndex: 0,
                        focusProps: {
                            offset: {
                                top: 4,
                                bottom: 4,
                                left: -4,
                                right: -4
                            }
                        }
                    })
                })
            }))
        },
        681154: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                makeAutomodViolationError: function() {
                    return c
                },
                makeEmptyMessageError: function() {
                    return d
                },
                makeEmptyTitleError: function() {
                    return u
                },
                renderError: function() {
                    return m
                }
            });
            var s, n, l = a("539573"),
                r = a("689938");

            function i(e, t) {
                return {
                    type: e,
                    message: null != t ? t : null
                }
            }

            function o(e) {
                return i(0, e)
            }

            function u() {
                return i(0, r.default.Messages.FORUM_POST_EMPTY_TITLE_ERROR)
            }

            function d() {
                return i(0, r.default.Messages.FORUM_POST_EMPTY_MESSAGE_ERROR)
            }

            function c(e, t) {
                return i(1, (0, l.getAutomodErrorMessageFromErrorResponse)(e, null == t ? void 0 : t.id))
            }

            function m(e, t) {
                var a;
                return null == e || 0 === e.type && null != t.content && t.content.trim().length > 0 || 2 === e.type && null != t.tags && t.tags.length > 0 ? null : null !== (a = e.message) && void 0 !== a ? a : null
            }(s = n || (n = {}))[s.EmptyContent = 0] = "EmptyContent", s[s.AutomodViolation = 1] = "AutomodViolation", s[s.EmptyTags = 2] = "EmptyTags"
        },
        993259: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                getAllExistingRolesWithPermission: function() {
                    return o
                },
                getAllRolesRows: function() {
                    return i
                }
            });
            var s = a("149765"),
                n = a("605436"),
                l = a("700785");
            let r = (e, t, a) => {
                if (null == e.id) return !1;
                let n = l.computePermissionsForRoles({
                    forceRoles: {
                        [e.id]: e
                    },
                    context: a
                });
                return s.has(n, t)
            };

            function i(e, t) {
                return Object.values(t).sort(n.sortRoles).map(e => (0, n.getRoleRowData)(e))
            }

            function o(e, t, a, s) {
                return Object.values(t).filter(e => (0, n.isAdmin)(e) || r(e, s, a))
            }
        },
        90372: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("470079"),
                n = a("451478"),
                l = a("830917"),
                r = a("985518");
            t.default = {
                useForumChannelSeenManager: function(e) {
                    let {
                        guildId: t,
                        channelId: a
                    } = e, i = s.useRef(null), o = (0, l.getMainWindowId)(), u = !n.default.isFocused(o);
                    return s.useLayoutEffect(() => (null == i.current && (i.current = new r.default({
                        guildId: t,
                        channelId: a,
                        isPaused: u,
                        windowId: o
                    }), i.current.initialize()), () => {
                        var e;
                        null === (e = i.current) || void 0 === e || e.terminate(), i.current = null
                    }), [a, t, u, o]), i.current
                }
            }
        },
        103921: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                useIsForumPostPreviewEnabled: function() {
                    return n
                }
            });
            let s = (0, a("818083").createExperiment)({
                kind: "user",
                id: "2023-10_forum_post_preview",
                label: "Enable preview of Forum post content before creation",
                defaultConfig: {
                    isEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        isEnabled: !0
                    }
                }]
            });

            function n() {
                let {
                    isEnabled: e
                } = s.useExperiment({
                    location: "forum_post_1"
                }, {
                    autoTrackExposure: !0
                });
                return e
            }
        },
        259637: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return g
                }
            });
            var s = a("735250");
            a("470079");
            var n = a("658722"),
                l = a.n(n),
                r = a("442837"),
                i = a("481060"),
                o = a("596454"),
                u = a("339085"),
                d = a("548420"),
                c = a("456269"),
                m = a("689938"),
                h = a("451379");
            let f = e => {
                let {
                    tag: t
                } = e, {
                    id: a,
                    name: n,
                    emojiId: l,
                    emojiName: c
                } = t, m = (0, r.useStateFromStores)([u.default], () => null != l ? u.default.getUsableCustomEmojiById(l) : null), f = null != l || null != c;
                return (0, s.jsx)(i.ComboboxItem, {
                    value: a,
                    children: (0, s.jsx)(i.ComboboxItem.Label, {
                        children: (0, s.jsxs)("div", {
                            className: h.row,
                            children: [f ? (0, s.jsx)(o.default, {
                                className: h.__invalid_emoji,
                                emojiId: l,
                                emojiName: c,
                                animated: !!(null == m ? void 0 : m.animated)
                            }) : (0, s.jsx)(d.default, {
                                className: h.__invalid_emoji
                            }), (0, s.jsx)(i.Text, {
                                variant: "text-md/semibold",
                                color: "header-secondary",
                                children: n
                            })]
                        })
                    })
                }, a)
            };

            function g(e) {
                let {
                    parentChannel: t,
                    appliedTags: a,
                    maxTagsApplied: n,
                    onSelectTag: r,
                    onClose: o
                } = e, u = (0, c.useVisibleForumTags)(t), d = (e, t) => t.filter(t => l()(e.toLowerCase(), t.name.toLowerCase()));
                return (0, s.jsx)(i.ComboboxPopout, {
                    showScrollbar: !0,
                    value: a,
                    onChange: e => {
                        (!n || a.has(e)) && (r(e), o())
                    },
                    placeholder: m.default.Messages.FORUM_TAG_POST_SEARCH_PLACEHOLDER,
                    "aria-label": m.default.Messages.FORUM_TAG_POST_SEARCH_PLACEHOLDER,
                    children: e => d(e, u).map(e => (0, s.jsx)(f, {
                        tag: e
                    }, e.id))
                })
            }
        },
        434878: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return eh
                }
            }), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("196434"),
                o = a.n(i),
                u = a("143927"),
                d = a("924826"),
                c = a("536895"),
                m = a("313361"),
                h = a("442837"),
                f = a("704215"),
                g = a("481060"),
                x = a("561472"),
                C = a("393238"),
                _ = a("607070"),
                T = a("933557"),
                p = a("243778"),
                S = a("71619"),
                E = a("898188"),
                N = a("256413"),
                M = a("292853"),
                A = a("359110"),
                v = a("344185"),
                I = a("235449"),
                j = a("665906"),
                O = a("488131"),
                R = a("433355"),
                b = a("592125"),
                F = a("703558"),
                L = a("607744"),
                P = a("117530"),
                y = a("451478"),
                D = a("86813"),
                U = a("826026"),
                w = a("135163"),
                k = a("759231"),
                H = a("459273"),
                B = a("961675"),
                G = a("883429"),
                V = a("238349"),
                z = a("109434"),
                W = a("456269"),
                K = a("90372"),
                Y = a("985518"),
                X = a("228392"),
                q = a("355589"),
                Z = a("542581"),
                Q = a("639184"),
                J = a("404616"),
                $ = a("470623"),
                ee = a("749913"),
                et = a("219664"),
                ea = a("895932"),
                es = a("479099"),
                en = a("510060"),
                el = a("276357"),
                er = a("81490"),
                ei = a("482062"),
                eo = a("260503"),
                eu = a("981631"),
                ed = a("124368"),
                ec = a("689938"),
                em = a("993772");

            function eh(e) {
                let {
                    channel: t,
                    guild: a,
                    sidebarState: n
                } = e;
                return (0, s.jsx)($.ForumPostComposerStoreProvider, {
                    createStore: () => (0, $.createForumPostComposerStore)(t),
                    children: (0, s.jsx)(eS, {
                        channel: t,
                        guild: a,
                        sidebarState: n
                    })
                }, t.id)
            }
            let ef = new en.GridLayout({
                minWidth: 320,
                maxWidth: 450,
                gap: 16
            });

            function eg(e) {
                return "forum-grid-header-section-".concat(e)
            }
            let ex = (e, t, a) => 0 === e ? 0 : (0, en.getGridPostHeight)(a);

            function eC(e) {
                let {
                    itemRole: t,
                    coords: a,
                    section: n
                } = e;
                return (0, s.jsx)("div", {
                    className: r()(em.card, em.archivedDividerRow, em.columnsSpan),
                    style: a,
                    "data-item-role": t,
                    children: (0, s.jsx)("div", {
                        className: em.emptyMainCard,
                        children: (0, s.jsx)(g.Heading, {
                            variant: "eyebrow",
                            className: em.archivedDivider,
                            id: eg(n),
                            children: ec.default.Messages.FORUM_SECTION_ARCHIVED
                        })
                    })
                }, "section-divider")
            }

            function e_(e) {
                let {
                    section: t,
                    coords: a,
                    key: n,
                    isShowingSearchResult: l,
                    hasActiveThreads: r
                } = e;
                return () => 2 === t && !l && r ? (0, s.jsx)(eC, {
                    section: t,
                    coords: null == a ? void 0 : {
                        ...a,
                        position: "absolute"
                    },
                    itemRole: "section"
                }, n) : null
            }

            function eT(e, t) {
                return "card-".concat(e, "-").concat(t)
            }

            function ep(e) {
                if ("string" == typeof e) {
                    let t = e.match(/card-{\d+}-({\d+})$/);
                    return null == t ? null : t[1]
                }
                return null
            }

            function eS(e) {
                let {
                    channel: t,
                    sidebarState: a
                } = e, {
                    editorHeight: l,
                    editorAdditionRowHeight: i,
                    listViewCardHeights: o,
                    formOpen: c
                } = (0, $.useForumPostComposerStore)(e => {
                    let {
                        editorHeight: t,
                        editorAdditionRowHeight: a,
                        listViewCardHeights: s,
                        formOpen: n,
                        cardHeightVersion: l
                    } = e;
                    return {
                        editorHeight: t,
                        editorAdditionRowHeight: a,
                        listViewCardHeights: s,
                        formOpen: n,
                        cardHeightVersion: l
                    }
                }, u.default), {
                    activeThreadIds: f,
                    archivedThreadIds: C,
                    searchResults: T,
                    canLoadMore: p,
                    loadMore: S,
                    activeThreadsLoading: E,
                    archivedThreadsLoading: j,
                    loading: L,
                    isSearchLoading: P,
                    layoutType: y
                } = function(e) {
                    let {
                        sortOrder: t,
                        tagFilter: a,
                        layoutType: s
                    } = (0, z.useForumChannelStore)(e.id), n = (0, W.useForumActiveThreadIds)({
                        channel: e,
                        sortOrder: t,
                        tagFilter: a,
                        shouldAutomaticallyAck: !0
                    }), l = (0, h.useStateFromStores)([v.default], () => !v.default.hasLoaded(e.guild_id)), {
                        threadIds: r,
                        canLoadMore: i,
                        loadMore: o,
                        loading: u
                    } = (0, I.useArchivedThreads)(e, t, a), {
                        searchResults: d,
                        isSearchLoading: c
                    } = (0, W.useForumSearchState)({
                        channelId: e.id
                    });
                    return (0, W.useLoadForumUnreadCounts)(e, t, a), {
                        activeThreadIds: n,
                        archivedThreadIds: r,
                        searchResults: d,
                        canLoadMore: i,
                        loadMore: o,
                        loading: l || u || c,
                        archivedThreadsLoading: u,
                        activeThreadsLoading: l,
                        isSearchLoading: c,
                        layoutType: s
                    }
                }(t), D = f.length > 0, U = D || C.length > 0, w = (0, N.default)(t), {
                    tagFilter: k
                } = (0, z.useForumChannelStore)(t.id);
                (0, W.useAutomaticForumSearch)(t, k, c);
                let H = (0, W.useCanSearchForumPosts)(t),
                    V = (0, W.useCanViewArchivedPosts)(t),
                    Z = n.useRef(null),
                    {
                        observePostVisibilityAnalytics: Q
                    } = function(e) {
                        let {
                            guildId: t,
                            channelId: a,
                            scrollerRef: s
                        } = e;
                        K.default.useForumChannelSeenManager({
                            guildId: t,
                            channelId: a
                        });
                        let l = n.useRef(null),
                            r = n.useCallback((e, t) => {
                                for (let a of t) {
                                    let t = a.target.dataset.itemId;
                                    if (null == t) return;
                                    let s = Date.now();
                                    a.intersectionRatio >= .5 ? (0, Y.markForumPostItemAsSeen)(e, t, s) : (0, Y.markForumPostItemAsUnseen)(e, t, s)
                                }
                            }, []);
                        return n.useEffect(() => {
                            var e;
                            let t = null === (e = s.current) || void 0 === e ? void 0 : e.getScrollerNode();
                            if (null != t) return l.current = new IntersectionObserver(e => r(a, e), {
                                root: t,
                                rootMargin: "0px 100000px 0px 100000px",
                                threshold: .5
                            }), () => {
                                var e;
                                null === (e = l.current) || void 0 === e || e.disconnect(), l.current = null
                            }
                        }, [a, r, s]), {
                            observePostVisibilityAnalytics: n.useCallback((e, t) => {
                                var s;
                                if (null == e) {
                                    (0, Y.markForumPostItemAsUnseen)(a, t, Date.now());
                                    return
                                }
                                null === (s = l.current) || void 0 === s || s.observe(e)
                            }, [a])
                        }
                    }({
                        scrollerRef: Z,
                        channelId: t.id,
                        guildId: t.guild_id
                    }),
                    ee = y === m.ForumLayout.GRID,
                    ea = null != T,
                    es = n.useRef(null),
                    {
                        containerRef: el,
                        containerWidth: eh
                    } = (0, er.default)();
                n.useEffect(() => () => {
                    null != t.id && G.default.clearForumSearch(t.id)
                }, [t.id]);
                let {
                    columns: eC
                } = n.useMemo(() => ee ? ef.getRenderOptions(eh) : en.ForumListLayoutRenderOptions, [ee, eh]), eS = n.useMemo(() => L ? Math.round((window.innerHeight - 200) / 118) : 0, [L]), eA = n.useMemo(() => {
                    let e = Math.ceil(window.innerHeight / (0, en.getGridPostHeight)(ef.getWidth(eh))) * eC;
                    return E ? e : 0
                }, [eh, eC, E]), eI = n.useMemo(() => {
                    let e = Math.ceil(window.innerHeight / (0, en.getGridPostHeight)(ef.getWidth(eh))) * eC;
                    return j ? e : 0
                }, [eh, eC, j]), ej = n.useMemo(() => {
                    let e = Math.ceil(window.innerHeight / (0, en.getGridPostHeight)(ef.getWidth(eh))) * eC;
                    return P && ea ? e : 0
                }, [eh, eC, P, ea]), eO = n.useMemo(() => {
                    if (ee) {
                        if (!H && ea) return [1, 0];
                        if (!V) return [1, f.length + eA, 0];
                        else if (ea) return [1, T.length + ej, 0];
                        else return [1, f.length + eA, C.length + eI]
                    }
                    if (!H && ea) return [1, 1];
                    if (!V) return [1, f.length, 1];
                    else if (ea) return [1, T.length, 0, eS];
                    else return [1, f.length, C.length, eS]
                }, [ee, ea, f.length, C.length, H, V, eS, T, eA, eI, ej]), eR = n.useMemo(() => {
                    if (!H && ea) return [
                        [],
                        []
                    ];
                    if (!V) return [
                        [], f, []
                    ];
                    if (ea) return [
                        [], T, [],
                        []
                    ];
                    else return [
                        [], f, C, []
                    ]
                }, [ea, H, V, T, f, C]), eb = n.useCallback((e, a) => {
                    (0, X.trackForumPostClicked)({
                        guildId: t.guild_id,
                        channelId: t.id,
                        postId: e.id,
                        location: {
                            page: eu.AnalyticsPages.GUILD_CHANNEL,
                            section: eu.AnalyticsSections.FORUM_CHANNEL_POST
                        }
                    }), a ? (0, A.transitionToThread)(e, ed.OpenThreadAnalyticsLocations.BROWSER) : (es.current = e.id, (0, O.openThreadSidebarForViewing)(e))
                }, [t.guild_id, t.id, es]), [eF, eL] = n.useState(l + i - 24), eP = n.useCallback((e, a, n) => 0 === e ? (0, s.jsx)(ev, {
                    channel: t,
                    isEmpty: !D,
                    isSearchLoading: P,
                    numResults: null == T ? void 0 : T.length,
                    coords: a,
                    onHeightChange: eL,
                    children: !L && (0, s.jsx)(q.default, {
                        channel: t,
                        hasAnyThread: U
                    }, t.id)
                }, "forum-channel-header") : 2 !== e || V ? 1 === e && ea && !H ? (0, s.jsx)(eN, {
                    channel: t,
                    coords: a
                }, "archive-or-search-result") : n() : (0, s.jsx)(eE, {
                    channel: t,
                    coords: a
                }, "archived-missing-reading-history-perm"), [ea, V, T, H, t, D, P, L, U]), ey = (0, h.useStateFromStores)([B.default], () => B.default.hasHidden(t.id));
                n.useEffect(() => {
                    var e, t;
                    let a = ee ? eB : Z,
                        s = null === (e = a.current) || void 0 === e ? void 0 : e.getScrollerState();
                    null != s && !ey && s.scrollTop > l && (null === (t = a.current) || void 0 === t || t.scrollTo({
                        to: 0
                    }))
                }, [ey]);
                let {
                    updateListScrollerRef: eD,
                    renderListSection: eU,
                    renderListItem: ew,
                    getListSectionHeight: ek,
                    getListItemHeight: eH
                } = function(e) {
                    let {
                        listRef: t,
                        hasActiveThreads: a,
                        threadIdsBySection: l,
                        listViewCardHeights: i,
                        editorHeight: o,
                        editorAdditionRowHeight: u,
                        renderSectionOrItem: d,
                        goToThread: c,
                        observePostVisibilityAnalytics: m,
                        isShowingSearchResult: h
                    } = e, f = n.useCallback(e => a => {
                        var s;
                        t.current = a, e.current = null !== (s = null == a ? void 0 : a.getScrollerNode()) && void 0 !== s ? s : null
                    }, [t]), x = n.useCallback(e => e_({
                        section: e.section,
                        isShowingSearchResult: h,
                        hasActiveThreads: a
                    })(), [a, h]), C = n.useCallback(e => d(e.section, void 0, () => {
                        if (3 === e.section) return __OVERLAY__ ? null : (0, s.jsx)("div", {
                            "data-item-role": "item",
                            className: r()(em.loadingCard, em["loadingCard-".concat(e.row % 3)])
                        }, "loading-".concat(e.row));
                        let t = l[e.section][e.row];
                        return (0, s.jsx)("li", {
                            className: em.card,
                            "data-item-role": "item",
                            children: (0, s.jsx)(g.HeadingLevel, {
                                children: (0, s.jsx)(J.default, {
                                    className: em.mainCard,
                                    threadId: t,
                                    goToThread: c,
                                    observePostVisibilityAnalytics: m
                                })
                            })
                        }, "".concat(e.section, "-").concat(t))
                    }), [d, l, c, m]), _ = n.useCallback((e, t) => {
                        if (0 === e) return o + u;
                        let a = i[l[e][t]];
                        return null == a ? 104 : a + 8
                    }, [l, i, o, u]);
                    return {
                        updateListScrollerRef: f,
                        renderListSection: x,
                        renderListItem: C,
                        getListSectionHeight: n.useCallback(e => 2 === e && a ? 40 : 0, [a]),
                        getListItemHeight: _
                    }
                }({
                    listRef: Z,
                    hasActiveThreads: D,
                    threadIdsBySection: eR,
                    listViewCardHeights: o,
                    editorHeight: l,
                    editorAdditionRowHeight: i,
                    renderSectionOrItem: eP,
                    goToThread: eb,
                    observePostVisibilityAnalytics: Q,
                    isShowingSearchResult: ea
                }), eB = n.useRef(null), {
                    updateMasonryListScrollerRef: eG,
                    getItemKey: eV,
                    renderGridSection: ez,
                    renderGridItem: eW,
                    getGridSectionHeight: eK,
                    getSectionProps: eY,
                    handleGridFocus: eX
                } = function(e) {
                    let {
                        masonryListScrollerRef: t,
                        threadIdsBySection: a,
                        goToThread: l,
                        renderSectionOrItem: i,
                        hasActiveThreads: o,
                        isShowingSearchResult: u,
                        canSearchForumPosts: d,
                        canViewArchivedPosts: c,
                        observePostVisibilityAnalytics: m,
                        focusedThreadId: h,
                        headerHeight: f
                    } = e, g = n.useRef(null), x = n.useCallback(e => {
                        t.current = e, g.current = null == e ? void 0 : e.getScrollerNode()
                    }, [t]), C = n.useCallback((e, a) => {
                        let {
                            current: s
                        } = t;
                        if (null == s) return;
                        let n = document.querySelector(e);
                        if (null == n) return;
                        let l = s.getCoordsMap()[a],
                            r = null != l ? l.height + 20 : 200;
                        s.scrollIntoViewNode({
                            node: n,
                            padding: r,
                            callback() {
                                requestAnimationFrame(() => {
                                    var t;
                                    null === (t = document.querySelector(e)) || void 0 === t || t.focus({
                                        preventScroll: !0
                                    })
                                })
                            }
                        }), h.current = ep(a)
                    }, [t, h]), _ = n.useCallback(e => {
                        let t = ep(e);
                        if (null == t) return;
                        let a = b.default.getChannel(t);
                        null != a && l(a, !0)
                    }, [l]), T = n.useCallback(function(e) {
                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        if (0 === a[e].length) return "section-".concat(e, "-").concat(t);
                        {
                            let s = a[e][t];
                            return null == s ? eT(e, t) : eT(e, s)
                        }
                    }, [a]), p = n.useCallback((e, t, a) => i(e, t, e_({
                        section: e,
                        coords: t,
                        key: a,
                        isShowingSearchResult: u,
                        hasActiveThreads: o
                    })), [i, o, u]), S = n.useCallback(e => 0 === e ? {} : {
                        role: "grid",
                        "aria-labelledby": "#".concat(eg(e))
                    }, []), E = n.useCallback((e, t, n, i, o) => {
                        if (0 === e) return null;
                        let u = a[e][t];
                        return null != u ? (0, s.jsx)(et.default, {
                            id: "".concat(i),
                            threadId: u,
                            className: r()(em.card, em.mainCard),
                            goToThread: l,
                            observePostVisibilityAnalytics: m,
                            coords: n,
                            gridCoords: o.coordinates[i],
                            gridSectionBoundaries: o.boundaries
                        }, i) : __OVERLAY__ ? null : (0, s.jsx)("div", {
                            style: {
                                ...n
                            },
                            "data-item-role": "item",
                            className: r()(em.loadingCard, em["loadingCard-".concat(t % 3)])
                        }, i)
                    }, [a, l, m]);
                    return {
                        updateMasonryListScrollerRef: x,
                        masonryListContainerRef: g,
                        focusedThreadId: h,
                        handleGridFocus: C,
                        handleGridSelect: _,
                        getItemKey: T,
                        renderGridSection: p,
                        renderGridItem: E,
                        getSectionProps: S,
                        getGridSectionHeight: n.useCallback(e => 0 === e ? f - 8 - 24 : 2 === e ? o || !c ? 40 : 0 : 1 === e && u && !d ? 40 : 0, [f, u, d, o, c])
                    }
                }({
                    masonryListScrollerRef: eB,
                    threadIdsBySection: eR,
                    goToThread: eb,
                    renderSectionOrItem: eP,
                    hasActiveThreads: D,
                    isShowingSearchResult: ea,
                    canSearchForumPosts: H,
                    canViewArchivedPosts: V,
                    observePostVisibilityAnalytics: Q,
                    focusedThreadId: es,
                    headerHeight: eF
                });
                ! function(e) {
                    let {
                        masonryListScrollerRef: t,
                        containerWidth: a,
                        isGridLayout: s,
                        threadIdsBySection: l,
                        focusedThreadId: r,
                        parentId: i
                    } = e;
                    n.useEffect(() => {
                        if (s) {
                            let e = setTimeout(() => {
                                if (null == t.current || null == r.current) return;
                                let e = r.current;
                                if ("string" != typeof e) return;
                                if (null == R.default.getSidebarState(i)) {
                                    r.current = null;
                                    return
                                }
                                let a = l.findIndex(t => t.find(t => t === e)),
                                    s = t.current.getCoordsMap(),
                                    n = s["__section__".concat(a)],
                                    o = s[eT(a, e)];
                                null != n && null != o && t.current.scrollIntoViewRect({
                                    start: n.top + o.top - 100,
                                    end: n.top + o.top + o.height + 50
                                })
                            }, 500);
                            return () => clearTimeout(e)
                        }
                    }, [i, a, s, l, r, t])
                }({
                    masonryListScrollerRef: eB,
                    containerWidth: eh,
                    isGridLayout: ee,
                    threadIdsBySection: eR,
                    parentId: t.id,
                    focusedThreadId: es
                });
                let eq = n.useCallback(() => {
                        var e, a;
                        if (ea) return;
                        let s = ee ? null === (e = eB.current) || void 0 === e ? void 0 : e.getScrollerState() : null === (a = Z.current) || void 0 === a ? void 0 : a.getScrollerState();
                        if (null == s) return;
                        (0, X.trackForumScrolled)({
                            guildId: t.guild_id,
                            channelId: t.id
                        });
                        let n = s.scrollTop + s.offsetHeight,
                            l = s.scrollHeight - n;
                        l < (ee ? Math.max(200, (0, en.getGridPostHeight)(eh)) : 200) && S()
                    }, [ea, ee, t.guild_id, t.id, eh, S]),
                    eZ = (0, h.useStateFromStores)([_.default], () => _.default.keyboardModeEnabled),
                    eQ = (0, ei.default)({
                        id: "forum-grid-view",
                        isEnabled: ee && eZ,
                        setFocus: eX
                    }),
                    eJ = (0, eo.default)({
                        listRef: Z,
                        padding: 96,
                        isEnabled: !ee && eZ,
                        channel: t
                    }),
                    {
                        ref: e$,
                        ...e0
                    } = eQ.containerProps,
                    e1 = R.default.getSidebarState(t.id),
                    e4 = null != e1 && (0, R.isViewChannelSidebar)(e1);
                return (0, s.jsx)("div", {
                    className: em.container,
                    ref: el,
                    children: (0, s.jsx)(g.FocusJumpSection, {
                        children: e => (0, s.jsxs)(s.Fragment, {
                            children: [c && (0, s.jsx)(x.default, {
                                channel: t,
                                draftType: F.DraftType.FirstThreadMessage,
                                className: em.uploadArea,
                                style: {
                                    right: e4 && (null == a ? void 0 : a.isThreadSidebarFloating) ? a.threadSidebarWidth : 0
                                }
                            }), (0, s.jsx)(eM, {
                                channel: t
                            }), (0, s.jsx)(g.HiddenVisually, {
                                children: (0, s.jsx)(g.H, {
                                    children: ec.default.Messages.THREADS
                                })
                            }), w ? (0, s.jsx)("div", {
                                className: em.optInNotice,
                                children: (0, s.jsx)(M.default, {
                                    channel: t
                                })
                            }) : null, ee ? (0, s.jsx)(ei.GridNavigatorProvider, {
                                navigator: eQ,
                                children: (0, s.jsx)(g.MasonryList, {
                                    ref: e => {
                                        var t;
                                        e$.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null, eG(e)
                                    },
                                    itemGutter: 16,
                                    padding: 24,
                                    className: em.grid,
                                    columns: eC,
                                    sections: eO,
                                    getItemKey: eV,
                                    getSectionHeight: eK,
                                    getItemHeight: ex,
                                    renderSection: ez,
                                    renderItem: eW,
                                    getSectionProps: eY,
                                    onScroll: p ? eq : void 0,
                                    chunkSize: 350,
                                    ...e0,
                                    ...e
                                }, y)
                            }) : (0, s.jsx)(d.ListNavigatorProvider, {
                                navigator: eJ,
                                children: (0, s.jsx)(d.ListNavigatorContainer, {
                                    children: t => {
                                        let {
                                            ref: a,
                                            ...n
                                        } = t;
                                        return (0, s.jsx)(g.ListAuto, {
                                            ref: eD(a),
                                            className: em.list,
                                            sections: eO,
                                            sectionHeight: ek,
                                            rowHeight: eH,
                                            renderRow: ew,
                                            renderSection: eU,
                                            chunkSize: 150,
                                            onScroll: p ? eq : void 0,
                                            paddingBottom: 24,
                                            ...n,
                                            ...e,
                                            innerRole: "list"
                                        }, y)
                                    }
                                })
                            })]
                        })
                    })
                })
            }

            function eE(e) {
                let {
                    channel: t,
                    coords: a
                } = e, n = (0, T.default)(t);
                return (0, s.jsx)("div", {
                    className: r()(em.missingReadHistoryPermission, em.columnsSpan),
                    style: a,
                    children: (0, s.jsx)(g.Text, {
                        color: "text-muted",
                        variant: "text-md/normal",
                        children: ec.default.Messages.FORUM_CHANNEL_NO_POST_HISTORY.format({
                            channelName: n
                        })
                    })
                })
            }

            function eN(e) {
                let {
                    channel: t,
                    coords: a
                } = e, n = (0, T.default)(t);
                return (0, s.jsx)("div", {
                    className: r()(em.missingReadHistoryPermission, em.columnsSpan),
                    style: a,
                    children: (0, s.jsx)(g.Text, {
                        color: "text-muted",
                        variant: "text-md/normal",
                        children: ec.default.Messages.FORUM_CHANNEL_NO_SEARCH_POST_HISTORY.format({
                            channelName: n
                        })
                    })
                })
            }

            function eM(e) {
                let {
                    channel: t
                } = e, a = n.useCallback(() => {
                    G.default.resort(t.id)
                }, [t]), l = (0, h.useStateFromStores)([V.default], () => V.default.getNewThreadCount());
                return 0 === l ? null : (0, s.jsx)(g.Clickable, {
                    className: em.newPostsButton,
                    onClick: a,
                    children: (0, s.jsx)(g.Text, {
                        color: "text-brand",
                        variant: "text-md/medium",
                        children: ec.default.Messages.NEW_FORUM_POST_COUNT.format({
                            count: l
                        })
                    })
                })
            }

            function eA() {
                return Promise.resolve()
            }

            function ev(e) {
                var t, a, l;
                let {
                    channel: i,
                    isEmpty: x,
                    isSearchLoading: T,
                    numResults: N,
                    children: M,
                    coords: A,
                    onHeightChange: v
                } = e, {
                    name: I,
                    formOpen: O,
                    titleFocused: R,
                    hasClickedForm: b,
                    textAreaState: w,
                    onboardingExpanded: B,
                    setEditorAdditionRowHeight: V
                } = (0, $.useForumPostComposerStore)(e => {
                    let {
                        name: t,
                        formOpen: a,
                        titleFocused: s,
                        hasClickedForm: n,
                        textAreaState: l,
                        onboardingExpanded: r,
                        setEditorAdditionRowHeight: i
                    } = e;
                    return {
                        name: t,
                        formOpen: a,
                        titleFocused: s,
                        hasClickedForm: n,
                        textAreaState: l,
                        onboardingExpanded: r,
                        setEditorAdditionRowHeight: i
                    }
                }, u.default), {
                    tagFilter: K,
                    layoutType: Y
                } = (0, z.useForumChannelStore)(i.id), q = (0, $.useForumPostComposerStoreApi)(), J = (0, z.useForumChannelStoreApi)(), et = (0, h.useStateFromStores)([L.default], () => L.default.canChatInGuild(i.guild_id)), ea = (0, W.useCanManageChannel)(i), en = (0, j.useCanStartThread)(i), [er, ei] = n.useState(en), [, eo] = (0, S.useCurrentUserCommunicationDisabled)(null !== (l = i.getGuildId()) && void 0 !== l ? l : void 0), ed = et && (en || er && eo), eh = i.isMediaChannel();
                n.useEffect(() => {
                    en && ei(!0)
                }, [en]);
                let {
                    ref: ef,
                    height: eg
                } = (0, C.default)();
                n.useEffect(() => {
                    null != eg && v(eg)
                }, [v, eg]);
                let ex = n.useCallback(() => {
                    o()(() => {
                        null != ef.current && q.getState().setEditorHeight(ef.current.offsetHeight)
                    })
                }, [ef, q]);
                n.useLayoutEffect(ex, [ex, x, ed, B]), (0, H.useComponentAction)({
                    event: eu.ComponentActions.REMEASURE_TARGET,
                    handler: ex
                });
                let eC = (0, h.useStateFromStores)([P.default], () => P.default.getUploads(i.id, F.DraftType.FirstThreadMessage)),
                    e_ = (0, W.useChannelTemplate)(i),
                    eT = n.useRef(null),
                    ep = n.useRef(null),
                    [eS, eE] = n.useState(0),
                    {
                        width: eN
                    } = (0, h.useStateFromStores)([y.default], () => y.default.windowSize()),
                    eM = null === (a = eT.current) || void 0 === a ? void 0 : null === (t = a.getBoundingClientRect()) || void 0 === t ? void 0 : t.width,
                    ev = n.useRef(null);
                n.useLayoutEffect(() => {
                    var e;
                    let t = ep.current,
                        a = null == t ? void 0 : null === (e = t.children) || void 0 === e ? void 0 : e[0];
                    if (null != eT.current && null != a && null != a.children) {
                        let {
                            left: e,
                            top: t
                        } = eT.current.getBoundingClientRect(), s = 0;
                        for (let n of a.children) {
                            let {
                                right: a,
                                top: l,
                                height: r
                            } = n.getBoundingClientRect();
                            if (l - t > r) break;
                            a - e > s && (s = a - e)
                        }
                        eE(s)
                    }
                }, [i.availableTags, eN, eM, K]);
                let ej = I.length > 0 && !O && (T || null != N),
                    eO = !__OVERLAY__ && !b && !O && R && (0 === w.textValue.trim().length || w.textValue.trim() === e_) && 0 === eC.length;
                n.useLayoutEffect(() => {
                    let e = ej || eO;
                    if (!e) return V(0);
                    null != ev.current && V(e ? ev.current.clientHeight : 0)
                }, [V, ej, eO, ev]);
                let eR = e => {
                        (0, X.trackForumTagFilterClicked)({
                            guildId: i.guild_id,
                            channelId: i.id,
                            tagId: e,
                            filterTagIds: Array.from(K),
                            added: !K.has(e),
                            location: {
                                page: eu.AnalyticsPages.GUILD_CHANNEL,
                                section: eu.AnalyticsSections.FORUM_CHANNEL_HEADER,
                                object: eu.AnalyticsObjects.CHANNEL_TAG
                            }
                        }), J.getState().toggleTagFilter(i.id, e)
                    },
                    eb = (0, d.default)({
                        id: "".concat(i.id, "-tags-navigator"),
                        isEnabled: !0,
                        wrap: !0,
                        scrollToStart: eA,
                        scrollToEnd: eA,
                        orientation: c.Orientations.HORIZONTAL
                    }),
                    {
                        role: eF,
                        onFocus: eL,
                        ...eP
                    } = (0, d.useListItem)("forum-channel-header"),
                    ey = n.useRef(null),
                    eD = function() {
                        let e = n.useRef(!1),
                            t = (0, h.useStateFromStores)([_.default], () => _.default.keyboardModeEnabled),
                            a = n.useCallback(t => {
                                e.current = t.shiftKey
                            }, [e]);
                        return n.useLayoutEffect(() => (t ? window.addEventListener("keydown", a) : window.removeEventListener("keydown", a), () => window.removeEventListener("keydown", a)), [t, a]), e
                    }(),
                    eU = n.useCallback(e => {
                        if (eL(e), e.target === ef.current && !eD.current) {
                            var t;
                            null === (t = ey.current) || void 0 === t || t.focus()
                        }
                    }, [eL, ef, eD]);
                return (0, s.jsx)("div", {
                    className: r()(em.card, em.headerRow, em.columnsSpan),
                    ref: ef,
                    onFocus: eU,
                    ...eP,
                    style: {
                        ...A,
                        position: "static",
                        height: "auto"
                    },
                    children: (0, s.jsxs)(H.ComponentDispatchGroupProvider, {
                        children: [null != i.guild_id ? (0, s.jsx)(E.default, {
                            className: r()(em.newMemberBanner, {
                                [em.gridViewBanner]: Y === m.ForumLayout.GRID
                            }),
                            guildId: i.guild_id,
                            channel: i
                        }) : null, (0, s.jsx)("div", {
                            className: r()(em.mainCard, em.header, {
                                [em.headerWithMatchingPosts]: ej || eO
                            }),
                            children: (0, s.jsx)(ee.default, {
                                parentChannel: i,
                                onChange: ex,
                                isSearchLoading: T,
                                canCreatePost: ed,
                                inputRef: ey
                            })
                        }), (ej || eO) && (0, s.jsxs)("div", {
                            className: em.matchingPostsRow,
                            ref: ev,
                            children: [ej && (0, s.jsxs)("div", {
                                className: em.matchingPosts,
                                children: [(0, s.jsx)(g.Heading, {
                                    variant: "text-xs/normal",
                                    color: "text-normal",
                                    children: T ? ec.default.Messages.FORUM_SEARCHING : 0 === N ? ec.default.Messages.FORUM_SEARCH_NO_MATCHING_POSTS : ec.default.Messages.FORUM_SEARCH_MATCHING_POSTS_ALT.format({
                                        numPosts: N,
                                        query: I
                                    })
                                }), !T && (0, s.jsx)(g.Clickable, {
                                    onClick: () => {
                                        (0, X.trackForumSearchCleared)({
                                            guildId: i.guild_id,
                                            channelId: i.id
                                        }), G.default.clearForumSearch(i.id), q.getState().setName("")
                                    },
                                    children: (0, s.jsx)(g.Text, {
                                        variant: "text-xs/semibold",
                                        color: "text-brand",
                                        className: em.clear,
                                        children: ec.default.Messages.CLEAR
                                    })
                                })]
                            }), (0, s.jsx)("div", {
                                className: em.tagsSpacer
                            }), eO ? ed ? (0, s.jsxs)("div", {
                                className: em.startPostHelp,
                                children: [(0, s.jsx)(g.KeyCombo, {
                                    shortcut: "SHIFT",
                                    className: em.keyboardShortcut
                                }), (0, s.jsx)(g.Text, {
                                    variant: "text-xs/normal",
                                    color: "text-normal",
                                    children: "+"
                                }), (0, s.jsx)(g.KeyCombo, {
                                    shortcut: "ENTER",
                                    className: em.keyboardShortcut
                                }), (0, s.jsx)(g.Text, {
                                    variant: "text-xs/normal",
                                    color: "text-normal",
                                    children: ec.default.Messages.FORUM_ENTER_TO_START_POST
                                })]
                            }) : (0, s.jsxs)("div", {
                                className: em.startPostHelp,
                                children: [(0, s.jsx)(k.default, {
                                    height: 14,
                                    width: 14,
                                    className: em.warnIcon
                                }), (0, s.jsx)(g.Text, {
                                    variant: "text-xs/normal",
                                    color: "text-normal",
                                    children: ec.default.Messages.FORUM_NO_POST_PERMISSION_HELP
                                })]
                            }) : null]
                        }), (0, s.jsx)(Z.default, {
                            channel: i,
                            onChange: ex
                        }), (0, s.jsxs)("div", {
                            className: em.tagsContainer,
                            ref: eT,
                            children: [(0, s.jsx)(eI, {
                                channel: i
                            }), i.availableTags.length > 0 ? (0, s.jsxs)(s.Fragment, {
                                children: [(0, s.jsx)("div", {
                                    className: em.divider
                                }), (0, s.jsx)("div", {
                                    className: em.tagList,
                                    ref: ep,
                                    children: (0, s.jsx)(d.ListNavigatorProvider, {
                                        navigator: eb,
                                        children: (0, s.jsx)(d.ListNavigatorContainer, {
                                            children: e => {
                                                let {
                                                    ref: t,
                                                    ...a
                                                } = e;
                                                return (0, s.jsx)("div", {
                                                    className: em.tagListInner,
                                                    ref: t,
                                                    ...a,
                                                    children: i.availableTags.map(e => (0, s.jsx)(es.default, {
                                                        className: em.tag,
                                                        tag: e,
                                                        onClick: () => eR(e.id),
                                                        selected: K.has(e.id)
                                                    }, e.id))
                                                })
                                            }
                                        })
                                    })
                                }), (0, s.jsx)(g.Popout, {
                                    renderPopout: e => {
                                        let {
                                            closePopout: t,
                                            setPopoutRef: a
                                        } = e;
                                        return (0, s.jsx)(el.default, {
                                            channel: i,
                                            closePopout: t,
                                            setPopoutRef: a
                                        })
                                    },
                                    position: "bottom",
                                    align: "right",
                                    children: (e, t) => {
                                        let {
                                            isShown: a
                                        } = t;
                                        return (0, s.jsxs)(g.Button, {
                                            ...e,
                                            size: g.Button.Sizes.MIN,
                                            color: g.Button.Colors.CUSTOM,
                                            className: r()(em.tagsButton, {
                                                [em.tagsButtonWithCount]: K.size > 0
                                            }),
                                            style: {
                                                left: eS
                                            },
                                            innerClassName: em.tagsButtonInner,
                                            "aria-label": K.size > 0 ? ec.default.Messages.FORUM_TAG_SEE_MORE_A11Y_LABEL : ec.default.Messages.FORUM_TAG_ALL_A11Y_LABEL,
                                            children: [K.size > 0 ? (0, s.jsx)("div", {
                                                className: em.countContainer,
                                                children: (0, s.jsx)(g.Text, {
                                                    className: em.countText,
                                                    color: "none",
                                                    variant: "text-xs/medium",
                                                    children: K.size
                                                })
                                            }) : ec.default.Messages.FORUM_TAG_ALL, a ? (0, s.jsx)(U.default, {
                                                width: 20
                                            }) : (0, s.jsx)(D.default, {
                                                width: 20
                                            })]
                                        })
                                    }
                                }), (0, s.jsxs)(g.Button, {
                                    size: g.Button.Sizes.MIN,
                                    color: g.Button.Colors.CUSTOM,
                                    className: r()(em.tagsButton, em.tagsButtonPlaceholder),
                                    innerClassName: em.tagsButtonInner,
                                    "aria-label": ec.default.Messages.FORUM_TAG_SEE_MORE_A11Y_LABEL,
                                    children: [K.size > 0 ? (0, s.jsx)("div", {
                                        className: em.countContainer,
                                        children: (0, s.jsx)(g.Text, {
                                            className: em.countText,
                                            color: "none",
                                            variant: "text-xs/medium",
                                            children: K.size
                                        })
                                    }) : null, (0, s.jsx)(U.default, {
                                        width: 24
                                    })]
                                })]
                            }) : null]
                        }), M, ea && !eh && (0, s.jsx)(p.default, {
                            contentTypes: [f.DismissibleContent.FORUM_CHANNEL_HELPER_CARD],
                            children: e => {
                                let {
                                    visibleContent: t,
                                    markAsDismissed: a
                                } = e;
                                return t === f.DismissibleContent.FORUM_CHANNEL_HELPER_CARD ? (0, s.jsx)(Q.default, {
                                    onDismiss: a
                                }) : null
                            }
                        })]
                    })
                }, "create-form")
            }

            function eI(e) {
                let {
                    channel: t
                } = e, a = t.isMediaChannel();
                return (0, s.jsx)(g.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: a
                        } = e;
                        return (0, s.jsx)(ea.default, {
                            channel: t,
                            closePopout: a
                        })
                    },
                    position: "bottom",
                    align: "left",
                    children: (e, t) => {
                        let {
                            isShown: n
                        } = t;
                        return (0, s.jsxs)(g.Button, {
                            ...e,
                            size: g.Button.Sizes.MIN,
                            color: g.Button.Colors.CUSTOM,
                            className: em.sortDropdown,
                            innerClassName: em.sortDropdownInner,
                            "aria-label": a ? ec.default.Messages.MEDIA_CHANNEL_SORT : ec.default.Messages.FORUM_CHANNEL_SORT_AND_VIEW,
                            children: [(0, s.jsx)(w.default, {}), (0, s.jsx)(g.Text, {
                                className: em.sortDropdownText,
                                variant: "text-sm/medium",
                                color: "interactive-normal",
                                children: a ? ec.default.Messages.MEDIA_CHANNEL_SORT : ec.default.Messages.FORUM_CHANNEL_SORT_AND_VIEW
                            }), n ? (0, s.jsx)(U.default, {
                                width: 20
                            }) : (0, s.jsx)(D.default, {
                                width: 20
                            })]
                        })
                    }
                })
            }
        },
        355589: function(e, t, a) {
            "use strict";
            a.r(t), a("653041"), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("913527"),
                o = a.n(i),
                u = a("920906"),
                d = a("831209"),
                c = a("149765"),
                m = a("442837"),
                h = a("481060"),
                f = a("787014"),
                g = a("412899"),
                x = a("607070"),
                C = a("447003"),
                _ = a("605436"),
                T = a("621516"),
                p = a("430824"),
                S = a("263704"),
                E = a("465670"),
                N = a("110456"),
                M = a("928457"),
                A = a("41542"),
                v = a("186523"),
                I = a("692437"),
                j = a("759231"),
                O = a("26290"),
                R = a("585483"),
                b = a("70956"),
                F = a("709054"),
                L = a("961675"),
                P = a("883429"),
                y = a("993259"),
                D = a("109434"),
                U = a("456269"),
                w = a("228392"),
                k = a("432771"),
                H = a("538366"),
                B = a("470623"),
                G = a("710352"),
                V = a("981631"),
                z = a("689938"),
                W = a("114317");

            function K(e, t, a) {
                return t in e ? Object.defineProperty(e, t, {
                    value: a,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = a, e
            }
            let Y = {
                    width: 28,
                    height: 28
                },
                X = {
                    width: 20,
                    height: 20,
                    borderRadius: 10
                },
                q = e => {
                    (0, w.trackForumOnboardingClicked)({
                        onboardingCTA: e
                    })
                };
            class Z {
                addStep(e) {
                    ++this.currentIndex, this.steps.push({
                        index: this.currentIndex,
                        ...e
                    }), e.isDone && this.completedSteps++
                }
                getSteps() {
                    return this.steps
                }
                isAllDone() {
                    return this.steps.every(e => e.isDone)
                }
                constructor() {
                    K(this, "currentIndex", 0), K(this, "steps", []), K(this, "completedSteps", 0)
                }
            }
            let Q = e => {
                    let t = null != e.topic && e.topic.length > 0;
                    return {
                        name: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_GUIDELINES_TITLE,
                        description: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_GUIDELINES_DESCRIPTION,
                        clickHandler: () => {
                            q(G.ForumOnboardingCTAs.GUIDELINES), f.default.open(e.id, void 0, V.ChannelSettingsSubsections.TOPIC)
                        },
                        isDone: t
                    }
                },
                J = e => {
                    let t = null != e.availableTags && e.availableTags.length > 0;
                    return {
                        name: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_TAGS_TITLE,
                        description: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_TAGS_DESCRIPTION,
                        clickHandler: () => {
                            q(G.ForumOnboardingCTAs.TAGS), f.default.open(e.id), (0, h.openModalLazy)(async () => {
                                let {
                                    default: t
                                } = await Promise.all([a.e("99387"), a.e("21971")]).then(a.bind(a, "201049"));
                                return a => (0, s.jsx)(t, {
                                    ...a,
                                    channelId: e.id,
                                    guildId: e.guild_id
                                })
                            })
                        },
                        isDone: t
                    }
                },
                $ = e => {
                    let t = null != e.defaultReactionEmoji;
                    return {
                        name: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_DEFAULT_REACTION_TITLE,
                        description: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_DEFAULT_REACTION_DESCRIPTION,
                        clickHandler: () => {
                            q(G.ForumOnboardingCTAs.DEFAULT_REACTION), (0, h.openModalLazy)(async () => {
                                let {
                                    default: t
                                } = await Promise.all([a.e("99387"), a.e("80404")]).then(a.bind(a, "158586"));
                                return a => (0, s.jsx)(t, {
                                    ...a,
                                    channel: e
                                })
                            })
                        },
                        isDone: t
                    }
                },
                ee = (e, t, n) => ({
                    name: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_FIRST_POST_TITLE,
                    description: t ? z.default.Messages.MEDIA_CHANNEL_ONBOARDING_CHECKLIST_FIRST_POST_DESCRIPTION : z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_FIRST_POST_DESCRIPTION.format({
                        onClick: e => {
                            null != n && (e.preventDefault(), e.stopPropagation(), (0, w.trackForumUpsellModalViewed)(), (0, h.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await Promise.all([a.e("99387"), a.e("18417")]).then(a.bind(a, "740696"));
                                return t => (0, s.jsx)(e, {
                                    ...t,
                                    guildId: n
                                })
                            }))
                        }
                    }),
                    clickHandler: () => {
                        q(G.ForumOnboardingCTAs.CREATE_POST), R.ComponentDispatch.dispatch(V.ComponentActions.FOCUS_COMPOSER_TITLE)
                    },
                    isDone: e
                }),
                et = (e, t) => n.useCallback(() => (t(!1), P.default.hideAdminOnboarding(e, !0)), [e, t]),
                ea = e => {
                    let t = F.default.extractTimestamp(e);
                    return o()().isBefore(o()(t).add(o().duration(15, "days")))
                },
                es = (e, t, a) => {
                    n.useEffect(() => {
                        !e && a(!t)
                    }, [e, a, t])
                },
                en = (e, t, a, s) => {
                    let l = n.useRef(0);
                    n.useEffect(() => (a || !e || t ? clearTimeout(l.current) : l.current = setTimeout(() => {
                        s()
                    }, 60 * b.default.Millis.SECOND), () => clearTimeout(l.current)), [e, t, s, a])
                },
                el = (e, t, a) => {
                    n.useEffect(() => {
                        e && t && a()
                    }, [])
                },
                er = e => {
                    let {
                        isAllDone: t,
                        isVisible: a,
                        canManageChannel: s,
                        guildId: l,
                        channel: r
                    } = e, i = (0, m.useStateFromStores)([p.default], () => null != l ? p.default.getRoles(l) : void 0), o = n.useCallback(() => {
                        R.ComponentDispatch.dispatch(V.ComponentActions.REMEASURE_TARGET)
                    }, []);
                    n.useEffect(() => {
                        o()
                    }, [o, t, a, s, i, r.id, r.permissionOverwrites])
                },
                ei = () => {
                    let [e, t] = n.useState(!0), a = (0, m.useStateFromStores)([x.default], () => x.default.useReducedMotion);
                    return {
                        transitions: (0, u.useTransition)(e, {
                            keys: e => e ? "shown" : "hidden",
                            config: ed,
                            from: {
                                opacity: 0
                            },
                            enter: {
                                opacity: 1
                            },
                            leave: {
                                opacity: 0
                            },
                            unique: !0,
                            immediate: a
                        }),
                        setVisible: t
                    }
                },
                eo = e => {
                    let t = (0, m.useStateFromStores)([x.default], () => x.default.useReducedMotion);
                    return (0, u.useTransition)(e, {
                        from: {
                            maxHeight: 0
                        },
                        enter: {
                            maxHeight: 500
                        },
                        leave: {
                            maxHeight: 0
                        },
                        config: {
                            duration: 200
                        },
                        immediate: t
                    })
                },
                eu = e => {
                    let {
                        guild: t,
                        roles: a
                    } = e;
                    return (0, s.jsx)("div", {
                        className: W.rolesList,
                        "aria-label": z.default.Messages.ROLES_LIST.format({
                            numRoles: a.length
                        }),
                        children: a.map(e => (0, s.jsx)(g.MemberRole, {
                            role: e,
                            canRemove: !1,
                            onRemove: V.NOOP_NULL,
                            guildId: t.id,
                            className: W.rolePill
                        }, e.id))
                    })
                },
                ed = {
                    mass: 1,
                    tension: 250,
                    friction: 18,
                    clamp: !0
                },
                ec = e => {
                    let {
                        guild: t,
                        channel: l,
                        hasAnyThread: r,
                        handleHide: i
                    } = e, [o, u] = n.useState(!1), d = (0, k.isOnboardingDismissed)(l.id), f = (0, m.useStateFromStores)([L.default], () => L.default.hasHidden(l.id)), g = function(e, t, l, r) {
                        let i = null == e ? void 0 : e.id,
                            o = (0, m.useStateFromStores)([p.default], () => null != i ? p.default.getRoles(i) : void 0);
                        return n.useMemo(() => {
                            let n = new Z,
                                i = (null == t ? void 0 : t.isMediaChannel()) === !0;
                            return null != e && null != t && !i && null != o && n.addStep(function(e, t, n, l) {
                                let r = (0, C.default)(n) ? c.combine(V.Permissions.VIEW_CHANNEL, V.Permissions.SEND_MESSAGES) : V.Permissions.SEND_MESSAGES,
                                    i = null != e ? (0, y.getAllExistingRolesWithPermission)(e, t, n, r).filter(t => n.permissionOverwrites.hasOwnProperty(t.id) || (0, _.isEveryoneRoleId)(e.id, t.id)) : [],
                                    o = i.length > 0,
                                    u = i.some(t => (0, _.isEveryoneRoleId)(e.id, t.id));
                                return {
                                    name: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_PERMISSION_TITLE,
                                    description: z.default.Messages.FORUM_CHANNEL_ONBOARDING_CHECKLIST_PERMISSION_DESCRIPTION,
                                    isDone: o && u,
                                    shouldWarn: o && !u,
                                    children: o ? (0, s.jsx)(eu, {
                                        guild: e,
                                        roles: i
                                    }) : null,
                                    clickHandler: () => {
                                        q(G.ForumOnboardingCTAs.PERMISSIONS), (0, h.openModalLazy)(async () => {
                                            let {
                                                default: t
                                            } = await Promise.all([a.e("99387"), a.e("78704")]).then(a.bind(a, "560602"));
                                            return l(!0), a => (0, s.jsx)(t, {
                                                ...a,
                                                channel: n,
                                                guild: e,
                                                permission: r,
                                                currentSelectedRoles: i
                                            })
                                        }, {
                                            modalKey: "SEND_MESSAGE_ROLE_PERMISSION_FIX_MODAL_KEY",
                                            onCloseRequest: V.NOOP_NULL,
                                            onCloseCallback: () => l(!1)
                                        })
                                    }
                                }
                            }(e, o, t, r)), !i && n.addStep(Q(t)), n.addStep(J(t)), n.addStep($(t)), n.addStep(ee(l, i, null == e ? void 0 : e.id)), n
                        }, [t, e, o, l, r])
                    }(t, l, r, u), x = g.isAllDone();
                    return en(x, d || f || !ea(l.id), o, i), {
                        onboardingSteps: g,
                        isHidden: f,
                        isDismissed: d,
                        isAllDone: x
                    }
                },
                em = () => n.useCallback(e => {
                    var t;
                    null === (t = e.clickHandler) || void 0 === t || t.call(e)
                }, []),
                eh = e => {
                    let {
                        handleHide: t
                    } = e;
                    return (0, s.jsx)(h.Clickable, {
                        onClick: t,
                        className: W.closeButton,
                        "aria-label": z.default.Messages.DISMISS,
                        children: (0, s.jsx)(E.default, {
                            className: W.closeIcon
                        })
                    })
                },
                ef = e => {
                    let {
                        expanded: t,
                        onClick: a
                    } = e;
                    return (0, s.jsx)(h.Clickable, {
                        onClick: a,
                        className: W.closeButton,
                        "aria-label": t ? z.default.Messages.COLLAPSE : z.default.Messages.EXPAND,
                        children: t ? (0, s.jsx)(N.default, {
                            className: W.closeIcon
                        }) : (0, s.jsx)(M.default, {
                            className: W.closeIcon
                        })
                    })
                };
            t.default = e => {
                let {
                    hasAnyThread: t,
                    channel: a
                } = e, {
                    onboardingExpanded: l
                } = (0, B.useForumPostComposerStore)(e => {
                    let {
                        onboardingExpanded: t
                    } = e;
                    return {
                        onboardingExpanded: t
                    }
                }), {
                    tagFilter: i
                } = (0, D.useForumChannelStore)(a.id), o = (0, m.useStateFromStores)([p.default], () => p.default.getGuild(a.getGuildId())), c = (0, U.useCanManageChannel)(a), {
                    transitions: f,
                    setVisible: g
                } = ei(), x = eo(l), C = em(), _ = et(a.id, g), {
                    onboardingSteps: E,
                    isDismissed: N,
                    isHidden: M,
                    isAllDone: R
                } = ec({
                    guild: o,
                    channel: a,
                    hasAnyThread: t,
                    handleHide: _
                }), b = !M && !N, F = (0, B.useForumPostComposerStoreApi)(), L = a.isMediaChannel(), P = e => F.getState().setOnboardingExpanded(e);
                return (el(R, b, _), er({
                    isAllDone: R,
                    isVisible: b,
                    canManageChannel: c,
                    guildId: null == o ? void 0 : o.id,
                    channel: a
                }), es(N, M, g), n.useEffect(() => {
                    (!t || !b) && P(!0)
                }, []), null == o) ? null : b && c ? L ? t ? null : (0, s.jsx)(T.default, {
                    channel: a
                }) : (0, s.jsx)(s.Fragment, {
                    children: f((e, t) => t ? (0, s.jsx)(u.animated.div, {
                        style: e,
                        className: W.container,
                        children: (0, s.jsxs)("div", {
                            className: W.wrapper,
                            children: [(0, s.jsx)("div", {
                                className: W.headerRow,
                                children: (0, s.jsxs)(h.HeadingLevel, {
                                    component: (0, s.jsx)(h.Heading, {
                                        variant: "heading-md/semibold",
                                        children: z.default.Messages.GET_STARTED
                                    }),
                                    children: [(0, s.jsx)(h.Heading, {
                                        variant: "heading-md/medium",
                                        className: W.header,
                                        children: z.default.Messages.FORUM_CHANNEL_ONBOARDING_COMPLETED_COUNT.format({
                                            numCompleted: E.completedSteps.toString(),
                                            numSteps: E.steps.length.toString()
                                        })
                                    }), (0, s.jsxs)(h.Text, {
                                        variant: "text-xs/normal",
                                        className: W.visibilityInfo,
                                        children: [(0, s.jsx)(A.default, {
                                            width: 12,
                                            height: 12,
                                            className: W.icon
                                        }), z.default.Messages.FORUM_CHANNEL_ONBOARDING_VISIBILITY]
                                    }), (0, s.jsx)(ef, {
                                        expanded: l,
                                        onClick: () => P(!l)
                                    }), (0, s.jsx)(eh, {
                                        handleHide: _
                                    })]
                                })
                            }), x((e, t) => t ? (0, s.jsx)(u.animated.div, {
                                style: e,
                                className: W.listContainer,
                                children: (0, s.jsx)("ol", {
                                    className: W.checklist,
                                    children: E.getSteps().map(e => (0, s.jsxs)(h.Clickable, {
                                        tag: "li",
                                        "aria-label": e.name,
                                        onClick: () => C(e),
                                        className: r()(W.stepContainer, {
                                            [W.completed]: e.isDone
                                        }),
                                        children: [e.shouldWarn ? (0, s.jsx)(j.default, {
                                            color: d.default.STATUS_DANGER,
                                            className: W.stepStatus
                                        }) : e.isDone ? (0, s.jsx)(O.IconBadge, {
                                            color: d.default.STATUS_POSITIVE_BACKGROUND,
                                            icon: S.default,
                                            style: X,
                                            className: W.stepStatus
                                        }) : (0, s.jsx)(O.IconBadge, {
                                            disableColor: !0,
                                            icon: v.default,
                                            style: Y,
                                            className: r()(W.stepStatus, W.completed)
                                        }), (0, s.jsxs)("div", {
                                            className: W.step,
                                            children: [(0, s.jsx)(h.Text, {
                                                variant: "text-md/medium",
                                                color: e.isDone ? "header-secondary" : "header-primary",
                                                className: W.stepName,
                                                children: e.name
                                            }), (0, s.jsx)(h.Text, {
                                                variant: "text-sm/normal",
                                                color: "header-secondary",
                                                className: W.stepDescription,
                                                children: e.description
                                            }), e.children]
                                        }), (0, s.jsx)(I.default, {
                                            width: 12,
                                            className: W.stepStatus
                                        })]
                                    }, "onboard-step-".concat(e.index)))
                                })
                            }) : null)]
                        })
                    }) : null)
                }) : t ? null : (0, s.jsx)(H.default, {
                    channelName: a.name,
                    guildId: a.guild_id,
                    tagFilter: i,
                    channel: a
                })
            }
        },
        538366: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return x
                }
            });
            var s = a("735250"),
                n = a("470079"),
                l = a("481060"),
                r = a("665906"),
                i = a("634648"),
                o = a("499033"),
                u = a("692437"),
                d = a("585483"),
                c = a("456269"),
                m = a("228392"),
                h = a("981631"),
                f = a("689938"),
                g = a("737472");

            function x(e) {
                let {
                    channelName: t,
                    guildId: x,
                    tagFilter: C,
                    channel: _
                } = e, T = (0, c.useCanManageChannel)(_), p = (0, r.useCanStartThread)(_), S = _.isMediaChannel(), E = n.useCallback(() => {
                    (0, m.trackForumUpsellModalViewed)(), (0, l.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await Promise.all([a.e("99387"), a.e("18417")]).then(a.bind(a, "740696"));
                        return t => (0, s.jsx)(e, {
                            ...t,
                            guildId: x
                        })
                    })
                }, [x]), N = C.size > 0, M = p || T, A = !N && T && !S, v = n.useCallback(() => A ? E() : p ? void d.ComponentDispatch.dispatch(h.ComponentActions.FOCUS_COMPOSER_TITLE) : (0, h.NOOP_NULL)(), [E, A, p]);
                return (0, s.jsxs)("div", {
                    className: g.container,
                    children: [(0, s.jsxs)("div", {
                        className: g.iconContainer,
                        children: [(0, s.jsx)("div", {
                            className: g.icon,
                            children: (0, s.jsx)(i.default, {
                                width: 30,
                                height: 30
                            })
                        }), (0, s.jsx)(o.default, {
                            className: g.stars
                        })]
                    }), (0, s.jsx)(l.Heading, {
                        className: g.header,
                        variant: "heading-md/semibold",
                        children: N ? f.default.Messages.FORUM_NO_POST_WITH_TAG_TITLE.format({
                            numTags: C.size
                        }) : f.default.Messages.FORUM_EMPTY_STATE_TITLE
                    }), (0, s.jsx)(l.Text, {
                        color: "header-secondary",
                        variant: "text-sm/normal",
                        children: N ? f.default.Messages.FORUM_NO_POST_WITH_TAG_DESCRIPTION.format({
                            numTags: C.size
                        }) : f.default.Messages.FORUM_EMPTY_STATE_DESCRIPTION.format({
                            channelName: t
                        })
                    }), M && (0, s.jsxs)(l.Button, {
                        look: l.Button.Looks.BLANK,
                        size: l.Button.Sizes.MIN,
                        color: l.Button.Colors.GREEN,
                        onClick: v,
                        className: g.cta,
                        innerClassName: g.button,
                        children: [A ? f.default.Messages.FORUM_EMPTY_STATE_CTA : f.default.Messages.FORUM_EMPTY_STATE_CREATE_POST_CTA, (0, s.jsx)(u.default, {
                            width: 12
                        })]
                    })]
                })
            }
        },
        542581: function(e, t, a) {
            "use strict";
            a.r(t), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("920906"),
                o = a("442837"),
                u = a("481060"),
                d = a("787014"),
                c = a("607070"),
                m = a("454585"),
                h = a("814550"),
                f = a("465670"),
                g = a("928457"),
                x = a("185403"),
                C = a("456269"),
                _ = a("470623"),
                T = a("981631"),
                p = a("689938"),
                S = a("411900"),
                E = a("946278");
            t.default = n.memo(function(e) {
                let {
                    channel: t,
                    onChange: l
                } = e, N = (0, _.useForumPostComposerStoreApi)(), {
                    guidelinesOpen: M
                } = (0, _.useForumPostComposerStore)(e => {
                    let {
                        guidelinesOpen: t
                    } = e;
                    return {
                        guidelinesOpen: t
                    }
                }), A = (0, C.useCanManageChannel)(t), [v, I] = n.useState(!1), j = n.useCallback(e => {
                    if (null == e) return;
                    let t = e.clientHeight >= 220;
                    t !== v && I(t)
                }, [v]);
                n.useLayoutEffect(() => {
                    setTimeout(l, 350)
                }, [M, l]);
                let O = (0, o.useStateFromStores)([c.default], () => c.default.useReducedMotion),
                    [R, b] = n.useState(!M),
                    F = (0, i.useSpring)({
                        opacity: M ? 1 : 0,
                        maxHeight: M ? 500 : 0,
                        config: {
                            duration: 300
                        },
                        immediate: O,
                        onRest: () => b(!M)
                    });
                return null != t.topic && t.topic.length > 0 ? (0, s.jsx)(i.animated.div, {
                    style: F,
                    className: R ? S.hiddenVisually : void 0,
                    children: (0, s.jsxs)("div", {
                        className: S.container,
                        children: [(0, s.jsxs)("div", {
                            className: S.headerContainer,
                            children: [(0, s.jsxs)(u.Heading, {
                                variant: "heading-lg/semibold",
                                className: S.guidelinesHeader,
                                children: [(0, s.jsx)(h.default, {
                                    width: 20,
                                    height: 20
                                }), p.default.Messages.FORUM_POST_GUIDELINES_TITLE, A && (0, s.jsx)(u.Clickable, {
                                    onClick: () => {
                                        d.default.open(t.id, void 0, T.ChannelSettingsSubsections.TOPIC)
                                    },
                                    tag: "span",
                                    className: S.clickable,
                                    children: (0, s.jsx)(x.default, {
                                        width: 16,
                                        height: 16
                                    })
                                })]
                            }), (0, s.jsx)(u.Clickable, {
                                "aria-label": p.default.Messages.CLOSE,
                                className: S.clickable,
                                onClick: () => {
                                    N.getState().setGuidelinesOpen(!1)
                                },
                                children: (0, s.jsx)(f.default, {
                                    width: 16,
                                    height: 16
                                })
                            })]
                        }), (0, s.jsxs)("div", {
                            className: S.descriptionContainer,
                            children: [(0, s.jsx)(u.Text, {
                                selectable: !0,
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                style: {
                                    maxHeight: 220
                                },
                                className: r()(S.guidelines, E.markup),
                                children: (0, s.jsx)("div", {
                                    ref: j,
                                    children: m.default.parseForumPostGuidelines(t.topic, !0, {
                                        channelId: t.id,
                                        allowHeading: !0,
                                        allowList: !0
                                    })
                                })
                            }), v && (0, s.jsxs)("div", {
                                className: S.showMore,
                                children: [(0, s.jsx)("div", {
                                    className: S.gradient
                                }), (0, s.jsx)("div", {
                                    className: S.linkContainer,
                                    children: (0, s.jsx)(u.Clickable, {
                                        className: S.showMoreLink,
                                        onClick: () => {
                                            (0, u.openModalLazy)(async () => {
                                                let {
                                                    default: e
                                                } = await Promise.all([a.e("99387"), a.e("78712")]).then(a.bind(a, "223164"));
                                                return a => (0, s.jsx)(e, {
                                                    ...a,
                                                    channel: t
                                                })
                                            })
                                        },
                                        children: (0, s.jsxs)(u.Text, {
                                            variant: "text-sm/semibold",
                                            color: "text-brand",
                                            className: S.showMoreText,
                                            children: [p.default.Messages.FORUM_CHANNEL_TOPIC_VIEW_ALL, (0, s.jsx)(g.default, {
                                                className: S.showMoreIcon
                                            })]
                                        })
                                    })
                                })]
                            })]
                        })]
                    })
                }) : null
            })
        },
        639184: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return T
                }
            });
            var s = a("735250");
            a("470079");
            var n = a("120356"),
                l = a.n(n),
                r = a("481060"),
                i = a("465670"),
                o = a("68972"),
                u = a("507893"),
                d = a("228392"),
                c = a("404616"),
                m = a("710352"),
                h = a("921944"),
                f = a("689938"),
                g = a("993772"),
                x = a("385092"),
                C = a("861186"),
                _ = a("504764");

            function T(e) {
                let {
                    onDismiss: t
                } = e;
                return (0, s.jsxs)(r.Clickable, {
                    onClick: () => {
                        open(m.COMMUNITY_PORTAL_FORUM_PAGE), (0, d.trackForumHelperCardClicked)({
                            readGuideCta: !0
                        })
                    },
                    className: l()(C.container, x.container, g.mainCard),
                    children: [(0, s.jsxs)("div", {
                        className: x.inline,
                        children: [(0, s.jsxs)("div", {
                            className: x.author,
                            children: [(0, s.jsx)(o.default, {
                                className: x.discordIcon
                            }), (0, s.jsx)(r.Text, {
                                variant: "text-sm/semibold",
                                color: "header-primary",
                                children: f.default.Messages.DISCORD_NAME
                            }), (0, s.jsxs)("div", {
                                className: x.notice,
                                children: [(0, s.jsx)(u.default, {
                                    className: x.infoIcon
                                }), (0, s.jsx)(r.Text, {
                                    variant: "text-sm/normal",
                                    color: "header-secondary",
                                    children: f.default.Messages.FORUM_HELPER_CARD_NOTICE
                                })]
                            })]
                        }), (0, s.jsx)(r.Clickable, {
                            onClick: e => {
                                e.stopPropagation(), t(h.ContentDismissActionType.DISMISS), (0, d.trackForumHelperCardClicked)({
                                    readGuideCta: !1
                                })
                            },
                            children: (0, s.jsx)(i.default, {
                                className: x.closeIcon,
                                width: 16,
                                height: 16
                            })
                        })]
                    }), (0, s.jsx)("hr", {
                        className: x.separator
                    }), (0, s.jsxs)("div", {
                        className: x.inline,
                        children: [(0, s.jsxs)("div", {
                            children: [(0, s.jsx)(r.Heading, {
                                className: l()(C.__invalid_channelName, x.title),
                                variant: "heading-lg/semibold",
                                color: "header-primary",
                                children: f.default.Messages.FORUM_HELPER_CARD_TITLE
                            }), (0, s.jsx)(r.Text, {
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                children: f.default.Messages.FORUM_HELPER_CARD_BODY
                            })]
                        }), (0, s.jsx)("img", {
                            src: _,
                            alt: f.default.Messages.FORUM_HELPER_CARD_ALT_TEXT,
                            width: c.MAX_THUMBNAIL_WIDTH,
                            height: c.MAX_THUMBNAIL_WIDTH
                        })]
                    })]
                })
            }
        },
        76451: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                ComposerUploadButton: function() {
                    return j
                },
                default: function() {
                    return R
                }
            }), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("512722"),
                r = a.n(l),
                i = a("920906"),
                o = a("442837"),
                u = a("481060"),
                d = a("53281"),
                c = a("607070"),
                m = a("541716"),
                h = a("859235"),
                f = a("898463"),
                g = a("592125"),
                x = a("703558"),
                C = a("117530"),
                _ = a("180277"),
                T = a("585483"),
                p = a("127654"),
                S = a("228392"),
                E = a("981631"),
                N = a("518095");
            let M = {
                    scale: .95,
                    opacity: 0
                },
                A = {
                    scale: 1,
                    opacity: 1
                },
                v = {
                    scale: 1,
                    opacity: 1
                },
                I = {
                    tension: 2400,
                    friction: 52
                };

            function j(e) {
                let {
                    channelId: t,
                    onClick: a,
                    onClose: l,
                    onMouseEnter: i
                } = e, c = n.useRef(null), m = (0, o.useStateFromStores)([g.default], () => g.default.getChannel(t), [t]);
                return r()(null != m, "Forum Channel is null"), (0, s.jsxs)(u.Clickable, {
                    className: N.uploadInput,
                    onMouseEnter: i,
                    onClick: () => {
                        (0, S.trackForumChannelMediaUploaderClicked)({
                            isMobile: !1
                        }), null == a || a()
                    },
                    onKeyPress: e => {
                        if ("Enter" === e.key) {
                            var t;
                            null === (t = c.current) || void 0 === t || t.activateUploadDialogue(), (0, S.trackForumChannelMediaUploaderClicked)({
                                isMobile: !1
                            })
                        }
                    },
                    children: [(0, s.jsx)(d.default, {
                        className: N.fileInput,
                        ref: c,
                        onChange: e => {
                            null == l || l(), (0, p.promptToUpload)(e.currentTarget.files, m, x.DraftType.FirstThreadMessage, {
                                requireConfirm: !0
                            }), T.ComponentDispatch.dispatch(E.ComponentActions.TEXTAREA_FOCUS), e.currentTarget.value = null
                        },
                        multiple: m.rateLimitPerUser <= 0,
                        tabIndex: -1,
                        "aria-hidden": !0
                    }), (0, s.jsx)(_.default, {
                        width: 28,
                        height: 28,
                        className: N.uploadIcon
                    })]
                })
            }

            function O(e) {
                let {
                    channelId: t,
                    closePopout: a
                } = e, [l, r] = n.useState(!1), {
                    reducedMotion: d
                } = n.useContext(u.AccessibilityPreferencesContext), g = (0, i.useSpring)({
                    from: d.enabled ? A : M,
                    to: v,
                    config: I
                }), x = (0, o.useStateFromStores)([c.default], () => c.default.keyboardModeEnabled), _ = (0, o.useStateFromStores)([C.default], () => C.default.getUploads(t, m.ChatInputTypes.CREATE_FORUM_POST.drafts.type));
                return (0, s.jsx)(i.animated.div, {
                    className: N.popoutContainer,
                    onMouseLeave: () => {
                        !l && a()
                    },
                    style: g,
                    children: (0, s.jsxs)(u.ScrollerThin, {
                        orientation: "horizontal",
                        className: N.popout,
                        paddingFix: !1,
                        fade: !0,
                        children: [(0, s.jsx)(j, {
                            channelId: t,
                            onClick: () => {
                                r(!0)
                            },
                            onClose: () => {
                                r(!1), a()
                            }
                        }), (0, s.jsx)("div", {
                            className: N.uploads,
                            children: _.map(e => (0, s.jsx)(f.default, {
                                channelId: t,
                                draftType: m.ChatInputTypes.CREATE_FORUM_POST.drafts.type,
                                upload: e,
                                keyboardModeEnabled: x,
                                hideFileName: !0,
                                size: h.AttachmentListItemSizes.SMALL
                            }, e.id))
                        })]
                    })
                })
            }

            function R(e) {
                let {
                    channelId: t
                } = e, [a, l] = n.useState(!1), r = (0, o.useStateFromStores)([C.default], () => C.default.getUploads(t, m.ChatInputTypes.CREATE_FORUM_POST.drafts.type)), i = r.length, u = i > 0;
                n.useEffect(() => {
                    a && !u && l(!1)
                }, [a, u]);
                let d = () => {
                    u && l(!0)
                };
                return (0, s.jsxs)("div", {
                    className: N.container,
                    children: [u ? (0, s.jsxs)(s.Fragment, {
                        children: [(0, s.jsx)(f.UploadIcon, {
                            upload: r[0],
                            size: h.AttachmentListItemSizes.SMALL,
                            onMouseEnter: d
                        }), !a && (0, s.jsx)("div", {
                            className: N.badge,
                            children: i
                        })]
                    }) : (0, s.jsx)(j, {
                        onMouseEnter: d,
                        channelId: t
                    }), a && (0, s.jsx)(O, {
                        channelId: t,
                        closePopout: () => {
                            l(!1)
                        }
                    })]
                })
            }
        },
        749913: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return eh
                }
            }), a("47120"), a("733860");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("512722"),
                o = a.n(i),
                u = a("143927"),
                d = a("924826"),
                c = a("536895"),
                m = a("442837"),
                h = a("481060"),
                f = a("430742"),
                g = a("166459"),
                x = a("541716"),
                C = a("67158"),
                _ = a("893718"),
                T = a("472243"),
                p = a("436660"),
                S = a("284182"),
                E = a("795639"),
                N = a("957730"),
                M = a("25015"),
                A = a("252032"),
                v = a("913663"),
                I = a("268350"),
                j = a("456077"),
                O = a("488131"),
                R = a("602034"),
                b = a("23750"),
                F = a("703558"),
                L = a("496675"),
                P = a("300429"),
                y = a("117530"),
                D = a("594174"),
                U = a("86813"),
                w = a("814550"),
                k = a("696202"),
                H = a("794358"),
                B = a("880008"),
                G = a("634648"),
                V = a("185403"),
                z = a("664800"),
                W = a("548420"),
                K = a("459273"),
                Y = a("838440"),
                X = a("127654"),
                q = a("681154"),
                Z = a("883429"),
                Q = a("945141"),
                J = a("456269"),
                $ = a("103921"),
                ee = a("228392"),
                et = a("259637"),
                ea = a("76451"),
                es = a("470623"),
                en = a("479099"),
                el = a("399894"),
                er = a("81490"),
                ei = a("710352"),
                eo = a("981631"),
                eu = a("176505"),
                ed = a("689938"),
                ec = a("730729");
            let em = x.ChatInputTypes.CREATE_FORUM_POST;

            function eh(e) {
                let {
                    parentChannel: t,
                    isSearchLoading: a,
                    onChange: l,
                    canCreatePost: i,
                    inputRef: o
                } = e, {
                    textAreaState: d,
                    formOpen: c,
                    previewing: f
                } = (0, es.useForumPostComposerStore)(e => {
                    let {
                        textAreaState: t,
                        formOpen: a,
                        previewing: s
                    } = e;
                    return {
                        textAreaState: t,
                        formOpen: a,
                        previewing: s
                    }
                }, u.default), [g, x] = n.useState(null), C = n.useContext(K.ComponentDispatchGroupContext), _ = n.useCallback(() => {
                    C.bumpDispatchPriority()
                }, [C]), T = (0, m.useStateFromStores)([L.default], () => L.default.can(eo.Permissions.ATTACH_FILES, t)), p = (0, m.useStateFromStoresArray)([y.default], () => y.default.getUploads(t.id, F.DraftType.FirstThreadMessage)), M = c && T && i, A = (null == t ? void 0 : t.isMediaChannel()) === !0, j = function(e, t) {
                    let a = (0, es.useForumPostComposerStoreApi)(),
                        s = (0, J.useChannelTemplate)(e);
                    return n.useCallback(() => {
                        let {
                            formOpen: n,
                            setFormOpenFromUserAction: l,
                            name: r,
                            textAreaState: i,
                            hasClickedForm: o
                        } = a.getState();
                        !n && (setTimeout(() => {
                            if (t.current instanceof h.TextAreaAutosize) {
                                var e, a, s, n;
                                null === (a = t.current) || void 0 === a || null === (e = a._textArea) || void 0 === e || e.setSelectionRange(r.length, r.length), null === (n = t.current) || void 0 === n || null === (s = n._textArea) || void 0 === s || s.focus()
                            }
                        }, 0), (o && r.length > 0 || i.textValue.trim().length > 0 && i.textValue.trim() !== s || y.default.getUploads(e.id, F.DraftType.FirstThreadMessage).length > 0) && l())
                    }, [a, e.id, s, t])
                }(t, o), b = function(e) {
                    let {
                        formOpen: t
                    } = (0, es.useForumPostComposerStore)(e => {
                        let {
                            formOpen: t
                        } = e;
                        return {
                            formOpen: t
                        }
                    }, u.default), a = (0, es.useForumPostComposerStoreApi)(), s = (0, R.useCreateForumPost)({
                        parentChannel: e
                    });
                    n.useEffect(() => {
                        let {
                            setNameError: e,
                            setMessageError: t
                        } = a.getState();
                        e(null), t(null)
                    }, [t, a]);
                    let l = n.useCallback((t, s, n) => {
                        let {
                            name: l,
                            textAreaState: r
                        } = a.getState();
                        null == t && (t = r.textValue), t = t.trim();
                        let {
                            content: i
                        } = N.default.parse(e, t);
                        if (t = i, null == s || 0 === s.length) {
                            var o;
                            s = null === (o = v.default.getStickerPreview(e.id, em.drafts.type)) || void 0 === o ? void 0 : o.map(e => e.id)
                        }
                        if ((null == n || 0 === n.length) && (n = y.default.getUploads(e.id, F.DraftType.FirstThreadMessage)), null != n && n.length > 0 && e.isMediaChannel()) {
                            let e = n.findIndex(e => !0 === e.isThumbnail);
                            if (e > -1) {
                                let t = n[e];
                                n.splice(e, 1), n.unshift(t)
                            }
                        }
                        let u = 0 === l.length,
                            d = (null == t || 0 === t.length) && (null == s || 0 === s.length) && 0 === n.length;
                        return {
                            content: t,
                            stickers: s,
                            uploads: n,
                            hasNameError: u,
                            hasMessageError: d
                        }
                    }, [e, a]);
                    return n.useCallback(async (t, n, r) => {
                        let {
                            setNameError: i,
                            setMessageError: o,
                            setSubmitting: u,
                            resetFormState: d,
                            formOpen: c,
                            setFormOpen: m,
                            setPreviewing: h,
                            setFormOpenFromUserAction: f,
                            setGuidelinesOpen: g
                        } = a.getState(), x = Q.default.hasSeen(e.id);
                        if (!c) return (0, ee.trackForumCreateNewPostClick)({
                            guildId: e.guild_id,
                            channelId: e.id
                        }), !x && a.getState().setGuidelinesOpen(!0), f(), {
                            shouldClear: !1,
                            shouldRefocus: !1
                        };
                        let {
                            content: C,
                            stickers: _,
                            uploads: T,
                            hasNameError: p,
                            hasMessageError: S
                        } = l(t, n, r);
                        if (i(p ? (0, q.makeEmptyTitleError)() : null), o(S ? (0, q.makeEmptyMessageError)() : null), p || S) return {
                            shouldClear: !1,
                            shouldRefocus: !0
                        };
                        try {
                            u(!0);
                            let {
                                valid: t
                            } = await (0, Y.applyChatRestrictions)({
                                content: C,
                                stickers: _,
                                uploads: T,
                                type: em,
                                channel: e
                            });
                            if (!t) return {
                                shouldClear: !1,
                                shouldRefocus: !0
                            };
                            let a = await s(C, _, T);
                            return (0, O.openThreadSidebarForViewing)(a), Z.default.resort(e.id), (0, I.clearStickerPreview)(e.id, em.drafts.type), d(), m(!1), h(!1), Q.default.markAsSeen(e.id), g(!1), {
                                shouldClear: !0,
                                shouldRefocus: !1
                            }
                        } catch (t) {
                            var E, N;
                            return (null === (E = t.body) || void 0 === E ? void 0 : E.code) === eo.AbortCodes.AUTOMOD_TITLE_BLOCKED ? i((0, q.makeAutomodViolationError)(t.body, e)) : (null === (N = t.body) || void 0 === N ? void 0 : N.code) === eo.AbortCodes.AUTOMOD_MESSAGE_BLOCKED && o((0, q.makeAutomodViolationError)(t.body, e)), {
                                shouldClear: !1,
                                shouldRefocus: !0
                            }
                        } finally {
                            u(!1)
                        }
                    }, [s, l, e, a])
                }(t);
                return n.useLayoutEffect(l, [c, d, p, l]), (0, s.jsx)(s.Fragment, {
                    children: (0, s.jsx)("div", {
                        "aria-label": i ? ed.default.Messages.NEW_FORUM_POST : ed.default.Messages.SEARCH,
                        className: r()(ec.container, {
                            [ec.collapsed]: !c
                        }),
                        onClick: !c && i ? j : void 0,
                        children: (0, s.jsxs)("form", {
                            onMouseDown: _,
                            onFocus: _,
                            onSubmit: e => {
                                e.preventDefault(), i && b()
                            },
                            children: [(0, s.jsxs)("div", {
                                className: ec.formContainer,
                                children: [(0, s.jsx)(ef, {
                                    parentChannel: t,
                                    isSearchLoading: a,
                                    inputRef: o
                                }), (0, s.jsxs)("div", {
                                    className: f ? ec.previewForm : ec.form,
                                    children: [(0, s.jsx)(eg, {
                                        editorRef: g,
                                        parentChannel: t,
                                        isSearchLoading: a,
                                        inputRef: o,
                                        canCreatePost: i
                                    }), c && (0, s.jsx)(e_, {
                                        editorRef: g,
                                        setEditorRef: x,
                                        parentChannel: t,
                                        submit: b,
                                        disabled: !i
                                    }), f && (0, s.jsx)(eT, {})]
                                }), M && (A ? (0, s.jsx)(E.MediaPostThumbnail, {
                                    parentChannel: t
                                }) : (0, s.jsx)(ea.default, {
                                    channelId: t.id
                                }))]
                            }), (0, s.jsxs)("div", {
                                className: ec.form,
                                children: [M && A && (0, s.jsx)(S.default, {
                                    parentChannel: t
                                }), c && (0, s.jsx)(eS, {
                                    className: ec.horizontalPadding,
                                    parentChannel: t,
                                    canCreatePost: i
                                })]
                            })]
                        })
                    })
                })
            }
            let ef = n.memo(function(e) {
                    let {
                        parentChannel: t,
                        isSearchLoading: a,
                        inputRef: l
                    } = e, {
                        formOpen: r,
                        name: i,
                        textAreaState: o,
                        hasClickedForm: d,
                        submitting: c
                    } = (0, es.useForumPostComposerStore)(e => {
                        let {
                            formOpen: t,
                            nameError: a,
                            name: s,
                            previewing: n,
                            textAreaState: l,
                            hasClickedForm: r,
                            submitting: i
                        } = e;
                        return {
                            formOpen: t,
                            nameError: a,
                            name: s,
                            textAreaState: l,
                            previewing: n,
                            hasClickedForm: r,
                            submitting: i
                        }
                    }, u.default), m = (0, es.useForumPostComposerStoreApi)(), x = (0, J.useChannelTemplate)(t), C = n.useCallback(() => {
                        var e;
                        m.getState().resetFormState(), f.default.clearDraft(t.id, F.DraftType.ThreadSettings), f.default.clearDraft(t.id, F.DraftType.FirstThreadMessage), g.default.clearAll(t.id, F.DraftType.FirstThreadMessage), m.getState().setFormOpen(!1), m.getState().setBodyFocused(!1), m.getState().setTitleFocused(!1), m.getState().setHasClickedForm(!1), m.getState().setPreviewing(!1), null === (e = l.current) || void 0 === e || e.blur(), (0, ee.trackForumNewPostCleared)({
                            guildId: t.guild_id,
                            channelId: t.id
                        })
                    }, [m, t.id, t.guild_id, l]), _ = n.useMemo(() => a && !r ? (0, s.jsx)(eA, {}) : a || r || 0 !== o.textValue.trim().length && o.textValue.trim() !== x ? !r && (i.trim().length > 0 || o.textValue.trim().length > 0 && o.textValue.trim() !== x || y.default.getUploads(t.id, F.DraftType.FirstThreadMessage).length > 0) && d ? (0, s.jsx)(V.default, {
                        className: ec.pencilIcon,
                        width: 24,
                        height: 24
                    }) : c ? (0, s.jsx)(k.default, {
                        className: ec.closeIconDisabled,
                        width: 24,
                        height: 24
                    }) : (0, s.jsx)(h.Tooltip, {
                        text: ed.default.Messages.FORUM_CLEAR_ALL,
                        children: e => (0, s.jsx)(h.Clickable, {
                            ...e,
                            onClick: C,
                            children: (0, s.jsx)(k.default, {
                                className: ec.closeIcon,
                                width: 24,
                                height: 24
                            })
                        })
                    }) : (0, s.jsx)(z.default, {
                        className: ec.searchIcon,
                        width: 24,
                        height: 24
                    }), [a, r, d, i, o.textValue, C, t.id, x, c]);
                    return (0, s.jsx)("div", {
                        className: ec.prefixElement,
                        children: _
                    })
                }),
                eg = n.memo(function(e) {
                    let {
                        parentChannel: t,
                        inputRef: a,
                        canCreatePost: l,
                        editorRef: r
                    } = e, {
                        formOpen: i,
                        nameError: d,
                        name: c,
                        textAreaState: f,
                        previewing: g
                    } = (0, es.useForumPostComposerStore)(e => {
                        let {
                            formOpen: t,
                            nameError: a,
                            name: s,
                            previewing: n,
                            textAreaState: l,
                            hasClickedForm: r,
                            submitting: i
                        } = e;
                        return {
                            formOpen: t,
                            nameError: a,
                            name: s,
                            textAreaState: l,
                            previewing: n,
                            hasClickedForm: r,
                            submitting: i
                        }
                    }, u.default), x = (0, es.useForumPostComposerStoreApi)(), C = null != t.topic && 0 !== t.topic.length, _ = Q.default.hasSeen(t.id), T = (0, J.useChannelTemplate)(t), p = (0, m.useStateFromStores)([D.default], () => D.default.getCurrentUser());
                    o()(null != p, "current user cannot be null");
                    (0, K.useComponentAction)({
                        event: eo.ComponentActions.FOCUS_COMPOSER_TITLE,
                        handler: () => {
                            var e;
                            let t = a.current instanceof h.TextAreaAutosize ? null === (e = a.current) || void 0 === e ? void 0 : e._textArea : a.current;
                            null == t || t.focus(), x.getState().setTitleFocused(!0), x.getState().setFormOpen(!0), x.getState().setHasClickedForm(!0)
                        }
                    });
                    let S = n.useCallback(e => {
                            let a = e.clipboardData.files[0];
                            null != a && a.type.startsWith("image/") && (e.preventDefault(), (0, X.promptToUpload)([a], t, F.DraftType.FirstThreadMessage), x.getState().setFormOpenFromUserAction())
                        }, [t, x]),
                        E = (0, q.renderError)(d, {
                            content: c
                        });
                    return (0, s.jsxs)("div", {
                        className: ec.titleContainer,
                        onPaste: S,
                        children: [i && g ? (0, s.jsx)(h.Heading, {
                            variant: "heading-md/semibold",
                            className: ec.title,
                            children: c
                        }) : (0, s.jsx)(h.TextArea, {
                            value: c,
                            placeholder: l ? i || f.textValue.length > 0 && f.textValue.trim() !== T ? ed.default.Messages.FORUM_POST_TITLE_PLACEHOLDER_FOCUSED : ed.default.Messages.FORUM_POST_TITLE_PLACEHOLDER_SEARCH : ed.default.Messages.SEARCH,
                            flex: !0,
                            autosize: i,
                            rows: 1,
                            showCharacterCount: !1,
                            showRemainingCharacterCount: !1,
                            maxLength: eo.MAX_CHANNEL_NAME_LENGTH,
                            onChange: e => {
                                let a = (0, j.default)(e, !1);
                                x.getState().setName(a);
                                let s = 0 === a.trim().length,
                                    n = 0 === f.textValue.trim().length,
                                    l = f.textValue.trim() === T;
                                s && (n || l) && x.getState().setHasClickedForm(!1), !i && Z.default.updateForumSearchQuery(t.id, a)
                            },
                            onFocus: () => {
                                x.getState().setTitleFocused(!0), x.getState().setBodyFocused(!1)
                            },
                            onBlur: () => {
                                x.getState().setTitleFocused(!1);
                                let e = (0, j.default)(c, !0);
                                e !== c && (x.getState().setName(e), !i && Z.default.updateForumSearchQuery(t.id, e))
                            },
                            onKeyDown: e => {
                                var s, n;
                                "Enter" === e.key && (e.preventDefault(), e.stopPropagation(), i && c.length > 0 ? null == r || r.focus() : l && e.shiftKey && ((0, ee.trackForumCreateNewPostKeybindUsed)({
                                    guildId: t.guild_id,
                                    channelId: t.id
                                }), C && !_ && x.getState().setGuidelinesOpen(!0), x.getState().setFormOpenFromUserAction(), c.trim().length > 0 && (x.getState().setBodyFocused(!0), null == r || r.focus())));
                                let o = a.current instanceof h.TextAreaAutosize ? null === (s = a.current) || void 0 === s ? void 0 : s._textArea : a.current;
                                if ("Home" === e.key || "End" === e.key) {
                                    if (null == o) return;
                                    if (e.preventDefault(), e.stopPropagation(), "Home" === e.key) o.setSelectionRange(0, 0);
                                    else {
                                        let e = c.length;
                                        o.setSelectionRange(e, e)
                                    }
                                }
                                "Escape" === e.key && !x.getState().submitting && (null === (n = a.current) || void 0 === n || n.blur(), x.getState().setFormOpen(!1), x.getState().setTitleFocused(!1), x.getState().setBodyFocused(!1), x.getState().setPreviewing(!1))
                            },
                            error: E,
                            className: ec.title,
                            inputRef: a
                        }), i ? null : (0, s.jsxs)(s.Fragment, {
                            children: [(0, s.jsx)(ex, {
                                parentChannel: t
                            }), (0, s.jsx)(eE, {
                                parentChannel: t,
                                canCreatePost: l
                            })]
                        })]
                    })
                });

            function ex(e) {
                let {
                    parentChannel: t
                } = e, {
                    guidelinesOpen: a
                } = (0, es.useForumPostComposerStore)(e => {
                    let {
                        guidelinesOpen: t
                    } = e;
                    return {
                        guidelinesOpen: t
                    }
                }), n = (0, es.useForumPostComposerStoreApi)(), l = null != t.topic && 0 !== t.topic.length, i = () => {
                    n.getState().setGuidelinesOpen(!a)
                };
                return l ? (0, s.jsx)(h.Tooltip, {
                    text: ed.default.Messages.FORUM_POST_GUIDELINES_TITLE,
                    children: e => (0, s.jsx)(h.Clickable, {
                        ...e,
                        onClick: i,
                        className: r()(ec.forumPostFormButton, {
                            [ec.forumPostFormButtonActive]: a
                        }),
                        children: (0, s.jsx)(w.default, {
                            ...e,
                            width: 24,
                            height: 24
                        })
                    })
                }) : null
            }
            let eC = n.memo(function(e) {
                    let {
                        parentChannel: t,
                        textValue: a
                    } = e, n = new b.default({
                        channelId: t.id,
                        content: a
                    }), {
                        content: l
                    } = (0, M.default)(n, {
                        hideSimpleEmbedContent: !0,
                        isInteracting: !1,
                        formatInline: !1,
                        allowList: !0,
                        allowHeading: !0,
                        previewLinkTarget: !0
                    }), i = (0, A.default)({
                        message: n,
                        channel: t
                    }, l, !1);
                    return (0, s.jsx)("div", {
                        className: r()(ec.channelTextAreaInner, ec.previewTextArea),
                        children: i
                    })
                }),
                e_ = n.memo(function(e) {
                    let {
                        parentChannel: t,
                        submit: a,
                        disabled: l = !1,
                        editorRef: i,
                        setEditorRef: d
                    } = e, c = (0, m.useStateFromStores)([D.default], () => D.default.getCurrentUser());
                    o()(null != c, "current user cannot be null");
                    let {
                        messageError: f,
                        previewing: g,
                        textAreaState: x,
                        bodyFocused: C,
                        formOpen: T
                    } = (0, es.useForumPostComposerStore)(e => {
                        let {
                            messageError: t,
                            textAreaState: a,
                            previewing: s,
                            bodyFocused: n,
                            formOpen: l
                        } = e;
                        return {
                            messageError: t,
                            textAreaState: a,
                            previewing: s,
                            bodyFocused: n,
                            formOpen: l
                        }
                    }, u.default), S = (0, es.useForumPostComposerStoreApi)();
                    n.useEffect(() => () => (0, ee.maybeTrackForumNewPostDraftCreated)({
                        guildId: t.guild_id,
                        channelId: t.id
                    }), [t.guild_id, t.id]);
                    let E = n.useCallback(() => {
                            S.getState().setBodyFocused(!0)
                        }, [S]),
                        N = n.useCallback(() => {
                            S.getState().setBodyFocused(!1)
                        }, [S]),
                        M = n.useCallback((e, t, a) => {
                            let {
                                setTextAreaState: s
                            } = S.getState();
                            s({
                                textValue: t,
                                richValue: a
                            })
                        }, [S]),
                        A = n.useCallback(e => {
                            let {
                                value: t,
                                uploads: s,
                                stickers: n
                            } = e;
                            return a(t, n, s)
                        }, [a]);
                    (0, K.useComponentAction)({
                        event: eo.ComponentActions.TEXTAREA_FOCUS,
                        handler: E
                    }), (0, K.useComponentAction)({
                        event: eo.ComponentActions.TEXTAREA_BLUR,
                        handler: N
                    });
                    let v = (0, q.renderError)(f, {
                        content: x.textValue
                    });
                    return (0, s.jsx)("div", {
                        className: ec.bodyContainer,
                        children: (0, s.jsxs)("div", {
                            className: ec.contentContainer,
                            children: [g ? (0, s.jsx)(eC, {
                                parentChannel: t,
                                textValue: x.textValue
                            }) : (0, s.jsx)("div", {
                                onClick: E,
                                children: (0, s.jsx)(_.default, {
                                    type: em,
                                    setEditorRef: d,
                                    channel: t,
                                    placeholder: ed.default.Messages.FORUM_POST_MESSAGE_PLACEHOLDER,
                                    textValue: x.textValue,
                                    richValue: x.richValue,
                                    focused: C,
                                    className: ec.channelTextArea,
                                    innerClassName: r()(ec.channelTextAreaInner, {
                                        [ec.channelTextAreaInnerError]: null != v
                                    }),
                                    onChange: M,
                                    onSubmit: A,
                                    promptToUpload: X.promptToUpload,
                                    disabled: l,
                                    onKeyDown: e => {
                                        if (("ArrowUp" === e.key || "ArrowDown" === e.key) && e.stopPropagation(), "Home" === e.key || "End" === e.key) {
                                            if (null == i) return;
                                            e.preventDefault(), e.stopPropagation();
                                            let t = i.getSlateEditor();
                                            if (null == t) return;
                                            "Home" === e.key ? p.SlateTransforms.resetSelectionToStart(t) : p.SlateTransforms.resetSelectionToEnd(t)
                                        }
                                        T && "Escape" === e.key && !S.getState().submitting && (null == i || i.blur(), S.getState().setFormOpen(!1), S.getState().setTitleFocused(!1), S.getState().setBodyFocused(!1), S.getState().setPreviewing(!1))
                                    },
                                    autoCompletePosition: "bottom"
                                })
                            }), (0, s.jsx)(h.InputError, {
                                error: v
                            })]
                        })
                    })
                });

            function eT() {
                return (0, s.jsx)("div", {
                    className: ec.previewModeIndicator,
                    children: (0, s.jsx)(h.Text, {
                        variant: "text-sm/normal",
                        color: "interactive-normal",
                        children: ed.default.Messages.PREVIEW_MODE
                    })
                })
            }

            function ep() {
                let e = (0, $.useIsForumPostPreviewEnabled)(),
                    {
                        previewing: t
                    } = (0, es.useForumPostComposerStore)(e => {
                        let {
                            previewing: t
                        } = e;
                        return {
                            previewing: t
                        }
                    }),
                    a = (0, es.useForumPostComposerStoreApi)(),
                    l = n.useCallback(() => {
                        a.getState().setPreviewing(!t), (0, ee.trackForumPreviewPostClicked)()
                    }, [t, a]);
                return e ? (0, s.jsx)(h.Tooltip, {
                    text: t ? ed.default.Messages.EXIT_PREVIEW : ed.default.Messages.PREVIEW,
                    children: e => (0, s.jsx)(h.Clickable, {
                        ...e,
                        onClick: l,
                        className: r()(ec.forumPostFormButton, {
                            [ec.forumPostFormButtonActive]: t
                        }),
                        children: t ? (0, s.jsx)(B.default, {
                            ...e,
                            width: 24,
                            height: 24
                        }) : (0, s.jsx)(H.default, {
                            ...e,
                            width: 24,
                            height: 24
                        })
                    })
                }) : null
            }
            let eS = n.memo(function(e) {
                let {
                    parentChannel: t,
                    canCreatePost: a,
                    className: l
                } = e, {
                    textAreaState: r,
                    appliedTags: i,
                    name: o
                } = (0, es.useForumPostComposerStore)(e => {
                    let {
                        textAreaState: t,
                        appliedTags: a,
                        name: s
                    } = e;
                    return {
                        textAreaState: t,
                        appliedTags: a,
                        name: s
                    }
                }), {
                    rateLimitPerUser: u
                } = t, d = u > 0, c = (0, m.useStateFromStores)([P.default], () => P.default.getSlowmodeCooldownGuess(t.id, P.SlowmodeType.CreateThread)), f = (0, m.useStateFromStores)([L.default], () => L.default.can(eo.Permissions.MANAGE_THREADS, t) || L.default.can(eo.Permissions.MANAGE_CHANNELS, t)), g = t.hasFlag(eu.ChannelFlags.REQUIRE_TAG) && 0 === i.size && o.length > 0 && r.textValue.length > 0, x = (0, es.useForumPostComposerStoreApi)(), _ = n.useCallback(() => {
                    x.getState().setBodyFocused(!1)
                }, [x]), p = n.useMemo(() => "" !== o.trim() && "" !== r.textValue.trim(), [o, r.textValue]);
                return n.useEffect(() => {
                    !p && x.getState().setPreviewing(!1)
                }, [p, x]), (0, s.jsxs)("div", {
                    className: l,
                    children: [(0, s.jsx)(eM, {
                        parentChannel: t
                    }), (0, s.jsx)("div", {
                        className: ec.tagsDivider
                    }), (0, s.jsxs)("div", {
                        className: ec.controlsContainer,
                        children: [(0, s.jsxs)("div", {
                            className: ec.controls,
                            children: [(0, s.jsxs)("div", {
                                className: ec.wrappedControls,
                                children: [g && (0, s.jsx)(h.Text, {
                                    variant: "text-sm/normal",
                                    color: "text-danger",
                                    children: ed.default.Messages.FORUM_POST_TAG_REQUIRED_ERROR
                                }), (0, s.jsx)(T.default, {
                                    type: em,
                                    textValue: r.textValue,
                                    className: ec.characterCount
                                }), d && (0, s.jsx)(el.default, {
                                    rateLimitPerUser: u,
                                    slowmodeCooldownGuess: c,
                                    isBypassSlowmode: f,
                                    leadingIcon: !0
                                })]
                            }), (0, s.jsx)(ex, {
                                parentChannel: t
                            }), p && (0, s.jsx)(ep, {}), (0, s.jsx)(eE, {
                                parentChannel: t,
                                disableIfInvalid: !0,
                                canCreatePost: a,
                                disabled: d && !f && c > 0
                            })]
                        }), (0, s.jsx)(C.default, {
                            type: em,
                            className: ec.expressionPicker,
                            onClick: _
                        }, "expression")]
                    })]
                })
            });

            function eE(e) {
                let {
                    parentChannel: t,
                    canCreatePost: a,
                    disabled: n,
                    disableIfInvalid: l = !1
                } = e, {
                    submitting: r,
                    textAreaState: i,
                    name: o,
                    appliedTags: u,
                    formOpen: d
                } = (0, es.useForumPostComposerStore)(e => {
                    let {
                        submitting: t,
                        textAreaState: a,
                        name: s,
                        appliedTags: n,
                        formOpen: l
                    } = e;
                    return {
                        submitting: t,
                        textAreaState: a,
                        name: s,
                        appliedTags: n,
                        formOpen: l
                    }
                }), c = t.hasFlag(eu.ChannelFlags.REQUIRE_TAG) && 0 === u.size && o.length > 0 && i.textValue.length > 0, f = (0, m.useStateFromStoresArray)([y.default], () => y.default.getUploads(t.id, F.DraftType.FirstThreadMessage)), g = i.textValue.trim().length > 0 || f.length > 0, x = !c && g && o.trim().length > 0;
                if (__OVERLAY__) return null;
                let C = function() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return (0, s.jsxs)(h.Button, {
                        ...e,
                        size: h.Button.Sizes.SMALL,
                        className: ec.submitButton,
                        innerClassName: ec.submitButtonInner,
                        type: "submit",
                        submitting: r,
                        disabled: l && !x || n || !a,
                        children: [(0, s.jsx)(G.default, {
                            className: ec.submitIcon,
                            width: 16,
                            height: 16
                        }), (0, s.jsx)(h.Text, {
                            variant: "text-md/semibold",
                            color: "none",
                            children: d ? ed.default.Messages.SUBMIT_POST : ed.default.Messages.NEW_FORUM_POST_NEW
                        })]
                    })
                };
                return a ? C() : (0, s.jsx)(h.Tooltip, {
                    text: ed.default.Messages.FORUM_NO_POST_PERMISSION_HELP,
                    children: e => C(e)
                })
            }

            function eN() {
                return Promise.resolve()
            }

            function eM(e) {
                let {
                    parentChannel: t
                } = e, {
                    appliedTags: a,
                    toggleAppliedTag: l,
                    setPopoutOpen: i
                } = (0, es.useForumPostComposerStore)(e => {
                    let {
                        appliedTags: t,
                        toggleAppliedTag: a,
                        setPopoutOpen: s
                    } = e;
                    return {
                        appliedTags: t,
                        toggleAppliedTag: a,
                        setPopoutOpen: s
                    }
                }, u.default), o = a.size >= ei.MAX_FORUM_POST_TAGS, m = (0, d.default)({
                    id: "".concat(t.id, "-post-form-tags-navigator"),
                    isEnabled: !0,
                    wrap: !0,
                    scrollToStart: eN,
                    scrollToEnd: eN,
                    orientation: c.Orientations.HORIZONTAL
                }), {
                    containerRef: f,
                    containerWidth: g
                } = (0, er.default)(), x = n.useRef(null), [C, _] = n.useState(!0), T = (0, J.useVisibleForumTags)(t), [p, S] = n.useState(0);
                return (n.useLayoutEffect(() => {
                    var e;
                    let t = x.current,
                        a = null == t ? void 0 : null === (e = t.children) || void 0 === e ? void 0 : e[0],
                        s = null == t || null == a || a.clientHeight > t.clientHeight;
                    if (s !== C && _(s), s && null != f.current && null != a && null != a.children) {
                        let {
                            left: e,
                            top: t
                        } = f.current.getBoundingClientRect(), s = 0;
                        for (let n of a.children) {
                            let {
                                right: a,
                                top: l,
                                height: r
                            } = n.getBoundingClientRect();
                            if (l - t > r) break;
                            a - e > s && (s = a - e)
                        }
                        S(s)
                    }
                }, [T, C, f, g]), 0 === T.length) ? null : (0, s.jsx)(s.Fragment, {
                    children: (0, s.jsxs)("div", {
                        className: ec.tagsContainer,
                        ref: f,
                        children: [(0, s.jsx)(W.default, {
                            className: ec.tagsIcon,
                            width: 16,
                            height: 16
                        }), (0, s.jsx)("div", {
                            className: ec.tagList,
                            ref: x,
                            children: (0, s.jsx)(d.ListNavigatorProvider, {
                                navigator: m,
                                children: (0, s.jsx)(d.ListNavigatorContainer, {
                                    children: e => {
                                        let {
                                            ref: t,
                                            ...n
                                        } = e;
                                        return (0, s.jsx)("div", {
                                            className: ec.tagListInner,
                                            ref: t,
                                            ...n,
                                            children: T.map(e => (0, s.jsx)(en.default, {
                                                ariaLabel: ed.default.Messages.FORUM_TAG_A11Y_ADD_TAG.format({
                                                    tagName: e.name
                                                }),
                                                tag: e,
                                                onClick: o && !a.has(e.id) ? void 0 : () => l(e.id),
                                                disabled: !a.has(e.id) && a.size >= ei.MAX_FORUM_POST_TAGS,
                                                selected: a.has(e.id),
                                                size: en.default.Sizes.SMALL
                                            }, e.id))
                                        })
                                    }
                                })
                            })
                        }), C && (0, s.jsx)(h.Popout, {
                            onRequestOpen: () => i(!0),
                            onRequestClose: () => i(!1),
                            renderPopout: e => {
                                let {
                                    closePopout: n
                                } = e;
                                return (0, s.jsx)(et.default, {
                                    parentChannel: t,
                                    appliedTags: a,
                                    maxTagsApplied: o,
                                    onSelectTag: l,
                                    onClose: n
                                })
                            },
                            position: "bottom",
                            align: "center",
                            children: e => (0, s.jsxs)(h.Button, {
                                ...e,
                                size: h.Button.Sizes.TINY,
                                className: ec.tagsButton,
                                innerClassName: ec.tagsButtonInner,
                                style: {
                                    left: p
                                },
                                look: h.Button.Looks.LINK,
                                "aria-label": ed.default.Messages.ADD_TAG_FORUM_POST,
                                children: [ed.default.Messages.FORUM_TAG_SEE_MORE_A11Y_LABEL, (0, s.jsx)(U.default, {
                                    width: 16
                                })]
                            })
                        }), (0, s.jsxs)(h.Button, {
                            size: h.Button.Sizes.TINY,
                            className: r()(ec.tagsButton, ec.tagsButtonPlaceholder),
                            innerClassName: ec.tagsButtonInner,
                            look: h.Button.Looks.LINK,
                            "aria-label": ed.default.Messages.ADD_TAG_FORUM_POST,
                            children: [ed.default.Messages.FORUM_TAG_SEE_MORE_A11Y_LABEL, (0, s.jsx)(U.default, {
                                width: 16
                            })]
                        })]
                    })
                })
            }

            function eA(e) {
                let {
                    style: t,
                    className: a
                } = e;
                return (0, s.jsx)("div", {
                    className: a,
                    style: t,
                    children: (0, s.jsx)("div", {
                        className: ec.loader
                    })
                })
            }
        },
        219664: function(e, t, a) {
            "use strict";
            a.r(t), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("683860"),
                o = a("442837"),
                u = a("692547"),
                d = a("481060"),
                c = a("738619"),
                m = a("841762"),
                h = a("25610"),
                f = a("118139"),
                g = a("169525"),
                x = a("255269"),
                C = a("524444"),
                _ = a("695346"),
                T = a("433355"),
                p = a("592125"),
                S = a("496675"),
                E = a("332475"),
                N = a("730845"),
                M = a("84017"),
                A = a("897353"),
                v = a("113039"),
                I = a("26290"),
                j = a("456269"),
                O = a("109590"),
                R = a("368844"),
                b = a("73315"),
                F = a("404616"),
                L = a("510060"),
                P = a("983200"),
                y = a("196255"),
                D = a("858543"),
                U = a("482062"),
                w = a("883728"),
                k = a("710352"),
                H = a("981631"),
                B = a("689938"),
                G = a("850994");

            function V(e) {
                let {
                    id: t,
                    channel: a,
                    goToThread: l,
                    overrideMedia: c,
                    className: m,
                    coords: h,
                    gridCoords: f,
                    gridSectionBoundaries: g,
                    observePostVisibilityAnalytics: C
                } = e, E = (0, o.useStateFromStores)([p.default], () => p.default.getChannel(a.parent_id)), N = a.id, M = n.useRef(null), A = (0, o.useStateFromStores)([T.default], () => T.default.getCurrentSidebarChannelId(a.parent_id) === a.id), {
                    firstMessage: v,
                    loaded: b
                } = (0, O.useFirstForumPostMessage)(a), {
                    firstMedia: P
                } = (0, j.useForumPostFirstMessageMarkup)({
                    firstMessage: v,
                    formatInline: !1,
                    noStyleAndInteraction: !1
                }), {
                    messageCountText: V
                } = (0, j.useMessageCount)(a), {
                    isNew: W,
                    hasUnreads: K
                } = (0, j.useForumPostReadStates)(a), X = n.useRef(null), {
                    handleLeftClick: Z,
                    handleRightClick: Q
                } = (0, w.default)({
                    facepileRef: X,
                    goToThread: l,
                    channel: a
                });
                n.useEffect(() => {
                    null == C || C(M.current, N)
                }, [C, N]);
                let J = (0, o.useStateFromStores)([S.default], () => S.default.can(H.Permissions.MANAGE_MESSAGES, a)),
                    $ = _.GifAutoPlay.useSetting(),
                    ee = _.RenderSpoilers.useSetting(),
                    et = (0, x.default)(ee, J),
                    ea = (0, R.useForumPostMediaThumbnail)(v, E, !1),
                    [es, en] = (0, L.getFrameDimensions)(h.width - 2 * L.IMAGE_PADDING),
                    el = (0, j.useLastActiveTimestamp)(a, i.ThreadSortOrder.CREATION_DATE, k.ForumTimestampFormats.POSTED_DURATION_AGO),
                    er = (0, F.useHighlightedChannelName)(a),
                    ei = (null == v ? void 0 : v.blocked) || null == (null != c ? c : P),
                    {
                        onFocus: eo,
                        ...eu
                    } = (0, U.useForumGridItem)({
                        id: t,
                        row: f.row,
                        column: f.column,
                        section: f.section,
                        boundaries: g
                    }),
                    ed = a.isMediaPost();
                return (0, s.jsxs)("li", {
                    ref: M,
                    onClick: Z,
                    onFocus: eo,
                    onContextMenu: Q,
                    className: r()(G.container, m, {
                        [G.isOpen]: A
                    }),
                    style: {
                        ...h
                    },
                    children: [(0, s.jsx)(d.Clickable, {
                        onClick: Z,
                        focusProps: {
                            ringTarget: M
                        },
                        onContextMenu: Q,
                        "aria-label": B.default.Messages.FORUM_POST_ARIA_LABEL.format({
                            title: a.name,
                            count: V
                        }),
                        className: G.focusTarget,
                        ...eu
                    }), (0, s.jsxs)("div", {
                        className: G.header,
                        children: [(0, s.jsxs)("div", {
                            className: G.authorRow,
                            children: [(0, s.jsxs)("div", {
                                className: G.rowGroup,
                                children: [(0, s.jsx)(y.default, {
                                    channel: a,
                                    message: v
                                }), (0, s.jsx)(d.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    className: G.postCreationTimestamp,
                                    children: el
                                })]
                            }), W ? (0, s.jsx)(I.TextBadge, {
                                className: r()(G.newBadge),
                                color: u.default.unsafe_rawColors.BRAND_260.css,
                                text: B.default.Messages.NEW
                            }) : null]
                        }), (0, s.jsx)(d.HeadingLevel, {
                            children: (0, s.jsx)(d.Heading, {
                                variant: "heading-md/extrabold",
                                className: G.title,
                                color: K ? "header-primary" : "text-muted",
                                style: {
                                    width: "".concat(h.width - 2 * L.GRID_POST_CONTROLS_MARGIN, "px")
                                },
                                children: er
                            })
                        })]
                    }), (0, s.jsx)("div", {
                        className: G.postBody,
                        children: (0, s.jsx)(d.FocusBlock, {
                            children: ei ? (0, s.jsx)(q, {
                                channel: a,
                                firstMessage: v,
                                isFirstMessageLoaded: b,
                                containerWidth: h.width,
                                hasUnreads: K
                            }) : (0, s.jsxs)(s.Fragment, {
                                children: [(0, s.jsx)(Y, {
                                    mediaAttachments: ea,
                                    globalSpoilerRenderSetting: et,
                                    containerWidth: es,
                                    containerHeight: ed ? 9 / 16 * es : en,
                                    canAutoPlay: $,
                                    shouldMaintainAspectRatio: ed
                                }), (0, s.jsx)("div", {
                                    className: G.tagsRow,
                                    children: (0, s.jsx)(D.default, {
                                        channel: a,
                                        tagsClassName: G.tagPill
                                    })
                                })]
                            })
                        })
                    }), (0, s.jsx)("div", {
                        className: G.footer,
                        children: (0, s.jsx)(d.FocusBlock, {
                            children: (0, s.jsx)(z, {
                                channel: a,
                                firstMessage: v,
                                facepileRef: X
                            })
                        })
                    })]
                })
            }

            function z(e) {
                let {
                    channel: t,
                    facepileRef: a,
                    firstMessage: n
                } = e, l = (0, j.useTypingUserIds)(t), r = (null == n ? void 0 : n.reactions) != null && n.reactions.length > 0;
                return (0, s.jsxs)("div", {
                    className: G.forumPostControls,
                    children: [(0, s.jsxs)("div", {
                        className: G.controlsGroup,
                        children: [(0, s.jsx)("div", {
                            className: G.messageCountContainer,
                            children: (0, s.jsx)(F.MessageCount, {
                                channel: t,
                                iconSize: 16,
                                showReadState: !0
                            })
                        }), l.length > 0 ? (0, s.jsxs)(s.Fragment, {
                            children: [(0, s.jsx)("span", {
                                className: G.bullet,
                                children: "•"
                            }), (0, s.jsxs)("div", {
                                className: G.typing,
                                children: [(0, s.jsx)(F.Facepile, {
                                    channel: t,
                                    userIds: l,
                                    facepileRef: a
                                }), (0, s.jsx)("div", {
                                    className: G.dots,
                                    children: (0, s.jsx)(d.Dots, {
                                        themed: !0,
                                        dotRadius: 2
                                    })
                                }), (0, s.jsx)(c.default, {
                                    channel: t,
                                    className: G.typingUsers,
                                    renderDots: !1
                                })]
                            })]
                        }) : null]
                    }), (0, s.jsxs)("div", {
                        className: G.controlsGroup,
                        children: [r || null == n ? null : (0, s.jsx)(F.DefaultReaction, {
                            firstMessage: n,
                            channel: t
                        }), null == n ? null : (0, s.jsx)(F.MostUsedReaction, {
                            firstMessage: n,
                            channel: t
                        })]
                    })]
                })
            }
            t.default = n.memo(function(e) {
                let {
                    id: t,
                    threadId: a,
                    goToThread: n,
                    overrideMedia: l,
                    className: r,
                    coords: i,
                    gridCoords: u,
                    gridSectionBoundaries: d,
                    observePostVisibilityAnalytics: c
                } = e, m = (0, o.useStateFromStores)([p.default], () => p.default.getChannel(a));
                return null == m ? null : (0, s.jsx)(V, {
                    id: t,
                    channel: m,
                    goToThread: n,
                    overrideMedia: l,
                    className: r,
                    coords: i,
                    gridCoords: u,
                    observePostVisibilityAnalytics: c,
                    gridSectionBoundaries: d
                })
            });
            let W = e => e.preventDefault(),
                K = n.memo(function(e) {
                    return (0, s.jsx)(s.Fragment, {
                        children: (0, C.renderImageComponent)(e)
                    })
                }),
                Y = n.memo(function(e) {
                    let {
                        mediaAttachments: t,
                        globalSpoilerRenderSetting: a,
                        containerWidth: l,
                        containerHeight: i,
                        canAutoPlay: o,
                        shouldMaintainAspectRatio: u = !1
                    } = e, {
                        containsVideo: d,
                        containsGif: c
                    } = n.useMemo(() => (0, R.messageContainsGifOrVideo)(t), [t]), x = n.useMemo(() => t.slice(P.MOSAIC_MIN_INDEX, P.MOSAIC_MAX_INDEX), [t]), C = (0, P.useImageContainerStyles)({
                        numAttachments: x.length,
                        containerWidth: l,
                        containerHeight: i
                    }), _ = (0, P.useImageDimensionStyles)({
                        imageContainerStyles: C,
                        containerWidth: l,
                        containerHeight: i
                    }), T = (0, h.useShouldRedactExplicitContentForForum)(), p = n.useMemo(() => x.map((e, t) => {
                        var n;
                        let [l, i] = (0, g.getForumPostShouldObscure)(e, !a, T), h = (0, g.getObscuredAlt)(i), x = {
                            ..._[t],
                            src: e.src,
                            width: e.width,
                            height: e.height,
                            alt: null != e.alt && l ? h : e.alt,
                            onClick: W,
                            shouldRenderAccessory: !c && !d
                        }, p = (0, f.isAnimatedImageUrl)(e.src) ? "".concat(e.src, "?format=png") : e.src, S = o && !l ? e.src : p;
                        return (0, s.jsxs)("div", {
                            className: G.bodyMediaFrame,
                            style: C[t],
                            children: [u ? (0, s.jsx)(m.default, {
                                ...x,
                                src: S,
                                backgroundSrc: p,
                                aspectRatio: x.maxWidth / x.maxHeight,
                                alt: null !== (n = x.alt) && void 0 !== n ? n : "",
                                className: r()(G.mediaPostContainer, {
                                    [G.obscured]: l
                                }),
                                imageChildClassName: G.mediaPostThumbnail
                            }) : e.src.startsWith("data:") ? (0, s.jsx)(E.default, {
                                ...x,
                                className: G.mediaContainer,
                                imageClassName: r()(G.thumbnailOverride, {
                                    [G.obscured]: l
                                })
                            }) : (0, s.jsx)(K, {
                                ...x,
                                autoPlay: o && !l,
                                containerClassName: G.mosaicMediaContainer,
                                imageClassName: r()(G.imageCover, {
                                    [G.obscured]: l
                                }),
                                responsive: !0
                            }), l && (0, s.jsx)("div", {
                                className: G.obscuredTagContainer,
                                children: (0, s.jsx)(b.default, {
                                    obscureReason: i,
                                    iconClassname: G.obscuredTag
                                })
                            })]
                        }, e.src)
                    }), [o, c, d, a, C, _, x, u, T]);
                    return (0, s.jsxs)("div", {
                        className: G.bodyMedia,
                        style: {
                            width: l,
                            height: i
                        },
                        children: [(0, s.jsx)(s.Fragment, {
                            children: p
                        }), (c || d) && (0, s.jsxs)("div", {
                            className: G.mediaIconsRow,
                            children: [d && (0, s.jsx)(A.default, {
                                width: "22px",
                                height: "22px",
                                className: G.mediaIcon
                            }), c && (0, s.jsx)(N.default, {
                                className: G.mediaIcon
                            })]
                        }), t.length > P.MOSAIC_MAX_IMAGE_COUNT && (0, s.jsx)(X, {
                            text: (t.length - (0, P.MOSAIC_MAX_IMAGE_COUNT)).toString(),
                            icon: M.default,
                            pillClassName: G.moreImagesPill,
                            iconClassName: G.moreImagesPillIcon,
                            textClassName: G.moreImagesPillText
                        })]
                    })
                });

            function X(e) {
                let {
                    text: t,
                    icon: a,
                    pillClassName: n,
                    iconClassName: l,
                    textClassName: r
                } = e;
                return (0, s.jsxs)("div", {
                    className: n,
                    children: [(0, s.jsx)(a, {
                        className: l
                    }), (0, s.jsxs)(d.Text, {
                        variant: "text-xs/medium",
                        className: r,
                        children: ["+", t]
                    })]
                })
            }

            function q(e) {
                let {
                    channel: t,
                    firstMessage: a,
                    isFirstMessageLoaded: l,
                    containerWidth: i,
                    hasUnreads: o
                } = e, [u, c] = (0, L.getFrameDimensions)(i - 2 * L.IMAGE_PADDING), {
                    content: m
                } = (0, j.useForumPostFirstMessageMarkup)({
                    firstMessage: a,
                    formatInline: !1,
                    noStyleAndInteraction: !0
                }), {
                    shouldRenderTagsRow: h
                } = (0, D.useTagsRowHooks)({
                    channel: t,
                    isNew: !1
                }), f = n.useMemo(() => ({
                    width: u,
                    height: c
                }), [u, c]), g = o ? G.textContentUnread : G.textContentRead;
                return (0, s.jsx)(s.Fragment, {
                    children: (0, s.jsxs)("div", {
                        className: G.contentPreview,
                        style: f,
                        children: [(0, s.jsxs)("div", {
                            className: G.content,
                            children: [l && null == a && (0, s.jsx)(d.Text, {
                                variant: "text-sm/normal",
                                color: o ? "header-secondary" : "text-muted",
                                children: B.default.Messages.REPLY_QUOTE_MESSAGE_DELETED
                            }), l && null != a && (0, s.jsx)(v.default, {
                                message: a,
                                content: m,
                                className: g
                            })]
                        }), (0, s.jsx)("div", {
                            className: r()(G.textContentFooter, {
                                [G.noTags]: !h
                            }),
                            children: h ? (0, s.jsx)(D.default, {
                                channel: t,
                                tagsClassName: G.tagPill,
                                className: G.__invalid_row
                            }) : null
                        })]
                    })
                })
            }
        },
        895932: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return c
                }
            });
            var s = a("735250");
            a("470079");
            var n = a("313361"),
                l = a("683860"),
                r = a("481060"),
                i = a("109434"),
                o = a("228392"),
                u = a("689938"),
                d = a("122128");

            function c(e) {
                let {
                    channel: t,
                    closePopout: a
                } = e, {
                    sortOrder: c,
                    layoutType: m
                } = (0, i.useForumChannelStore)(t.id), h = (0, i.useForumChannelStoreApi)(), f = t.isMediaChannel(), g = e => {
                    (0, o.trackForumSortOrderUpdated)({
                        guildId: t.guild_id,
                        channelId: t.id,
                        sortOrder: e
                    }), h.getState().setSortOrder(t.id, e), a()
                }, x = e => {
                    (0, o.trackForumLayoutUpdated)({
                        guildId: t.guild_id,
                        channelId: t.id,
                        forumLayout: e
                    }), h.getState().setLayoutType(t.id, e), a()
                };
                return (0, s.jsx)("div", {
                    className: d.container,
                    children: (0, s.jsxs)(r.Menu, {
                        navId: "sort-and-view",
                        "aria-label": f ? u.default.Messages.MEDIA_CHANNEL_SORT_A11Y_LABEL : u.default.Messages.FORUM_SORT_AND_VIEW_AY11_LABEL,
                        hideScroller: !0,
                        onClose: a,
                        onSelect: a,
                        children: [(0, s.jsxs)(r.MenuGroup, {
                            label: u.default.Messages.FORUM_CHANNEL_SORT_BY,
                            children: [(0, s.jsx)(r.MenuRadioItem, {
                                id: "sort-by-recent-activity",
                                group: "sort-by",
                                label: u.default.Messages.FORUM_CHANNEL_SORT_BY_RECENTLY_ACTIVE,
                                action: () => g(l.ThreadSortOrder.LATEST_ACTIVITY),
                                checked: c === l.ThreadSortOrder.LATEST_ACTIVITY
                            }), (0, s.jsx)(r.MenuRadioItem, {
                                id: "sort-by-date-posted",
                                group: "sort-by",
                                label: u.default.Messages.FORUM_CHANNEL_SORT_BY_DATE_POSTED,
                                action: () => g(l.ThreadSortOrder.CREATION_DATE),
                                checked: c === l.ThreadSortOrder.CREATION_DATE
                            })]
                        }), !t.isMediaChannel() && (0, s.jsxs)(r.MenuGroup, {
                            label: u.default.Messages.FORUM_CHANNEL_VIEW_AS,
                            children: [(0, s.jsx)(r.MenuRadioItem, {
                                id: "view-as-list",
                                group: "view-as",
                                label: u.default.Messages.FORUM_CHANNEL_VIEW_AS_LIST,
                                action: () => x(n.ForumLayout.LIST),
                                checked: m === n.ForumLayout.LIST
                            }), (0, s.jsx)(r.MenuRadioItem, {
                                id: "view-as-grid",
                                group: "view-as",
                                label: u.default.Messages.FORUM_CHANNEL_VIEW_AS_GRID,
                                action: () => x(n.ForumLayout.GRID),
                                checked: m === n.ForumLayout.GRID
                            })]
                        }), (0, s.jsx)(r.MenuGroup, {
                            children: (0, s.jsx)(r.MenuItem, {
                                id: "reset-all",
                                className: d.clearText,
                                label: (0, s.jsx)(r.Text, {
                                    variant: "text-sm/medium",
                                    color: "none",
                                    children: u.default.Messages.FORUM_CHANNEL_RESET_ALL
                                }),
                                action: () => {
                                    g(t.getDefaultSortOrder()), x(t.getDefaultLayout())
                                }
                            })
                        })]
                    })
                })
            }
        },
        510060: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                ForumListLayoutRenderOptions: function() {
                    return u
                },
                GRID_POST_CONTROLS_MARGIN: function() {
                    return i
                },
                GridLayout: function() {
                    return o
                },
                IMAGE_PADDING: function() {
                    return c
                },
                getFrameDimensions: function() {
                    return d
                },
                getGridPostHeight: function() {
                    return m
                }
            });
            var s = a("512722"),
                n = a.n(s);

            function l(e, t, a) {
                return t in e ? Object.defineProperty(e, t, {
                    value: a,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = a, e
            }
            let r = 2 / 3,
                i = 12;
            class o {
                getWidth(e) {
                    return this.getRenderOptions(e).columnWidth
                }
                getRenderOptions(e) {
                    if (e <= this.minWidth) return {
                        columns: 1,
                        columnWidth: this.minWidth
                    };
                    let t = e / this.maxWidth,
                        a = Math.max(Math.floor(t + (e / this.minWidth - t) / 2), 1),
                        s = this.gap * (a - 1);
                    return {
                        columns: a,
                        columnWidth: (e - s) / a
                    }
                }
                constructor({
                    minWidth: e,
                    maxWidth: t,
                    gap: a
                }) {
                    l(this, "minWidth", void 0), l(this, "maxWidth", void 0), l(this, "gap", void 0), n()(e < t, "minWidth needs to be smaller than maxWidth"), this.minWidth = e, this.maxWidth = t, this.gap = a
                }
            }
            let u = {
                    columns: 1,
                    columnWidth: 450
                },
                d = e => {
                    let t = e - 2;
                    return [t, Math.ceil(t * r)]
                },
                c = 12,
                m = e => 60 + d(e - 2 * c)[1] + 24 + 3 * i
        },
        983200: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                MOSAIC_MAX_IMAGE_COUNT: function() {
                    return o
                },
                MOSAIC_MAX_INDEX: function() {
                    return i
                },
                MOSAIC_MIN_INDEX: function() {
                    return r
                },
                useImageContainerStyles: function() {
                    return m
                },
                useImageDimensionStyles: function() {
                    return f
                }
            });
            var s = a("470079"),
                n = a("31775"),
                l = a.n(n);
            let r = 0,
                i = 4,
                o = 4,
                u = "absolute",
                d = (e, t, a, s) => {
                    if (0 === a) return [];
                    if (1 === a) return [{
                        width: e,
                        height: t,
                        top: 0,
                        left: 0,
                        position: u
                    }];
                    if (2 === a) {
                        let a = Math.ceil((e - s) / 2);
                        return [{
                            top: 0,
                            left: 0,
                            position: u,
                            width: a,
                            height: t
                        }, {
                            top: 0,
                            left: a + s,
                            position: u,
                            width: a,
                            height: t
                        }]
                    }
                    if (3 === a) {
                        let a = Math.ceil((e - s) / 2),
                            n = Math.ceil((t - s) / 2);
                        return [{
                            top: 0,
                            left: 0,
                            position: u,
                            width: a,
                            height: t
                        }, {
                            top: 0,
                            left: a + s,
                            position: u,
                            width: a,
                            height: n
                        }, {
                            top: n + s,
                            left: a + s,
                            position: u,
                            width: a,
                            height: n
                        }]
                    } else {
                        let a = Math.ceil((e - s) / 2),
                            n = Math.ceil((t - s) / 2);
                        return [{
                            top: 0,
                            left: 0,
                            position: u,
                            width: a,
                            height: n
                        }, {
                            top: n + s,
                            left: 0,
                            position: u,
                            width: a,
                            height: n
                        }, {
                            top: 0,
                            left: a + s,
                            position: u,
                            width: a,
                            height: n
                        }, {
                            top: n + s,
                            left: a + s,
                            position: u,
                            width: a,
                            height: n
                        }]
                    }
                },
                c = new(l())({
                    max: 100
                });

            function m(e) {
                let {
                    numAttachments: t,
                    containerWidth: a,
                    containerHeight: n
                } = e;
                return s.useMemo(() => (function(e) {
                    var t, a, s;
                    let {
                        numAttachments: n,
                        containerWidth: l,
                        containerHeight: r
                    } = e;
                    let i = (t = n, a = l, s = r, "".concat(t, "-").concat(a, "-").concat(s)),
                        o = c.get(i);
                    if (null != o) return o;
                    {
                        let e = d(l, r, n, 4);
                        return c.set(i, e), e
                    }
                })({
                    numAttachments: t,
                    containerWidth: a,
                    containerHeight: n
                }), [t, a, n])
            }

            function h(e) {
                return e.map((t, a) => ({
                    minWidth: 2 * e[a].width,
                    minHeight: 2 * e[a].height,
                    maxWidth: 2 * e[a].width,
                    maxHeight: 2 * e[a].height
                }))
            }

            function f(e) {
                let {
                    imageContainerStyles: t,
                    containerWidth: a,
                    containerHeight: n
                } = e, l = s.useRef(h(t)), r = s.useRef(a), i = s.useRef(n), o = a > r.current + 100, u = n > i.current + 100;
                return (o || u) && (l.current = h(t)), l.current
            }
        },
        399894: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("735250");
            a("470079");
            var n = a("120356"),
                l = a.n(n),
                r = a("913527"),
                i = a.n(r),
                o = a("481060"),
                u = a("199882"),
                d = a("70956"),
                c = a("689938"),
                m = a("978017");
            t.default = e => {
                let {
                    rateLimitPerUser: t,
                    slowmodeCooldownGuess: a,
                    isBypassSlowmode: n,
                    leadingIcon: r = !1
                } = e, h = "", f = "";
                if (t >= d.default.Seconds.HOUR) {
                    let e = Math.floor(t / d.default.Seconds.HOUR),
                        a = Math.floor((t - e * d.default.Seconds.HOUR) / d.default.Seconds.MINUTE),
                        s = t - e * d.default.Seconds.HOUR - a * d.default.Seconds.MINUTE;
                    f = c.default.Messages.FORUM_SLOWMODE_DESC_HOURS.format({
                        hours: e,
                        minutes: a,
                        seconds: s
                    })
                } else if (t >= 60) {
                    let e = Math.floor(t / 60);
                    f = c.default.Messages.FORUM_SLOWMODE_DESC_MINUTES.format({
                        minutes: e,
                        seconds: t - 60 * e
                    })
                } else f = c.default.Messages.FORUM_SLOWMODE_DESC.format({
                    seconds: t
                });
                if (!n && a > 0) {
                    let e = i().duration(a);
                    if (a > d.default.Millis.HOUR) {
                        let t = "".concat(e.minutes()).padStart(2, "0"),
                            a = "".concat(e.seconds()).padStart(2, "0");
                        h = "".concat(e.hours(), ":").concat(t, ":").concat(a)
                    } else {
                        let t = "".concat(e.seconds()).padStart(2, "0");
                        h = "".concat(e.minutes(), ":").concat(t)
                    }
                } else h = n ? c.default.Messages.CHANNEL_SLOWMODE_DESC_IMMUNE : c.default.Messages.CHANNEL_SLOWMODE_DESC_SHORT;
                let g = (0, s.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: h
                    }),
                    x = (0, s.jsx)(u.default, {
                        className: l()(m.slowModeIcon, {
                            [m.leadingIcon]: r
                        })
                    });
                return (0, s.jsx)(o.Tooltip, {
                    text: f,
                    children: e => (0, s.jsx)("div", {
                        className: m.cooldownWrapper,
                        ...e,
                        children: r ? (0, s.jsxs)(s.Fragment, {
                            children: [x, g]
                        }) : (0, s.jsxs)(s.Fragment, {
                            children: [g, x]
                        })
                    })
                })
            }
        },
        276357: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return C
                }
            }), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("924826"),
                r = a("442837"),
                i = a("481060"),
                o = a("607070"),
                u = a("109434"),
                d = a("456269"),
                c = a("228392"),
                m = a("479099"),
                h = a("981631"),
                f = a("689938"),
                g = a("451379");

            function x() {
                return Promise.resolve()
            }

            function C(e) {
                let {
                    channel: t,
                    closePopout: a,
                    setPopoutRef: C
                } = e, _ = (0, d.useVisibleForumTags)(t), {
                    tagFilter: T
                } = (0, u.useForumChannelStore)(t.id), p = (0, u.useForumChannelStoreApi)(), S = (0, r.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), E = n.useCallback(e => {
                    (0, c.trackForumTagFilterClicked)({
                        guildId: t.guild_id,
                        channelId: t.id,
                        tagId: e,
                        filterTagIds: Array.from(T),
                        added: !T.has(e),
                        location: {
                            page: h.AnalyticsPages.GUILD_CHANNEL,
                            section: h.AnalyticsSections.FORUM_CHANNEL_HEADER,
                            object: h.AnalyticsObjects.CHANNEL_TAG
                        }
                    }), p.getState().toggleTagFilter(t.id, e)
                }, [t, T, p]), N = n.useCallback(() => {
                    p.getState().setTagFilter(t.id, new Set), !S && a()
                }, [p, t.id, S, a]), M = (0, l.default)({
                    id: "".concat(t.id, "-all-tags-dropdown-navigator"),
                    isEnabled: !0,
                    wrap: !0,
                    scrollToStart: x,
                    scrollToEnd: x
                }), A = n.useRef(null);
                return n.useEffect(() => {
                    requestAnimationFrame(() => {
                        if (null != A.current) {
                            let e = A.current.querySelector(".".concat(g.tag));
                            null != e && e.focus()
                        }
                    })
                }, []), (0, s.jsxs)(i.Dialog, {
                    ref: C,
                    "aria-label": f.default.Messages.FORUM_TAG_FILTER_HEADER,
                    className: g.container,
                    children: [(0, s.jsx)("div", {
                        className: g.header,
                        children: (0, s.jsxs)("div", {
                            className: g.headerLeft,
                            children: [(0, s.jsx)(i.Heading, {
                                color: "interactive-normal",
                                variant: "text-xs/bold",
                                className: g.headerText,
                                children: f.default.Messages.FORUM_TAG_POST_SELECT
                            }), (0, s.jsx)("div", {
                                className: g.countContainer,
                                children: (0, s.jsx)(i.Text, {
                                    className: g.countText,
                                    color: "none",
                                    variant: "text-xs/medium",
                                    children: T.size
                                })
                            })]
                        })
                    }), (0, s.jsx)(l.ListNavigatorProvider, {
                        navigator: M,
                        children: (0, s.jsx)(l.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    ...a
                                } = e;
                                return (0, s.jsx)("div", {
                                    ref: e => {
                                        t.current = e, A.current = e
                                    },
                                    ...a,
                                    className: g.tagContainer,
                                    children: _.map(e => (0, s.jsx)(m.default, {
                                        className: g.tag,
                                        tag: e,
                                        selected: T.has(e.id),
                                        onClick: () => E(e.id)
                                    }, e.id))
                                })
                            }
                        })
                    }), (0, s.jsx)("div", {
                        className: g.separator
                    }), (0, s.jsx)(i.Button, {
                        look: i.Button.Looks.LINK,
                        size: i.Button.Sizes.MIN,
                        color: i.Button.Colors.CUSTOM,
                        className: g.clear,
                        "aria-label": f.default.Messages.FORUM_CLEAR_ALL,
                        onClick: N,
                        children: (0, s.jsx)(i.Text, {
                            variant: "text-sm/medium",
                            color: "text-link",
                            children: f.default.Messages.FORUM_CLEAR_ALL
                        })
                    })]
                })
            }
        },
        81490: function(e, t, a) {
            "use strict";
            a.r(t), a("47120");
            var s = a("470079"),
                n = a("796075"),
                l = a("481060");
            let r = "undefined" == typeof ResizeObserver ? n.ResizeObserver : ResizeObserver,
                i = new Map,
                o = new r(e => {
                    e.forEach(e => {
                        var t;
                        let {
                            target: a
                        } = e;
                        null === (t = i.get(a)) || void 0 === t || t(e)
                    })
                });
            t.default = () => {
                let e = s.useRef(null),
                    [t, a] = s.useState(400),
                    n = s.useCallback(() => {
                        null !== e.current && a(e.current.clientWidth)
                    }, [a, e]);
                return (0, l.useResizeObserverSubscription)({
                    ref: e,
                    key: "forum-container",
                    onUpdate: n,
                    resizeObserver: o,
                    listenerMap: i
                }), {
                    containerRef: e,
                    containerWidth: t
                }
            }
        },
        482062: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                GridNavigatorProvider: function() {
                    return _
                },
                default: function() {
                    return h
                },
                useForumGridItem: function() {
                    return C
                }
            }), a("47120");
            var s = a("735250"),
                n = a("470079"),
                l = a("25441"),
                r = a("536895"),
                i = a("260866");
            let o = "data-grid-item-id",
                u = "data-grid-section",
                d = "data-grid-prev-section-boundary",
                c = new Set([r.Keys.UP, r.Keys.DOWN, r.Keys.LEFT, r.Keys.RIGHT]);

            function m(e) {
                let {
                    section: t,
                    column: a,
                    row: s
                } = e, n = "[".concat(u, '="').concat(t, '"]'), l = "[".concat("aria-colindex", '="').concat(a, '"]'), r = "[".concat("aria-rowindex", '="').concat(s, '"]');
                return "".concat(n).concat(l).concat(r)
            }

            function h(e) {
                let {
                    id: t,
                    isEnabled: a,
                    setFocus: s
                } = e, u = n.useRef(null), h = n.useRef(!1), f = n.useRef(null), g = n.useRef(a);
                n.useLayoutEffect(() => {
                    g.current = a
                }, [a]);
                let x = n.useCallback(e => {
                        var t;
                        return (null !== (t = f.current) && void 0 !== t ? t : document).querySelector(e)
                    }, []),
                    C = n.useCallback((e, t) => {
                        g.current && s(e, t)
                    }, [s]),
                    _ = n.useCallback(e => {
                        if (g.current) {
                            var t;
                            null === (t = document.querySelector(e)) || void 0 === t || t.focus()
                        }
                    }, []),
                    T = n.useCallback(e => {
                        u.current = e;
                        let a = (0, i.createSelector)(e, o),
                            s = (0, i.getItemId)(e);
                        C(a, s), (0, l.notifyFocusSubscribers)(t, s, !0)
                    }, [t, C]),
                    [p, S] = n.useState(!1),
                    E = n.useRef(p);
                n.useLayoutEffect(() => {
                    E.current = p
                }, [p]), n.useLayoutEffect(() => {
                    let e = f.current;
                    if (null != e) return e.addEventListener("focusin", a), e.addEventListener("focusout", s), e.addEventListener("focus", n), e.addEventListener("scroll", l, {
                        passive: !0
                    }), () => {
                        e.removeEventListener("focusin", a), e.removeEventListener("focusout", s), e.removeEventListener("focus", n), e.removeEventListener("scroll", l)
                    };

                    function a() {
                        S(!0)
                    }

                    function s(e) {
                        !e.currentTarget.contains(e.relatedTarget) && (S(!1), requestAnimationFrame(() => {
                            let e = u.current;
                            null !== e && null == x((0, i.createSelector)(e, o)) && _((0, i.createSelector)(t, "data-grid-id"))
                        }))
                    }

                    function n() {
                        let e = f.current;
                        if (E.current || null == e) return
                    }

                    function l() {
                        h.current = !0
                    }
                }, [t, C, _, T, x]);
                let N = n.useCallback(e => {
                        var t, a;
                        if (!g.current) return;
                        let s = u.current,
                            n = f.current;
                        if (null == s) return;
                        let l = (0, i.createSelector)(s, o),
                            h = null == n ? void 0 : n.querySelector(l);
                        if (null == h) return;
                        let C = parseInt(null !== (t = h.getAttribute("data-grid-section")) && void 0 !== t ? t : ""),
                            _ = parseInt(h.getAttribute("aria-rowindex")),
                            p = parseInt(h.getAttribute("aria-colindex"));
                        switch (c.has(e.key) && (e.stopPropagation(), e.preventDefault()), e.key) {
                            case r.Keys.RIGHT: {
                                let e = x(m({
                                    section: C,
                                    row: _,
                                    column: p + 1
                                }));
                                if (null != e) {
                                    let t = e.getAttribute(o);
                                    null != t && T(t)
                                }
                                return
                            }
                            case r.Keys.LEFT: {
                                let e = x(m({
                                    section: C,
                                    row: _,
                                    column: p - 1
                                }));
                                if (null != e) {
                                    let t = e.getAttribute(o);
                                    null != t && T(t)
                                }
                                return
                            }
                            case r.Keys.DOWN: {
                                let e = x(m({
                                    section: C,
                                    row: _ + 1,
                                    column: p
                                }));
                                if (null == e && (e = x(m({
                                        section: C + 1,
                                        row: 0,
                                        column: p
                                    }))), null != e) {
                                    let t = e.getAttribute(o);
                                    null != t && T(t)
                                }
                                return
                            }
                            case r.Keys.UP: {
                                let e;
                                if (0 === _) {
                                    let t = parseInt(h.getAttribute(d));
                                    null == (e = x(m({
                                        section: C - 1,
                                        row: t,
                                        column: p
                                    }))) && (e = x(m({
                                        section: C - 1,
                                        row: t - 1,
                                        column: p
                                    })))
                                } else e = x(m({
                                    section: C,
                                    row: _ - 1,
                                    column: p
                                }));
                                if (null != e) {
                                    let t = e.getAttribute(o);
                                    null != t && T(t)
                                }
                                return
                            }
                            case r.Keys.SPACE:
                            case r.Keys.ENTER: {
                                if (e.repeat) return;
                                let t = u.current;
                                if (null != t) {
                                    let s = x((0, i.createSelector)(t, o)),
                                        n = null !== (a = null == s ? void 0 : s.ownerDocument) && void 0 !== a ? a : document,
                                        l = s === n.activeElement;
                                    null != s && l && (e.preventDefault(), e.stopPropagation(), null == s || s.click())
                                }
                            }
                        }
                    }, [x, T]),
                    M = n.useCallback(e => {
                        let a = null != e ? (0, i.createListItemId)(t, e) : null;
                        u.current = a
                    }, [t]);
                return n.useMemo(() => ({
                    id: t,
                    containerProps: {
                        onKeyDown: N,
                        ref: f
                    },
                    setFocus: M
                }), [t, N, M])
            }
            let f = {
                    id: "NO_LIST",
                    onKeyDown() {},
                    ref: n.createRef()
                },
                g = n.createContext({
                    id: "NO_LIST",
                    setFocus() {}
                }),
                x = n.createContext(f);

            function C(e) {
                let {
                    id: t,
                    section: a,
                    row: s,
                    column: r,
                    boundaries: c
                } = e, [m, h] = n.useState(0 === s && 0 === r ? 0 : -1), {
                    id: f,
                    setFocus: x
                } = n.useContext(g), C = n.useCallback(() => x(t), [t, x]);
                return n.useLayoutEffect(() => (0, l.addFocusSubscriber)(f, e => {
                    h(e === t ? 0 : -1)
                }), [t, f]), {
                    [o]: (0, i.createListItemId)(f, t),
                    [u]: a,
                    [d]: c[a],
                    role: "gridcell",
                    "aria-rowindex": s,
                    "aria-colindex": r,
                    tabIndex: m,
                    onFocus: C
                }
            }

            function _(e) {
                let {
                    children: t,
                    navigator: a
                } = e, {
                    id: l,
                    setFocus: r,
                    containerProps: {
                        onKeyDown: i,
                        ref: o
                    }
                } = a, u = n.useMemo(() => ({
                    id: l,
                    setFocus: r
                }), [l, r]), d = n.useMemo(() => ({
                    onKeyDown: i,
                    ref: o,
                    id: l
                }), [i, o, l]);
                return (0, s.jsx)(x.Provider, {
                    value: d,
                    children: (0, s.jsx)(g.Provider, {
                        value: u,
                        children: t
                    })
                })
            }
        },
        260503: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return l
                }
            });
            var s = a("470079"),
                n = a("924826");

            function l(e) {
                let {
                    listRef: t,
                    padding: a,
                    channel: l,
                    isEnabled: r
                } = e, i = s.useCallback(e => {
                    let s = t.current,
                        n = document.querySelector(e);
                    null != n && (null == s || s.scrollIntoViewNode({
                        node: n,
                        padding: a,
                        callback: () => {
                            var t;
                            null === (t = document.querySelector(e)) || void 0 === t || t.focus({
                                preventScroll: !0
                            })
                        }
                    }))
                }, [a]), o = s.useCallback(() => new Promise(e => {
                    let a = t.current;
                    null == a || a.scrollToTop({
                        callback: () => requestAnimationFrame(e)
                    })
                }), []), u = s.useCallback(() => new Promise(e => {
                    let a = t.current;
                    null == a || a.scrollToBottom({
                        callback: () => requestAnimationFrame(e)
                    })
                }), []);
                return (0, n.default)({
                    id: "forum-channel-list-".concat(l.id),
                    isEnabled: r,
                    scrollToStart: o,
                    scrollToEnd: u,
                    setFocus: i
                })
            }
        },
        337077: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                useExtractEmbedPreview: function() {
                    return o
                }
            }), a("47120"), a("653041");
            var s = a("470079"),
                n = a("392711"),
                l = a("591759"),
                r = a("158222"),
                i = a("154135");

            function o(e, t, a) {
                let o = s.useRef(new Map),
                    [, u] = s.useState(null),
                    [d, c] = s.useState(null),
                    m = s.useMemo(() => n.debounce((e, a) => {
                        if (null == a || e || 0 === t) return;
                        let s = a.match(l.default.URL_REGEX);
                        if (null == s || 0 === s.length) {
                            o.current = new Map, c(null);
                            return
                        }
                        c(n.uniq(s).slice(0, i.MAX_THUMBNAIL_COUNT))
                    }, 1e3), [t, o]);
                s.useEffect(() => {
                    m(e, a)
                }, [m, a, e]), s.useEffect(() => {
                    (async function e(e, t) {
                        if (null == t) return;
                        let a = e.current,
                            s = new Set(a.keys()),
                            n = t.filter(e => !(null == s ? void 0 : s.has(e)));
                        if (0 !== n.length) try {
                            let t = await r.unfurlEmbedUrl(n);
                            e.current = function(e, t, a) {
                                return null == a || a.forEach(a => {
                                    let s = function(e, t) {
                                        return e.find(e => (null == t ? void 0 : t.url) != null && e.startsWith(t.url))
                                    }(t, a);
                                    if (null == s) return;
                                    let n = e.get(s);
                                    null == n ? e.set(s, [a]) : n.push(a)
                                }), e
                            }(new Map(a), n, null == t ? void 0 : t.embeds), u({})
                        } catch (e) {}
                    })(o, d)
                }, [d]);
                let h = o.current,
                    f = s.useMemo(() => {
                        let e = [];
                        return null == d || d.forEach(t => {
                            let a = h.get(t);
                            null != a && e.push(...a)
                        }), e.length > 0 ? e : null
                    }, [d, h]);
                return {
                    embeds: e ? null : f
                }
            }
        },
        621516: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("920906"),
                o = a("442837"),
                u = a("780384"),
                d = a("481060"),
                c = a("410030"),
                m = a("607070"),
                h = a("961675"),
                f = a("883429"),
                g = a("432771"),
                x = a("406074"),
                C = a("434404"),
                _ = a("430824"),
                T = a("976644"),
                p = a("682864"),
                S = a("974029"),
                E = a("465670"),
                N = a("41542"),
                M = a("441957"),
                A = a("810090"),
                v = a("63063"),
                I = a("595433"),
                j = a("981631"),
                O = a("689938"),
                R = a("11777"),
                b = a("906739"),
                F = a("965358"),
                L = a("420196"),
                P = a("433075");

            function y(e) {
                let {
                    handleHide: t
                } = e;
                return (0, s.jsx)(d.Clickable, {
                    onClick: t,
                    className: R.closeButton,
                    "aria-label": O.default.Messages.DISMISS,
                    children: (0, s.jsx)(E.default, {
                        className: R.closeIcon
                    })
                })
            }

            function D(e) {
                let {
                    username: t,
                    title: a,
                    videoSrc: n,
                    messageCount: l,
                    reaction: i,
                    reactionCount: o,
                    classname: u
                } = e;
                return (0, s.jsxs)("div", {
                    className: r()(R.videoPreview, u),
                    children: [(0, s.jsx)("div", {
                        className: R.authorRow,
                        children: (0, s.jsxs)("div", {
                            className: R.rowGroup,
                            children: [(0, s.jsx)(d.Text, {
                                tag: "span",
                                className: R.author,
                                variant: "text-sm/semibold",
                                children: t
                            }), (0, s.jsx)(d.Text, {
                                variant: "text-xs/normal",
                                color: "header-secondary",
                                className: R.postCreationTimestamp,
                                children: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_TIMESTAMP
                            })]
                        })
                    }), (0, s.jsx)(d.Heading, {
                        variant: "heading-md/extrabold",
                        className: R.title,
                        color: "header-primary",
                        "aria-hidden": !0,
                        children: a
                    }), (0, s.jsx)(p.default, {
                        size: 10
                    }), (0, s.jsx)(A.default, {
                        className: R.video,
                        src: n,
                        autoPlay: !0,
                        loop: !0,
                        muted: !0
                    }), (0, s.jsx)(p.default, {
                        size: 10
                    }), (0, s.jsx)("div", {
                        className: R.footer,
                        children: (0, s.jsxs)("div", {
                            className: R.forumPostControls,
                            children: [(0, s.jsxs)("div", {
                                className: R.messageCountBox,
                                children: [(0, s.jsx)("span", {
                                    className: R.messageCountIcon,
                                    children: (0, s.jsx)(S.default, {
                                        width: 16,
                                        height: 16
                                    })
                                }), (0, s.jsx)(d.Text, {
                                    variant: "text-xs/normal",
                                    color: "interactive-normal",
                                    children: l
                                })]
                            }), (0, s.jsxs)("div", {
                                className: R.reactionBox,
                                children: [(0, s.jsx)("span", {
                                    role: "img",
                                    "aria-label": "",
                                    children: i
                                }), (0, s.jsx)(d.Text, {
                                    variant: "text-xs/normal",
                                    color: "interactive-normal",
                                    children: o
                                })]
                            })]
                        })
                    })]
                })
            }
            t.default = e => {
                var t, a;
                let {
                    channel: l
                } = e, S = (0, c.default)(), E = (0, u.isThemeDark)(S), A = (0, o.useStateFromStores)([_.default], () => _.default.getGuild(l.guild_id)), U = (0, o.useStateFromStores)([m.default], () => m.default.useReducedMotion), w = (0, o.useStateFromStores)([h.default], () => h.default.hasHidden(l.id)), k = (0, x.useSubscriptionListingsForChannel)({
                    guildId: l.guild_id,
                    channelId: l.id
                }), {
                    transitions: H,
                    setVisible: B
                } = (0, I.useShowAnimation)(U), G = n.useCallback(() => {
                    B(!1), f.default.hideAdminOnboarding(l.id, !0)
                }, [l, B]);
                n.useEffect(() => {
                    !(0, g.isOnboardingDismissed)(l.id) && B(!w)
                }, [l, B, w]);
                let V = n.useMemo(() => [O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_FAN_ART_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_DESK_SETUP_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PETS_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_HOUSEPLANTS_TAG], []),
                    z = n.useMemo(() => [O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_BEHIND_THE_SCENES_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_EXCLUSIVE_ART_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PRERELEASES_TAG, O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_TUTORIALS_TAG], []),
                    W = () => {
                        C.default.open(l.guild_id, j.GuildSettingsSections.ROLE_SUBSCRIPTIONS)
                    },
                    K = null !== (t = null == A ? void 0 : A.hasFeature(j.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE)) && void 0 !== t && t ? O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_HAS_TIERS_CTA : O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_NO_TIERS_CTA,
                    Y = null !== (a = (null == A ? void 0 : A.hasFeature(j.GuildFeatures.CREATOR_MONETIZABLE)) || (null == A ? void 0 : A.hasFeature(j.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL))) && void 0 !== a && a,
                    X = Y ? O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_ABOUT_MONETIZING_TITLE : O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_ABOUT_NON_MONETIZING_TITLE,
                    q = Y ? O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_ABOUT_MONETIZING_SUBTITLE : O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_ABOUT_NON_MONETIZING_SUBTITLE;
                return (0, s.jsx)(s.Fragment, {
                    children: H((e, t) => t ? (0, s.jsxs)(i.animated.div, {
                        style: e,
                        className: R.container,
                        children: [(0, s.jsxs)("div", {
                            className: r()(R.__invalid_wrapper, R.headerRow),
                            children: [(0, s.jsxs)(d.Text, {
                                variant: "text-xs/normal",
                                className: R.visibilityInfo,
                                children: [(0, s.jsx)(N.default, {
                                    width: 12,
                                    height: 12,
                                    className: R.icon
                                }), O.default.Messages.FORUM_CHANNEL_ONBOARDING_VISIBILITY]
                            }), (0, s.jsx)(y, {
                                handleHide: G
                            })]
                        }), (0, s.jsxs)("div", {
                            className: R.contentContainer,
                            children: [(0, s.jsxs)("div", {
                                className: r()(R.contentRow, Y && R.contentRowOne),
                                children: [(0, s.jsx)("div", {
                                    className: r()(R.contentMediaContainer),
                                    children: (0, s.jsxs)("div", {
                                        className: R.contentVideoContainer,
                                        children: [(0, s.jsx)(D, {
                                            username: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_USERNAME_ONE,
                                            videoSrc: "https://cdn.discordapp.com/assets/media_channel/admin_edu_discord_birthday.mp4",
                                            title: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_TITLE_ONE,
                                            messageCount: "34",
                                            reaction: "⚡️",
                                            reactionCount: "724",
                                            classname: R.backgroundVideo
                                        }), (0, s.jsx)(D, {
                                            username: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_USERNAME_TWO,
                                            videoSrc: "https://cdn.discordapp.com/assets/media_channel/admin_edu_wumpus_onboarding.mp4",
                                            title: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_TITLE_TWO,
                                            messageCount: "34",
                                            reactionCount: "84",
                                            reaction: "\uD83D\uDC9E",
                                            classname: r()(R.backgroundVideo, R.secondaryVideo)
                                        }), (0, s.jsx)(D, {
                                            username: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_USERNAME_THREE,
                                            videoSrc: "https://cdn.discordapp.com/assets/media_channel/admin_edu_scientist_wumpus.mp4",
                                            title: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_PREVIEW_TITLE_THREE,
                                            messageCount: "7,103",
                                            reaction: "⚡️",
                                            reactionCount: "724",
                                            classname: R.highlightVideo
                                        })]
                                    })
                                }), (0, s.jsxs)("article", {
                                    className: R.contentTextContainer,
                                    children: [(0, s.jsx)(d.Heading, {
                                        variant: "heading-lg/semibold",
                                        color: "header-primary",
                                        children: X
                                    }), (0, s.jsx)(p.default, {
                                        size: 8
                                    }), (0, s.jsx)(d.Text, {
                                        variant: "text-md/normal",
                                        color: "text-muted",
                                        children: q
                                    }), (0, s.jsx)(p.default, {
                                        size: 16
                                    }), (0, s.jsxs)(d.Clickable, {
                                        onClick: () => open(v.default.getCreatorSupportArticleURL(j.HelpdeskArticles.MEDIA_CHANNEL)),
                                        className: R.helpCenterLink,
                                        children: [(0, s.jsx)(d.Text, {
                                            variant: "text-sm/medium",
                                            color: "text-link",
                                            className: R.__invalid_helpCenterLinkText,
                                            children: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_HELP_CENTER
                                        }), (0, s.jsx)(M.default, {
                                            width: 16,
                                            height: 16,
                                            className: R.helpCenterLinkIcon
                                        })]
                                    }), (0, s.jsx)(p.default, {
                                        size: 16
                                    }), (0, s.jsx)("div", {
                                        className: R.mediaChannelTagsContainer,
                                        children: V.map(e => (0, s.jsx)(d.Text, {
                                            variant: "text-sm/medium",
                                            color: "text-normal",
                                            className: R.mediaChannelTag,
                                            children: e
                                        }, e))
                                    })]
                                })]
                            }), Y && (0, s.jsxs)("div", {
                                className: r()(R.contentRow, R.contentRowTwo),
                                children: [(0, s.jsx)("div", {
                                    className: r()(R.contentMediaContainer),
                                    children: (0, s.jsxs)("div", {
                                        className: R.contentImageContainer,
                                        children: [(0, s.jsx)("img", {
                                            src: E ? L : P,
                                            alt: "",
                                            className: r()(R.previewEmbedImage, R.secondaryImage)
                                        }), (0, s.jsx)("img", {
                                            src: E ? b : F,
                                            alt: "",
                                            className: R.previewEmbedImage
                                        })]
                                    })
                                }), (0, s.jsxs)("article", {
                                    className: R.contentTextContainer,
                                    children: [(0, s.jsxs)(d.Text, {
                                        variant: "text-xxs/bold",
                                        className: R.serverSubPill,
                                        children: [O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_SERVER_SUB_PILL, " ", (0, s.jsx)("span", {
                                            role: "img",
                                            "aria-label": "",
                                            children: "\uD83D\uDD25"
                                        })]
                                    }), (0, s.jsx)(p.default, {
                                        size: 10
                                    }), (0, s.jsx)(d.Heading, {
                                        variant: "heading-lg/semibold",
                                        color: "header-primary",
                                        children: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_SHARE_TITLE
                                    }), (0, s.jsx)(p.default, {
                                        size: 8
                                    }), (0, s.jsx)(d.Text, {
                                        variant: "text-md/normal",
                                        color: "text-muted",
                                        children: O.default.Messages.MEDIA_POST_ADMIN_EDUCATION_SHARE_SUBTITLE
                                    }), (0, s.jsx)(p.default, {
                                        size: 16
                                    }), (0, s.jsx)("div", {
                                        className: R.mediaChannelTagsContainer,
                                        children: z.map(e => (0, s.jsx)(d.Text, {
                                            variant: "text-sm/medium",
                                            color: "text-normal",
                                            className: R.mediaChannelTag,
                                            children: e
                                        }, e))
                                    }), (0, s.jsx)(p.default, {
                                        size: 16
                                    }), 0 === k.length && (0, s.jsx)(T.default, {
                                        size: d.Button.Sizes.MEDIUM,
                                        pauseAnimation: U,
                                        onClick: W,
                                        className: R.addChannelButton,
                                        color: d.Button.Colors.CUSTOM,
                                        children: K
                                    })]
                                })]
                            })]
                        })]
                    }) : null)
                })
            }
        },
        284182: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return h
                }
            });
            var s = a("735250");
            a("470079");
            var n = a("399606"),
                l = a("481060"),
                r = a("541716"),
                i = a("859235"),
                o = a("898463"),
                u = a("76451"),
                d = a("117530"),
                c = a("689938"),
                m = a("994346");

            function h(e) {
                let {
                    parentChannel: t
                } = e, a = (0, n.useStateFromStoresArray)([d.default], () => {
                    let e = d.default.getUploads(t.id, r.ChatInputTypes.CREATE_FORUM_POST.drafts.type);
                    return null == e ? void 0 : e.filter(e => !0 !== e.isThumbnail)
                });
                return (0, s.jsxs)("div", {
                    className: m.container,
                    children: [(0, s.jsx)(l.Text, {
                        variant: "text-md/semibold",
                        color: "text-muted",
                        children: c.default.Messages.MEDIA_CHANNEL_ATTACHMENTS_SECTION_TITLE
                    }), (0, s.jsx)(l.Text, {
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: c.default.Messages.MEDIA_CHANNEL_ATTACHMENTS_SECTION_DESCRIPTION
                    }), (0, s.jsx)("div", {
                        children: (0, s.jsx)(l.ScrollerThin, {
                            className: m.uploadsContainer,
                            orientation: "horizontal",
                            paddingFix: !1,
                            fade: !0,
                            children: (0, s.jsxs)("div", {
                                className: m.uploads,
                                children: [a.map(e => (0, s.jsx)(o.default, {
                                    channelId: t.id,
                                    draftType: r.ChatInputTypes.CREATE_FORUM_POST.drafts.type,
                                    upload: e,
                                    keyboardModeEnabled: !0,
                                    hideFileName: !0,
                                    size: i.AttachmentListItemSizes.SMALL
                                }, e.id)), (0, s.jsx)(u.ComposerUploadButton, {
                                    channelId: t.id
                                })]
                            })
                        })
                    })]
                })
            }
        },
        795639: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                MediaPostThumbnail: function() {
                    return F
                }
            });
            var s = a("735250"),
                n = a("470079"),
                l = a("120356"),
                r = a.n(l),
                i = a("512722"),
                o = a.n(i),
                u = a("399606"),
                d = a("481060"),
                c = a("166459"),
                m = a("607070"),
                h = a("541716"),
                f = a("273031"),
                g = a("859235"),
                x = a("470623"),
                C = a("983200"),
                _ = a("153124"),
                T = a("350722"),
                p = a("586791"),
                S = a("839811"),
                E = a("185403"),
                N = a("740727"),
                M = a("810090"),
                A = a("127654"),
                v = a("124252"),
                I = a("689938"),
                j = a("382170");
            let O = [{
                    name: "Media Post Thumbnail",
                    extensions: ["jpg", "jpeg", "png", "gif", "webp"]
                }],
                R = (0, _.uid)();

            function b(e) {
                let {
                    mediaAttachments: t,
                    containerWidth: a,
                    containerHeight: n
                } = e, l = (0, C.useImageContainerStyles)({
                    numAttachments: t.length,
                    containerWidth: a,
                    containerHeight: n
                });
                return (0, s.jsx)(s.Fragment, {
                    children: t.map((e, t) => {
                        var a;
                        return (0, s.jsx)("div", {
                            style: l[t],
                            children: !0 === e.isVideo ? (0, s.jsx)(M.default, {
                                src: e.src,
                                className: j.thumbnail,
                                "aria-hidden": !0
                            }) : (0, s.jsx)("img", {
                                src: e.src,
                                className: j.thumbnail,
                                "aria-hidden": !0,
                                alt: null !== (a = null == e ? void 0 : e.alt) && void 0 !== a ? a : ""
                            })
                        }, e.src)
                    })
                })
            }
            let F = e => {
                var t;
                let {
                    parentChannel: l
                } = e, {
                    textAreaState: i
                } = (0, x.useForumPostComposerStore)(e => {
                    let {
                        textAreaState: t
                    } = e;
                    return {
                        textAreaState: t
                    }
                }), C = (0, u.useStateFromStores)([m.default], () => m.default.keyboardModeEnabled), _ = (0, v.default)(l, null === (t = i.textValue) || void 0 === t ? void 0 : t.trim()), M = n.useMemo(() => _.find(e => e.isThumbnail), [_]), F = null != _ && _.length > 0, L = n.useMemo(() => {
                    let e = (null == _ ? void 0 : _.length) > 1 ? 1.15 : 1;
                    return {
                        width: 153 * e,
                        height: 86 * e
                    }
                }, [_]), P = n.useCallback(e => {
                    null != M && c.default.remove(l.id, M.id, h.ChatInputTypes.CREATE_FORUM_POST.drafts.type), (0, A.promptToUpload)(e.currentTarget.files, l, h.ChatInputTypes.CREATE_FORUM_POST.drafts.type, {
                        requireConfirm: !0,
                        isThumbnail: !0
                    }), e.currentTarget.value = null
                }, [l, M]), y = e => {
                    e.stopPropagation(), (null == M ? void 0 : M.upload) != null && (0, d.openModalLazy)(async () => {
                        let e = M.upload;
                        o()(null != e, "upload should not be null");
                        let {
                            default: t
                        } = await Promise.resolve().then(a.bind(a, "95152"));
                        return a => (0, s.jsx)(t, {
                            ...a,
                            upload: e,
                            channelId: l.id,
                            draftType: h.ChatInputTypes.CREATE_FORUM_POST.drafts.type,
                            onSubmit: t => {
                                let {
                                    name: a,
                                    description: s,
                                    spoiler: n
                                } = t;
                                c.default.update(l.id, e.id, h.ChatInputTypes.CREATE_FORUM_POST.drafts.type, {
                                    filename: a,
                                    description: s,
                                    spoiler: n
                                })
                            },
                            disableSpoiler: !0
                        })
                    })
                }, D = (0, s.jsx)(T.default, {
                    color: d.ButtonColors.CUSTOM,
                    className: r()(j.uploadFileInputContainer),
                    innerClassName: j.uploadThumbnailContainer,
                    onChange: P,
                    multiple: !1,
                    "aria-hidden": !0,
                    filters: O,
                    "aria-describedby": R,
                    "aria-label": F ? I.default.Messages.MEDIA_CHANNEL_CHANGE_THUMBNAIL_LABEL : I.default.Messages.MEDIA_CHANNEL_UPLOAD_THUMBNAIL_LABEL,
                    children: F ? (0, s.jsxs)(s.Fragment, {
                        children: [(0, s.jsx)(b, {
                            mediaAttachments: _,
                            containerWidth: L.width,
                            containerHeight: L.height
                        }), (0, s.jsxs)("div", {
                            className: r()(j.changeThumbnailLabelContainer, {
                                [j.changeThumbnailLabelOverflow]: (null == _ ? void 0 : _.length) > 2
                            }),
                            children: [(0, s.jsx)(d.Text, {
                                variant: "text-xs/medium",
                                color: "header-secondary",
                                children: I.default.Messages.MEDIA_CHANNEL_CHANGE_THUMBNAIL_LABEL
                            }), null == M && (0, s.jsx)(p.default, {
                                className: j.editIcon,
                                width: 16,
                                height: 16
                            })]
                        })]
                    }) : (0, s.jsxs)(s.Fragment, {
                        children: [(0, s.jsx)(S.default, {
                            className: j.uploadIcon
                        }), (0, s.jsx)(d.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: I.default.Messages.MEDIA_CHANNEL_UPLOAD_THUMBNAIL_LABEL
                        })]
                    })
                });
                return (0, s.jsx)("div", {
                    className: j.thumbnailContainer,
                    style: L,
                    children: null != M ? (0, s.jsx)(g.default, {
                        actions: (0, s.jsxs)(s.Fragment, {
                            children: [(0, s.jsx)(f.default, {
                                className: j.action,
                                tooltip: I.default.Messages.ATTACHMENT_UTILITIES_MODIFY,
                                onClick: y,
                                children: (0, s.jsx)(E.default, {})
                            }), (0, s.jsx)(f.default, {
                                className: j.action,
                                tooltip: I.default.Messages.ATTACHMENT_UTILITIES_REMOVE,
                                onClick: () => c.default.remove(l.id, M.id, h.ChatInputTypes.CREATE_FORUM_POST.drafts.type),
                                dangerous: !0,
                                children: (0, s.jsx)(N.default, {})
                            })]
                        }),
                        draftType: h.ChatInputTypes.CREATE_FORUM_POST.drafts.type,
                        id: M.id,
                        channelId: l.id,
                        handleEditModal: y,
                        keyboardModeEnabled: C,
                        size: g.AttachmentListItemSizes.SMALL,
                        className: j.attachmentListItem,
                        children: D
                    }) : (0, s.jsx)(s.Fragment, {
                        children: D
                    })
                })
            }
        },
        124252: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return u
                }
            }), a("390547"), a("47120"), a("653041"), a("315314"), a("610138"), a("216116"), a("78328"), a("815648");
            var s = a("470079"),
                n = a("399606"),
                l = a("541716"),
                r = a("117530"),
                i = a("154135"),
                o = a("337077");

            function u(e, t) {
                var a, u;
                let {
                    mediaAttachments: d,
                    hasThumbnail: c
                } = function(e) {
                    let [t, a] = s.useState(null), o = (0, n.useStateFromStoresArray)([r.default], () => {
                        let t = r.default.getUploads(e.id, l.ChatInputTypes.CREATE_FORUM_POST.drafts.type),
                            a = t.find(e => e.isThumbnail);
                        return null != a ? [a] : t.filter(e => e.isVideo || e.isImage)
                    }), u = s.useMemo(() => o.some(e => e.isThumbnail), [o]);
                    return s.useEffect(() => {
                        let e = [];
                        return a(o.slice(0, i.MAX_THUMBNAIL_COUNT).flatMap(t => {
                            var a;
                            let s = null == t ? void 0 : null === (a = t.item) || void 0 === a ? void 0 : a.file;
                            if (null == s) return [];
                            let n = URL.createObjectURL(s);
                            return e.push(n), {
                                id: t.id,
                                src: n,
                                spoiler: t.spoiler,
                                alt: t.description,
                                isThumbnail: t.isThumbnail,
                                upload: !0 === t.isThumbnail ? t : void 0,
                                isVideo: t.isVideo
                            }
                        })), () => {
                            a(null), e.forEach(e => URL.revokeObjectURL(e))
                        }
                    }, [o]), {
                        mediaAttachments: t,
                        hasThumbnail: u
                    }
                }(e), m = Math.max(i.MAX_THUMBNAIL_COUNT - (null !== (a = null == d ? void 0 : d.length) && void 0 !== a ? a : 0), 0), {
                    embeds: h
                } = (0, o.useExtractEmbedPreview)(c, m, t), f = s.useMemo(() => null == h ? void 0 : h.flatMap(e => {
                    let t = (0, i.getEmbedPreviewImageUrl)(e);
                    return null == t ? [] : {
                        id: t,
                        src: t,
                        spoiler: !1,
                        alt: e.title
                    }
                }), [h]), g = [...null != d ? d : []];
                return !c && m > 0 && g.push(...null !== (u = null == f ? void 0 : f.slice(0, m)) && void 0 !== u ? u : []), g
            }
        },
        595433: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                useShowAnimation: function() {
                    return l
                }
            }), a("47120");
            var s = a("470079"),
                n = a("920906");

            function l(e) {
                let [t, a] = s.useState(!0);
                return {
                    transitions: (0, n.useTransition)(t, {
                        keys: e => e ? "shown" : "hidden",
                        config: r,
                        from: {
                            opacity: 0
                        },
                        enter: {
                            opacity: 1
                        },
                        leave: {
                            opacity: 0
                        },
                        unique: !0,
                        immediate: e
                    }),
                    setVisible: a
                }
            }
            let r = {
                mass: 1,
                tension: 250,
                friction: 18,
                clamp: !0
            }
        },
        350722: function(e, t, a) {
            "use strict";
            a.r(t), a.d(t, {
                default: function() {
                    return o
                }
            });
            var s = a("735250");
            a("470079");
            var n = a("120356"),
                l = a.n(n),
                r = a("481060"),
                i = a("53281");

            function o(e) {
                let {
                    children: t,
                    className: a,
                    innerClassName: n,
                    onChange: o,
                    "aria-label": u,
                    "aria-describedby": d,
                    filters: c,
                    multiple: m = !1,
                    disabled: h = !1,
                    submitting: f = !1,
                    ...g
                } = e;
                return (0, s.jsx)(r.FocusRing, {
                    within: !0,
                    children: (0, s.jsxs)("div", {
                        className: l()(a, (0, r.getButtonStyle)({
                            ...g,
                            submitting: f,
                            disabled: h
                        })),
                        "aria-disabled": h,
                        children: [(0, s.jsx)("span", {
                            "aria-hidden": !0,
                            className: n,
                            children: t
                        }), (0, s.jsx)(i.default, {
                            tabIndex: 0,
                            onChange: o,
                            filters: c,
                            multiple: m,
                            "aria-label": u,
                            "aria-describedby": d,
                            disabled: h
                        })]
                    })
                })
            }
        },
        928457: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("735250");
            a("470079");
            var n = a("960259"),
                l = a("180886"),
                r = a("325767");
            t.default = (0, n.replaceIcon)(function(e) {
                let {
                    width: t = 16,
                    height: a = 16,
                    color: n = "currentColor",
                    foreground: l,
                    ...i
                } = e;
                return (0, s.jsxs)("svg", {
                    ...(0, r.default)(i),
                    width: t,
                    height: a,
                    viewBox: "0 0 16 16",
                    children: [(0, s.jsx)("path", {
                        className: l,
                        fill: n,
                        d: "M1.93944 14.6655H6.18191C6.51646 14.6655 6.78797 14.394 6.78797 14.0594C6.78797 13.7249 6.51646 13.4534 6.18191 13.4534H3.40249L7.21646 9.63937C7.45313 9.40271 7.45313 9.01906 7.21646 8.7824C7.09828 8.66391 6.94313 8.60482 6.78797 8.60482C6.63282 8.60482 6.47767 8.66391 6.35948 8.7824L2.54551 12.5964V9.81695C2.54551 9.4824 2.27399 9.21089 1.93944 9.21089C1.60489 9.21089 1.33337 9.4824 1.33337 9.81695V14.0594C1.33337 14.394 1.60489 14.6655 1.93944 14.6655Z"
                    }), (0, s.jsx)("path", {
                        className: l,
                        fill: n,
                        d: "M8.78362 7.21512C9.02029 7.45179 9.40393 7.45179 9.6406 7.21512L13.4546 3.40114V6.18056C13.4546 6.51511 13.7261 6.78663 14.0606 6.78663C14.3952 6.78663 14.6667 6.51511 14.6667 6.18056V1.9381C14.6667 1.60355 14.3952 1.33203 14.0606 1.33203L9.81818 1.33203C9.48363 1.33203 9.21211 1.60355 9.21211 1.9381C9.21211 2.27265 9.48363 2.54416 9.81818 2.54416H12.5976L8.78362 6.35814C8.54695 6.59481 8.54695 6.97845 8.78362 7.21512Z"
                    })]
                })
            }, l.MaximizeIcon, void 0, {
                size: 16
            })
        },
        730845: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("735250");
            a("470079");
            var n = a("960259"),
                l = a("899663"),
                r = a("325767");
            t.default = (0, n.replaceIcon)(function(e) {
                let {
                    width: t = 29,
                    height: a = 22,
                    color: n = "currentColor",
                    backgroundColor: l,
                    ...i
                } = e;
                return (0, s.jsx)("svg", {
                    ...(0, r.default)(i),
                    width: t,
                    height: a,
                    viewBox: "0 0 29 22",
                    children: (0, s.jsxs)("g", {
                        fill: "none",
                        fillRule: "evenodd",
                        children: [(0, s.jsx)("rect", {
                            width: t,
                            height: a,
                            fill: l,
                            fillOpacity: ".8",
                            rx: "3"
                        }), (0, s.jsx)("path", {
                            d: "M8.01725 16.7054C7.17625 16.7054 6.43191 16.4879 5.78425 16.0529C5.13658 15.6179 4.63391 15.0089 4.27625 14.2259C3.91858 13.4333 3.73975 12.5246 3.73975 11.4999C3.73975 10.4849 3.92825 9.58593 4.30525 8.80293C4.69191 8.01993 5.24775 7.4061 5.97275 6.96143C6.70741 6.51677 7.58225 6.29443 8.59725 6.29443C9.45758 6.29443 10.2261 6.4781 10.9027 6.84543C11.5891 7.21277 12.1062 7.72993 12.4542 8.39693L10.8157 9.57143C10.3227 8.66277 9.58808 8.20843 8.61175 8.20843C7.72241 8.20843 7.04091 8.49843 6.56725 9.07843C6.09358 9.64877 5.85675 10.4559 5.85675 11.4999C5.85675 12.5536 6.09358 13.3656 6.56725 13.9359C7.04091 14.5063 7.72241 14.7914 8.61175 14.7914C9.00808 14.7914 9.37058 14.7189 9.69925 14.5739C10.0376 14.4193 10.2986 14.2114 10.4822 13.9504V12.7034H8.17675V10.8184H12.5412V16.5024H10.8302L10.5547 15.5454C9.98441 16.3188 9.13858 16.7054 8.01725 16.7054Z",
                            fill: n
                        }), (0, s.jsx)("path", {
                            d: "M16.5444 16.5024H14.4274V6.49743H16.5444V16.5024Z",
                            fill: n
                        }), (0, s.jsx)("path", {
                            d: "M20.6933 16.5024H18.5763V6.49743H25.2608V8.41143H20.6933V10.7894H24.4053V12.7034H20.6933V16.5024Z",
                            fill: n
                        })]
                    })
                })
            }, l.GifIcon, void 0, {
                size: 29
            })
        },
        839811: function(e, t, a) {
            "use strict";
            a.r(t);
            var s = a("735250");
            a("470079");
            var n = a("960259"),
                l = a("130596"),
                r = a("325767");
            t.default = (0, n.replaceIcon)(function(e) {
                let {
                    width: t = 39,
                    height: a = 27,
                    color: n = "currentColor",
                    foreground: l,
                    ...i
                } = e;
                return (0, s.jsxs)("svg", {
                    ...(0, r.default)(i),
                    width: t,
                    height: a,
                    viewBox: "0 0 39 27",
                    fill: n,
                    children: [(0, s.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: l,
                        d: "M26.4909 2.76514H5.78906C3.20886 2.76514 1.11719 4.79342 1.11719 7.29544V20.8863C1.11719 23.3884 3.20886 25.4167 5.78906 25.4167H31.9922C34.5724 25.4167 36.6641 23.3884 36.6641 20.8863V12.63C35.9239 12.8436 35.1398 12.9583 34.3281 12.9583C29.8128 12.9583 26.1523 9.40882 26.1523 5.03029C26.1523 4.24318 26.2706 3.48286 26.4909 2.76514ZM13 7.29544C14.2885 7.29544 15.3359 8.30932 15.3359 9.56059C15.3359 10.8128 14.2885 11.8257 13 11.8257C11.7087 11.8257 10.6641 10.8128 10.6641 9.56059C10.6641 8.30932 11.7087 7.29544 13 7.29544ZM10.6641 20.8863L14.168 16.356L16.5039 18.6212L21.1758 12.9583L24.6797 20.8863H17.6719H10.6641Z",
                        fill: n
                    }), (0, s.jsx)("path", {
                        d: "M35.4961 0.5V3.89773H39V6.16288H35.4961V9.56061H33.1602V6.16288H29.6562V3.89773H33.1602V0.5H35.4961Z",
                        fill: n
                    })]
                })
            }, l.ImagePlusIcon, void 0, {
                size: 39
            })
        }
    }
]);
//# sourceMappingURL=03b21d6c8d2e35a5f44f.js.map